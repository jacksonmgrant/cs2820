<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_D4jxcLhUEe2UuoshngsjNA" name="WorkLoad">
    <eAnnotations xmi:id="_EELyoLhUEe2UuoshngsjNA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_EEMZsLhUEe2UuoshngsjNA" source="codegen">
        <details xmi:id="_EEMZsbhUEe2UuoshngsjNA" key="codegenDirectory" value="/cs2820/src"/>
        <details xmi:id="_Hhm7wLhUEe2UuoshngsjNA" key="AssociatedSourceCode" value="/cs2820/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820/src/edu/uiowa/cs/warp/Edge.java;3274728775/1;/cs2820/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820/src/edu/uiowa/cs/warp/Flow.java;559645871/1;/cs2820/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820/src/edu/uiowa/cs/warp/Program.java;2750337732/1;/cs2820/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820/src/edu/uiowa/cs/warp/ProgramVisualization.java;1316782014/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;1636731781/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820/src/edu/uiowa/cs/warp/Row.java;1905091962/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2803977720/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820/src/edu/uiowa/cs/warp/Warp.java;1531133216/1;/cs2820/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadDescription.java;3772857374/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadListener.java;3333188147/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadTest.java;2658600754/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoad.java;2147536034/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_FfEykMv4Ee2QFfqiYSegRA" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_FfEykcv4Ee2QFfqiYSegRA" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_FfEyksv4Ee2QFfqiYSegRA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_FfEyk8v4Ee2QFfqiYSegRA" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="false"/>
          <details xmi:id="_FfFZoMv4Ee2QFfqiYSegRA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_FuJaELhUEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_FuJaEbhUEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_FuJaErhUEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_FuJaE7hUEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_FuJaFLhUEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_FuJaFbhUEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_FuJaFrhUEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_FuJaF7hUEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_FuKBILhUEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_Fs8gMLhUEe2UuoshngsjNA" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_Fs9HQLhUEe2UuoshngsjNA" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_Fs9HQbhUEe2UuoshngsjNA" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_FtAKkLhUEe2UuoshngsjNA" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_FuZRsLhUEe2UuoshngsjNA" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_GNaI8bhUEe2UuoshngsjNA" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_FvxxwLhUEe2UuoshngsjNA" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_GO7L4LhUEe2UuoshngsjNA" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Fv01ELhUEe2UuoshngsjNA" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_GO9BELhUEe2UuoshngsjNA" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_GO9oIbhUEe2UuoshngsjNA" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Fz6D0LhUEe2UuoshngsjNA" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_GQYkcLhUEe2UuoshngsjNA" general="_GMPrULhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSKtILhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSKtIbhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUNUgLhUEe2UuoshngsjNA" name="AbstractMap" specification="_Fz8gELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUNUgbhUEe2UuoshngsjNA" type="_Fz6D0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Fz8gELhUEe2UuoshngsjNA" name="AbstractMap" method="_GUNUgLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Fz8gEbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Fz8gErhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Fz8gE7hUEe2UuoshngsjNA" type="_Fz6D0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Fz9uMLhUEe2UuoshngsjNA" name="Activation">
              <generalization xmi:id="_GMbRgbhUEe2UuoshngsjNA" general="_F37oMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSKtIrhUEe2UuoshngsjNA" name="coordinators" type="_GMRggLhUEe2UuoshngsjNA" isReadOnly="true" association="_GWJOMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSL7QLhUEe2UuoshngsjNA" name="edges" type="_GMRggLhUEe2UuoshngsjNA" isReadOnly="true" association="_GWJ1QbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSMiULhUEe2UuoshngsjNA" name="additionalScheduleTimes" type="_GMRggLhUEe2UuoshngsjNA" isReadOnly="true" association="_GWKcUbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSNJYLhUEe2UuoshngsjNA" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GSNJYbhUEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_GQZyk7hUEe2UuoshngsjNA" client="_Fz9uMLhUEe2UuoshngsjNA" supplier="_GQZykbhUEe2UuoshngsjNA" contract="_GQZykbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUN7kLhUEe2UuoshngsjNA" name="Activation" specification="_Fz-VQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUN7kbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUN7krhUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUN7k7hUEe2UuoshngsjNA" name="Activation" specification="_GMT8wbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUN7lLhUEe2UuoshngsjNA" name="elem" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUN7lbhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUN7lrhUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUN7l7hUEe2UuoshngsjNA" name="clone" specification="_Fz-8U7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUN7mLhUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUN7mbhUEe2UuoshngsjNA" name="getEdgesByReleaseTime" specification="_F0AKcrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUN7mrhUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUN7m7hUEe2UuoshngsjNA" name="getEdgesByLatestReleaseTime" specification="_F0AxgbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUN7nLhUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUOioLhUEe2UuoshngsjNA" name="getEdgesByPeriod" specification="_F0B_oLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUOiobhUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUOiorhUEe2UuoshngsjNA" name="getEdgesByDeadline" specification="_F0DNwLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUOio7hUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUOipLhUEe2UuoshngsjNA" name="getEdgesByPriority" specification="_F0Eb4bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUOipbhUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUOiprhUEe2UuoshngsjNA" name="addEdges" specification="_GQbAsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUOip7hUEe2UuoshngsjNA" name="edges" type="_GMRggLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUOiqLhUEe2UuoshngsjNA" name="addEdge" specification="_GMVK5bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUOiqbhUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUOiqrhUEe2UuoshngsjNA" name="increaseEdgePhases" specification="_F0FqALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUOiq7hUEe2UuoshngsjNA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUOirLhUEe2UuoshngsjNA" name="updatePriorityAndRelease" specification="_F0G4ILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUOirbhUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPJsLhUEe2UuoshngsjNA" name="addConflict" specification="_F0HfMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPJsbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPJsrhUEe2UuoshngsjNA" name="addConflicts" specification="_GQcO0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPJs7hUEe2UuoshngsjNA" name="conflicts" type="_GMTVsbhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPJtLhUEe2UuoshngsjNA" name="addCoordinator" specification="_F0IGQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPJtbhUEe2UuoshngsjNA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPJtrhUEe2UuoshngsjNA" name="addCoordinators" specification="_GQc14bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPJt7hUEe2UuoshngsjNA" name="coordinators" type="_GMRggLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPJuLhUEe2UuoshngsjNA" name="addScheduleTimes" specification="_GQdc8bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPJubhUEe2UuoshngsjNA" name="scheduleTime" type="_GMRggLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPJurhUEe2UuoshngsjNA" name="getNextScheduleTime" specification="_F0JUYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPJu7hUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUPJvLhUEe2UuoshngsjNA" type="_F4lIcLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPwwLhUEe2UuoshngsjNA" name="getMatchingEndTime" specification="_F0J7cLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPwwbhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUPwwrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPww7hUEe2UuoshngsjNA" name="getNextStartTime" specification="_F0KigLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPwxLhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUPwxbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPwxrhUEe2UuoshngsjNA" name="getNextEndTime" specification="_F0LwoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPwx7hUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUPwyLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPwybhUEe2UuoshngsjNA" name="getNumEdges" specification="_F0Lwo7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPwyrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUPwy7hUEe2UuoshngsjNA" name="compareTo" specification="_GMWZALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUPwzLhUEe2UuoshngsjNA" name="obj" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUPwzbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUQX0LhUEe2UuoshngsjNA" name="conflictExists" specification="_GMXnILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUQX0bhUEe2UuoshngsjNA" name="obj" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUQX0rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUQX07hUEe2UuoshngsjNA" name="canCombine" specification="_GMYOMrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUQX1LhUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUQX1bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUQX1rhUEe2UuoshngsjNA" name="getDelta" specification="_F0M-wLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUQX17hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUQX2LhUEe2UuoshngsjNA" name="getExecutionDuration" specification="_F0Nl0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUQX2bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUQX2rhUEe2UuoshngsjNA" name="getCombinedExecutionDuration" specification="_GMY1QrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUQX27hUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUQX3LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUQX3bhUEe2UuoshngsjNA" name="printAll" specification="_F0Oz8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUQX3rhUEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUQX37hUEe2UuoshngsjNA" name="printAll" specification="_F0PbALhUEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUQ-4LhUEe2UuoshngsjNA" name="printEdges" specification="_GMZcULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUQ-4bhUEe2UuoshngsjNA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUQ-4rhUEe2UuoshngsjNA" name="edges" type="_F3oGMLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUQ-47hUEe2UuoshngsjNA" name="printEdges" specification="_GMaqcbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUQ-5LhUEe2UuoshngsjNA" name="edges" type="_F3oGMLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Fz-VQLhUEe2UuoshngsjNA" name="Activation" visibility="package" method="_GUN7kLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Fz-8ULhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Fz-8UbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Fz-VQbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Fz-8UrhUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Fz-8U7hUEe2UuoshngsjNA" name="clone" method="_GUN7l7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMUj1bhUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0AKcrhUEe2UuoshngsjNA" name="getEdgesByReleaseTime" method="_GUN7mbhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVgVALhUEe2UuoshngsjNA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_GMVK4LhUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0AxgbhUEe2UuoshngsjNA" name="getEdgesByLatestReleaseTime" method="_GUN7m7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVg8ELhUEe2UuoshngsjNA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_GMVK4bhUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0B_oLhUEe2UuoshngsjNA" name="getEdgesByPeriod" method="_GUOioLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVg8EbhUEe2UuoshngsjNA">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_GMVK4rhUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0DNwLhUEe2UuoshngsjNA" name="getEdgesByDeadline" method="_GUOiorhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVg8ErhUEe2UuoshngsjNA">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_GMVK47hUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0Eb4bhUEe2UuoshngsjNA" name="getEdgesByPriority" method="_GUOipLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVg8E7hUEe2UuoshngsjNA">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_GMVK5LhUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0FqALhUEe2UuoshngsjNA" name="increaseEdgePhases" method="_GUOiqrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVg8FLhUEe2UuoshngsjNA">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_F0FqAbhUEe2UuoshngsjNA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0G4ILhUEe2UuoshngsjNA" name="updatePriorityAndRelease" method="_GUOirLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVg8FbhUEe2UuoshngsjNA">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_F0G4IbhUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0HfMLhUEe2UuoshngsjNA" name="addConflict" method="_GUPJsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0HfMbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0IGQLhUEe2UuoshngsjNA" name="addCoordinator" method="_GUPJtLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0IGQbhUEe2UuoshngsjNA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0JUYLhUEe2UuoshngsjNA" name="getNextScheduleTime" method="_GUPJurhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVg8F7hUEe2UuoshngsjNA">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_F0JUYbhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GMVx8bhUEe2UuoshngsjNA" type="_F4lIcLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0J7cLhUEe2UuoshngsjNA" name="getMatchingEndTime" method="_GUPwwLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVhjILhUEe2UuoshngsjNA">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_F0J7cbhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0J7crhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0KigLhUEe2UuoshngsjNA" name="getNextStartTime" method="_GUPww7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVhjIbhUEe2UuoshngsjNA">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_F0LJkLhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0LJkbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0LwoLhUEe2UuoshngsjNA" name="getNextEndTime" method="_GUPwxrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVhjIrhUEe2UuoshngsjNA">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_F0LwobhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0LworhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0Lwo7hUEe2UuoshngsjNA" name="getNumEdges" method="_GUPwybhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0MXsLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0M-wLhUEe2UuoshngsjNA" name="getDelta" method="_GUQX1rhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVhjI7hUEe2UuoshngsjNA">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_F0M-wbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0Nl0LhUEe2UuoshngsjNA" name="getExecutionDuration" method="_GUQX2LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0Nl0bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0Oz8LhUEe2UuoshngsjNA" name="printAll" method="_GUQX3bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0Oz8bhUEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0PbALhUEe2UuoshngsjNA" name="printAll" method="_GUQX37hUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_GMT8wbhUEe2UuoshngsjNA" name="Activation" visibility="package" method="_GUN7k7hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMUj0rhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMUj07hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMUj0LhUEe2UuoshngsjNA" name="elem" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMUj0bhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GMUj1LhUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GMVK5bhUEe2UuoshngsjNA" name="addEdge" method="_GUOiqLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMVx8LhUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GMWZALhUEe2UuoshngsjNA" name="compareTo" method="_GUPwy7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMWZAbhUEe2UuoshngsjNA" name="obj" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMWZArhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GMXnILhUEe2UuoshngsjNA" name="conflictExists" method="_GUQX0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMYOMLhUEe2UuoshngsjNA" name="obj" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMYOMbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GMYOMrhUEe2UuoshngsjNA" name="canCombine" method="_GUQX07hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMY1QLhUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMY1QbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GMY1QrhUEe2UuoshngsjNA" name="getCombinedExecutionDuration" method="_GUQX2rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMY1Q7hUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMY1RLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GMZcULhUEe2UuoshngsjNA" name="printEdges" visibility="private" method="_GUQ-4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMZcUbhUEe2UuoshngsjNA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GMaDYLhUEe2UuoshngsjNA" name="edges" type="_F3oGMLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GMaqcbhUEe2UuoshngsjNA" name="printEdges" visibility="private" method="_GUQ-47hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMaqcrhUEe2UuoshngsjNA" name="edges" type="_F3oGMLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GQbAsLhUEe2UuoshngsjNA" name="addEdges" method="_GUOiprhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQbAsbhUEe2UuoshngsjNA" name="edges" type="_GMRggLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GQcO0LhUEe2UuoshngsjNA" name="addConflicts" method="_GUPJsrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQcO0bhUEe2UuoshngsjNA" name="conflicts" type="_GMTVsbhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GQc14bhUEe2UuoshngsjNA" name="addCoordinators" method="_GUPJtrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQc14rhUEe2UuoshngsjNA" name="coordinators" type="_GMRggLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GQdc8bhUEe2UuoshngsjNA" name="addScheduleTimes" method="_GUPJuLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVg8FrhUEe2UuoshngsjNA">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_GQdc8rhUEe2UuoshngsjNA" name="scheduleTime" type="_GMRggLhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F0ZMALhUEe2UuoshngsjNA" name="Activations">
              <generalization xmi:id="_GMeU0LhUEe2UuoshngsjNA" general="_Fz6D0LhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSNwcLhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSNwcbhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F0ZzELhUEe2UuoshngsjNA" name="BasicPoset">
              <ownedComment xmi:id="_GVhjJLhUEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_GMgKALhUEe2UuoshngsjNA" general="_F2fdwLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GURl8LhUEe2UuoshngsjNA" name="BasicPoset" specification="_GMfi8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GURl8bhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GURl8rhUEe2UuoshngsjNA" type="_F0ZzELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GMfi8LhUEe2UuoshngsjNA" name="BasicPoset" visibility="package" method="_GURl8LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMfi8rhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMfi87hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMfi8bhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMfi9LhUEe2UuoshngsjNA" type="_F0ZzELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F0bBMLhUEe2UuoshngsjNA" name="ChannelAnalysis">
              <ownedComment xmi:id="_GVhjJbhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GSNwcrhUEe2UuoshngsjNA" name="program" visibility="private" type="_F29X0LhUEe2UuoshngsjNA" association="_GWLDYbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSOXgbhUEe2UuoshngsjNA" name="programTable" visibility="private" type="_F3dHELhUEe2UuoshngsjNA" association="_GWLqcbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSO-kLhUEe2UuoshngsjNA" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GURl87hUEe2UuoshngsjNA" name="ChannelAnalysis" specification="_GMgxELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GURl9LhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GURl9bhUEe2UuoshngsjNA" type="_F0bBMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GURl9rhUEe2UuoshngsjNA" name="ChannelAnalysis" specification="_GMh_MLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GURl97hUEe2UuoshngsjNA" name="program" type="_F29X0LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GURl-LhUEe2UuoshngsjNA" type="_F0bBMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUSNALhUEe2UuoshngsjNA" name="isChannelConflict" specification="_F0boQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUSNAbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F0boQLhUEe2UuoshngsjNA" name="isChannelConflict" method="_GUSNALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0boQbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GMgxELhUEe2UuoshngsjNA" name="ChannelAnalysis" visibility="package" method="_GURl87hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMgxErhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMgxE7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMgxEbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMgxFLhUEe2UuoshngsjNA" type="_F0bBMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GMh_MLhUEe2UuoshngsjNA" name="ChannelAnalysis" visibility="package" method="_GURl9rhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMimQLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMimQbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMh_MbhUEe2UuoshngsjNA" name="program" type="_F29X0LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMimQrhUEe2UuoshngsjNA" type="_F0bBMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F0c2YLhUEe2UuoshngsjNA" name="ChannelVisualization">
              <ownedComment xmi:id="_GVhjJrhUEe2UuoshngsjNA">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GMj0ZLhUEe2UuoshngsjNA" general="_F5E3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSPloLhUEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSPlobhUEe2UuoshngsjNA" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSPlorhUEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSQMsLhUEe2UuoshngsjNA" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSQzwLhUEe2UuoshngsjNA" name="warp" visibility="private" type="_F5nqQLhUEe2UuoshngsjNA" association="_GWMRgbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSRa0bhUEe2UuoshngsjNA" name="ca" visibility="private" type="_F0bBMLhUEe2UuoshngsjNA" association="_GWM4kbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUSNArhUEe2UuoshngsjNA" name="ChannelVisualization" specification="_GMjNULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUSNA7hUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUSNBLhUEe2UuoshngsjNA" type="_F0c2YLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GMjNULhUEe2UuoshngsjNA" name="ChannelVisualization" visibility="package" method="_GUSNArhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMj0YbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMj0YrhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMj0YLhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMj0Y7hUEe2UuoshngsjNA" type="_F0c2YLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F0erkLhUEe2UuoshngsjNA" name="Channels">
              <ownedComment xmi:id="_GVhjJ7hUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GSSB4rhUEe2UuoshngsjNA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSSo8bhUEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSTQALhUEe2UuoshngsjNA" name="channelsAvailable" visibility="package" type="_GMRggLhUEe2UuoshngsjNA" association="_GWOGsLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUS0ELhUEe2UuoshngsjNA" name="Channels" specification="_F0hu4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUS0EbhUEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUS0ErhUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUS0E7hUEe2UuoshngsjNA" type="_F0erkLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUS0FLhUEe2UuoshngsjNA" name="getChannelSet" specification="_F0i9A7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUS0FbhUEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUS0FrhUEe2UuoshngsjNA" type="_GMSHkbhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUS0F7hUEe2UuoshngsjNA" name="addNewChannelSet" specification="_F0kLIbhUEe2UuoshngsjNA">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUS0GLhUEe2UuoshngsjNA" name="isEmpty" specification="_F0kyMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUS0GbhUEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUS0GrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUS0G7hUEe2UuoshngsjNA" name="removeChannel" specification="_F0lZQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUS0HLhUEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUS0HbhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUS0HrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUS0H7hUEe2UuoshngsjNA" name="addChannel" specification="_F0mAULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUS0ILhUEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUS0IbhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUS0IrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUTbILhUEe2UuoshngsjNA" name="getNumChannels" specification="_F0mAVLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUTbIbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F0hu4LhUEe2UuoshngsjNA" name="Channels" visibility="package" method="_GUS0ELhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F0i9ALhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F0i9AbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F0iV8LhUEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0iV8bhUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0i9ArhUEe2UuoshngsjNA" type="_F0erkLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0i9A7hUEe2UuoshngsjNA" name="getChannelSet" method="_GUS0FLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0jkELhUEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GQhuYLhUEe2UuoshngsjNA" type="_GMSHkbhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0kLIbhUEe2UuoshngsjNA" name="addNewChannelSet" method="_GUS0F7hUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F0kyMLhUEe2UuoshngsjNA" name="isEmpty" method="_GUS0GLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0kyMbhUEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0kyMrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0lZQLhUEe2UuoshngsjNA" name="removeChannel" method="_GUS0G7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0lZQbhUEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0lZQrhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0lZQ7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0mAULhUEe2UuoshngsjNA" name="addChannel" method="_GUS0H7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0mAUbhUEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0mAUrhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0mAU7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0mAVLhUEe2UuoshngsjNA" name="getNumChannels" method="_GUTbILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0mnYLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_F0fSoLhUEe2UuoshngsjNA" name="ChannelSet" visibility="private">
                <generalization xmi:id="_GQggQLhUEe2UuoshngsjNA" general="_GMSHkbhUEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_GSSB4LhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSSB4bhUEe2UuoshngsjNA" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUSNBbhUEe2UuoshngsjNA" name="ChannelSet" specification="_F0f5sLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GUSNBrhUEe2UuoshngsjNA" type="_F0fSoLhUEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUSNB7hUEe2UuoshngsjNA" name="ChannelSet" specification="_F0ggwLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GUSNCLhUEe2UuoshngsjNA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_GUSNCbhUEe2UuoshngsjNA" type="_F0fSoLhUEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_F0f5sLhUEe2UuoshngsjNA" name="ChannelSet" visibility="private" method="_GUSNBbhUEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_F0f5sbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_F0f5srhUEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_F0f5s7hUEe2UuoshngsjNA" type="_F0fSoLhUEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_F0ggwLhUEe2UuoshngsjNA" name="ChannelSet" visibility="private" method="_GUSNB7hUEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_F0ggwrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_F0ggw7hUEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_F0ggwbhUEe2UuoshngsjNA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_F0ggxLhUEe2UuoshngsjNA" type="_F0fSoLhUEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F0n1gLhUEe2UuoshngsjNA" name="CodeFragment">
              <ownedAttribute xmi:id="_GSUeIbhUEe2UuoshngsjNA" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSUeIrhUEe2UuoshngsjNA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSUeI7hUEe2UuoshngsjNA" name="edges" visibility="package" type="_GMRggLhUEe2UuoshngsjNA" association="_GWOtwbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSVsQLhUEe2UuoshngsjNA" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSVsQrhUEe2UuoshngsjNA" name="codeFragment" visibility="package" type="_GMRggLhUEe2UuoshngsjNA" association="_GWPU0bhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSW6YLhUEe2UuoshngsjNA" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSW6YrhUEe2UuoshngsjNA" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUTbIrhUEe2UuoshngsjNA" name="CodeFragment" specification="_F0pDoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUTbI7hUEe2UuoshngsjNA" type="_F0n1gLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUUCMLhUEe2UuoshngsjNA" name="CodeFragment" specification="_GQi8gLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUUCMbhUEe2UuoshngsjNA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUUCMrhUEe2UuoshngsjNA" name="edges" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUUCM7hUEe2UuoshngsjNA" name="coordinators" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUUCNLhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUUCNbhUEe2UuoshngsjNA" type="_F0n1gLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUUCNrhUEe2UuoshngsjNA" name="getCoordinator" specification="_F0pqsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUUCN7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUUpQLhUEe2UuoshngsjNA" name="instructions" specification="_F0qRwLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUUpQbhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUUpQrhUEe2UuoshngsjNA" name="size" specification="_F0q40bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUUpQ7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUVQULhUEe2UuoshngsjNA" name="generateCodeFragment" specification="_F0rf4LhUEe2UuoshngsjNA">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUVQUbhUEe2UuoshngsjNA" name="getBaseInstruction" specification="_F0rf4bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUVQUrhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUVQU7hUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUVQVLhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUVQVbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUVQVrhUEe2UuoshngsjNA" name="push" specification="_F0tVEbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUVQV7hUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUVQWLhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUVQWbhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUVQWrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUVQW7hUEe2UuoshngsjNA" name="pull" specification="_F0ujMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUVQXLhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUVQXbhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUVQXrhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUVQX7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUV3YLhUEe2UuoshngsjNA" name="ifHas" specification="_F0vKQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUV3YbhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUV3YrhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUV3Y7hUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUV3ZLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUV3ZbhUEe2UuoshngsjNA" name="ifNotHas" specification="_F0vxULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUV3ZrhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUV3Z7hUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUV3aLhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUV3abhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUV3arhUEe2UuoshngsjNA" name="wait" specification="_F0wYYbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUV3a7hUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUV3bLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUV3bbhUEe2UuoshngsjNA" name="sleep" specification="_F0w_cLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUV3brhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUWecLhUEe2UuoshngsjNA" name="reportIfDifferentCoordinators" specification="_GQkxsbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUWecbhUEe2UuoshngsjNA" name="coordinators" type="_GMRggLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUWecrhUEe2UuoshngsjNA" name="multipleCoordinators" specification="_GQl_0bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUWec7hUEe2UuoshngsjNA" name="coordinators" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUWedLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F0pDoLhUEe2UuoshngsjNA" name="CodeFragment" visibility="package" method="_GUTbIrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F0pDobhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F0pDorhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVhjKLhUEe2UuoshngsjNA">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_F0pDo7hUEe2UuoshngsjNA" type="_F0n1gLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0pqsLhUEe2UuoshngsjNA" name="getCoordinator" method="_GUUCNrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVhjKrhUEe2UuoshngsjNA">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_F0pqsbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0qRwLhUEe2UuoshngsjNA" name="instructions" method="_GUUpQLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GViKMLhUEe2UuoshngsjNA">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_GQkxsLhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F0q40bhUEe2UuoshngsjNA" name="size" method="_GUUpQrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GViKMbhUEe2UuoshngsjNA">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_F0q40rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0rf4LhUEe2UuoshngsjNA" name="generateCodeFragment" visibility="private" method="_GUVQULhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F0rf4bhUEe2UuoshngsjNA" name="getBaseInstruction" visibility="private" method="_GUVQUbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0sG8LhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0suALhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0suAbhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0tVELhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0tVEbhUEe2UuoshngsjNA" name="push" visibility="private" method="_GUVQVrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0t8ILhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0t8IbhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0t8IrhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0t8I7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0ujMLhUEe2UuoshngsjNA" name="pull" visibility="private" method="_GUVQW7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0ujMbhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0ujMrhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0ujM7hUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0ujNLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0vKQLhUEe2UuoshngsjNA" name="ifHas" visibility="private" method="_GUV3YLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0vKQbhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0vKQrhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0vKQ7hUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0vKRLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0vxULhUEe2UuoshngsjNA" name="ifNotHas" visibility="private" method="_GUV3ZbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0vxUbhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0vxUrhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0vxU7hUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0wYYLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0wYYbhUEe2UuoshngsjNA" name="wait" method="_GUV3arhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0wYYrhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F0wYY7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F0w_cLhUEe2UuoshngsjNA" name="sleep" isStatic="true" method="_GUV3bbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F0w_cbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GQi8gLhUEe2UuoshngsjNA" name="CodeFragment" visibility="package" method="_GUUCMLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GQjjkrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GQjjk7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVhjKbhUEe2UuoshngsjNA">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_GQi8gbhUEe2UuoshngsjNA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GQi8grhUEe2UuoshngsjNA" name="edges" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQjjkLhUEe2UuoshngsjNA" name="coordinators" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQjjkbhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GQjjlLhUEe2UuoshngsjNA" type="_F0n1gLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GQkxsbhUEe2UuoshngsjNA" name="reportIfDifferentCoordinators" visibility="private" method="_GUWecLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQkxsrhUEe2UuoshngsjNA" name="coordinators" type="_GMRggLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GQl_0bhUEe2UuoshngsjNA" name="multipleCoordinators" visibility="private" method="_GUWecrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQl_0rhUEe2UuoshngsjNA" name="coordinators" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQmm4LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F00CwLhUEe2UuoshngsjNA" name="CombinedActivation">
              <generalization xmi:id="_GMpT9LhUEe2UuoshngsjNA" general="_Fz9uMLhUEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_GQn1ALhUEe2UuoshngsjNA" client="_F00CwLhUEe2UuoshngsjNA" supplier="_GQZykbhUEe2UuoshngsjNA" contract="_GQZykbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUWedbhUEe2UuoshngsjNA" name="CombinedActivation" specification="_F00p0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXFgLhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUXFgbhUEe2UuoshngsjNA" type="_F00CwLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUXFgrhUEe2UuoshngsjNA" name="CombinedActivation" specification="_GMoF0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXFg7hUEe2UuoshngsjNA" name="elem" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUXFhLhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUXFhbhUEe2UuoshngsjNA" type="_F00CwLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUXFhrhUEe2UuoshngsjNA" name="CombinedActivation" specification="_GMos4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXFh7hUEe2UuoshngsjNA" name="priorEntry" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUXFiLhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUXFibhUEe2UuoshngsjNA" type="_F00CwLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUXFirhUEe2UuoshngsjNA" name="canCombine" specification="_GMos5rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXFi7hUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUXFjLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F00p0LhUEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_GUWedbhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F00p0rhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F00p07hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F00p0bhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F00p1LhUEe2UuoshngsjNA" type="_F00CwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GMoF0LhUEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_GUXFgrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMoF07hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMoF1LhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMoF0bhUEe2UuoshngsjNA" name="elem" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMoF0rhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GMoF1bhUEe2UuoshngsjNA" type="_F00CwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GMos4LhUEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_GUXFhrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMos47hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMos5LhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMos4bhUEe2UuoshngsjNA" name="priorEntry" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMos4rhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMos5bhUEe2UuoshngsjNA" type="_F00CwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GMos5rhUEe2UuoshngsjNA" name="canCombine" method="_GUXFirhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMos57hUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMpT8LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F04UMLhUEe2UuoshngsjNA" name="CommunicationGraph">
              <ownedComment xmi:id="_GViKMrhUEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GMrwMLhUEe2UuoshngsjNA" general="_F5E3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSXhcbhUEe2UuoshngsjNA" name="wfm" visibility="package" type="_F1Sj4LhUEe2UuoshngsjNA" association="_GWP74bhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSYIgbhUEe2UuoshngsjNA" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSYvkbhUEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSZWobhUEe2UuoshngsjNA" name="workLoad" visibility="package" type="_F6kFcLhUEe2UuoshngsjNA" association="_GWQi8bhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUXskLhUEe2UuoshngsjNA" name="CommunicationGraph" specification="_GMp7ALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXskbhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUXskrhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUXsk7hUEe2UuoshngsjNA" type="_F04UMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUXslLhUEe2UuoshngsjNA" name="CommunicationGraph" specification="_GMqiFLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXslbhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUXslrhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUXsl7hUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUXsmLhUEe2UuoshngsjNA" type="_F04UMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUXsmbhUEe2UuoshngsjNA" name="createHeader" specification="_F06JYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXsmrhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUXsm7hUEe2UuoshngsjNA" name="createFooter" specification="_F07XgLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXsnLhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUXsnbhUEe2UuoshngsjNA" name="visualization" specification="_F07-krhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXsnrhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUXsn7hUEe2UuoshngsjNA" name="createWarpFileContent" specification="_F08lorhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUXsoLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F06JYLhUEe2UuoshngsjNA" name="createHeader" method="_GUXsmbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMrJI7hUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F07XgLhUEe2UuoshngsjNA" name="createFooter" method="_GUXsm7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMrJJLhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F07-krhUEe2UuoshngsjNA" name="visualization" method="_GUXsnbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMrJJbhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F08lorhUEe2UuoshngsjNA" name="createWarpFileContent" method="_GUXsn7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F09MsLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GMp7ALhUEe2UuoshngsjNA" name="CommunicationGraph" method="_GUXskLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMqiEbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMqiErhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMp7AbhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMqiELhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMqiE7hUEe2UuoshngsjNA" type="_F04UMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GMqiFLhUEe2UuoshngsjNA" name="CommunicationGraph" method="_GUXslLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMrJILhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMrJIbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMqiFbhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMqiFrhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMqiF7hUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GMrJIrhUEe2UuoshngsjNA" type="_F04UMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F0_B4LhUEe2UuoshngsjNA" name="ConnectivityPoset">
              <ownedComment xmi:id="_GViKM7hUEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_GMtlYbhUEe2UuoshngsjNA" general="_F2fdwLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUYToLhUEe2UuoshngsjNA" name="ConnectivityPoset" specification="_GMs-ULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUYTobhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUYTorhUEe2UuoshngsjNA" type="_F0_B4LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUYTo7hUEe2UuoshngsjNA" name="findCoordinator" specification="_GQpDILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUYTpLhUEe2UuoshngsjNA" name="nodesInFlow" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUYTpbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GMs-ULhUEe2UuoshngsjNA" name="ConnectivityPoset" visibility="package" method="_GUYToLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GMs-UrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GMs-U7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GMs-UbhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMtlYLhUEe2UuoshngsjNA" type="_F0_B4LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GQpDILhUEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_GUYTo7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQpDIbhUEe2UuoshngsjNA" name="nodesInFlow" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQpDIrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F1BeILhUEe2UuoshngsjNA" name="DeadlineComparator">
              <interfaceRealization xmi:id="_GQrfYLhUEe2UuoshngsjNA" client="_F1BeILhUEe2UuoshngsjNA" supplier="_GMuMcLhUEe2UuoshngsjNA" contract="_GMuMcLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUYTprhUEe2UuoshngsjNA" name="compare" specification="_GQtUkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUY6sLhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUY6sbhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUY6srhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GQtUkLhUEe2UuoshngsjNA" name="compare" method="_GUYTprhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQtUkbhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQtUkrhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQtUk7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F1DTULhUEe2UuoshngsjNA" name="Description">
              <ownedComment xmi:id="_GViKNLhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GQt7orhUEe2UuoshngsjNA" general="_GMRggLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSZ9sbhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSbL0LhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUY6s7hUEe2UuoshngsjNA" name="Description" specification="_F1D6YLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUY6tLhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUZhwLhUEe2UuoshngsjNA" name="Description" specification="_F1Ehc7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUZhwbhUEe2UuoshngsjNA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUZhwrhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUZhw7hUEe2UuoshngsjNA" name="toString" specification="_F1FIg7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUZhxLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F1D6YLhUEe2UuoshngsjNA" name="Description" method="_GUY6s7hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F1EhcLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F1EhcbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F1EhcrhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1Ehc7hUEe2UuoshngsjNA" name="Description" method="_GUZhwLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F1FIgLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F1FIgbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F1EhdLhUEe2UuoshngsjNA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1FIgrhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1FIg7hUEe2UuoshngsjNA" name="toString" method="_GUZhw7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1FIhLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F1G9sLhUEe2UuoshngsjNA" name="Edge">
              <generalization xmi:id="_GMwos7hUEe2UuoshngsjNA" general="_F37oMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSby4LhUEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSby4bhUEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSby4rhUEe2UuoshngsjNA" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GScZ8LhUEe2UuoshngsjNA" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GScZ8bhUEe2UuoshngsjNA" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GScZ8rhUEe2UuoshngsjNA" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSdBALhUEe2UuoshngsjNA" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSdBAbhUEe2UuoshngsjNA" name="state" type="_F1IL0LhUEe2UuoshngsjNA" association="_GViKNbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSdBArhUEe2UuoshngsjNA" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_GQvJwLhUEe2UuoshngsjNA" client="_F1G9sLhUEe2UuoshngsjNA" supplier="_GQZykbhUEe2UuoshngsjNA" contract="_GQZykbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUZhxbhUEe2UuoshngsjNA" name="Edge" specification="_F1KBALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUZhxrhUEe2UuoshngsjNA" type="_F1G9sLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUZhx7hUEe2UuoshngsjNA" name="Edge" specification="_F1LPILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUZhyLhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUZhybhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUZhyrhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUZhy7hUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUZhzLhUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUZhzbhUEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUZhzrhUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUZhz7hUEe2UuoshngsjNA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUZh0LhUEe2UuoshngsjNA" type="_F1G9sLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUaI0LhUEe2UuoshngsjNA" name="compareTo" specification="_GMwBoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUaI0bhUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUaI0rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUaI07hUEe2UuoshngsjNA" name="toString" specification="_F1MdQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUaI1LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUaI1bhUEe2UuoshngsjNA" name="print" specification="_F1NrYbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUaI1rhUEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUaI17hUEe2UuoshngsjNA" name="print" specification="_F1OSc7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F1KBALhUEe2UuoshngsjNA" name="Edge" visibility="package" method="_GUZhxbhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F1KBAbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F1KBArhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F1KBA7hUEe2UuoshngsjNA" type="_F1G9sLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1LPILhUEe2UuoshngsjNA" name="Edge" visibility="package" method="_GUZhx7hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F1L2OLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F1L2ObhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F1L2MLhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1L2MbhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1L2MrhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1L2M7hUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1L2NLhUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1L2NbhUEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1L2NrhUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1L2N7hUEe2UuoshngsjNA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1L2OrhUEe2UuoshngsjNA" type="_F1G9sLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1MdQLhUEe2UuoshngsjNA" name="toString" method="_GUaI07hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1NEULhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1NrYbhUEe2UuoshngsjNA" name="print" method="_GUaI1bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1NrYrhUEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1OSc7hUEe2UuoshngsjNA" name="print" method="_GUaI17hUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_GMwBoLhUEe2UuoshngsjNA" name="compareTo" method="_GUaI0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GMwBobhUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GMwBorhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_F1IL0LhUEe2UuoshngsjNA" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_F1Iy4bhUEe2UuoshngsjNA" name="RELEASED"/>
                <ownedLiteral xmi:id="_F1JZ8LhUEe2UuoshngsjNA" name="EXECUTING"/>
                <ownedLiteral xmi:id="_F1JZ8bhUEe2UuoshngsjNA" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F1Sj4LhUEe2UuoshngsjNA" name="FileManager">
              <ownedComment xmi:id="_GVixQbhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GSdBA7hUEe2UuoshngsjNA" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSdoELhUEe2UuoshngsjNA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUav4LhUEe2UuoshngsjNA" name="FileManager" specification="_F1TyALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUav4bhUEe2UuoshngsjNA" type="_F1Sj4LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUav4rhUEe2UuoshngsjNA" name="FileManager" specification="_F1VAILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUav47hUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUav5LhUEe2UuoshngsjNA" type="_F1Sj4LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUav5bhUEe2UuoshngsjNA" name="getDocumentsDirectory" specification="_F1VnM7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUav5rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUav57hUEe2UuoshngsjNA" name="getCurrentDirectory" specification="_F1WOQbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUav6LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUbW8LhUEe2UuoshngsjNA" name="createFile" specification="_F1W1ULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUbW8bhUEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUbW8rhUEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUbW87hUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUbW9LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUbW9bhUEe2UuoshngsjNA" name="createFile" specification="_F1YDcLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUbW9rhUEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUbW97hUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUbW-LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUbW-bhUEe2UuoshngsjNA" name="createDirectory" specification="_F1YqgLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUbW-rhUEe2UuoshngsjNA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUbW-7hUEe2UuoshngsjNA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUbW_LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUbW_bhUEe2UuoshngsjNA" name="writeFile" specification="_F1ZRkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUbW_rhUEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUbW_7hUEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUbXALhUEe2UuoshngsjNA" name="readFile" specification="_F1ZRk7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUbXAbhUEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUbXArhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F1TyALhUEe2UuoshngsjNA" name="FileManager" method="_GUav4LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F1UZELhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F1UZEbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVixQrhUEe2UuoshngsjNA">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1UZErhUEe2UuoshngsjNA" type="_F1Sj4LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1VAILhUEe2UuoshngsjNA" name="FileManager" method="_GUav4rhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F1VnMLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F1VnMbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F1VAIbhUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1VnMrhUEe2UuoshngsjNA" type="_F1Sj4LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1VnM7hUEe2UuoshngsjNA" name="getDocumentsDirectory" method="_GUav5bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1WOQLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1WOQbhUEe2UuoshngsjNA" name="getCurrentDirectory" method="_GUav57hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1WOQrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1W1ULhUEe2UuoshngsjNA" name="createFile" method="_GUbW8LhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVixQ7hUEe2UuoshngsjNA">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1W1UbhUEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1XcYLhUEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1XcYbhUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1XcYrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1YDcLhUEe2UuoshngsjNA" name="createFile" method="_GUbW9bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1YDcbhUEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1YDcrhUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1YDc7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1YqgLhUEe2UuoshngsjNA" name="createDirectory" method="_GUbW-bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1YqgbhUEe2UuoshngsjNA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1YqgrhUEe2UuoshngsjNA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1Yqg7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1ZRkLhUEe2UuoshngsjNA" name="writeFile" method="_GUbW_bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1ZRkbhUEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1ZRkrhUEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1ZRk7hUEe2UuoshngsjNA" name="readFile" method="_GUbXALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1ZRlLhUEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1Z4oLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F1afsLhUEe2UuoshngsjNA" name="Flow">
              <ownedComment xmi:id="_GVixRLhUEe2UuoshngsjNA">
                <body>The Flow class extends the SchedulableObject file and implements Comparable.&#xD;
It keeps track of the flows used for the WARP project.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GM4kg7hUEe2UuoshngsjNA" general="_F37oMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSePILhUEe2UuoshngsjNA" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSePIbhUEe2UuoshngsjNA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSePIrhUEe2UuoshngsjNA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSePI7hUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSePJLhUEe2UuoshngsjNA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSe2MLhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSe2MbhUEe2UuoshngsjNA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSe2MrhUEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSe2M7hUEe2UuoshngsjNA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSe2NLhUEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSfdQLhUEe2UuoshngsjNA" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSfdQbhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSfdQrhUEe2UuoshngsjNA" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSfdQ7hUEe2UuoshngsjNA" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSgEUbhUEe2UuoshngsjNA" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSgrYLhUEe2UuoshngsjNA" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSgrYrhUEe2UuoshngsjNA" name="nodes" visibility="package" type="_GMRggLhUEe2UuoshngsjNA" association="_GWRKAbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSh5gbhUEe2UuoshngsjNA" name="linkTxAndTotalCost" visibility="package" type="_GMRggLhUEe2UuoshngsjNA" association="_GWRxEbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSigkbhUEe2UuoshngsjNA" name="edges" visibility="package" type="_GMRggLhUEe2UuoshngsjNA" association="_GWS_MLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSjHorhUEe2UuoshngsjNA" name="nodePredecessor" visibility="package" type="_F2Q0QLhUEe2UuoshngsjNA" association="_GWTmQLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSjusbhUEe2UuoshngsjNA" name="edgePredecessor" visibility="package" type="_F1G9sLhUEe2UuoshngsjNA" association="_GWUNULhUEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_GQw-8LhUEe2UuoshngsjNA" client="_F1afsLhUEe2UuoshngsjNA" supplier="_GQZykbhUEe2UuoshngsjNA" contract="_GQZykbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUb-ALhUEe2UuoshngsjNA" name="Flow" specification="_F1bt0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUb-AbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUb-ArhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUb-A7hUEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUb-BLhUEe2UuoshngsjNA" type="_F1afsLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUb-BbhUEe2UuoshngsjNA" name="Flow" specification="_F1cU47hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUb-BrhUEe2UuoshngsjNA" type="_F1afsLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUb-B7hUEe2UuoshngsjNA" name="getInitialPriority" specification="_F1c787hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUb-CLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUclELhUEe2UuoshngsjNA" name="getIndex" specification="_F1djAbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUclEbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUclErhUEe2UuoshngsjNA" name="getNumTxPerLink" specification="_F1eKELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUclE7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUclFLhUEe2UuoshngsjNA" name="getNodes" specification="_F1eKErhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUclFbhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUclFrhUEe2UuoshngsjNA" name="getEdges" specification="_F1f_QLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUclF7hUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUclGLhUEe2UuoshngsjNA" name="addEdge" specification="_GM2vULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUclGbhUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUdMILhUEe2UuoshngsjNA" name="addNode" specification="_GM3WYbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUdMIbhUEe2UuoshngsjNA" name="node" type="_F2Q0QLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUdMIrhUEe2UuoshngsjNA" name="getLinkTxAndTotalCost" specification="_F1hNYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUdMI7hUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUdMJLhUEe2UuoshngsjNA" name="setInitialPriority" specification="_F1ibgLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUdMJbhUEe2UuoshngsjNA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUdMJrhUEe2UuoshngsjNA" name="setIndex" specification="_F1jCkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUdMJ7hUEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUdMKLhUEe2UuoshngsjNA" name="setNumTxPerLink" specification="_F1jpoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUdMKbhUEe2UuoshngsjNA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUdMKrhUEe2UuoshngsjNA" name="setNodes" specification="_GQy0ILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUdMK7hUEe2UuoshngsjNA" name="nodes" type="_GMRggLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUdzMLhUEe2UuoshngsjNA" name="setLinkTxAndTotalCost" specification="_GQzbMbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUdzMbhUEe2UuoshngsjNA" name="linkTxAndTotalCost" type="_GMRggLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUdzMrhUEe2UuoshngsjNA" name="compareTo" specification="_GM39cLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUdzM7hUEe2UuoshngsjNA" name="flow" type="_F1afsLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUdzNLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUdzNbhUEe2UuoshngsjNA" name="toString" specification="_F1kQsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUdzNrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F1bt0LhUEe2UuoshngsjNA" name="Flow" visibility="package" method="_GUb-ALhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F1cU4LhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F1cU4bhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVjYULhUEe2UuoshngsjNA">
                  <body>Constructor that sets name, priority, and index.&#xD;
     * &#xD;
     * @param name the name of the flow&#xD;
     * @param priority the priority of the flow&#xD;
     * @param index the index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1bt0bhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1bt0rhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1bt07hUEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1cU4rhUEe2UuoshngsjNA" type="_F1afsLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1cU47hUEe2UuoshngsjNA" name="Flow" visibility="package" method="_GUb-BbhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F1c78LhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F1c78bhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVjYUbhUEe2UuoshngsjNA">
                  <body>Constructor that sets the index, numTxPerLink, nodePredecessor, and edgePredecessor.&#xD;
     * It also initializes an ArrayList each for nodes, linkTxAndTotalCost, and edges.</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1c78rhUEe2UuoshngsjNA" type="_F1afsLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1c787hUEe2UuoshngsjNA" name="getInitialPriority" method="_GUb-B7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYUrhUEe2UuoshngsjNA">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1djALhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1djAbhUEe2UuoshngsjNA" name="getIndex" method="_GUclELhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYU7hUEe2UuoshngsjNA">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1djArhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1eKELhUEe2UuoshngsjNA" name="getNumTxPerLink" method="_GUclErhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYVLhUEe2UuoshngsjNA">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1eKEbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1eKErhUEe2UuoshngsjNA" name="getNodes" method="_GUclFLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYVbhUEe2UuoshngsjNA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_GQxmALhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1f_QLhUEe2UuoshngsjNA" name="getEdges" method="_GUclFrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYVrhUEe2UuoshngsjNA">
                  <body>@return the edges</body>
                </ownedComment>
                <ownedParameter xmi:id="_GQyNELhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1hNYLhUEe2UuoshngsjNA" name="getLinkTxAndTotalCost" method="_GUdMIrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYWbhUEe2UuoshngsjNA">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_GQyNEbhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1ibgLhUEe2UuoshngsjNA" name="setInitialPriority" method="_GUdMJLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYWrhUEe2UuoshngsjNA">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1ibgbhUEe2UuoshngsjNA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1jCkLhUEe2UuoshngsjNA" name="setIndex" method="_GUdMJrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYW7hUEe2UuoshngsjNA">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1jCkbhUEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1jpoLhUEe2UuoshngsjNA" name="setNumTxPerLink" method="_GUdMKLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYXLhUEe2UuoshngsjNA">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1jpobhUEe2UuoshngsjNA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1kQsLhUEe2UuoshngsjNA" name="toString" method="_GUdzNbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1kQsbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GM2vULhUEe2UuoshngsjNA" name="addEdge" method="_GUclGLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYV7hUEe2UuoshngsjNA">
                  <body>Add an edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GM3WYLhUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GM3WYbhUEe2UuoshngsjNA" name="addNode" method="_GUdMILhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYWLhUEe2UuoshngsjNA">
                  <body>Add a node to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GM3WYrhUEe2UuoshngsjNA" name="node" type="_F2Q0QLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GM39cLhUEe2UuoshngsjNA" name="compareTo" method="_GUdzMrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GM39cbhUEe2UuoshngsjNA" name="flow" type="_F1afsLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GM39crhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GQy0ILhUEe2UuoshngsjNA" name="setNodes" method="_GUdMKrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYXbhUEe2UuoshngsjNA">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_GQy0IbhUEe2UuoshngsjNA" name="nodes" type="_GMRggLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GQzbMbhUEe2UuoshngsjNA" name="setLinkTxAndTotalCost" method="_GUdzMLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVjYXrhUEe2UuoshngsjNA">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_GQzbMrhUEe2UuoshngsjNA" name="linkTxAndTotalCost" type="_GMRggLhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F1q-YLhUEe2UuoshngsjNA" name="FlowMap">
              <ownedComment xmi:id="_GVj_YLhUEe2UuoshngsjNA">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GM7n0LhUEe2UuoshngsjNA" general="_Fz6D0LhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSlj4LhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSlj4bhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F1rlcLhUEe2UuoshngsjNA" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_GVj_YbhUEe2UuoshngsjNA">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GM8O4LhUEe2UuoshngsjNA" general="_Fz6D0LhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSmK8LhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSmK8bhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F1sMgLhUEe2UuoshngsjNA" name="GraphViz">
              <ownedComment xmi:id="_GVj_YrhUEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GM-rILhUEe2UuoshngsjNA" general="_F5E3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSmK8rhUEe2UuoshngsjNA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSmK87hUEe2UuoshngsjNA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSmyALhUEe2UuoshngsjNA" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSmyAbhUEe2UuoshngsjNA" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSmyArhUEe2UuoshngsjNA" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSnZELhUEe2UuoshngsjNA" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSnZErhUEe2UuoshngsjNA" name="wfm" visibility="package" type="_F1Sj4LhUEe2UuoshngsjNA" association="_GWU0YLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSoAIbhUEe2UuoshngsjNA" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSoAI7hUEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSonMbhUEe2UuoshngsjNA" name="gv" visibility="package" type="_F1sMgLhUEe2UuoshngsjNA" association="_GWVbcLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUeaQLhUEe2UuoshngsjNA" name="GraphViz" specification="_GM9dALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUeaQbhUEe2UuoshngsjNA" name="wfm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUeaQrhUEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUeaQ7hUEe2UuoshngsjNA" type="_F1sMgLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUfBULhUEe2UuoshngsjNA" name="GraphViz" specification="_GM-EELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUfBUbhUEe2UuoshngsjNA" name="wfm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUfBUrhUEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUfBU7hUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUfBVLhUEe2UuoshngsjNA" type="_F1sMgLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUfoYLhUEe2UuoshngsjNA" name="visualization" specification="_F1uBsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUfoYbhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUfoYrhUEe2UuoshngsjNA" name="initializeGraphVizContent" specification="_F1uowrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUfoY7hUEe2UuoshngsjNA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUfoZLhUEe2UuoshngsjNA" name="finalizeGraphVizContent" specification="_F1vP0bhUEe2UuoshngsjNA">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUfoZbhUEe2UuoshngsjNA" name="getGraphVizContent" specification="_F1vP0rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUfoZrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUfoZ7hUEe2UuoshngsjNA" name="createGraphVizContent" specification="_F1v24bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUfoaLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUgPcLhUEe2UuoshngsjNA" name="addFlowToGraphViz" specification="_F1wd8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUgPcbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUgPcrhUEe2UuoshngsjNA" name="addSrcNodeToGraphViz" specification="_F1wd8rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUgPc7hUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUgPdLhUEe2UuoshngsjNA" name="addSnkNodeToGraphViz" specification="_F1xFAbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUgPdbhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUgPdrhUEe2UuoshngsjNA" name="finalizeCurrentFlowInGraphViz" specification="_F1xFA7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUg2gLhUEe2UuoshngsjNA" name="addNodeName" specification="_F1xsELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUg2gbhUEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUg2grhUEe2UuoshngsjNA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F1uBsLhUEe2UuoshngsjNA" name="visualization" method="_GUfoYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GM-EF7hUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F1uowrhUEe2UuoshngsjNA" name="initializeGraphVizContent" method="_GUfoYrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1vP0LhUEe2UuoshngsjNA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1vP0bhUEe2UuoshngsjNA" name="finalizeGraphVizContent" method="_GUfoZLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F1vP0rhUEe2UuoshngsjNA" name="getGraphVizContent" method="_GUfoZbhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVj_Y7hUEe2UuoshngsjNA">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_F1v24LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1v24bhUEe2UuoshngsjNA" name="createGraphVizContent" method="_GUfoZ7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1v24rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1wd8LhUEe2UuoshngsjNA" name="addFlowToGraphViz" method="_GUgPcLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1wd8bhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1wd8rhUEe2UuoshngsjNA" name="addSrcNodeToGraphViz" method="_GUgPcrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1xFALhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1xFAbhUEe2UuoshngsjNA" name="addSnkNodeToGraphViz" method="_GUgPdLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1xFArhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1xFA7hUEe2UuoshngsjNA" name="finalizeCurrentFlowInGraphViz" method="_GUgPdrhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F1xsELhUEe2UuoshngsjNA" name="addNodeName" visibility="private" method="_GUg2gLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1xsEbhUEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1xsErhUEe2UuoshngsjNA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GM9dALhUEe2UuoshngsjNA" name="GraphViz" visibility="package" method="_GUeaQLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GM9dA7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GM9dBLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GM9dAbhUEe2UuoshngsjNA" name="wfm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GM9dArhUEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GM9dBbhUEe2UuoshngsjNA" type="_F1sMgLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GM-EELhUEe2UuoshngsjNA" name="GraphViz" visibility="package" method="_GUfBULhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GM-EFLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GM-EFbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GM-EEbhUEe2UuoshngsjNA" name="wfm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GM-EErhUEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GM-EE7hUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GM-EFrhUEe2UuoshngsjNA" type="_F1sMgLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F10vYLhUEe2UuoshngsjNA" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_GVj_ZLhUEe2UuoshngsjNA">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_GQ3FkLhUEe2UuoshngsjNA" general="_GNC8kbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSpOQLhUEe2UuoshngsjNA" name="gv" visibility="package" type="_F1sMgLhUEe2UuoshngsjNA" association="_GWVbc7hUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUg2g7hUEe2UuoshngsjNA" name="GraphVizListener" specification="_GNFY0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUg2hLhUEe2UuoshngsjNA" name="gv" type="_F1sMgLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUg2hbhUEe2UuoshngsjNA" type="_F10vYLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUg2hrhUEe2UuoshngsjNA" name="buildGraphViz" specification="_GNFY1bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUg2h7hUEe2UuoshngsjNA" name="gv" type="_F1sMgLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUhdkLhUEe2UuoshngsjNA" name="enterWarpName" specification="_GNGm8bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUhdkbhUEe2UuoshngsjNA" name="ctx" type="_GNF_4bhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUhdkrhUEe2UuoshngsjNA" name="exitWarp" specification="_GNH1EbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUhdk7hUEe2UuoshngsjNA" name="ctx" type="_GNHOA7hUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUhdlLhUEe2UuoshngsjNA" name="enterFlowName" specification="_GNJDMbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUhdlbhUEe2UuoshngsjNA" name="ctx" type="_GNIcI7hUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUhdlrhUEe2UuoshngsjNA" name="exitSrcNode" specification="_GNLfcbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUhdl7hUEe2UuoshngsjNA" name="ctx" type="_GNJqQ7hUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUiEoLhUEe2UuoshngsjNA" name="exitSnkNode" specification="_GNN7sbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUiEobhUEe2UuoshngsjNA" name="ctx" type="_GNNUobhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUiEorhUEe2UuoshngsjNA" name="exitFlow" specification="_GNPJ0bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUiEo7hUEe2UuoshngsjNA" name="ctx" type="_GNOiwrhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GNFY0LhUEe2UuoshngsjNA" name="GraphVizListener" visibility="private" method="_GUg2g7hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GNFY0rhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GNFY07hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GNFY0bhUEe2UuoshngsjNA" name="gv" type="_F1sMgLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNFY1LhUEe2UuoshngsjNA" type="_F10vYLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNFY1bhUEe2UuoshngsjNA" name="buildGraphViz" isStatic="true" method="_GUg2hrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNF_4LhUEe2UuoshngsjNA" name="gv" type="_F1sMgLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNGm8bhUEe2UuoshngsjNA" name="enterWarpName" method="_GUhdkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNGm8rhUEe2UuoshngsjNA" name="ctx" type="_GNF_4bhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNH1EbhUEe2UuoshngsjNA" name="exitWarp" method="_GUhdkrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNH1ErhUEe2UuoshngsjNA" name="ctx" type="_GNHOA7hUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNJDMbhUEe2UuoshngsjNA" name="enterFlowName" method="_GUhdlLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNJDMrhUEe2UuoshngsjNA" name="ctx" type="_GNIcI7hUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNLfcbhUEe2UuoshngsjNA" name="exitSrcNode" method="_GUhdlrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNLfcrhUEe2UuoshngsjNA" name="ctx" type="_GNJqQ7hUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNN7sbhUEe2UuoshngsjNA" name="exitSnkNode" method="_GUiEoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNN7srhUEe2UuoshngsjNA" name="ctx" type="_GNNUobhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNPJ0bhUEe2UuoshngsjNA" name="exitFlow" method="_GUiEorhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNPJ0rhUEe2UuoshngsjNA" name="ctx" type="_GNOiwrhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F14ZwLhUEe2UuoshngsjNA" name="GuiVisualization">
              <ownedComment xmi:id="_GVj_ZbhUEe2UuoshngsjNA">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GSp1ULhUEe2UuoshngsjNA" name="frame" visibility="package" type="_GNQ_AbhUEe2UuoshngsjNA" association="_GWWCgbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSqcYLhUEe2UuoshngsjNA" name="jtable" visibility="package" type="_GNSNIbhUEe2UuoshngsjNA" association="_GWWpkbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUiEpLhUEe2UuoshngsjNA" name="GuiVisualization" specification="_F15n4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUiEpbhUEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUiEprhUEe2UuoshngsjNA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GUiEp7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUiEqLhUEe2UuoshngsjNA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GUiEqbhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUiEqrhUEe2UuoshngsjNA" type="_F14ZwLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUirsLhUEe2UuoshngsjNA" name="setVisible" specification="_F162ALhUEe2UuoshngsjNA">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUirsbhUEe2UuoshngsjNA" name="resizeColumnWidth" specification="_GQ3soLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUirsrhUEe2UuoshngsjNA" name="table" type="_GNSNIbhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F15n4LhUEe2UuoshngsjNA" name="GuiVisualization" method="_GUiEpLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F15n5LhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F15n5bhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVj_ZrhUEe2UuoshngsjNA">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_F15n4bhUEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F15n4rhUEe2UuoshngsjNA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F16O8LhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F15n47hUEe2UuoshngsjNA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F16O8bhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F15n5rhUEe2UuoshngsjNA" type="_F14ZwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F162ALhUEe2UuoshngsjNA" name="setVisible" method="_GUirsLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVj_Z7hUEe2UuoshngsjNA">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_GQ3soLhUEe2UuoshngsjNA" name="resizeColumnWidth" visibility="private" method="_GUirsbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQ4TsLhUEe2UuoshngsjNA" name="table" type="_GNSNIbhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F17dELhUEe2UuoshngsjNA" name="InputGraphFile">
              <ownedComment xmi:id="_GVj_aLhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GSqcYrhUEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSrDcLhUEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSrDcbhUEe2UuoshngsjNA" name="wfm" visibility="private" type="_F1Sj4LhUEe2UuoshngsjNA" association="_GWX3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSrDc7hUEe2UuoshngsjNA" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSrqgLhUEe2UuoshngsjNA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSrqgrhUEe2UuoshngsjNA" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSrqg7hUEe2UuoshngsjNA" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUirs7hUEe2UuoshngsjNA" name="InputGraphFile" specification="_GNXssbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUirtLhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUirtbhUEe2UuoshngsjNA" type="_F17dELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUjSwLhUEe2UuoshngsjNA" name="InputGraphFile" specification="_GNYTxLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUjSwbhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUjSwrhUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUjSw7hUEe2UuoshngsjNA" type="_F17dELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUjSxLhUEe2UuoshngsjNA" name="setGraphFileName" specification="_F195ULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUjSxbhUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUjSxrhUEe2UuoshngsjNA" name="verifyGraphFileName" specification="_F195UrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUjSx7hUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUjSyLhUEe2UuoshngsjNA" name="readGraphFile" specification="_F1-gYbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUjSybhUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUjSyrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUjSy7hUEe2UuoshngsjNA" name="getInputGraphFileName" specification="_F1_HcbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUjSzLhUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUjSzbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUj50LhUEe2UuoshngsjNA" name="readGraphFileContents" specification="_F1_ugbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUj50bhUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUj50rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUj507hUEe2UuoshngsjNA" name="printVerboseMessage" specification="_F2AVkbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUj51LhUEe2UuoshngsjNA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUj51bhUEe2UuoshngsjNA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUj51rhUEe2UuoshngsjNA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F195ULhUEe2UuoshngsjNA" name="setGraphFileName" visibility="private" method="_GUjSxLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F195UbhUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F195UrhUEe2UuoshngsjNA" name="verifyGraphFileName" visibility="private" method="_GUjSxrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1-gYLhUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1-gYbhUEe2UuoshngsjNA" name="readGraphFile" method="_GUjSyLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1-gYrhUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1_HcLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1_HcbhUEe2UuoshngsjNA" name="getInputGraphFileName" visibility="private" method="_GUjSy7hUEe2UuoshngsjNA" raisedException="_GQ46wLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1_HcrhUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F1_ugLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F1_ugbhUEe2UuoshngsjNA" name="readGraphFileContents" visibility="private" method="_GUj50LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F1_ugrhUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2AVkLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F2AVkbhUEe2UuoshngsjNA" name="printVerboseMessage" visibility="private" method="_GUj507hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F2AVkrhUEe2UuoshngsjNA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2AVk7hUEe2UuoshngsjNA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2A8oLhUEe2UuoshngsjNA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GNXssbhUEe2UuoshngsjNA" name="InputGraphFile" method="_GUirs7hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GNYTwbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GNYTwrhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GNYTwLhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNYTw7hUEe2UuoshngsjNA" type="_F17dELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNYTxLhUEe2UuoshngsjNA" name="InputGraphFile" method="_GUjSwLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GNY60LhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GNY60bhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GNYTxbhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNYTxrhUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GNY60rhUEe2UuoshngsjNA" type="_F17dELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2Cx0LhUEe2UuoshngsjNA" name="InstructionTimeSlot">
              <generalization xmi:id="_GNZh4LhUEe2UuoshngsjNA" general="_F33WwLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSsRkbhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSsRkrhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUj517hUEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_F2DY4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUj52LhUEe2UuoshngsjNA" type="_F2Cx0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUkg4LhUEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_F2D_8rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUkg4bhUEe2UuoshngsjNA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUkg4rhUEe2UuoshngsjNA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUkg47hUEe2UuoshngsjNA" type="_F2Cx0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUkg5LhUEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_F2EnA7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUkg5bhUEe2UuoshngsjNA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GUkg5rhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUkg57hUEe2UuoshngsjNA" type="_F2Cx0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F2DY4LhUEe2UuoshngsjNA" name="InstructionTimeSlot" method="_GUj517hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F2DY4bhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F2D_8LhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F2D_8bhUEe2UuoshngsjNA" type="_F2Cx0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F2D_8rhUEe2UuoshngsjNA" name="InstructionTimeSlot" visibility="package" method="_GUkg4LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F2EnALhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F2EnAbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F2D_87hUEe2UuoshngsjNA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2D_9LhUEe2UuoshngsjNA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2EnArhUEe2UuoshngsjNA" type="_F2Cx0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F2EnA7hUEe2UuoshngsjNA" name="InstructionTimeSlot" visibility="package" method="_GUkg5LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F2FOELhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F2FOEbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F2EnBLhUEe2UuoshngsjNA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F2FOE7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2FOErhUEe2UuoshngsjNA" type="_F2Cx0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2F1ILhUEe2UuoshngsjNA" name="LatencyAnalysis">
              <ownedComment xmi:id="_GVkmcLhUEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GSs4oLhUEe2UuoshngsjNA" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSs4obhUEe2UuoshngsjNA" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSs4o7hUEe2UuoshngsjNA" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GStfsbhUEe2UuoshngsjNA" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GStfsrhUEe2UuoshngsjNA" name="latencyReport" visibility="private" type="_F1DTULhUEe2UuoshngsjNA" association="_GWZF0LhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSut0LhUEe2UuoshngsjNA" name="program" visibility="private" type="_F29X0LhUEe2UuoshngsjNA" association="_GWZs4LhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSvU4bhUEe2UuoshngsjNA" name="workload" visibility="private" type="_F6kFcLhUEe2UuoshngsjNA" association="_GWaT8LhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSvU47hUEe2UuoshngsjNA" name="programTable" visibility="private" type="_F3dHELhUEe2UuoshngsjNA" association="_GWa7AbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSv78bhUEe2UuoshngsjNA" name="nodeIndex" visibility="private" type="_GMPrULhUEe2UuoshngsjNA" association="_GWbiEbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUkg6LhUEe2UuoshngsjNA" name="LatencyAnalysis" specification="_GNbXELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUkg6bhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUkg6rhUEe2UuoshngsjNA" type="_F2F1ILhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUlH8LhUEe2UuoshngsjNA" name="LatencyAnalysis" specification="_GNb-ILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUlH8bhUEe2UuoshngsjNA" name="program" type="_F29X0LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUlH8rhUEe2UuoshngsjNA" type="_F2F1ILhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUlH87hUEe2UuoshngsjNA" name="latencyReport" specification="_F2IRYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUlH9LhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUlH9bhUEe2UuoshngsjNA" name="numMatchingTx" specification="_F2IRYbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUlH9rhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUlH97hUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUlH-LhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUlH-bhUEe2UuoshngsjNA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUlH-rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F2IRYLhUEe2UuoshngsjNA" name="latencyReport" method="_GUlH87hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNb-JbhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F2IRYbhUEe2UuoshngsjNA" name="numMatchingTx" method="_GUlH9bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F2I4cLhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2I4cbhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2I4crhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2I4c7hUEe2UuoshngsjNA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2I4dLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GNbXELhUEe2UuoshngsjNA" name="LatencyAnalysis" visibility="package" method="_GUkg6LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GNbXErhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GNbXE7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GNbXEbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNbXFLhUEe2UuoshngsjNA" type="_F2F1ILhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNb-ILhUEe2UuoshngsjNA" name="LatencyAnalysis" visibility="package" method="_GUlH8LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GNb-IrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GNb-I7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GNb-IbhUEe2UuoshngsjNA" name="program" type="_F29X0LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNb-JLhUEe2UuoshngsjNA" type="_F2F1ILhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2KtoLhUEe2UuoshngsjNA" name="LatencyVisualization">
              <ownedComment xmi:id="_GVkmcbhUEe2UuoshngsjNA">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GNdzULhUEe2UuoshngsjNA" general="_F5E3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSxKELhUEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSxKEbhUEe2UuoshngsjNA" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSxKErhUEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSxKE7hUEe2UuoshngsjNA" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSxKFLhUEe2UuoshngsjNA" name="warp" visibility="private" type="_F5nqQLhUEe2UuoshngsjNA" association="_GWcJILhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSxxIbhUEe2UuoshngsjNA" name="la" visibility="private" type="_F2F1ILhUEe2UuoshngsjNA" association="_GWcJI7hUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUlvALhUEe2UuoshngsjNA" name="LatencyVisualization" specification="_GNdMQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUlvAbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUlvArhUEe2UuoshngsjNA" type="_F2KtoLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GNdMQLhUEe2UuoshngsjNA" name="LatencyVisualization" visibility="package" method="_GUlvALhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GNdMQrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GNdMQ7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GNdMQbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNdMRLhUEe2UuoshngsjNA" type="_F2KtoLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2NJ4LhUEe2UuoshngsjNA" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_GQ6v8LhUEe2UuoshngsjNA" client="_F2NJ4LhUEe2UuoshngsjNA" supplier="_GMuMcLhUEe2UuoshngsjNA" contract="_GMuMcLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUlvA7hUEe2UuoshngsjNA" name="compare" specification="_GQ8lILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUlvBLhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUlvBbhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUlvBrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GQ8lILhUEe2UuoshngsjNA" name="compare" method="_GUlvA7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQ8lIbhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQ8lIrhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQ8lI7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2O_ELhUEe2UuoshngsjNA" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_GQ9zQLhUEe2UuoshngsjNA" client="_F2O_ELhUEe2UuoshngsjNA" supplier="_GMuMcLhUEe2UuoshngsjNA" contract="_GMuMcLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUlvB7hUEe2UuoshngsjNA" name="compare" specification="_GQ_BYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUlvCLhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUlvCbhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUlvCrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GQ_BYLhUEe2UuoshngsjNA" name="compare" method="_GUlvB7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GQ_BYbhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQ_BYrhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GQ_ocLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2Q0QLhUEe2UuoshngsjNA" name="Node">
              <generalization xmi:id="_GNhdsLhUEe2UuoshngsjNA" general="_F37oMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSyYMLhUEe2UuoshngsjNA" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GSyYMbhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSy_QLhUEe2UuoshngsjNA" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSy_QbhUEe2UuoshngsjNA" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GSy_QrhUEe2UuoshngsjNA" name="edges" type="_GMRggLhUEe2UuoshngsjNA" isReadOnly="true" association="_GWcwMbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GSzmUbhUEe2UuoshngsjNA" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GS0NYLhUEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_GRA2kLhUEe2UuoshngsjNA" client="_F2Q0QLhUEe2UuoshngsjNA" supplier="_GQZykbhUEe2UuoshngsjNA" contract="_GQZykbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUmWELhUEe2UuoshngsjNA" name="Node" specification="_F2SpcLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUmWEbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUmWErhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUmWE7hUEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUmWFLhUEe2UuoshngsjNA" type="_F2Q0QLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUmWFbhUEe2UuoshngsjNA" name="compareTo" specification="_GNgPkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUmWFrhUEe2UuoshngsjNA" name="node" type="_F2Q0QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUmWF7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUmWGLhUEe2UuoshngsjNA" name="toString" specification="_F2T3kLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUmWGbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUmWGrhUEe2UuoshngsjNA" name="addEdge" specification="_GNg2pLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUmWG7hUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUm9ILhUEe2UuoshngsjNA" name="addConflict" specification="_F2VFsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUm9IbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUm9IrhUEe2UuoshngsjNA" name="numEdges" specification="_F2VFsrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUm9I7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUm9JLhUEe2UuoshngsjNA" name="print" specification="_F2VswLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUm9JbhUEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUm9JrhUEe2UuoshngsjNA" name="print" specification="_F2WT07hUEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F2SpcLhUEe2UuoshngsjNA" name="Node" visibility="package" method="_GUmWELhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F2TQg7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F2TQhLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F2TQgLhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2TQgbhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2TQgrhUEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2TQhbhUEe2UuoshngsjNA" type="_F2Q0QLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F2T3kLhUEe2UuoshngsjNA" name="toString" method="_GUmWGLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F2T3kbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F2VFsLhUEe2UuoshngsjNA" name="addConflict" method="_GUm9ILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F2VFsbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F2VFsrhUEe2UuoshngsjNA" name="numEdges" method="_GUm9IrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F2VFs7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F2VswLhUEe2UuoshngsjNA" name="print" method="_GUm9JLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F2VswbhUEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F2WT07hUEe2UuoshngsjNA" name="print" method="_GUm9JrhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_GNgPkLhUEe2UuoshngsjNA" name="compareTo" method="_GUmWFbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNgPkbhUEe2UuoshngsjNA" name="node" type="_F2Q0QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNg2oLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GNg2pLhUEe2UuoshngsjNA" name="addEdge" method="_GUmWGrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNg2pbhUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2YwELhUEe2UuoshngsjNA" name="NodeMap">
              <ownedComment xmi:id="_GVkmcrhUEe2UuoshngsjNA">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GNir0LhUEe2UuoshngsjNA" general="_Fz6D0LhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS0NYbhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GS00cLhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2ZXILhUEe2UuoshngsjNA" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_GVkmc7hUEe2UuoshngsjNA">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GNkhAbhUEe2UuoshngsjNA" general="_F4UpwLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUm9J7hUEe2UuoshngsjNA" name="NonPreemptiveSchedule" specification="_GNj58LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUm9KLhUEe2UuoshngsjNA" name="poset" type="_F2fdwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUm9KbhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUm9KrhUEe2UuoshngsjNA" type="_F2ZXILhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GNj58LhUEe2UuoshngsjNA" name="NonPreemptiveSchedule" visibility="package" method="_GUm9J7hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GNj587hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GNj59LhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GNj58bhUEe2UuoshngsjNA" name="poset" type="_F2fdwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNj58rhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GNkhALhUEe2UuoshngsjNA" type="_F2ZXILhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2Z-MLhUEe2UuoshngsjNA" name="NotImplentedVisualization">
              <generalization xmi:id="_GNlvILhUEe2UuoshngsjNA" general="_F5E3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS00cbhUEe2UuoshngsjNA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GS00crhUEe2UuoshngsjNA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS00c7hUEe2UuoshngsjNA" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GS1bgLhUEe2UuoshngsjNA" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS1bgbhUEe2UuoshngsjNA" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GS1bgrhUEe2UuoshngsjNA" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUnkMLhUEe2UuoshngsjNA" name="NotImplentedVisualization" specification="_F2alQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUnkMbhUEe2UuoshngsjNA" type="_F2Z-MLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUnkMrhUEe2UuoshngsjNA" name="NotImplentedVisualization" specification="_F2bMULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUnkM7hUEe2UuoshngsjNA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUnkNLhUEe2UuoshngsjNA" type="_F2Z-MLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUnkNbhUEe2UuoshngsjNA" name="visualization" specification="_F2cacLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUnkNrhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F2alQLhUEe2UuoshngsjNA" name="NotImplentedVisualization" visibility="package" method="_GUnkMLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F2alQbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F2alQrhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F2alQ7hUEe2UuoshngsjNA" type="_F2Z-MLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F2bMULhUEe2UuoshngsjNA" name="NotImplentedVisualization" visibility="package" method="_GUnkMrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F2bMUrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F2bMU7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F2bMUbhUEe2UuoshngsjNA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F2bzYLhUEe2UuoshngsjNA" type="_F2Z-MLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F2cacLhUEe2UuoshngsjNA" name="visualization" method="_GUnkNbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNlIELhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2dokLhUEe2UuoshngsjNA" name="PeriodComparator">
              <interfaceRealization xmi:id="_GRCEsLhUEe2UuoshngsjNA" client="_F2dokLhUEe2UuoshngsjNA" supplier="_GMuMcLhUEe2UuoshngsjNA" contract="_GMuMcLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUnkN7hUEe2UuoshngsjNA" name="compare" specification="_GRDS0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUnkOLhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUnkObhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUnkOrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GRDS0LhUEe2UuoshngsjNA" name="compare" method="_GUnkN7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRDS0bhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRDS0rhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRDS07hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2fdwLhUEe2UuoshngsjNA" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_GVkmdLhUEe2UuoshngsjNA">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GS1bg7hUEe2UuoshngsjNA" name="activations" visibility="private" type="_F0ZMALhUEe2UuoshngsjNA" association="_GWdXQbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS2CkbhUEe2UuoshngsjNA" name="workload" visibility="private" type="_F6kFcLhUEe2UuoshngsjNA" association="_GWd-UbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS2poLhUEe2UuoshngsjNA" name="flows" visibility="protected" type="_F1afsLhUEe2UuoshngsjNA" association="_GWelYbhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GS2porhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GS2po7hUEe2UuoshngsjNA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GS2pobhUEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS3QsbhUEe2UuoshngsjNA" name="nodes" visibility="private" type="_F2Q0QLhUEe2UuoshngsjNA" association="_GWfMcbhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GS3Qs7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GS3QtLhUEe2UuoshngsjNA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GS3QsrhUEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS33wbhUEe2UuoshngsjNA" name="nodeMap" visibility="private" type="_F2YwELhUEe2UuoshngsjNA" association="_GWgakLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS4e0bhUEe2UuoshngsjNA" name="priorityQueue" visibility="private" type="_F3p7YLhUEe2UuoshngsjNA" association="_GWhBoLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS6UArhUEe2UuoshngsjNA" name="nodeConnectivityMap" visibility="protected" type="_GMPrULhUEe2UuoshngsjNA" association="_GWhosbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS7iIbhUEe2UuoshngsjNA" name="activationMap" visibility="package" type="_F1rlcLhUEe2UuoshngsjNA" association="_GWi20LhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUoLQLhUEe2UuoshngsjNA" name="Poset" specification="_GNoycLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUoLQbhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUoLQrhUEe2UuoshngsjNA" type="_F2fdwLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUoLQ7hUEe2UuoshngsjNA" name="getNodeConnectivity" specification="_F2gr4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUoLRLhUEe2UuoshngsjNA" type="_GMPrULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUoLRbhUEe2UuoshngsjNA" name="getNodeNames" specification="_F2hS8bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUoLRrhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUoyULhUEe2UuoshngsjNA" name="getNodesNamesOrderedAlphabetically" specification="_F2ihELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUoyUbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GUoyUrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUpZYLhUEe2UuoshngsjNA" name="buildPosetOfActivations" specification="_F2jIILhUEe2UuoshngsjNA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUpZYbhUEe2UuoshngsjNA" name="createEdgeLists" specification="_F2jIIbhUEe2UuoshngsjNA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUpZYrhUEe2UuoshngsjNA" name="createConflictLists" specification="_F2jIIrhUEe2UuoshngsjNA">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUpZY7hUEe2UuoshngsjNA" name="createGlobalConflictLists" specification="_F2jII7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUpZZLhUEe2UuoshngsjNA" name="createLocalConflictLists" specification="_F2jvMLhUEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUpZZbhUEe2UuoshngsjNA" name="findCoordinator" specification="_GREg8rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUpZZrhUEe2UuoshngsjNA" name="nodesInFlow" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUpZZ7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqAcLhUEe2UuoshngsjNA" name="buildTxArray" specification="_GRFvELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUqAcbhUEe2UuoshngsjNA" name="nodesInFlow" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUqAcrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GUqAc7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqAdLhUEe2UuoshngsjNA" name="createInitialActivations" specification="_F2jvMbhUEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqAdbhUEe2UuoshngsjNA" name="getMaxTx" specification="_GNqAkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUqAdrhUEe2UuoshngsjNA" name="node" type="_F2Q0QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUqAd7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqAeLhUEe2UuoshngsjNA" name="getActivation" specification="_GNqAk7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUqAebhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUqAerhUEe2UuoshngsjNA" name="node" type="_F2Q0QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUqAe7hUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqngLhUEe2UuoshngsjNA" name="getHyperPeriod" specification="_F2kWQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUqngbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqngrhUEe2UuoshngsjNA" name="getMaxPhase" specification="_F2k9ULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUqng7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqnhLhUEe2UuoshngsjNA" name="orderActivations" specification="_F2k9UrhUEe2UuoshngsjNA">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqnhbhUEe2UuoshngsjNA" name="getNextActivation" specification="_F2oAoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUqnhrhUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqnh7hUEe2UuoshngsjNA" name="addActivation" specification="_GNtD4bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUqniLhUEe2UuoshngsjNA" name="activation" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqnibhUEe2UuoshngsjNA" name="findBaseStation" specification="_F2rrALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUqnirhUEe2UuoshngsjNA" type="_F2Q0QLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F2gr4LhUEe2UuoshngsjNA" name="getNodeConnectivity" visibility="private" method="_GUoLQ7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GREg8LhUEe2UuoshngsjNA" type="_GMPrULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F2hS8bhUEe2UuoshngsjNA" name="getNodeNames" method="_GUoLRbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GREg8bhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F2ihELhUEe2UuoshngsjNA" name="getNodesNamesOrderedAlphabetically" method="_GUoyULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F2ihEbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F2ihErhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F2jIILhUEe2UuoshngsjNA" name="buildPosetOfActivations" method="_GUpZYLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F2jIIbhUEe2UuoshngsjNA" name="createEdgeLists" visibility="private" method="_GUpZYbhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F2jIIrhUEe2UuoshngsjNA" name="createConflictLists" visibility="private" method="_GUpZYrhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F2jII7hUEe2UuoshngsjNA" name="createGlobalConflictLists" visibility="private" method="_GUpZY7hUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F2jvMLhUEe2UuoshngsjNA" name="createLocalConflictLists" visibility="private" method="_GUpZZLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F2jvMbhUEe2UuoshngsjNA" name="createInitialActivations" visibility="private" method="_GUqAdLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F2kWQLhUEe2UuoshngsjNA" name="getHyperPeriod" method="_GUqngLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F2kWQbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F2k9ULhUEe2UuoshngsjNA" name="getMaxPhase" method="_GUqngrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F2k9UbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F2k9UrhUEe2UuoshngsjNA" name="orderActivations" method="_GUqnhLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F2oAoLhUEe2UuoshngsjNA" name="getNextActivation" method="_GUqnhbhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVkmd7hUEe2UuoshngsjNA">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_GNtD4LhUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F2rrALhUEe2UuoshngsjNA" name="findBaseStation" visibility="protected" method="_GUqnibhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVl0kbhUEe2UuoshngsjNA">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_GNtq8LhUEe2UuoshngsjNA" type="_F2Q0QLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNoycLhUEe2UuoshngsjNA" name="Poset" visibility="package" method="_GUoLQLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GNoycrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GNoyc7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVkmdbhUEe2UuoshngsjNA">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_GNoycbhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNoydLhUEe2UuoshngsjNA" type="_F2fdwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNqAkLhUEe2UuoshngsjNA" name="getMaxTx" visibility="private" method="_GUqAdbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNqAkbhUEe2UuoshngsjNA" name="node" type="_F2Q0QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNqAkrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GNqAk7hUEe2UuoshngsjNA" name="getActivation" visibility="private" method="_GUqAeLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNqAlLhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GNsc0LhUEe2UuoshngsjNA" name="node" type="_F2Q0QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNsc0bhUEe2UuoshngsjNA" type="_Fz9uMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNtD4bhUEe2UuoshngsjNA" name="addActivation" method="_GUqnh7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVl0kLhUEe2UuoshngsjNA">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_GNtD4rhUEe2UuoshngsjNA" name="activation" type="_Fz9uMLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GREg8rhUEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_GUpZZbhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVkmdrhUEe2UuoshngsjNA">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GREg87hUEe2UuoshngsjNA" name="nodesInFlow" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRFIALhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GRFvELhUEe2UuoshngsjNA" name="buildTxArray" visibility="private" method="_GUqAcLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRFvEbhUEe2UuoshngsjNA" name="nodesInFlow" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRFvErhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GRFvE7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F2xxoLhUEe2UuoshngsjNA" name="PreemptiveSchedule">
              <ownedComment xmi:id="_GVl0krhUEe2UuoshngsjNA">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GN6fQ7hUEe2UuoshngsjNA" general="_F4UpwLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUrOkLhUEe2UuoshngsjNA" name="PreemptiveSchedule" specification="_GNwHMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUrOkbhUEe2UuoshngsjNA" name="poset" type="_F2fdwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUrOkrhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUrOk7hUEe2UuoshngsjNA" type="_F2xxoLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUrOlLhUEe2UuoshngsjNA" name="continueSearch" specification="_GNwuQbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUrOlbhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUrOlrhUEe2UuoshngsjNA" name="activation" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUrOl7hUEe2UuoshngsjNA" type="_GRHkQLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUrOmLhUEe2UuoshngsjNA" name="toProgram" specification="_F2y_wLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUrOmbhUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUr1oLhUEe2UuoshngsjNA" name="findPreeptiveChannelAndTime" specification="_GN1mwbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUr1obhUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1orhUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUr1o7hUEe2UuoshngsjNA" type="_GRHkQLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUr1pLhUEe2UuoshngsjNA" name="findAdditionalTime" specification="_GN2N0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUr1pbhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1prhUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1p7hUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUr1qLhUEe2UuoshngsjNA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1qbhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUr1qrhUEe2UuoshngsjNA" name="findMaxTimeAvailable" specification="_GN4DALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUr1q7hUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1rLhUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUr1rbhUEe2UuoshngsjNA" type="_GRHkQLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUr1rrhUEe2UuoshngsjNA" name="availableTime" specification="_GN4qELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUr1r7hUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUr1sLhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1sbhUEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1srhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUr1s7hUEe2UuoshngsjNA" name="addToSchedule" specification="_GN5RILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUr1tLhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUr1tbhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1trhUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1t7hUEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUr1uLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUscsLhUEe2UuoshngsjNA" name="addToSchedule" specification="_GN54MbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUscsbhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUscsrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F2y_wLhUEe2UuoshngsjNA" name="toProgram" method="_GUrOmLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GN1mwLhUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNwHMLhUEe2UuoshngsjNA" name="PreemptiveSchedule" visibility="package" method="_GUrOkLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GNwHM7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GNwHNLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GNwHMbhUEe2UuoshngsjNA" name="poset" type="_F2fdwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GNwHMrhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GNwuQLhUEe2UuoshngsjNA" type="_F2xxoLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GNwuQbhUEe2UuoshngsjNA" name="continueSearch" visibility="protected" method="_GUrOlLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GNwuQrhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GNwuQ7hUEe2UuoshngsjNA" name="activation" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRILUbhUEe2UuoshngsjNA" type="_GRHkQLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GN1mwbhUEe2UuoshngsjNA" name="findPreeptiveChannelAndTime" visibility="private" method="_GUr1oLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GN1mwrhUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GN1mw7hUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRIyYLhUEe2UuoshngsjNA" type="_GRHkQLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GN2N0LhUEe2UuoshngsjNA" name="findAdditionalTime" visibility="private" method="_GUr1pLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GN2N0bhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GN2N0rhUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GN204LhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GN204bhUEe2UuoshngsjNA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRJZcLhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GN4DALhUEe2UuoshngsjNA" name="findMaxTimeAvailable" visibility="private" method="_GUr1qrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GN4DAbhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GN4DArhUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRJZcbhUEe2UuoshngsjNA" type="_GRHkQLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GN4qELhUEe2UuoshngsjNA" name="availableTime" visibility="private" method="_GUr1rrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GN4qEbhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GN4qErhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GN4qE7hUEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GN4qFLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GN5RILhUEe2UuoshngsjNA" name="addToSchedule" visibility="private" method="_GUr1s7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GN5RIbhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GN5RIrhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GN5RI7hUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GN5RJLhUEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GN54MLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GN54MbhUEe2UuoshngsjNA" name="addToSchedule" visibility="protected" method="_GUscsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GN54MrhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GN54M7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F234QLhUEe2UuoshngsjNA" name="PriorityComparator">
              <interfaceRealization xmi:id="_GRKAgLhUEe2UuoshngsjNA" client="_F234QLhUEe2UuoshngsjNA" supplier="_GMuMcLhUEe2UuoshngsjNA" contract="_GMuMcLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUscs7hUEe2UuoshngsjNA" name="compare" specification="_GRLOoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUsctLhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUsctbhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUsctrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GRLOoLhUEe2UuoshngsjNA" name="compare" method="_GUscs7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRLOobhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRLOorhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRLOo7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F29X0LhUEe2UuoshngsjNA" name="Program">
              <ownedComment xmi:id="_GVmboLhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GS8wQLhUEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GS8wQbhUEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS8wQrhUEe2UuoshngsjNA" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GS8wQ7hUEe2UuoshngsjNA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS8wRLhUEe2UuoshngsjNA" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GS9XULhUEe2UuoshngsjNA" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS9XUbhUEe2UuoshngsjNA" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GS9XUrhUEe2UuoshngsjNA" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS9XU7hUEe2UuoshngsjNA" name="workLoad" visibility="package" type="_F6kFcLhUEe2UuoshngsjNA" association="_GWjd4bhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS9-YbhUEe2UuoshngsjNA" name="scheduleBuilt" visibility="package" type="_F3dHELhUEe2UuoshngsjNA" association="_GWkE8bhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS-lcLhUEe2UuoshngsjNA" name="SchedulerSelected" visibility="package" type="_GRMcwLhUEe2UuoshngsjNA" association="_GWksAbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GS-lcrhUEe2UuoshngsjNA" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS_MgbhUEe2UuoshngsjNA" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GS_zkbhUEe2UuoshngsjNA" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTAaoLhUEe2UuoshngsjNA" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTAaorhUEe2UuoshngsjNA" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTBBsbhUEe2UuoshngsjNA" name="channelsAvailable" visibility="package" type="_F0erkLhUEe2UuoshngsjNA" association="_GWlTEbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTBowbhUEe2UuoshngsjNA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTCP0bhUEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTDd8LhUEe2UuoshngsjNA" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTEFALhUEe2UuoshngsjNA" name="deadlineMisses" visibility="private" type="_F1DTULhUEe2UuoshngsjNA" association="_GWl6IbhUEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_GN-wsLhUEe2UuoshngsjNA" client="_F29X0LhUEe2UuoshngsjNA" supplier="_F4pZ4LhUEe2UuoshngsjNA" contract="_F4pZ4LhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUtDwLhUEe2UuoshngsjNA" name="Program" specification="_GRNq4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUtDwbhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUtDwrhUEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUtDw7hUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUtDxLhUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUtDxbhUEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUtDxrhUEe2UuoshngsjNA" type="_F29X0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUtDx7hUEe2UuoshngsjNA" name="Program" specification="_GROR87hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUtDyLhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUtDybhUEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUtDyrhUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUtDy7hUEe2UuoshngsjNA" type="_F29X0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUtDzLhUEe2UuoshngsjNA" name="setDefaultParameters" specification="_GN_-0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUtDzbhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUtDzrhUEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUtDz7hUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUtD0LhUEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUtq0LhUEe2UuoshngsjNA" name="toWorkLoad" specification="_F3AbILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUtq0bhUEe2UuoshngsjNA" type="_F6kFcLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUtq0rhUEe2UuoshngsjNA" name="buildProgram" specification="_GRPgELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUtq07hUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUtq1LhUEe2UuoshngsjNA" name="buildOriginalProgram" specification="_F3AbIbhUEe2UuoshngsjNA">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUtq1bhUEe2UuoshngsjNA" name="waitInstruction" specification="_F3BCMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUtq1rhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUtq17hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUuR4LhUEe2UuoshngsjNA" name="elseWaitInstruction" specification="_F3BpQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUuR4bhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUuR4rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUuR47hUEe2UuoshngsjNA" name="elsePullClause" specification="_F3BpQ7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUuR5LhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUuR5bhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUuR5rhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUuR57hUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUuR6LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUuR6bhUEe2UuoshngsjNA" name="hasPushInstruction" specification="_F3C3YLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUuR6rhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUuR67hUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUuR7LhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUuR7bhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUuR7rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUuR77hUEe2UuoshngsjNA" name="pushInstruction" specification="_F3DecLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUu48LhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu48bhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu48rhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu487hUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu49LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUu49bhUEe2UuoshngsjNA" name="getFirstChannelInInstruction" specification="_F3Hv4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUu49rhUEe2UuoshngsjNA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu497hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUu4-LhUEe2UuoshngsjNA" name="findNextAvailableInstructionTimeSlot" specification="_GOBM8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUu4-bhUEe2UuoshngsjNA" name="schedule" type="_F3dHELhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUu4-rhUEe2UuoshngsjNA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu4-7hUEe2UuoshngsjNA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu4_LhUEe2UuoshngsjNA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu4_bhUEe2UuoshngsjNA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu4_rhUEe2UuoshngsjNA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GUu4_7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu5ALhUEe2UuoshngsjNA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GUu5AbhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu5ArhUEe2UuoshngsjNA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu5A7hUEe2UuoshngsjNA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu5BLhUEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu5BbhUEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu5BrhUEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUu5B7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUvgALhUEe2UuoshngsjNA" name="slotIsAvailable" specification="_GOCbEbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUvgAbhUEe2UuoshngsjNA" name="currentInstructionTimeSlot" type="_F2Cx0LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUvgArhUEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUvgA7hUEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUvgBLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUvgBbhUEe2UuoshngsjNA" name="findNextAvailableChannel" specification="_GODCJLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUvgBrhUEe2UuoshngsjNA" name="schedule" type="_F3dHELhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUvgB7hUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUvgCLhUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUvgCbhUEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUvgCrhUEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUvgC7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUvgDLhUEe2UuoshngsjNA" name="selectPriority" specification="_F3JlELhUEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwHELhUEe2UuoshngsjNA" name="selectRM" specification="_F3JlEbhUEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwHEbhUEe2UuoshngsjNA" name="selectDM" specification="_F3JlErhUEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwHErhUEe2UuoshngsjNA" name="selectRtHART" specification="_F3KMILhUEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwHE7hUEe2UuoshngsjNA" name="setScheduleSelected" specification="_GRQHILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwHFLhUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwHFbhUEe2UuoshngsjNA" name="setSchedule" specification="_GOKW4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwHFrhUEe2UuoshngsjNA" name="schedule" type="_F3dHELhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwHF7hUEe2UuoshngsjNA" name="getSchedule" specification="_F3KMIbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwHGLhUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwHGbhUEe2UuoshngsjNA" name="getSchedulerName" specification="_F3KzMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwHGrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwuILhUEe2UuoshngsjNA" name="getSchChoice" specification="_F3MBULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwuIbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwuIrhUEe2UuoshngsjNA" name="getNumChannels" specification="_F3MBUrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwuI7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwuJLhUEe2UuoshngsjNA" name="getNumTransmissions" specification="_F3NPcrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwuJbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwuJrhUEe2UuoshngsjNA" name="getRealTimeHartFlag" specification="_F3PrsrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwuJ7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwuKLhUEe2UuoshngsjNA" name="setRealTimeHartFlag" specification="_F3QSwbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwuKbhUEe2UuoshngsjNA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUwuKrhUEe2UuoshngsjNA" name="getMinPacketReceptionRate" specification="_F3Q50LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUwuK7hUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUxVMLhUEe2UuoshngsjNA" name="getE2e" specification="_F3Rg4rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUxVMbhUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUxVMrhUEe2UuoshngsjNA" name="getName" specification="_F3SvArhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUxVM7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUxVNLhUEe2UuoshngsjNA" name="getOptimizationFlag" specification="_F3TWE7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUxVNbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUxVNrhUEe2UuoshngsjNA" name="deadlineMisses" specification="_F3UkMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUxVN7hUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUxVOLhUEe2UuoshngsjNA" name="getNumFaults" specification="_F3UkMbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUxVObhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUxVOrhUEe2UuoshngsjNA" name="getNodeMapIndex" specification="_F3VLQ7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUxVO7hUEe2UuoshngsjNA" type="_GMPrULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// create an array of node names sorted alphabetically&#xD;
 var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); &#xD;
 &#xD;
 // create a new mapping from node names to index in schedule table&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>();&#xD;
 &#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F3AbILhUEe2UuoshngsjNA" name="toWorkLoad" method="_GUtq0LhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVmbobhUEe2UuoshngsjNA">
                  <body>@return the WorkLoad object containing all flows and nodes within the graph.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GOAl47hUEe2UuoshngsjNA" type="_F6kFcLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3AbIbhUEe2UuoshngsjNA" name="buildOriginalProgram" method="_GUtq1LhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F3BCMLhUEe2UuoshngsjNA" name="waitInstruction" visibility="private" method="_GUtq1bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3BCMbhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3BCMrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3BpQLhUEe2UuoshngsjNA" name="elseWaitInstruction" visibility="private" method="_GUuR4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3BpQbhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3BpQrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3BpQ7hUEe2UuoshngsjNA" name="elsePullClause" visibility="private" method="_GUuR47hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3CQULhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3CQUbhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3CQUrhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3CQU7hUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3CQVLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3C3YLhUEe2UuoshngsjNA" name="hasPushInstruction" visibility="private" method="_GUuR6bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3C3YbhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3C3YrhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3C3Y7hUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3C3ZLhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3C3ZbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3DecLhUEe2UuoshngsjNA" name="pushInstruction" visibility="private" method="_GUuR77hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3DecbhUEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3DecrhUEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3HI0LhUEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3HI0bhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3HI0rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3Hv4LhUEe2UuoshngsjNA" name="getFirstChannelInInstruction" visibility="private" method="_GUu49bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3Hv4bhUEe2UuoshngsjNA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3IW8LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3JlELhUEe2UuoshngsjNA" name="selectPriority" method="_GUvgDLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F3JlEbhUEe2UuoshngsjNA" name="selectRM" method="_GUwHELhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F3JlErhUEe2UuoshngsjNA" name="selectDM" method="_GUwHEbhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F3KMILhUEe2UuoshngsjNA" name="selectRtHART" method="_GUwHErhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F3KMIbhUEe2UuoshngsjNA" name="getSchedule" method="_GUwHF7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVnpwLhUEe2UuoshngsjNA">
                  <body>@return the completed schedule for the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_GOK98LhUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3KzMLhUEe2UuoshngsjNA" name="getSchedulerName" method="_GUwHGbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3KzMbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3MBULhUEe2UuoshngsjNA" name="getSchChoice" method="_GUwuILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3MBUbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3MBUrhUEe2UuoshngsjNA" name="getNumChannels" method="_GUwuIrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3MoYLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3NPcrhUEe2UuoshngsjNA" name="getNumTransmissions" method="_GUwuJLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3NPc7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3PrsrhUEe2UuoshngsjNA" name="getRealTimeHartFlag" visibility="private" method="_GUwuJrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3QSwLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3QSwbhUEe2UuoshngsjNA" name="setRealTimeHartFlag" visibility="private" method="_GUwuKLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3QSwrhUEe2UuoshngsjNA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3Q50LhUEe2UuoshngsjNA" name="getMinPacketReceptionRate" method="_GUwuKrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRQuMrhUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3Rg4rhUEe2UuoshngsjNA" name="getE2e" method="_GUxVMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRRVQLhUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3SvArhUEe2UuoshngsjNA" name="getName" method="_GUxVMrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3SvA7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3TWE7hUEe2UuoshngsjNA" name="getOptimizationFlag" method="_GUxVNLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3T9ILhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3UkMLhUEe2UuoshngsjNA" name="deadlineMisses" method="_GUxVNrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOLlALhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3UkMbhUEe2UuoshngsjNA" name="getNumFaults" method="_GUxVOLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3UkMrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3VLQ7hUEe2UuoshngsjNA" name="getNodeMapIndex" method="_GUxVOrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVnpwbhUEe2UuoshngsjNA">
                  <body>@return a HashMap mapping each node to its index when sorted by alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_GRRVQbhUEe2UuoshngsjNA" type="_GMPrULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GN_-0LhUEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_GUtDzLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GN_-0bhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOAl4LhUEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOAl4bhUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOAl4rhUEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOBM8LhUEe2UuoshngsjNA" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_GUu4-LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOBM8bhUEe2UuoshngsjNA" name="schedule" type="_F3dHELhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOBM8rhUEe2UuoshngsjNA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOBM87hUEe2UuoshngsjNA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOBM9LhUEe2UuoshngsjNA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOBM9bhUEe2UuoshngsjNA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOBM9rhUEe2UuoshngsjNA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GOB0BrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOBM97hUEe2UuoshngsjNA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GOCbELhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOB0ALhUEe2UuoshngsjNA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOB0AbhUEe2UuoshngsjNA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOB0ArhUEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOB0A7hUEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOB0BLhUEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOB0BbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOCbEbhUEe2UuoshngsjNA" name="slotIsAvailable" visibility="private" method="_GUvgALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GODCILhUEe2UuoshngsjNA" name="currentInstructionTimeSlot" type="_F2Cx0LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GODCIbhUEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GODCIrhUEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GODCI7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GODCJLhUEe2UuoshngsjNA" name="findNextAvailableChannel" visibility="private" method="_GUvgBbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GODpMLhUEe2UuoshngsjNA" name="schedule" type="_F3dHELhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GODpMbhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GODpMrhUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GODpM7hUEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GODpNLhUEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GODpNbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOKW4LhUEe2UuoshngsjNA" name="setSchedule" visibility="private" method="_GUwHFbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOKW4bhUEe2UuoshngsjNA" name="schedule" type="_F3dHELhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRNq4LhUEe2UuoshngsjNA" name="Program" visibility="package" method="_GUtDwLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GROR8LhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GROR8bhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GRNq4bhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRNq4rhUEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRNq47hUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRNq5LhUEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRNq5bhUEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GROR8rhUEe2UuoshngsjNA" type="_F29X0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GROR87hUEe2UuoshngsjNA" name="Program" visibility="package" method="_GUtDx7hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GRO5A7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GRO5BLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GRO5ALhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRO5AbhUEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRO5ArhUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRO5BbhUEe2UuoshngsjNA" type="_F29X0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRPgELhUEe2UuoshngsjNA" name="buildProgram" method="_GUtq0rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRPgEbhUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRQHILhUEe2UuoshngsjNA" name="setScheduleSelected" visibility="private" method="_GUwHE7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRQHIbhUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F3dHELhUEe2UuoshngsjNA" name="ProgramSchedule">
              <generalization xmi:id="_GOPPYLhUEe2UuoshngsjNA" general="_F4vggLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTFTILhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTF6MLhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUyjULhUEe2UuoshngsjNA" name="ProgramSchedule" specification="_F3duILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUyjUbhUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUzKYLhUEe2UuoshngsjNA" name="ProgramSchedule" specification="_F3eVMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUzKYbhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUzKYrhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GUzKY7hUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F3duILhUEe2UuoshngsjNA" name="ProgramSchedule" method="_GUyjULhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F3duIbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F3duIrhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F3duI7hUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3eVMLhUEe2UuoshngsjNA" name="ProgramSchedule" visibility="package" method="_GUzKYLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F3eVM7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F3eVNLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F3eVMbhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3eVMrhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3eVNbhUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F3e8QLhUEe2UuoshngsjNA" name="ProgramVisualization">
              <ownedComment xmi:id="_GVnpwrhUEe2UuoshngsjNA">
                <body>Develops a visualization of a Warp graph schedule formatted as a table&#xD;
using arrays. Each column of the table is a time slot, and the rows &#xD;
contain the schedule's instructions. The visualization can be displayed&#xD;
as a GuiVisualization with the displayVisualization() method. A header&#xD;
and footer can also be added with additional information about the Warp&#xD;
graph.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GOUH47hUEe2UuoshngsjNA" general="_F5E3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTF6MbhUEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTF6MrhUEe2UuoshngsjNA" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTGhQLhUEe2UuoshngsjNA" name="sourceCode" visibility="private" type="_F3dHELhUEe2UuoshngsjNA" association="_GWmhMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTGhQrhUEe2UuoshngsjNA" name="program" visibility="private" type="_F29X0LhUEe2UuoshngsjNA" association="_GWmhM7hUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTHIUbhUEe2UuoshngsjNA" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUzxcLhUEe2UuoshngsjNA" name="ProgramVisualization" specification="_GOQdgLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUzxcbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GUzxcrhUEe2UuoshngsjNA" type="_F3e8QLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUzxc7hUEe2UuoshngsjNA" name="displayVisualization" specification="_F3fjULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUzxdLhUEe2UuoshngsjNA" type="_F14ZwLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUzxdbhUEe2UuoshngsjNA" name="createHeader" specification="_F3gKYrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUzxdrhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUzxd7hUEe2UuoshngsjNA" name="createFooter" specification="_F3gxc7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUzxeLhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUzxebhUEe2UuoshngsjNA" name="createColumnHeader" specification="_F3h_kLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GUzxerhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GUzxe7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU0YgLhUEe2UuoshngsjNA" name="createVisualizationData" specification="_F3jNsrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU0YgbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GU0YgrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU0Yg7hUEe2UuoshngsjNA" name="createTitle" specification="_F3kb07hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU0YhLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F3fjULhUEe2UuoshngsjNA" name="displayVisualization" method="_GUzxc7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOUH4LhUEe2UuoshngsjNA" type="_F14ZwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3gKYrhUEe2UuoshngsjNA" name="createHeader" visibility="protected" method="_GUzxdbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOUH4bhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3gxc7hUEe2UuoshngsjNA" name="createFooter" visibility="protected" method="_GUzxd7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOUH4rhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3h_kLhUEe2UuoshngsjNA" name="createColumnHeader" visibility="protected" method="_GUzxebhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3h_kbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F3h_krhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3jNsrhUEe2UuoshngsjNA" name="createVisualizationData" visibility="protected" method="_GU0YgLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3j0wLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F3j0wbhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F3kb07hUEe2UuoshngsjNA" name="createTitle" visibility="private" method="_GU0Yg7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVoQ0bhUEe2UuoshngsjNA">
                  <body>@return the title for the visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_F3lC4LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOQdgLhUEe2UuoshngsjNA" name="ProgramVisualization" visibility="package" method="_GUzxcLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GOREkLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GOREkbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVoQ0LhUEe2UuoshngsjNA">
                  <body>Creates and initializes a new visualization.&#xD;
   * &#xD;
   * @param warp object</body>
                </ownedComment>
                <ownedParameter xmi:id="_GOQdgbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOREkrhUEe2UuoshngsjNA" type="_F3e8QLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F3m4ELhUEe2UuoshngsjNA" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_GRTxgLhUEe2UuoshngsjNA" client="_F3m4ELhUEe2UuoshngsjNA" supplier="_GMuMcLhUEe2UuoshngsjNA" contract="_GMuMcLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU0YhbhUEe2UuoshngsjNA" name="compare" specification="_GRU_oLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU0YhrhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU0Yh7hUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU0YiLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GRU_oLhUEe2UuoshngsjNA" name="compare" method="_GU0YhbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRU_obhUEe2UuoshngsjNA" name="obj1" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRU_orhUEe2UuoshngsjNA" name="obj2" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRVmsLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F3oGMLhUEe2UuoshngsjNA" name="ReleaseTimeQueue">
              <generalization xmi:id="_F3qicLhUEe2UuoshngsjNA" general="_F3p7YLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTHvYLhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTHvYbhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU0_kLhUEe2UuoshngsjNA" name="ReleaseTimeQueue" specification="_F3pUULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU0_kbhUEe2UuoshngsjNA" type="_F3oGMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU0_krhUEe2UuoshngsjNA" name="ReleaseTimeQueue" specification="_GOWkILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU0_k7hUEe2UuoshngsjNA" name="schedulableObjects" type="_GNm9QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU0_lLhUEe2UuoshngsjNA" type="_F3oGMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F3pUULhUEe2UuoshngsjNA" name="ReleaseTimeQueue" visibility="package" method="_GU0_kLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F3pUUbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F3pUUrhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F3pUU7hUEe2UuoshngsjNA" type="_F3oGMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GOWkILhUEe2UuoshngsjNA" name="ReleaseTimeQueue" visibility="package" method="_GU0_krhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GOWkIrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GOWkI7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GOWkIbhUEe2UuoshngsjNA" name="schedulableObjects" type="_GNm9QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOXLMLhUEe2UuoshngsjNA" type="_F3oGMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F3rJgLhUEe2UuoshngsjNA" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_GsqAAMv4Ee2QFfqiYSegRA">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GsiEMMv4Ee2QFfqiYSegRA" name="e2e" visibility="private" type="_GRQuMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GsiEMsv4Ee2QFfqiYSegRA" name="minPacketReceptionRate" visibility="private" type="_GRQuMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GsirQcv4Ee2QFfqiYSegRA" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GsjSUcv4Ee2QFfqiYSegRA" name="nPushes" visibility="private" type="_GMRggLhUEe2UuoshngsjNA" association="_GsuRcMv4Ee2QFfqiYSegRA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU0_lbhUEe2UuoshngsjNA" name="ReliabilityAnalysis" specification="_GOZAYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU0_lrhUEe2UuoshngsjNA" name="program" type="_F29X0LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU0_l7hUEe2UuoshngsjNA" type="_F3rJgLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
	// Not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU0_mLhUEe2UuoshngsjNA" name="verifyReliabilities" specification="_F3rwkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU0_mbhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GslukMv4Ee2QFfqiYSegRA" name="ReliabilityAnalysis" specification="_GsBt4Mv4Ee2QFfqiYSegRA">
                <ownedParameter xmi:id="_Gslukcv4Ee2QFfqiYSegRA" name="e2e" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Gsluksv4Ee2QFfqiYSegRA" name="minPacketReceptionRate" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Gsluk8v4Ee2QFfqiYSegRA" type="_F3rJgLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.setDefaultParameters();&#xD;
   this.e2e = e2e;&#xD;
   this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GslulMv4Ee2QFfqiYSegRA" name="ReliabilityAnalysis" specification="_GsavcMv4Ee2QFfqiYSegRA">
                <ownedParameter xmi:id="_GsmVoMv4Ee2QFfqiYSegRA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GsmVocv4Ee2QFfqiYSegRA" type="_F3rJgLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.setDefaultParameters();&#xD;
   this.numFaults = numFaults;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GsmVosv4Ee2QFfqiYSegRA" name="setDefaultParameters" specification="_GsCU9Mv4Ee2QFfqiYSegRA">
                <language>java</language>
                <body>this.e2e = 0.99;&#xD;
	  this.minPacketReceptionRate = 0.9;&#xD;
	  this.numFaults = 0;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GsmVo8v4Ee2QFfqiYSegRA" name="numTxPerLinkAndTotalTxCost" specification="_GsC8AMv4Ee2QFfqiYSegRA">
                <ownedParameter xmi:id="_GsmVpMv4Ee2QFfqiYSegRA" name="flow" type="_F1afsLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GsmVpcv4Ee2QFfqiYSegRA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;Node> nodesInFlow = flow.getNodes();&#xD;
   &#xD;
   int nNodesInFlow = nodesInFlow.size();&#xD;
   &#xD;
   /*Array to track nPushes for each node in this flow (same as nTx per link).&#xD;
   Initialized to all 0 values.&#xD;
   The last entry will contain the worst-case cost of transmitting E2E in &#xD;
   isolation*/&#xD;
   nPushes = new ArrayList&lt;Integer>(Collections.nCopies(nNodesInFlow + 1, 0));&#xD;
   &#xD;
   int nHops = nNodesInFlow - 1;&#xD;
   &#xD;
   /*minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
   * reliability for the flow.&#xD;
   * Use max to handle rounding error when e2e == 1.0 */&#xD;
   Double minLinkReliablityNeeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); &#xD;
   &#xD;
   &#xD;
   /* Now compute reliability of packet reaching each node in the given time slot:&#xD;
    *Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
    *each row is a time slot, stating at time 0&#xD;
    *each column represents the reliability of the packet reaching that node at the&#xD;
    *current time slot (i.e., the row it is in)&#xD;
    *will add rows as we compute reliabilities until the final reliability is reached&#xD;
    *for all nodes. */&#xD;
   ReliabilityTable reliabilityWindow = new ReliabilityTable();&#xD;
   &#xD;
   ReliabilityRow nextRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
   // initialize (i.e., P (packet@FlowSrc = 1)&#xD;
   nextRow.set(0, 1.0);&#xD;
   // the analysis will end when the e2e reliability metric is met, initially the&#xD;
   // state is not met and will be 0 with this statement&#xD;
   Double e2eReliabilityState = nextRow.get(nNodesInFlow - 1);&#xD;
   &#xD;
   &#xD;
   int timeSlot = 0;&#xD;
   ReliabilityRow prevReliabilityRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
   &#xD;
   while (e2eReliabilityState &lt; e2e) {&#xD;
 	  Collections.copy(prevReliabilityRow, nextRow);&#xD;
 	  &#xD;
 	  nextRow = nextRow(prevReliabilityRow, minLinkReliablityNeeded);&#xD;
       &#xD;
 	  e2eReliabilityState = nextRow.get(nNodesInFlow - 1);&#xD;
       &#xD;
 	  reliabilityWindow.add(nextRow);&#xD;
       &#xD;
 	  timeSlot += 1;&#xD;
   &#xD;
   }&#xD;
	  &#xD;
	  // The total (worst-case) cost to transmit E2E in isolation with&#xD;
   // specified reliability target is the number of rows in the reliabilityWindow,&#xD;
   // which is equal to the number of time slots.&#xD;
   int time = timeSlot;&#xD;
	  nPushes.set(nNodesInFlow, time);&#xD;
	  return nPushes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GsmVpsv4Ee2QFfqiYSegRA" name="nextRow" specification="_GsbWgMv4Ee2QFfqiYSegRA">
                <ownedParameter xmi:id="_GsmVp8v4Ee2QFfqiYSegRA" name="prevReliabilityRow" type="_F3uz4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GsmVqMv4Ee2QFfqiYSegRA" name="minLinkReliablityNeeded">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GsmVqcv4Ee2QFfqiYSegRA" type="_F3uz4LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>int nNodesInFlow = nPushes.size()-1;&#xD;
	  ReliabilityRow currentReliabilityRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
	  Collections.copy(currentReliabilityRow, prevReliabilityRow);&#xD;
	  &#xD;
	  for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) {&#xD;
		  int flowSrcNodeindex = nodeIndex;&#xD;
		  int flowSnkNodeindex = nodeIndex + 1;&#xD;
		  Double prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeindex);&#xD;
		  Double prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeindex);&#xD;
		  Double nextSnkState;&#xD;
	  &#xD;
		  // do a push until PrevSnk state > e2e to ensure next node reaches target E2E BUT&#xD;
		  // skip if no chance of success (i.e., source doesn't have packet)&#xD;
		  if ((prevSrcNodeState > 0 &amp;&amp; prevSnkNodeState &lt; minLinkReliablityNeeded)) {&#xD;
		  &#xD;
		  		//need to continue attempting to Tx, so update current state&#xD;
		  		nextSnkState = ((1.0 - minPacketReceptionRate) * prevSnkNodeState) + &#xD;
		  					(minPacketReceptionRate * prevSrcNodeState);&#xD;
		  		// increment the number of pushes for for this node to snk node&#xD;
		  		nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1);&#xD;
		  } else {&#xD;
   			// snkNode has met its reliability. Thus move on to the&#xD;
 	  		// next node and record the reliability met&#xD;
   			nextSnkState = prevSnkNodeState;&#xD;
		  }&#xD;
		  &#xD;
		  currentReliabilityRow.set(flowSnkNodeindex, nextSnkState);&#xD;
	  }&#xD;
	  return currentReliabilityRow;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F3rwkLhUEe2UuoshngsjNA" name="verifyReliabilities" method="_GU0_mLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F3rwkbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOZAYLhUEe2UuoshngsjNA" name="ReliabilityAnalysis" method="_GU0_lbhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GOZAYrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GOZAY7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GOZAYbhUEe2UuoshngsjNA" name="program" type="_F29X0LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOZncLhUEe2UuoshngsjNA" type="_F3rJgLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_laINMLhgEe2UuoshngsjNA" name="getReliabilities">
                <ownedParameter xmi:id="_laINMbhgEe2UuoshngsjNA" type="_F3wpELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GsBt4Mv4Ee2QFfqiYSegRA" name="ReliabilityAnalysis" method="_GslukMv4Ee2QFfqiYSegRA">
                <eAnnotations xmi:id="_GsCU8sv4Ee2QFfqiYSegRA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GsCU88v4Ee2QFfqiYSegRA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GsqnEMv4Ee2QFfqiYSegRA">
                  <body>Creates a new ReliabilityAnalysis object with the provided values for&#xD;
    * end-to-end communication and minimum packet reception rate. All other&#xD;
    * values are set to defaults.&#xD;
    * &#xD;
    * @param e2e The required end to end communication reliability for flows&#xD;
    * @param minPacketReceptionRate The minimum packet reception rate for nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_GsBt4cv4Ee2QFfqiYSegRA" name="e2e" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GsCU8Mv4Ee2QFfqiYSegRA" name="minPacketReceptionRate" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GsCU8cv4Ee2QFfqiYSegRA" type="_F3rJgLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GsCU9Mv4Ee2QFfqiYSegRA" name="setDefaultParameters" visibility="private" method="_GsmVosv4Ee2QFfqiYSegRA">
                <ownedComment xmi:id="_GsqnEsv4Ee2QFfqiYSegRA">
                  <body>Sets all parameters to default values specified within this method.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_GsC8AMv4Ee2QFfqiYSegRA" name="numTxPerLinkAndTotalTxCost" method="_GsmVo8v4Ee2QFfqiYSegRA">
                <ownedComment xmi:id="_GsqnE8v4Ee2QFfqiYSegRA">
                  <body>Calculates number of transmissions needed per link and total worst-case&#xD;
   * transmission time for the given flow.&#xD;
   * &#xD;
   * @param flow the flow being analyzed&#xD;
   * @return an ArrayList containing the number of transmissions per link and the&#xD;
   * total worst case time of transmitting end to end at the end of the List.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GsC8Acv4Ee2QFfqiYSegRA" name="flow" type="_F1afsLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GsC8Asv4Ee2QFfqiYSegRA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GsavcMv4Ee2QFfqiYSegRA" name="ReliabilityAnalysis" method="_GslulMv4Ee2QFfqiYSegRA">
                <eAnnotations xmi:id="_Gsavc8v4Ee2QFfqiYSegRA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GsavdMv4Ee2QFfqiYSegRA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GsqnEcv4Ee2QFfqiYSegRA">
                  <body>Creates a new ReliabilityAnalysis object with the provided values for&#xD;
    * the number of faults. All other values are set to defaults.&#xD;
    * &#xD;
    * @param numFaults The number of faults allowed per edge in a Flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_Gsavccv4Ee2QFfqiYSegRA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Gsavcsv4Ee2QFfqiYSegRA" type="_F3rJgLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GsbWgMv4Ee2QFfqiYSegRA" name="nextRow" visibility="private" method="_GsmVpsv4Ee2QFfqiYSegRA">
                <ownedComment xmi:id="_GsqnFMv4Ee2QFfqiYSegRA">
                  <body>Computes the next row in the reliability window.&#xD;
   * &#xD;
   * @param prevReliabilityRow The previous reliability row in the reliability window&#xD;
   * @param minLinkReliablityNeeded The minimum reliability needed for each link in the path&#xD;
   * @return the next reliability row in the reliability window</body>
                </ownedComment>
                <ownedParameter xmi:id="_GsbWgcv4Ee2QFfqiYSegRA" name="prevReliabilityRow" type="_F3uz4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GsbWgsv4Ee2QFfqiYSegRA" name="minLinkReliablityNeeded">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GsbWg8v4Ee2QFfqiYSegRA" type="_F3uz4LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_F3sXoLhUEe2UuoshngsjNA" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_GVoQ07hUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_F3s-sLhUEe2UuoshngsjNA" name="minPacketReceptionRate" type="_GRQuMLhUEe2UuoshngsjNA" isReadOnly="true"/>
              <ownedAttribute xmi:id="_F3tlwLhUEe2UuoshngsjNA" name="e2e" type="_GRQuMLhUEe2UuoshngsjNA" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F3uz4LhUEe2UuoshngsjNA" name="ReliabilityRow">
              <generalization xmi:id="_GOaOgLhUEe2UuoshngsjNA" general="_F33WwLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTIWcLhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTIWcbhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU1moLhUEe2UuoshngsjNA" name="ReliabilityRow" specification="_F3va8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU1mobhUEe2UuoshngsjNA" type="_F3uz4LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU1morhUEe2UuoshngsjNA" name="ReliabilityRow" specification="_GRW00LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU1mo7hUEe2UuoshngsjNA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU1mpLhUEe2UuoshngsjNA" name="element" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU1mpbhUEe2UuoshngsjNA" type="_F3uz4LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU1mprhUEe2UuoshngsjNA" name="ReliabilityRow" specification="_GRXb4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU1mp7hUEe2UuoshngsjNA" name="rowArray" type="_GRQuMLhUEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GU1mqLhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU1mqbhUEe2UuoshngsjNA" type="_F3uz4LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F3va8LhUEe2UuoshngsjNA" name="ReliabilityRow" method="_GU1moLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F3va8bhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F3va8rhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F3va87hUEe2UuoshngsjNA" type="_F3uz4LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRW00LhUEe2UuoshngsjNA" name="ReliabilityRow" visibility="package" method="_GU1morhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GRW007hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GRW01LhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GRW00bhUEe2UuoshngsjNA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRW00rhUEe2UuoshngsjNA" name="element" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRW01bhUEe2UuoshngsjNA" type="_F3uz4LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRXb4LhUEe2UuoshngsjNA" name="ReliabilityRow" visibility="package" method="_GU1mprhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GRXb4rhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GRXb47hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GRXb4bhUEe2UuoshngsjNA" name="rowArray" type="_GRQuMLhUEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GRXb5bhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRXb5LhUEe2UuoshngsjNA" type="_F3uz4LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F3wpELhUEe2UuoshngsjNA" name="ReliabilityTable">
              <generalization xmi:id="_GOcDsLhUEe2UuoshngsjNA" general="_F4vggLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTIWcrhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTIWc7hUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU1mqrhUEe2UuoshngsjNA" name="ReliabilityTable" specification="_F3xQILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU1mq7hUEe2UuoshngsjNA" type="_F3wpELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU1mrLhUEe2UuoshngsjNA" name="ReliabilityTable" specification="_F3x3MLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU1mrbhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU1mrrhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU1mr7hUEe2UuoshngsjNA" type="_F3wpELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F3xQILhUEe2UuoshngsjNA" name="ReliabilityTable" method="_GU1mqrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F3xQIbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F3xQIrhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F3xQI7hUEe2UuoshngsjNA" type="_F3wpELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3x3MLhUEe2UuoshngsjNA" name="ReliabilityTable" visibility="package" method="_GU1mrLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F3x3M7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F3x3NLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F3x3MbhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3x3MrhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3x3NbhUEe2UuoshngsjNA" type="_F3wpELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F3yeQLhUEe2UuoshngsjNA" name="ReliabilityVisualization">
              <ownedComment xmi:id="_GVoQ1LhUEe2UuoshngsjNA">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GOef8LhUEe2UuoshngsjNA" general="_F5E3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTI9gLhUEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTI9gbhUEe2UuoshngsjNA" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTI9grhUEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTI9g7hUEe2UuoshngsjNA" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTJkkLhUEe2UuoshngsjNA" name="warp" visibility="private" type="_F5nqQLhUEe2UuoshngsjNA" association="_GWnIQbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTJkkrhUEe2UuoshngsjNA" name="ra" visibility="private" type="_F3rJgLhUEe2UuoshngsjNA" association="_GWnvUbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU2NsLhUEe2UuoshngsjNA" name="ReliabilityVisualization" specification="_GOdR0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU2NsbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU2NsrhUEe2UuoshngsjNA" type="_F3yeQLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GOdR0LhUEe2UuoshngsjNA" name="ReliabilityVisualization" visibility="package" method="_GU2NsLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GOd44LhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GOd44bhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GOdR0bhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOd44rhUEe2UuoshngsjNA" type="_F3yeQLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F3zsYLhUEe2UuoshngsjNA" name="ReportVisualization">
              <generalization xmi:id="_GOgVIbhUEe2UuoshngsjNA" general="_F5E3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTKLobhUEe2UuoshngsjNA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTKysLhUEe2UuoshngsjNA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTKysbhUEe2UuoshngsjNA" name="content" visibility="private" type="_F1DTULhUEe2UuoshngsjNA" association="_GWoWYbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTLZwLhUEe2UuoshngsjNA" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU2Ns7hUEe2UuoshngsjNA" name="ReportVisualization" specification="_GOfHALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU2NtLhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU2NtbhUEe2UuoshngsjNA" name="warp" type="_F4pZ4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU2NtrhUEe2UuoshngsjNA" name="content" type="_F1DTULhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU2Nt7hUEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU2NuLhUEe2UuoshngsjNA" type="_F3zsYLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU2NubhUEe2UuoshngsjNA" name="visualization" specification="_F306gLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU2NurhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU2Nu7hUEe2UuoshngsjNA" name="createReport" specification="_F31hkrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU2NvLhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F306gLhUEe2UuoshngsjNA" name="visualization" method="_GU2NubhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOfuF7hUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F31hkrhUEe2UuoshngsjNA" name="createReport" visibility="private" method="_GU2Nu7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOgVILhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GOfHALhUEe2UuoshngsjNA" name="ReportVisualization" visibility="package" method="_GU2Ns7hUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GOfuFLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GOfuFbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GOfuELhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOfuEbhUEe2UuoshngsjNA" name="warp" type="_F4pZ4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOfuErhUEe2UuoshngsjNA" name="content" type="_F1DTULhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOfuE7hUEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOfuFrhUEe2UuoshngsjNA" type="_F3zsYLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F33WwLhUEe2UuoshngsjNA" name="Row">
              <generalization xmi:id="_GRZ4IbhUEe2UuoshngsjNA" general="_GMRggLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTLZwrhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTMA0LhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU20wLhUEe2UuoshngsjNA" name="Row" specification="_F35zALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU20wbhUEe2UuoshngsjNA" type="_F33WwLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU20wrhUEe2UuoshngsjNA" name="Row" specification="_GRYC8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU20w7hUEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU20xLhUEe2UuoshngsjNA" name="element" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU20xbhUEe2UuoshngsjNA" type="_F33WwLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU20xrhUEe2UuoshngsjNA" name="Row" specification="_GRZRELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU20x7hUEe2UuoshngsjNA" name="rowArray" type="_GQsGcbhUEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GU20yLhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU20ybhUEe2UuoshngsjNA" type="_F33WwLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU20yrhUEe2UuoshngsjNA" name="Row" specification="_F37BILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU20y7hUEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU20zLhUEe2UuoshngsjNA" type="_F33WwLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F35zALhUEe2UuoshngsjNA" name="Row" method="_GU20wLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F35zAbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F35zArhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F35zA7hUEe2UuoshngsjNA" type="_F33WwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F37BILhUEe2UuoshngsjNA" name="Row" visibility="package" method="_GU20yrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F37BIrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F37BI7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F37BIbhUEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F37BJLhUEe2UuoshngsjNA" type="_F33WwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRYC8LhUEe2UuoshngsjNA" name="Row" visibility="package" method="_GU20wrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GRYqAbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GRYqArhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GRYC8bhUEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRYqALhUEe2UuoshngsjNA" name="element" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRYqA7hUEe2UuoshngsjNA" type="_F33WwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRZRELhUEe2UuoshngsjNA" name="Row" visibility="package" method="_GU20xrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GRZRErhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GRZRE7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GRZREbhUEe2UuoshngsjNA" name="rowArray" type="_GQsGcbhUEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GRZ4ILhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRZRFLhUEe2UuoshngsjNA" type="_F33WwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F37oMLhUEe2UuoshngsjNA" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_GTNO8LhUEe2UuoshngsjNA" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTNO8bhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTN2ALhUEe2UuoshngsjNA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTN2AbhUEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTN2ArhUEe2UuoshngsjNA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTN2A7hUEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTN2BLhUEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTOdELhUEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTOdEbhUEe2UuoshngsjNA" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTOdErhUEe2UuoshngsjNA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTOdE7hUEe2UuoshngsjNA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTPEIbhUEe2UuoshngsjNA" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTPEIrhUEe2UuoshngsjNA" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTPEI7hUEe2UuoshngsjNA" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTPrMLhUEe2UuoshngsjNA" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTPrMrhUEe2UuoshngsjNA" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTQSQbhUEe2UuoshngsjNA" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTQ5UbhUEe2UuoshngsjNA" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTQ5UrhUEe2UuoshngsjNA" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTQ5U7hUEe2UuoshngsjNA" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTRgYLhUEe2UuoshngsjNA" name="predecessor" type="_F37oMLhUEe2UuoshngsjNA" association="_GVo34LhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTRgYbhUEe2UuoshngsjNA" name="endTimes" visibility="private" type="_F3p7YLhUEe2UuoshngsjNA" association="_GWo9cLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTSugLhUEe2UuoshngsjNA" name="subObjects" type="_GOixYLhUEe2UuoshngsjNA" isReadOnly="true" association="_GWo9c7hUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU3b0LhUEe2UuoshngsjNA" name="SchedulableObject" specification="_F39dYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU3b0bhUEe2UuoshngsjNA" type="_F37oMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU3b0rhUEe2UuoshngsjNA" name="SchedulableObject" specification="_GOj_gLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU3b07hUEe2UuoshngsjNA" name="obj" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU3b1LhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU3b1bhUEe2UuoshngsjNA" type="_F37oMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4C4LhUEe2UuoshngsjNA" name="SchedulableObject" specification="_F3-EcLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU4C4bhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU4C4rhUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU4C47hUEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU4C5LhUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU4C5bhUEe2UuoshngsjNA" type="_F37oMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4C5rhUEe2UuoshngsjNA" name="SchedulableObject" specification="_F3-rgrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU4C57hUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU4C6LhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU4C6bhUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU4C6rhUEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU4C67hUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU4C7LhUEe2UuoshngsjNA" type="_F37oMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4C7bhUEe2UuoshngsjNA" name="setDefaultParameters" specification="_F3_5oLhUEe2UuoshngsjNA">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4C7rhUEe2UuoshngsjNA" name="getAllEndTimes" specification="_F3_5obhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU4C77hUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4C8LhUEe2UuoshngsjNA" name="addToEndTimes" specification="_F4BHwLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU4C8bhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4p8LhUEe2UuoshngsjNA" name="peekEndTimes" specification="_F4CV4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU4p8bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4p8rhUEe2UuoshngsjNA" name="pollEndTimes" specification="_F4C88LhUEe2UuoshngsjNA">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4p87hUEe2UuoshngsjNA" name="addSubObject" specification="_GOkmlLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU4p9LhUEe2UuoshngsjNA" name="obj" type="_F37oMLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4p9bhUEe2UuoshngsjNA" name="getName" specification="_F4C88bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU4p9rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4p97hUEe2UuoshngsjNA" name="setName" specification="_F4DkALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU4p-LhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU4p-bhUEe2UuoshngsjNA" name="getReleaseTime" specification="_F4DkArhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU4p-rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU5RALhUEe2UuoshngsjNA" name="getPhase" specification="_F4ELEbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU5RAbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU5RArhUEe2UuoshngsjNA" name="getStartTime" specification="_F4EyIbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU5RA7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU5RBLhUEe2UuoshngsjNA" name="setEndTime" specification="_F4FZMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU5RBbhUEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU5RBrhUEe2UuoshngsjNA" name="setStartTime" specification="_F4FZMrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU5RB7hUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU5RCLhUEe2UuoshngsjNA" name="setReleaseTime" specification="_F4GAQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU5RCbhUEe2UuoshngsjNA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU5RCrhUEe2UuoshngsjNA" name="setPeriod" specification="_F4GnULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU5RC7hUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU54ELhUEe2UuoshngsjNA" name="setPhase" specification="_F4GnUrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU54EbhUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU54ErhUEe2UuoshngsjNA" name="setNextReleaseTime" specification="_F4HOYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU54E7hUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU54FLhUEe2UuoshngsjNA" name="maxPhaseComparison" specification="_GOlNobhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU54FbhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU54FrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU54F7hUEe2UuoshngsjNA" name="maxPhaseComparison" specification="_GOl0sLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU54GLhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU54GbhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU54GrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU54G7hUEe2UuoshngsjNA" name="deadlineComparison" specification="_GOmbwLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU54HLhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU54HbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU6fILhUEe2UuoshngsjNA" name="deadlineComparison" specification="_GOmbw7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU6fIbhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU6fIrhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU6fI7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU6fJLhUEe2UuoshngsjNA" name="periodComparison" specification="_GOnC07hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU6fJbhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU6fJrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU6fJ7hUEe2UuoshngsjNA" name="periodComparison" specification="_GOnp4rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU6fKLhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU6fKbhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU6fKrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU6fK7hUEe2UuoshngsjNA" name="priorityComparison" specification="_GOoQ8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU6fLLhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU6fLbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU7GMLhUEe2UuoshngsjNA" name="priorityComparison" specification="_GOoQ87hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU7GMbhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU7GMrhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU7GM7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU7GNLhUEe2UuoshngsjNA" name="releaseTimeComparison" specification="_GOo4AbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU7GNbhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU7GNrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU7GN7hUEe2UuoshngsjNA" name="releaseTimeComparison" specification="_GOpfELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU7GOLhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU7GObhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU7GOrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU7GO7hUEe2UuoshngsjNA" name="LatestReleaseTimeComparison" specification="_GOpfFLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU7GPLhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU7GPbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU7tQLhUEe2UuoshngsjNA" name="LatestReleaseTimeComparison" specification="_GOqGIbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU7tQbhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU7tQrhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU7tQ7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU7tRLhUEe2UuoshngsjNA" name="compareAscendingOrder" specification="_F4JDkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU7tRbhUEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU7tRrhUEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU7tR7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU7tSLhUEe2UuoshngsjNA" name="compareDescendingOrder" specification="_F4JqoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU7tSbhUEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU7tSrhUEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU7tS7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU7tTLhUEe2UuoshngsjNA" name="print" specification="_F4JqpLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU7tTbhUEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU8UULhUEe2UuoshngsjNA" name="print" specification="_F4KRsLhUEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F39dYLhUEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_GU3b0LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F39dYbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F39dYrhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F39dY7hUEe2UuoshngsjNA" type="_F37oMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3-EcLhUEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_GU4C4LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F3-EdbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F3-rgLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F3-EcbhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3-EcrhUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3-Ec7hUEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3-EdLhUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3-rgbhUEe2UuoshngsjNA" type="_F37oMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3-rgrhUEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_GU4C5rhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F3_Sk7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F3_SlLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F3-rg7hUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3-rhLhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3_SkLhUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3_SkbhUEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3_SkrhUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F3_SlbhUEe2UuoshngsjNA" type="_F37oMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F3_5oLhUEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_GU4C7bhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F3_5obhUEe2UuoshngsjNA" name="getAllEndTimes" method="_GU4C7rhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVo347hUEe2UuoshngsjNA">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_GOkmk7hUEe2UuoshngsjNA" type="_F3p7YLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F4BHwLhUEe2UuoshngsjNA" name="addToEndTimes" method="_GU4C8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F4Bu0LhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4CV4LhUEe2UuoshngsjNA" name="peekEndTimes" method="_GU4p8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F4CV4bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4C88LhUEe2UuoshngsjNA" name="pollEndTimes" method="_GU4p8rhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F4C88bhUEe2UuoshngsjNA" name="getName" method="_GU4p9bhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVo35LhUEe2UuoshngsjNA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4C88rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4DkALhUEe2UuoshngsjNA" name="setName" method="_GU4p97hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVo35bhUEe2UuoshngsjNA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4DkAbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4DkArhUEe2UuoshngsjNA" name="getReleaseTime" method="_GU4p-bhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVo35rhUEe2UuoshngsjNA">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4ELELhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4ELEbhUEe2UuoshngsjNA" name="getPhase" method="_GU5RALhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVo357hUEe2UuoshngsjNA">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4EyILhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4EyIbhUEe2UuoshngsjNA" name="getStartTime" method="_GU5RArhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVo36LhUEe2UuoshngsjNA">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4EyIrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4FZMLhUEe2UuoshngsjNA" name="setEndTime" method="_GU5RBLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVo36bhUEe2UuoshngsjNA">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4FZMbhUEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4FZMrhUEe2UuoshngsjNA" name="setStartTime" method="_GU5RBrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVpe8LhUEe2UuoshngsjNA">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4FZM7hUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4GAQLhUEe2UuoshngsjNA" name="setReleaseTime" method="_GU5RCLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVpe8bhUEe2UuoshngsjNA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4GAQbhUEe2UuoshngsjNA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4GnULhUEe2UuoshngsjNA" name="setPeriod" method="_GU5RCrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVpe8rhUEe2UuoshngsjNA">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4GnUbhUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4GnUrhUEe2UuoshngsjNA" name="setPhase" method="_GU54ELhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVpe87hUEe2UuoshngsjNA">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4GnU7hUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4HOYLhUEe2UuoshngsjNA" name="setNextReleaseTime" method="_GU54ErhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVpe9LhUEe2UuoshngsjNA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4HOYbhUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4JDkLhUEe2UuoshngsjNA" name="compareAscendingOrder" method="_GU7tRLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F4JDkbhUEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4JDkrhUEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4JDk7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4JqoLhUEe2UuoshngsjNA" name="compareDescendingOrder" method="_GU7tSLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F4JqobhUEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4JqorhUEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4Jqo7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4JqpLhUEe2UuoshngsjNA" name="print" method="_GU7tTLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F4JqpbhUEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4KRsLhUEe2UuoshngsjNA" name="print" method="_GU8UULhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_GOj_gLhUEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_GU3b0rhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GOkmkLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GOkmkbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVo34rhUEe2UuoshngsjNA">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_GOj_gbhUEe2UuoshngsjNA" name="obj" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOj_grhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOkmkrhUEe2UuoshngsjNA" type="_F37oMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GOkmlLhUEe2UuoshngsjNA" name="addSubObject" method="_GU4p87hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOlNoLhUEe2UuoshngsjNA" name="obj" type="_F37oMLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GOlNobhUEe2UuoshngsjNA" name="maxPhaseComparison" method="_GU54FLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOlNorhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOlNo7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOl0sLhUEe2UuoshngsjNA" name="maxPhaseComparison" method="_GU54F7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOl0sbhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOl0srhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOl0s7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOmbwLhUEe2UuoshngsjNA" name="deadlineComparison" method="_GU54G7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOmbwbhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOmbwrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOmbw7hUEe2UuoshngsjNA" name="deadlineComparison" method="_GU6fILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOnC0LhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOnC0bhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOnC0rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOnC07hUEe2UuoshngsjNA" name="periodComparison" method="_GU6fJLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOnp4LhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOnp4bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOnp4rhUEe2UuoshngsjNA" name="periodComparison" method="_GU6fJ7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOnp47hUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOnp5LhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOnp5bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOoQ8LhUEe2UuoshngsjNA" name="priorityComparison" method="_GU6fK7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOoQ8bhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOoQ8rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOoQ87hUEe2UuoshngsjNA" name="priorityComparison" method="_GU7GMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOoQ9LhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOoQ9bhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOo4ALhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOo4AbhUEe2UuoshngsjNA" name="releaseTimeComparison" method="_GU7GNLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOo4ArhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOo4A7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOpfELhUEe2UuoshngsjNA" name="releaseTimeComparison" method="_GU7GN7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOpfEbhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOpfErhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOpfE7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOpfFLhUEe2UuoshngsjNA" name="LatestReleaseTimeComparison" method="_GU7GO7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOpfFbhUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOqGILhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOqGIbhUEe2UuoshngsjNA" name="LatestReleaseTimeComparison" method="_GU7tQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOqGIrhUEe2UuoshngsjNA" name="obj1" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOqGI7hUEe2UuoshngsjNA" name="obj2" type="_F37oMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOqGJLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F4RmcLhUEe2UuoshngsjNA" name="SchedulableObjectQueue">
              <generalization xmi:id="_F4TboLhUEe2UuoshngsjNA" general="_F3p7YLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTT8oLhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTUjsLhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU87YLhUEe2UuoshngsjNA" name="SchedulableObjectQueue" specification="_GReJkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU87YbhUEe2UuoshngsjNA" name="comparitor" type="_GMuMcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU87YrhUEe2UuoshngsjNA" type="_F4RmcLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU9icLhUEe2UuoshngsjNA" name="SchedulableObjectQueue" specification="_GRfXsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU9icbhUEe2UuoshngsjNA" name="comparitor" type="_GMuMcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU9icrhUEe2UuoshngsjNA" name="schedulableObjects" type="_GNm9QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU9ic7hUEe2UuoshngsjNA" type="_F4RmcLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GReJkLhUEe2UuoshngsjNA" name="SchedulableObjectQueue" visibility="package" method="_GU87YLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GReJkrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GReJk7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GReJkbhUEe2UuoshngsjNA" name="comparitor" type="_GMuMcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GReJlLhUEe2UuoshngsjNA" type="_F4RmcLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRfXsLhUEe2UuoshngsjNA" name="SchedulableObjectQueue" visibility="package" method="_GU9icLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GRfXs7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GRfXtLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GRfXsbhUEe2UuoshngsjNA" name="comparitor" type="_GMuMcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRfXsrhUEe2UuoshngsjNA" name="schedulableObjects" type="_GNm9QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRfXtbhUEe2UuoshngsjNA" type="_F4RmcLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F4UpwLhUEe2UuoshngsjNA" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_GVpe9bhUEe2UuoshngsjNA">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GTUjsbhUEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTUjsrhUEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTUjs7hUEe2UuoshngsjNA" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTVKwbhUEe2UuoshngsjNA" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTVx0LhUEe2UuoshngsjNA" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTVx0bhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTVx07hUEe2UuoshngsjNA" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTWY4bhUEe2UuoshngsjNA" name="schedule" visibility="protected" type="_F4jTQLhUEe2UuoshngsjNA" association="_GWpkgbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTW_8LhUEe2UuoshngsjNA" name="poset" visibility="protected" type="_F2fdwLhUEe2UuoshngsjNA" association="_GWqLkbhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU-JgLhUEe2UuoshngsjNA" name="Schedule" specification="_GOu-oLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU-JgbhUEe2UuoshngsjNA" name="poset" type="_F2fdwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU-JgrhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU-Jg7hUEe2UuoshngsjNA" type="_F4UpwLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU-wkrhUEe2UuoshngsjNA" name="getSchedule" specification="_F4ZiQbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU-wk7hUEe2UuoshngsjNA" type="_F4jTQLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU_XoLhUEe2UuoshngsjNA" name="buildSchedule" specification="_F4aJULhUEe2UuoshngsjNA">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU_XobhUEe2UuoshngsjNA" name="toProgram" specification="_F4aJUbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU_XorhUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU_Xo7hUEe2UuoshngsjNA" name="replaceNullWithSleep" specification="_GOwMwbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU_XpLhUEe2UuoshngsjNA" name="program" type="_F3dHELhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU_XpbhUEe2UuoshngsjNA" name="fakeSchedulingToTestRest" specification="_GOwz0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU_XprhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU_-sLhUEe2UuoshngsjNA" name="getChannelAndSetStartTime" specification="_GOxa4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU_-sbhUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU_-srhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU_-s7hUEe2UuoshngsjNA" name="findChannelAndTime" specification="_GOyB8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU_-tLhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU_-tbhUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU_-trhUEe2UuoshngsjNA" type="_F4XGALhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU_-t7hUEe2UuoshngsjNA" name="continueSearch" specification="_GOyB9LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU_-uLhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU_-ubhUEe2UuoshngsjNA" name="activation" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU_-urhUEe2UuoshngsjNA" type="_F4XGALhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU_-u7hUEe2UuoshngsjNA" name="noOtherChannelConflicts" specification="_GOypALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GU_-vLhUEe2UuoshngsjNA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU_-vbhUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GU_-vrhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GU_-v7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVAlwLhUEe2UuoshngsjNA" name="conflictsExist" specification="_GOzQELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVAlwbhUEe2UuoshngsjNA" name="obj" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVAlwrhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAlw7hUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAlxLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVAlxbhUEe2UuoshngsjNA" name="freeOfCoordinatorConflicts" specification="_GOz3ILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVAlxrhUEe2UuoshngsjNA" name="obj" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVAlx7hUEe2UuoshngsjNA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAlyLhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAlybhUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAlyrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVAly7hUEe2UuoshngsjNA" name="isAvailable" specification="_GO0eMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVAlzLhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVAlzbhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAlzrhUEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAlz7hUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAl0LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVAl0bhUEe2UuoshngsjNA" name="isAvailable" specification="_GO1FQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVAl0rhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVAl07hUEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAl1LhUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVAl1bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVBM0LhUEe2UuoshngsjNA" name="timeRemaining" specification="_F4b-gLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVBM0bhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVBM0rhUEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVBM07hUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVBM1LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVBM1bhUEe2UuoshngsjNA" name="canCombineEntriesInPlace" specification="_GO1sULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVBM1rhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVBM17hUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVBM2LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVBM2bhUEe2UuoshngsjNA" name="combinedEntriesInPlace" specification="_GO2TYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVBM2rhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVBM27hUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVBM3LhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVBM3bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVBz4LhUEe2UuoshngsjNA" name="addToSchedule" specification="_GO26cLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVBz4bhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVBz4rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVBz47hUEe2UuoshngsjNA" name="reportNotSchedulable" specification="_GO26c7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVBz5LhUEe2UuoshngsjNA" name="object" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVBz5bhUEe2UuoshngsjNA" name="printVerbose" specification="_F4clkLhUEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVBz5rhUEe2UuoshngsjNA" name="print" specification="_F4dMoLhUEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F4ZiQbhUEe2UuoshngsjNA" name="getSchedule" method="_GU-wkrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVqGArhUEe2UuoshngsjNA">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_GOvls7hUEe2UuoshngsjNA" type="_F4jTQLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F4aJULhUEe2UuoshngsjNA" name="buildSchedule" visibility="private" method="_GU_XoLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F4aJUbhUEe2UuoshngsjNA" name="toProgram" method="_GU_XobhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOwMwLhUEe2UuoshngsjNA" type="_F3dHELhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F4b-gLhUEe2UuoshngsjNA" name="timeRemaining" visibility="protected" method="_GVBM0LhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVqGCLhUEe2UuoshngsjNA">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_F4b-gbhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4b-grhUEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4b-g7hUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4b-hLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4clkLhUEe2UuoshngsjNA" name="printVerbose" method="_GVBz5bhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F4dMoLhUEe2UuoshngsjNA" name="print" method="_GVBz5rhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_GOu-oLhUEe2UuoshngsjNA" name="Schedule" visibility="package" method="_GU-JgLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GOvlsLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GOvlsbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GOu-obhUEe2UuoshngsjNA" name="poset" type="_F2fdwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOu-orhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOvlsrhUEe2UuoshngsjNA" type="_F4UpwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GOwMwbhUEe2UuoshngsjNA" name="replaceNullWithSleep" visibility="private" method="_GU_Xo7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVqGA7hUEe2UuoshngsjNA">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_GOwMwrhUEe2UuoshngsjNA" name="program" type="_F3dHELhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GOwz0LhUEe2UuoshngsjNA" name="fakeSchedulingToTestRest" visibility="private" method="_GU_XpbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOwz0bhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GOxa4LhUEe2UuoshngsjNA" name="getChannelAndSetStartTime" visibility="protected" method="_GU_-sLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVqGBLhUEe2UuoshngsjNA">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_GOxa4bhUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOxa4rhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOyB8LhUEe2UuoshngsjNA" name="findChannelAndTime" visibility="protected" method="_GU_-s7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOyB8bhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOyB8rhUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOyB87hUEe2UuoshngsjNA" type="_F4XGALhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GOyB9LhUEe2UuoshngsjNA" name="continueSearch" visibility="protected" method="_GU_-t7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVqGBbhUEe2UuoshngsjNA">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_GOyB9bhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOyB9rhUEe2UuoshngsjNA" name="activation" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOyB97hUEe2UuoshngsjNA" type="_F4XGALhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GOypALhUEe2UuoshngsjNA" name="noOtherChannelConflicts" visibility="protected" method="_GU_-u7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOypAbhUEe2UuoshngsjNA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOypArhUEe2UuoshngsjNA" name="schedulableObject" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOypA7hUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOypBLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOzQELhUEe2UuoshngsjNA" name="conflictsExist" visibility="protected" method="_GVAlwLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOzQEbhUEe2UuoshngsjNA" name="obj" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOzQErhUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOzQE7hUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOzQFLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GOz3ILhUEe2UuoshngsjNA" name="freeOfCoordinatorConflicts" visibility="protected" method="_GVAlxbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GOz3IbhUEe2UuoshngsjNA" name="obj" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GOz3IrhUEe2UuoshngsjNA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOz3I7hUEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOz3JLhUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GOz3JbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GO0eMLhUEe2UuoshngsjNA" name="isAvailable" visibility="protected" method="_GVAly7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVqGBrhUEe2UuoshngsjNA">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_GO0eMbhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO0eMrhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GO0eM7hUEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GO0eNLhUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GO0eNbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GO1FQLhUEe2UuoshngsjNA" name="isAvailable" visibility="protected" method="_GVAl0bhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVqGB7hUEe2UuoshngsjNA">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_GO1FQbhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO1FQrhUEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GO1FQ7hUEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GO1FRLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GO1sULhUEe2UuoshngsjNA" name="canCombineEntriesInPlace" visibility="private" method="_GVBM1bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GO1sUbhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO1sUrhUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO1sU7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GO2TYLhUEe2UuoshngsjNA" name="combinedEntriesInPlace" visibility="private" method="_GVBM2bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GO2TYbhUEe2UuoshngsjNA" name="a1" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO2TYrhUEe2UuoshngsjNA" name="a2" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO2TY7hUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GO2TZLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GO26cLhUEe2UuoshngsjNA" name="addToSchedule" visibility="protected" method="_GVBz4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GO26cbhUEe2UuoshngsjNA" name="next" type="_Fz9uMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO26crhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GO26c7hUEe2UuoshngsjNA" name="reportNotSchedulable" visibility="private" method="_GVBz47hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GO26dLhUEe2UuoshngsjNA" name="object" type="_Fz9uMLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_F4XGALhUEe2UuoshngsjNA" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_GTXnAbhUEe2UuoshngsjNA" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_GTYOEbhUEe2UuoshngsjNA" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU-JhLhUEe2UuoshngsjNA" name="ScheduleLocation" specification="_F4XtELhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GU-JhbhUEe2UuoshngsjNA" type="_F4XGALhUEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU-JhrhUEe2UuoshngsjNA" name="ScheduleLocation" specification="_F4YUILhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GU-Jh7hUEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_GU-JiLhUEe2UuoshngsjNA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_GU-JibhUEe2UuoshngsjNA" type="_F4XGALhUEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU-JirhUEe2UuoshngsjNA" name="getChannel" specification="_F4Y7MLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GU-Ji7hUEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU-wkLhUEe2UuoshngsjNA" name="getTime" specification="_F4Y7MrhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GU-wkbhUEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_F4XtELhUEe2UuoshngsjNA" name="ScheduleLocation" visibility="package" method="_GU-JhLhUEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_F4XtEbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_F4XtErhUEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_F4XtE7hUEe2UuoshngsjNA" type="_F4XGALhUEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_F4YUILhUEe2UuoshngsjNA" name="ScheduleLocation" visibility="package" method="_GU-JhrhUEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_F4YUI7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_F4YUJLhUEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_F4YUIbhUEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_F4YUIrhUEe2UuoshngsjNA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_F4YUJbhUEe2UuoshngsjNA" type="_F4XGALhUEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_F4Y7MLhUEe2UuoshngsjNA" name="getChannel" visibility="protected" method="_GU-JirhUEe2UuoshngsjNA">
                  <ownedComment xmi:id="_GVqGALhUEe2UuoshngsjNA">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_F4Y7MbhUEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_F4Y7MrhUEe2UuoshngsjNA" name="getTime" visibility="protected" method="_GU-wkLhUEe2UuoshngsjNA">
                  <ownedComment xmi:id="_GVqGAbhUEe2UuoshngsjNA">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_F4ZiQLhUEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F4jTQLhUEe2UuoshngsjNA" name="ScheduleTable">
              <generalization xmi:id="_GO4voLhUEe2UuoshngsjNA" general="_F4vggLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTZcMLhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTZcMbhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVCa8LhUEe2UuoshngsjNA" name="ScheduleTable" specification="_F4j6ULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVCa8bhUEe2UuoshngsjNA" type="_F4jTQLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVCa8rhUEe2UuoshngsjNA" name="ScheduleTable" specification="_F4khYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVCa87hUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVCa9LhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVCa9bhUEe2UuoshngsjNA" type="_F4jTQLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F4j6ULhUEe2UuoshngsjNA" name="ScheduleTable" visibility="package" method="_GVCa8LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F4j6UbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F4j6UrhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F4j6U7hUEe2UuoshngsjNA" type="_F4jTQLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F4khYLhUEe2UuoshngsjNA" name="ScheduleTable" visibility="package" method="_GVCa8rhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F4khY7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F4khZLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F4khYbhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4khYrhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4khZbhUEe2UuoshngsjNA" type="_F4jTQLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F4lIcLhUEe2UuoshngsjNA" name="ScheduleTime">
              <ownedAttribute xmi:id="_GTaDQLhUEe2UuoshngsjNA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTaDQbhUEe2UuoshngsjNA" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVCa9rhUEe2UuoshngsjNA" name="ScheduleTime" specification="_F4lvgLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVCa97hUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVCa-LhUEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVCa-bhUEe2UuoshngsjNA" type="_F4lIcLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F4lvgLhUEe2UuoshngsjNA" name="ScheduleTime" visibility="package" method="_GVCa9rhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F4lvg7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F4lvhLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F4lvgbhUEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4lvgrhUEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4lvhbhUEe2UuoshngsjNA" type="_F4lIcLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F4mWkLhUEe2UuoshngsjNA" name="SimulatorInput">
              <ownedComment xmi:id="_GVqtELhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F4m9oLhUEe2UuoshngsjNA" name="SortedPeriodQueue">
              <generalization xmi:id="_F4oLw7hUEe2UuoshngsjNA" general="_F3p7YLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTaDQrhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTaDQ7hUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDCALhUEe2UuoshngsjNA" name="SortedPeriodQueue" specification="_F4nksbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDCAbhUEe2UuoshngsjNA" type="_F4m9oLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDCArhUEe2UuoshngsjNA" name="SortedPeriodQueue" specification="_GO5WsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDCA7hUEe2UuoshngsjNA" name="schedulableObjects" type="_GNm9QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVDCBLhUEe2UuoshngsjNA" type="_F4m9oLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F4nksbhUEe2UuoshngsjNA" name="SortedPeriodQueue" visibility="package" method="_GVDCALhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F4oLwLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F4oLwbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F4oLwrhUEe2UuoshngsjNA" type="_F4m9oLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GO5WsLhUEe2UuoshngsjNA" name="SortedPeriodQueue" visibility="package" method="_GVDCArhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GO5WsrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GO5Ws7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GO5WsbhUEe2UuoshngsjNA" name="schedulableObjects" type="_GNm9QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO5WtLhUEe2UuoshngsjNA" type="_F4m9oLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_F4pZ4LhUEe2UuoshngsjNA" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_GO6k0bhUEe2UuoshngsjNA" general="_F3sXoLhUEe2UuoshngsjNA"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_F4qA8LhUEe2UuoshngsjNA" name="ScheduleChoices">
                <ownedLiteral xmi:id="_F4qoAbhUEe2UuoshngsjNA" name="PRIORITY"/>
                <ownedLiteral xmi:id="_F4rPELhUEe2UuoshngsjNA" name="RM"/>
                <ownedLiteral xmi:id="_F4rPEbhUEe2UuoshngsjNA" name="DM"/>
                <ownedLiteral xmi:id="_F4rPErhUEe2UuoshngsjNA" name="RTHART"/>
                <ownedLiteral xmi:id="_F4rPE7hUEe2UuoshngsjNA" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_F4r2ILhUEe2UuoshngsjNA" name="POSET_RM"/>
                <ownedLiteral xmi:id="_F4r2IbhUEe2UuoshngsjNA" name="POSET_DM"/>
                <ownedLiteral xmi:id="_F4r2IrhUEe2UuoshngsjNA" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_F4r2I7hUEe2UuoshngsjNA" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_F4r2JLhUEe2UuoshngsjNA" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_F4sdMLhUEe2UuoshngsjNA" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_F4sdMbhUEe2UuoshngsjNA" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_F4tEQLhUEe2UuoshngsjNA" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_F4tEQbhUEe2UuoshngsjNA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_F4trULhUEe2UuoshngsjNA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_F4trUbhUEe2UuoshngsjNA" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_F4trUrhUEe2UuoshngsjNA" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_F4uSYLhUEe2UuoshngsjNA" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_F4uSYbhUEe2UuoshngsjNA" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F4u5cLhUEe2UuoshngsjNA" name="SystemFactory">
              <ownedComment xmi:id="_GVqtEbhUEe2UuoshngsjNA">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDCBbhUEe2UuoshngsjNA" name="create" specification="_GO7y8bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDCBrhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVDCB7hUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVDCCLhUEe2UuoshngsjNA" name="choice" type="_F4qA8LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVDCCbhUEe2UuoshngsjNA" type="_F5nqQLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GO7y8bhUEe2UuoshngsjNA" name="create" isStatic="true" method="_GVDCBbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GO7y8rhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO7y87hUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GO7y9LhUEe2UuoshngsjNA" name="choice" type="_F4qA8LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO8aALhUEe2UuoshngsjNA" type="_F5nqQLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F4vggLhUEe2UuoshngsjNA" name="Table">
              <generalization xmi:id="_GRibAbhUEe2UuoshngsjNA" general="_GMRggLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTaqULhUEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTaqUbhUEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDCCrhUEe2UuoshngsjNA" name="Table" specification="_F4wuoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDCC7hUEe2UuoshngsjNA" type="_F4vggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDCDLhUEe2UuoshngsjNA" name="Table" specification="_F4xVsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDCDbhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVDCDrhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVDCD7hUEe2UuoshngsjNA" type="_F4vggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDpELhUEe2UuoshngsjNA" name="getNumRows" specification="_F4x8wbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDpEbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDpErhUEe2UuoshngsjNA" name="getNumColumns" specification="_F4yj0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDpE7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDpFLhUEe2UuoshngsjNA" name="set" specification="_GRhz8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDpFbhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVDpFrhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVDpF7hUEe2UuoshngsjNA" name="element" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDpGLhUEe2UuoshngsjNA" name="get" specification="_F4zK4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDpGbhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVDpGrhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVDpG7hUEe2UuoshngsjNA" type="_GQsGcbhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F4wuoLhUEe2UuoshngsjNA" name="Table" method="_GVDCCrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F4wuobhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F4wuorhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F4wuo7hUEe2UuoshngsjNA" type="_F4vggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F4xVsLhUEe2UuoshngsjNA" name="Table" method="_GVDCDLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F4xVs7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F4xVtLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F4xVsbhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4xVsrhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4x8wLhUEe2UuoshngsjNA" type="_F4vggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F4x8wbhUEe2UuoshngsjNA" name="getNumRows" method="_GVDpELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F4x8wrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4yj0LhUEe2UuoshngsjNA" name="getNumColumns" method="_GVDpErhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F4yj0bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F4zK4LhUEe2UuoshngsjNA" name="get" method="_GVDpGLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F4zK4bhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F4zK4rhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRibALhUEe2UuoshngsjNA" type="_GQsGcbhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRhz8LhUEe2UuoshngsjNA" name="set" method="_GVDpFLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRhz8bhUEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRhz8rhUEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRhz87hUEe2UuoshngsjNA" name="element" type="_GQsGcbhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_F4zx8LhUEe2UuoshngsjNA" name="Visualization">
              <ownedComment xmi:id="_GVqtErhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_F43cULhUEe2UuoshngsjNA" name="SystemChoices">
                <ownedLiteral xmi:id="_F44DYbhUEe2UuoshngsjNA" name="SOURCE"/>
                <ownedLiteral xmi:id="_F44qcLhUEe2UuoshngsjNA" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_F44qcbhUEe2UuoshngsjNA" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_F44qcrhUEe2UuoshngsjNA" name="LATENCY"/>
                <ownedLiteral xmi:id="_F44qc7hUEe2UuoshngsjNA" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_F44qdLhUEe2UuoshngsjNA" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_F44qdbhUEe2UuoshngsjNA" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_F45RgLhUEe2UuoshngsjNA" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_F45RgrhUEe2UuoshngsjNA" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_F454kLhUEe2UuoshngsjNA" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_F454kbhUEe2UuoshngsjNA" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_F454krhUEe2UuoshngsjNA" name="toDisplay"/>
              <ownedOperation xmi:id="_F454k7hUEe2UuoshngsjNA" name="toFile"/>
              <ownedOperation xmi:id="_F46foLhUEe2UuoshngsjNA" name="toString">
                <ownedParameter xmi:id="_F46fobhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F47GsLhUEe2UuoshngsjNA" name="VisualizationFactory">
              <ownedComment xmi:id="_GVqtE7hUEe2UuoshngsjNA">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDpHLhUEe2UuoshngsjNA" name="createProgramVisualization" specification="_GO-2QLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVDpHbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVDpHrhUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVDpH7hUEe2UuoshngsjNA" name="choice" type="_F43cULhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVDpILhUEe2UuoshngsjNA" type="_F4zx8LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVEQILhUEe2UuoshngsjNA" name="createWorkLoadVisualization" specification="_GO-2RbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVEQIbhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVEQIrhUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVEQI7hUEe2UuoshngsjNA" name="choice" type="_F45RgLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVEQJLhUEe2UuoshngsjNA" type="_F4zx8LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GO-2QLhUEe2UuoshngsjNA" name="createProgramVisualization" isStatic="true" method="_GVDpHLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GO-2QbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO-2QrhUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GO-2Q7hUEe2UuoshngsjNA" name="choice" type="_F43cULhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO-2RLhUEe2UuoshngsjNA" type="_F4zx8LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GO-2RbhUEe2UuoshngsjNA" name="createWorkLoadVisualization" isStatic="true" method="_GVEQILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GO_dULhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO_dUbhUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GO_dUrhUEe2UuoshngsjNA" name="choice" type="_F45RgLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GO_dU7hUEe2UuoshngsjNA" type="_F4zx8LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F48U0LhUEe2UuoshngsjNA" name="VisualizationImplementation">
              <ownedComment xmi:id="_GVqtFLhUEe2UuoshngsjNA">
                <body>VisualizationImplementation class implements the Visualization file,&#xD;
helping create visualizations for the WARP project based on&#xD;
the requested information/parameters. &#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GTbRYLhUEe2UuoshngsjNA" name="visualization" visibility="private" type="_F1DTULhUEe2UuoshngsjNA" association="_GWqyoLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTb4cLhUEe2UuoshngsjNA" name="fileContent" visibility="private" type="_F1DTULhUEe2UuoshngsjNA" association="_GWrZsbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTb4crhUEe2UuoshngsjNA" name="window" visibility="private" type="_F14ZwLhUEe2UuoshngsjNA" association="_GWsAwbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTcfgbhUEe2UuoshngsjNA" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTdGkbhUEe2UuoshngsjNA" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTdGk7hUEe2UuoshngsjNA" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTdtobhUEe2UuoshngsjNA" name="fm" visibility="private" type="_F1Sj4LhUEe2UuoshngsjNA" association="_GWt18LhUEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTdtorhUEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTeUsbhUEe2UuoshngsjNA" name="warp" visibility="private" type="_F5nqQLhUEe2UuoshngsjNA" association="_GWudAbhUEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTeUsrhUEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTe7wbhUEe2UuoshngsjNA" name="workLoad" visibility="private" type="_F6kFcLhUEe2UuoshngsjNA" association="_GWvEEbhUEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTe7wrhUEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTfi0bhUEe2UuoshngsjNA" name="visualizationObject" visibility="private" type="_F5E3sLhUEe2UuoshngsjNA" association="_GWvrIbhUEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_GPAEYLhUEe2UuoshngsjNA" client="_F48U0LhUEe2UuoshngsjNA" supplier="_F4zx8LhUEe2UuoshngsjNA" contract="_F4zx8LhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVEQJbhUEe2UuoshngsjNA" name="VisualizationImplementation" specification="_GRkQMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVEQJrhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVEQJ7hUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVEQKLhUEe2UuoshngsjNA" name="choice" type="_GRjpILhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVEQKbhUEe2UuoshngsjNA" type="_F48U0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVEQKrhUEe2UuoshngsjNA" name="VisualizationImplementation" specification="_GRk3QrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVEQK7hUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVEQLLhUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVEQLbhUEe2UuoshngsjNA" name="choice" type="_GRk3QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVEQLrhUEe2UuoshngsjNA" type="_F48U0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVE3MLhUEe2UuoshngsjNA" name="toDisplay" specification="_F4-KALhUEe2UuoshngsjNA">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVE3MbhUEe2UuoshngsjNA" name="toFile" specification="_F4-xErhUEe2UuoshngsjNA">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVE3MrhUEe2UuoshngsjNA" name="toString" specification="_F4__MrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVE3M7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVE3NLhUEe2UuoshngsjNA" name="createVisualization" specification="_GRleU7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVE3NbhUEe2UuoshngsjNA" name="choice" type="_GRjpILhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVE3NrhUEe2UuoshngsjNA" name="createVisualization" specification="_GRmFYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVE3N7hUEe2UuoshngsjNA" name="choice" type="_GRk3QLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVE3OLhUEe2UuoshngsjNA" name="createVisualization" specification="_GRmscLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVE3ObhUEe2UuoshngsjNA" name="obj" type="_GQsGcbhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVE3OrhUEe2UuoshngsjNA" name="createFileNameTemplate" specification="_F5BNULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVE3O7hUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVE3PLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F4-KALhUEe2UuoshngsjNA" name="toDisplay" method="_GVE3MLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F4-xErhUEe2UuoshngsjNA" name="toFile" method="_GVE3MbhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F4__MrhUEe2UuoshngsjNA" name="toString" method="_GVE3MrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F4__M7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F5BNULhUEe2UuoshngsjNA" name="createFileNameTemplate" visibility="private" method="_GVE3OrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVrUJLhUEe2UuoshngsjNA">
                  <body>@return the file name template created from the output path and input string.&#xD;
@param outputDirectory directory where output visualization goes</body>
                </ownedComment>
                <ownedParameter xmi:id="_F5BNUbhUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F5BNUrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GRkQMLhUEe2UuoshngsjNA" name="VisualizationImplementation" method="_GVEQJbhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GRkQNLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GRkQNbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVrUILhUEe2UuoshngsjNA">
                  <body>Constructor that initializes objects, and makes a call to &#xD;
   * VisualizationObject. This creates a visualization for warp.&#xD;
@param warp any object implementing the Warp interface.&#xD;
@param outputDirectory directory where output visualization goes&#xD;
@param choice the requested visualization for system.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GRkQMbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRkQMrhUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRkQM7hUEe2UuoshngsjNA" name="choice" type="_GRjpILhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRkQNrhUEe2UuoshngsjNA" type="_F48U0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRk3QrhUEe2UuoshngsjNA" name="VisualizationImplementation" method="_GVEQKrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GRleULhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GRleUbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GVrUIbhUEe2UuoshngsjNA">
                  <body>Constructor that initializes objects, and makes a call to &#xD;
   * VisualizationObject. This creates a visualization for work load.&#xD;
@param workLoad Workload that will be visualized&#xD;
@param outputDirectory directory where output visualization goes&#xD;
@param choice the requested visualization for work load.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GRk3Q7hUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRk3RLhUEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRk3RbhUEe2UuoshngsjNA" name="choice" type="_GRk3QLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRleUrhUEe2UuoshngsjNA" type="_F48U0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRleU7hUEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_GVE3NLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVrUIrhUEe2UuoshngsjNA">
                  <body>Depending on the system choice, implement a visualization accordingly.&#xD;
   * These include source, reliability analysis, simulator input, latency analysis,&#xD;
   * chanel analysis, latency report, and deadline report.&#xD;
@param choice the requested visualization for system.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GRleVLhUEe2UuoshngsjNA" name="choice" type="_GRjpILhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRmFYLhUEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_GVE3NrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVrUI7hUEe2UuoshngsjNA">
                  <body>Depending on the workload choice, implement a visualization accordingly.&#xD;
   * These include communication graph, graphViz, and input graph.&#xD;
@param choice the requested visualization for work load.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GRmFYbhUEe2UuoshngsjNA" name="choice" type="_GRk3QLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRmscLhUEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_GVE3OLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRnTgLhUEe2UuoshngsjNA" name="obj" type="_GQsGcbhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F5E3sLhUEe2UuoshngsjNA" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_GVrUJbhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GTgw8LhUEe2UuoshngsjNA" name="fm" visibility="private" type="_F1Sj4LhUEe2UuoshngsjNA" association="_GWwSMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GThYALhUEe2UuoshngsjNA" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTimILhUEe2UuoshngsjNA" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTimIrhUEe2UuoshngsjNA" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTjNMLhUEe2UuoshngsjNA" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTjNMbhUEe2UuoshngsjNA" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GTjNMrhUEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVFeQLhUEe2UuoshngsjNA" name="VisualizationObject" specification="_GPCgoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVFeQbhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVFeQrhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVFeQ7hUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVFeRLhUEe2UuoshngsjNA" type="_F5E3sLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVFeRbhUEe2UuoshngsjNA" name="VisualizationObject" specification="_GPDuwLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVFeRrhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVFeR7hUEe2UuoshngsjNA" name="warp" type="_F4pZ4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVFeSLhUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVFeSbhUEe2UuoshngsjNA" type="_F5E3sLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVFeSrhUEe2UuoshngsjNA" name="VisualizationObject" specification="_GPE84LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVFeS7hUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVFeTLhUEe2UuoshngsjNA" name="warp" type="_F4pZ4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVFeTbhUEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVFeTrhUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVFeT7hUEe2UuoshngsjNA" type="_F5E3sLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVGFULhUEe2UuoshngsjNA" name="VisualizationObject" specification="_GPFj87hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVGFUbhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVGFUrhUEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVGFU7hUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVGFVLhUEe2UuoshngsjNA" type="_F5E3sLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVGFVbhUEe2UuoshngsjNA" name="nameExtension" specification="_GRpIsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVGFVrhUEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVGFV7hUEe2UuoshngsjNA" name="m" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVGFWLhUEe2UuoshngsjNA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVGFWbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVGFWrhUEe2UuoshngsjNA" name="nameExtension" specification="_F5HT8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVGFW7hUEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVGFXLhUEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVGFXbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVGFXrhUEe2UuoshngsjNA" name="getFileManager" specification="_F5H7AbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVGFX7hUEe2UuoshngsjNA" type="_F1Sj4LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVGsYLhUEe2UuoshngsjNA" name="visualization" specification="_F5H7ArhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVGsYbhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVGsYrhUEe2UuoshngsjNA" name="createFile" specification="_F5IiELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVGsY7hUEe2UuoshngsjNA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVGsZLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVGsZbhUEe2UuoshngsjNA" name="fileVisualization" specification="_F5JJILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVGsZrhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVGsZ7hUEe2UuoshngsjNA" name="displayVisualization" specification="_F5JwMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVGsaLhUEe2UuoshngsjNA" type="_F14ZwLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVHTcLhUEe2UuoshngsjNA" name="createHeader" specification="_F5KXQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVHTcbhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVH6gLhUEe2UuoshngsjNA" name="createFooter" specification="_F5KXQbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVH6gbhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVH6grhUEe2UuoshngsjNA" name="createColumnHeader" specification="_F5K-ULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVH6g7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVH6hLhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVH6hbhUEe2UuoshngsjNA" name="createVisualizationData" specification="_F5LlYbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVH6hrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVH6h7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F5HT8LhUEe2UuoshngsjNA" name="nameExtension" visibility="private" method="_GVGFWrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F5HT8bhUEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F5HT8rhUEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F5H7ALhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F5H7AbhUEe2UuoshngsjNA" name="getFileManager" method="_GVGFXrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVrUJrhUEe2UuoshngsjNA">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_GPGLA7hUEe2UuoshngsjNA" type="_F1Sj4LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5H7ArhUEe2UuoshngsjNA" name="visualization" method="_GVGsYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPGLBLhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5IiELhUEe2UuoshngsjNA" name="createFile" method="_GVGsYrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F5IiEbhUEe2UuoshngsjNA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F5IiErhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F5JJILhUEe2UuoshngsjNA" name="fileVisualization" method="_GVGsZbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPGyELhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5JwMLhUEe2UuoshngsjNA" name="displayVisualization" method="_GVGsZ7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPGyEbhUEe2UuoshngsjNA" type="_F14ZwLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5KXQLhUEe2UuoshngsjNA" name="createHeader" visibility="protected" method="_GVHTcLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPGyErhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5KXQbhUEe2UuoshngsjNA" name="createFooter" visibility="protected" method="_GVH6gLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPGyE7hUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5K-ULhUEe2UuoshngsjNA" name="createColumnHeader" visibility="protected" method="_GVH6grhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F5K-UbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F5K-UrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F5LlYbhUEe2UuoshngsjNA" name="createVisualizationData" visibility="protected" method="_GVH6hbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F5LlYrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F5LlY7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GPCgoLhUEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_GVFeQLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GPDHs7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GPDHtLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GPDHsLhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPDHsbhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPDHsrhUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GPDHtbhUEe2UuoshngsjNA" type="_F5E3sLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPDuwLhUEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_GVFeRbhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GPDuxLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GPDuxbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GPDuwbhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPDuwrhUEe2UuoshngsjNA" name="warp" type="_F4pZ4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPDuw7hUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GPDuxrhUEe2UuoshngsjNA" type="_F5E3sLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPE84LhUEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_GVFeSrhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GPFj8LhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GPFj8bhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GPE84bhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPE84rhUEe2UuoshngsjNA" name="warp" type="_F4pZ4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPE847hUEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GPE85LhUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GPFj8rhUEe2UuoshngsjNA" type="_F5E3sLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPFj87hUEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_GVGFULhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GPGLALhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GPGLAbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GPFj9LhUEe2UuoshngsjNA" name="fm" type="_F1Sj4LhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPFj9bhUEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GPFj9rhUEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GPGLArhUEe2UuoshngsjNA" type="_F5E3sLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRpIsLhUEe2UuoshngsjNA" name="nameExtension" visibility="private" method="_GVGFVbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRpvwLhUEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRpvwbhUEe2UuoshngsjNA" name="m" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRpvwrhUEe2UuoshngsjNA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRpvw7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F5P20LhUEe2UuoshngsjNA" name="Warp">
              <ownedComment xmi:id="_GVrUJ7hUEe2UuoshngsjNA">
                <body>Main file for the entire WARP interface. &#xD;
WARP: On-the-fly Program Synthesis for Agile, Real-time, and Reliable Wireless Networks. This&#xD;
system generates node communication programs WARP uses programs to specify a network’s behavior&#xD;
and includes a synthesis procedure to automatically generate such programs from a high-level&#xD;
specification of the system’s workload and topology. WARP has three unique features: &lt;br>&#xD;
(1) WARP uses a domain-specific language to specify stateful programs that include conditional&#xD;
statements to control when a flow’s packets are transmitted. The execution paths of programs&#xD;
depend on the pattern of packet losses observed at run-time, thereby enabling WARP to readily&#xD;
adapt to packet losses due to short-term variations in link quality. &lt;br>&#xD;
(2) Our synthesis technique uses heuristics to improve network performance by considering&#xD;
multiple packet loss patterns and associated execution paths when determining the transmissions&#xD;
performed by nodes. Furthermore, the generated programs ensure that the likelihood of a flow&#xD;
delivering its packets by its deadline exceeds a user-specified threshold. &lt;br>&#xD;
(3) WARP can adapt to workload and topology changes without explicitly reconstructing a network’s&#xD;
program based on the observation that nodes can independently synthesize the same program when&#xD;
they share the same workload and topology information. Simulations show that WARP improves&#xD;
network throughput for data collection, dissemination, and mixed workloads on two realistic&#xD;
topologies. Testbed experiments show that WARP reduces the time to add new flows by 5 times over&#xD;
a state-of-the-art centralized control plane and guarantees the real-time and reliability of all&#xD;
flows.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GTkbULhUEe2UuoshngsjNA" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTkbUbhUEe2UuoshngsjNA" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTkbUrhUEe2UuoshngsjNA" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_GRQuMLhUEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTkbU7hUEe2UuoshngsjNA" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTlCYLhUEe2UuoshngsjNA" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_GRQuMLhUEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTlCYbhUEe2UuoshngsjNA" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTlCYrhUEe2UuoshngsjNA" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTlCY7hUEe2UuoshngsjNA" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTlCZLhUEe2UuoshngsjNA" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_F4qA8LhUEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTlpcLhUEe2UuoshngsjNA" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTlpcbhUEe2UuoshngsjNA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTlpcrhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTmQgLhUEe2UuoshngsjNA" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTmQgrhUEe2UuoshngsjNA" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTm3kbhUEe2UuoshngsjNA" name="minLQ" visibility="private" isStatic="true" type="_GRQuMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTneoLhUEe2UuoshngsjNA" name="e2e" visibility="private" isStatic="true" type="_GRQuMLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GTneorhUEe2UuoshngsjNA" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GToFsbhUEe2UuoshngsjNA" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GToswLhUEe2UuoshngsjNA" name="gvRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GToswrhUEe2UuoshngsjNA" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTpT0bhUEe2UuoshngsjNA" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTp64LhUEe2UuoshngsjNA" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTqh8LhUEe2UuoshngsjNA" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTrJALhUEe2UuoshngsjNA" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTsXILhUEe2UuoshngsjNA" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTsXIrhUEe2UuoshngsjNA" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTs-MbhUEe2UuoshngsjNA" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTs-MrhUEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTtlQbhUEe2UuoshngsjNA" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTuMUbhUEe2UuoshngsjNA" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTuzYbhUEe2UuoshngsjNA" name="schedulerSelected" visibility="private" isStatic="true" type="_F4qA8LhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVIhkLhUEe2UuoshngsjNA" name="main" specification="_F5RsALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVIhkbhUEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVIhkrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVIhk7hUEe2UuoshngsjNA" name="visualize" specification="_GPKccLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVIhlLhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVIhlbhUEe2UuoshngsjNA" name="choice" type="_F45RgLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVJIoLhUEe2UuoshngsjNA" name="visualize" specification="_GPLDgbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVJIobhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVJIorhUEe2UuoshngsjNA" name="choice" type="_F43cULhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVJIo7hUEe2UuoshngsjNA" name="verifyPerformanceRequirements" specification="_GPLqkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVJIpLhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVJIpbhUEe2UuoshngsjNA" name="verifyReliabilities" specification="_GPLqkrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVJIprhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVJIp7hUEe2UuoshngsjNA" name="verifyDeadlines" specification="_GPMRoLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVJIqLhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVJvsLhUEe2UuoshngsjNA" name="verifyNoChannelConflicts" specification="_GPMRorhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVJvsbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVJvsrhUEe2UuoshngsjNA" name="setWarpParameters" specification="_F5UIQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVJvs7hUEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVJvtLhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVJvtbhUEe2UuoshngsjNA" name="printWarpParameters" specification="_F5UvUbhUEe2UuoshngsjNA">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F5RsALhUEe2UuoshngsjNA" name="main" isStatic="true" method="_GVIhkLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVr7MLhUEe2UuoshngsjNA">
                  <body>Main method for WARP program. Makes a call to WARP system parameters and prints accordingly.&#xD;
   * It also initializes Workload with number of faults tolerated per edge, minimum link &#xD;
   * quality in each system, e2e, and the input file from which the graph workload is read.&#xD;
   * If there is an all out files requested flag, the parameters are visualized according to &#xD;
   * configurations.&#xD;
   * &#xD;
   * @param args Command line option</body>
                </ownedComment>
                <ownedParameter xmi:id="_F5RsAbhUEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F5STELhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F5UIQLhUEe2UuoshngsjNA" name="setWarpParameters" visibility="private" isStatic="true" method="_GVJvsrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVr7N7hUEe2UuoshngsjNA">
                  <body>Sets the parameters configurations for WARP.&#xD;
   * Arguments that aren't passed through the command line are set to default.&#xD;
@param args Command line arguments.</body>
                </ownedComment>
                <ownedParameter xmi:id="_F5UIQbhUEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F5UIQrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F5UvUbhUEe2UuoshngsjNA" name="printWarpParameters" visibility="private" isStatic="true" method="_GVJvtbhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVr7OLhUEe2UuoshngsjNA">
                  <body>Prints all system configuration parameters.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_GPKccLhUEe2UuoshngsjNA" name="visualize" visibility="private" isStatic="true" method="_GVIhk7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVr7MbhUEe2UuoshngsjNA">
                  <body>When the workload visualization is not null and there is a verbose mode flag &#xD;
   * it prints a string, else it is output to a file.&#xD;
   * If the Gui Visualization is selected, then it displays the visualization.&#xD;
@param workLoad the WorkLoad object &#xD;
@param choice keep track of choices for work load to create a visualization of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GPKccbhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPLDgLhUEe2UuoshngsjNA" name="choice" type="_F45RgLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPLDgbhUEe2UuoshngsjNA" name="visualize" visibility="private" isStatic="true" method="_GVJIoLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVr7MrhUEe2UuoshngsjNA">
                  <body>Creates visualization based on the choice. If var pointer is not null, then the visualization file is created.&#xD;
   * The var pointer is displayed if Gui visualization and specific scheduler has been requested.&#xD;
@param warp Refers to the main WARP interface.&#xD;
@param choice keep track of choices for the system to create a visualization of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GPLDgrhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPLDg7hUEe2UuoshngsjNA" name="choice" type="_F43cULhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPLqkLhUEe2UuoshngsjNA" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_GVJIo7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVr7M7hUEe2UuoshngsjNA">
                  <body>Checks if performance-based requirements are met. This includes &#xD;
   * deadlines, reliabilities, and verifying that there are no channel conflicts.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GPLqkbhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPLqkrhUEe2UuoshngsjNA" name="verifyReliabilities" visibility="private" isStatic="true" method="_GVJIpbhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVr7NLhUEe2UuoshngsjNA">
                  <body>Checks for the flow reliabilities. An error is printed if flows don't&#xD;
   * meet the reliability target.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GPLqk7hUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPMRoLhUEe2UuoshngsjNA" name="verifyDeadlines" visibility="private" isStatic="true" method="_GVJIp7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVr7NbhUEe2UuoshngsjNA">
                  <body>Checks for the flow deadlines. An error is printed if flows don't&#xD;
   * meet the deadline target.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GPMRobhUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPMRorhUEe2UuoshngsjNA" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_GVJvsLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVr7NrhUEe2UuoshngsjNA">
                  <body>Checks for the flow channel conflicts. An error is printed if flows &#xD;
   * contain a conflict.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_GPMRo7hUEe2UuoshngsjNA" name="warp" type="_F5nqQLhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F5Zn0LhUEe2UuoshngsjNA" name="WarpDSL">
              <ownedComment xmi:id="_GVr7ObhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GTvacLhUEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTvacbhUEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTwBgLhUEe2UuoshngsjNA" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTwBgbhUEe2UuoshngsjNA" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GTwBgrhUEe2UuoshngsjNA" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTwBg7hUEe2UuoshngsjNA" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVK91rhUEe2UuoshngsjNA" name="getInstructionParameters" specification="_F5fHYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVK917hUEe2UuoshngsjNA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVK92LhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F5fHYLhUEe2UuoshngsjNA" name="getInstructionParameters" method="_GVK91rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F5fHYbhUEe2UuoshngsjNA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRtaILhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_F5aO4LhUEe2UuoshngsjNA" name="InstructionParameters">
                <ownedAttribute xmi:id="_GTwBhLhUEe2UuoshngsjNA" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTwokLhUEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_GTwokbhUEe2UuoshngsjNA" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTwokrhUEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_GTwok7hUEe2UuoshngsjNA" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTxPoLhUEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_GTxPobhUEe2UuoshngsjNA" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTxPorhUEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_GTxPo7hUEe2UuoshngsjNA" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTxPpLhUEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_GTx2sLhUEe2UuoshngsjNA" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTx2sbhUEe2UuoshngsjNA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_GTydwLhUEe2UuoshngsjNA" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTydwbhUEe2UuoshngsjNA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVKWwLhUEe2UuoshngsjNA" name="getCoordinator" specification="_F5a18LhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVKWwbhUEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVKWwrhUEe2UuoshngsjNA" name="setCoordinator" specification="_F5bdAbhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVKWw7hUEe2UuoshngsjNA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVKWxLhUEe2UuoshngsjNA" name="setName" specification="_F5cEELhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVKWxbhUEe2UuoshngsjNA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVKWxrhUEe2UuoshngsjNA" name="setFlow" specification="_F5crILhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVKWx7hUEe2UuoshngsjNA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVKWyLhUEe2UuoshngsjNA" name="setSrc" specification="_F5crIrhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVKWybhUEe2UuoshngsjNA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVK90LhUEe2UuoshngsjNA" name="setSnk" specification="_F5dSMLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVK90bhUEe2UuoshngsjNA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVK90rhUEe2UuoshngsjNA" name="setChannel" specification="_F5egULhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVK907hUEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVK91LhUEe2UuoshngsjNA" name="unused" specification="_F5egUrhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVK91bhUEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_F5a18LhUEe2UuoshngsjNA" name="getCoordinator" method="_GVKWwLhUEe2UuoshngsjNA">
                  <ownedComment xmi:id="_GVr7OrhUEe2UuoshngsjNA">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_F5bdALhUEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_F5bdAbhUEe2UuoshngsjNA" name="setCoordinator" method="_GVKWwrhUEe2UuoshngsjNA">
                  <ownedComment xmi:id="_GVr7O7hUEe2UuoshngsjNA">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_F5bdArhUEe2UuoshngsjNA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_F5cEELhUEe2UuoshngsjNA" name="setName" visibility="private" method="_GVKWxLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_F5cEEbhUEe2UuoshngsjNA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_F5crILhUEe2UuoshngsjNA" name="setFlow" visibility="private" method="_GVKWxrhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_F5crIbhUEe2UuoshngsjNA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_F5crIrhUEe2UuoshngsjNA" name="setSrc" visibility="private" method="_GVKWyLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_F5crI7hUEe2UuoshngsjNA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_F5dSMLhUEe2UuoshngsjNA" name="setSnk" visibility="private" method="_GVK90LhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_F5d5QLhUEe2UuoshngsjNA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_F5egULhUEe2UuoshngsjNA" name="setChannel" visibility="private" method="_GVK90rhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_F5egUbhUEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_F5egUrhUEe2UuoshngsjNA" name="unused" method="_GVK91LhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_F5egU7hUEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_F5gVgLhUEe2UuoshngsjNA" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_GRuoQbhUEe2UuoshngsjNA" general="_GRuBMLhUEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_GTydwrhUEe2UuoshngsjNA" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_GTzE0bhUEe2UuoshngsjNA" name="instructionParametersArrayList" visibility="package" type="_GMRggLhUEe2UuoshngsjNA" association="_GWwSM7hUEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_GTzr4bhUEe2UuoshngsjNA" name="instructionParameters" visibility="package" type="_F5aO4LhUEe2UuoshngsjNA" association="_GWw5QbhUEe2UuoshngsjNA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVLk4LhUEe2UuoshngsjNA" name="ListenerDsl" specification="_F5g8kLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVLk4bhUEe2UuoshngsjNA" type="_F5gVgLhUEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVLk4rhUEe2UuoshngsjNA" name="getInstructionParameters" specification="_F5g8lLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVLk47hUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVLk5LhUEe2UuoshngsjNA" name="enterAction" specification="_GPQjEbhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVLk5bhUEe2UuoshngsjNA" name="ctx" type="_GPP8ALhUEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVLk5rhUEe2UuoshngsjNA" name="exitAction" specification="_GPRxMLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVLk57hUEe2UuoshngsjNA" name="ctx" type="_GPP8ALhUEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVLk6LhUEe2UuoshngsjNA" name="exitFlowName" specification="_GPS_ULhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVLk6bhUEe2UuoshngsjNA" name="ctx" type="_GPSYQrhUEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVML8LhUEe2UuoshngsjNA" name="exitCmd" specification="_GPTmZLhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVML8bhUEe2UuoshngsjNA" name="ctx" type="_GPTmYrhUEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVML8rhUEe2UuoshngsjNA" name="exitSrcNode" specification="_GPU0grhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVML87hUEe2UuoshngsjNA" name="ctx" type="_GPU0gLhUEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVML9LhUEe2UuoshngsjNA" name="exitSnkNode" specification="_GPWCobhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVML9bhUEe2UuoshngsjNA" name="ctx" type="_GPVbk7hUEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVML9rhUEe2UuoshngsjNA" name="exitChannel" specification="_GPXQwbhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GVML97hUEe2UuoshngsjNA" name="ctx" type="_GPWps7hUEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_F5g8kLhUEe2UuoshngsjNA" name="ListenerDsl" visibility="package" method="_GVLk4LhUEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_F5g8kbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_F5g8krhUEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_F5g8k7hUEe2UuoshngsjNA" type="_F5gVgLhUEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_F5g8lLhUEe2UuoshngsjNA" name="getInstructionParameters" method="_GVLk4rhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GRuoQLhUEe2UuoshngsjNA" type="_GMRggLhUEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_GPQjEbhUEe2UuoshngsjNA" name="enterAction" method="_GVLk5LhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GPQjErhUEe2UuoshngsjNA" name="ctx" type="_GPP8ALhUEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_GPRxMLhUEe2UuoshngsjNA" name="exitAction" method="_GVLk5rhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GPRxMbhUEe2UuoshngsjNA" name="ctx" type="_GPP8ALhUEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_GPS_ULhUEe2UuoshngsjNA" name="exitFlowName" method="_GVLk6LhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GPS_UbhUEe2UuoshngsjNA" name="ctx" type="_GPSYQrhUEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_GPTmZLhUEe2UuoshngsjNA" name="exitCmd" method="_GVML8LhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GPTmZbhUEe2UuoshngsjNA" name="ctx" type="_GPTmYrhUEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_GPU0grhUEe2UuoshngsjNA" name="exitSrcNode" method="_GVML8rhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GPU0g7hUEe2UuoshngsjNA" name="ctx" type="_GPU0gLhUEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_GPWCobhUEe2UuoshngsjNA" name="exitSnkNode" method="_GVML9LhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GPWCorhUEe2UuoshngsjNA" name="ctx" type="_GPVbk7hUEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_GPXQwbhUEe2UuoshngsjNA" name="exitChannel" method="_GVML9rhUEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_GPXQwrhUEe2UuoshngsjNA" name="ctx" type="_GPWps7hUEe2UuoshngsjNA"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_F5nqQLhUEe2UuoshngsjNA" name="WarpInterface">
              <ownedComment xmi:id="_GVsiQLhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_GPaUELhUEe2UuoshngsjNA" general="_F4pZ4LhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F5oRULhUEe2UuoshngsjNA" name="toWorkload">
                <ownedParameter xmi:id="_GPaUEbhUEe2UuoshngsjNA" type="_F6kFcLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5o4YLhUEe2UuoshngsjNA" name="toProgram">
                <ownedParameter xmi:id="_GPaUErhUEe2UuoshngsjNA" type="_F29X0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5o4YbhUEe2UuoshngsjNA" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_GPa7ILhUEe2UuoshngsjNA" type="_F3rJgLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5pfcLhUEe2UuoshngsjNA" name="toSimulator">
                <ownedParameter xmi:id="_GPa7IbhUEe2UuoshngsjNA" type="_F4mWkLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5pfcbhUEe2UuoshngsjNA" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_GPa7IrhUEe2UuoshngsjNA" type="_F2F1ILhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5pfcrhUEe2UuoshngsjNA" name="toChannelAnalysis">
                <ownedParameter xmi:id="_GPa7I7hUEe2UuoshngsjNA" type="_F0bBMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5qGgLhUEe2UuoshngsjNA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_F5qGgbhUEe2UuoshngsjNA" name="reliabilitiesMet">
                <ownedParameter xmi:id="_F5qGgrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F5qtkLhUEe2UuoshngsjNA" name="deadlinesMet">
                <ownedParameter xmi:id="_F5qtkbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F5r7sLhUEe2UuoshngsjNA" name="WarpPoset">
              <ownedComment xmi:id="_GVsiQbhUEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_GPcJQLhUEe2UuoshngsjNA" general="_F2fdwLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVMzALhUEe2UuoshngsjNA" name="WarpPoset" specification="_GPbiMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVMzAbhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVMzArhUEe2UuoshngsjNA" type="_F5r7sLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVMzA7hUEe2UuoshngsjNA" name="findCoordinator" specification="_GRwdcLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVMzBLhUEe2UuoshngsjNA" name="nodesInFlow" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVMzBbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_GPbiMLhUEe2UuoshngsjNA" name="WarpPoset" visibility="package" method="_GVMzALhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GPbiMrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GPbiM7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GPbiMbhUEe2UuoshngsjNA" name="workload" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPbiNLhUEe2UuoshngsjNA" type="_F5r7sLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GRwdcLhUEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_GVMzA7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GRwdcbhUEe2UuoshngsjNA" name="nodesInFlow" type="_GMRggLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRwdcrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F5tJ0LhUEe2UuoshngsjNA" name="WarpSystem">
              <ownedComment xmi:id="_GVsiQrhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_GT06ALhUEe2UuoshngsjNA" name="program" visibility="private" type="_F29X0LhUEe2UuoshngsjNA" association="_GWxgUbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT2IILhUEe2UuoshngsjNA" name="workLoad" visibility="private" type="_F6kFcLhUEe2UuoshngsjNA" association="_GWxgVLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT2vMbhUEe2UuoshngsjNA" name="ra" visibility="private" type="_F3rJgLhUEe2UuoshngsjNA" association="_GWyHYbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT3WQbhUEe2UuoshngsjNA" name="la" visibility="private" type="_F2F1ILhUEe2UuoshngsjNA" association="_GWyucbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT39ULhUEe2UuoshngsjNA" name="ca" visibility="private" type="_F0bBMLhUEe2UuoshngsjNA" association="_GWzVgLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT39UrhUEe2UuoshngsjNA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GT5Lc7hUEe2UuoshngsjNA" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GT5ygLhUEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GT5ygrhUEe2UuoshngsjNA" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GT5yg7hUEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_GPcwULhUEe2UuoshngsjNA" client="_F5tJ0LhUEe2UuoshngsjNA" supplier="_F5nqQLhUEe2UuoshngsjNA" contract="_F5nqQLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVNaErhUEe2UuoshngsjNA" name="WarpSystem" specification="_GRy5sLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVNaE7hUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVNaFLhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVNaFbhUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVNaFrhUEe2UuoshngsjNA" type="_F5tJ0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVNaF7hUEe2UuoshngsjNA" name="toWorkload" specification="_F5uX8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVNaGLhUEe2UuoshngsjNA" type="_F6kFcLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOBILhUEe2UuoshngsjNA" name="toProgram" specification="_F5u_ArhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOBIbhUEe2UuoshngsjNA" type="_F29X0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOBIrhUEe2UuoshngsjNA" name="toReliabilityAnalysis" specification="_F5vmE7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOBI7hUEe2UuoshngsjNA" type="_F3rJgLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOBJLhUEe2UuoshngsjNA" name="toSimulator" specification="_F5wNI7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOBJbhUEe2UuoshngsjNA" type="_F4mWkLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOBJrhUEe2UuoshngsjNA" name="toLatencyAnalysis" specification="_F5yCULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOBJ7hUEe2UuoshngsjNA" type="_F2F1ILhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOBKLhUEe2UuoshngsjNA" name="toChannelAnalysis" specification="_F5zQcbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOBKbhUEe2UuoshngsjNA" type="_F0bBMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOoMLhUEe2UuoshngsjNA" name="reliabilitiesMet" specification="_F5z3grhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOoMbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOoMrhUEe2UuoshngsjNA" name="deadlinesMet" specification="_F51FobhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOoM7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOoNLhUEe2UuoshngsjNA" name="createProgram" specification="_GR0H0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOoNbhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVOoNrhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVOoN7hUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOoOLhUEe2UuoshngsjNA" name="getNumFaults" specification="_F51ssrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOoObhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOoOrhUEe2UuoshngsjNA" name="getMinPacketReceptionRate" specification="_F5260rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOoO7hUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVOoPLhUEe2UuoshngsjNA" name="getE2e" specification="_F53h4rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVOoPbhUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVPPQLhUEe2UuoshngsjNA" name="getName" specification="_F54I87hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVPPQbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVPPQrhUEe2UuoshngsjNA" name="getSchedulerName" specification="_F55XErhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVPPQ7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVPPRLhUEe2UuoshngsjNA" name="getNumTransmissions" specification="_F55-IrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVPPRbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVPPRrhUEe2UuoshngsjNA" name="getOptimizationFlag" specification="_F56lM7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVPPR7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F5uX8LhUEe2UuoshngsjNA" name="toWorkload" method="_GVNaF7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPdXYLhUEe2UuoshngsjNA" type="_F6kFcLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5u_ArhUEe2UuoshngsjNA" name="toProgram" method="_GVOBILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPdXYbhUEe2UuoshngsjNA" type="_F29X0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5vmE7hUEe2UuoshngsjNA" name="toReliabilityAnalysis" method="_GVOBIrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPdXYrhUEe2UuoshngsjNA" type="_F3rJgLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5wNI7hUEe2UuoshngsjNA" name="toSimulator" method="_GVOBJLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPdXY7hUEe2UuoshngsjNA" type="_F4mWkLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5yCULhUEe2UuoshngsjNA" name="toLatencyAnalysis" method="_GVOBJrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPdXZLhUEe2UuoshngsjNA" type="_F2F1ILhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5zQcbhUEe2UuoshngsjNA" name="toChannelAnalysis" method="_GVOBKLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPdXZbhUEe2UuoshngsjNA" type="_F0bBMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F5z3grhUEe2UuoshngsjNA" name="reliabilitiesMet" method="_GVOoMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F50ekLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F51FobhUEe2UuoshngsjNA" name="deadlinesMet" method="_GVOoMrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F51ForhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F51ssrhUEe2UuoshngsjNA" name="getNumFaults" method="_GVOoOLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F52TwLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F5260rhUEe2UuoshngsjNA" name="getMinPacketReceptionRate" method="_GVOoOrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GR0u4LhUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F53h4rhUEe2UuoshngsjNA" name="getE2e" method="_GVOoPLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GR0u4bhUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F54I87hUEe2UuoshngsjNA" name="getName" method="_GVPPQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F54wALhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F55XErhUEe2UuoshngsjNA" name="getSchedulerName" method="_GVPPQrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F55XE7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F55-IrhUEe2UuoshngsjNA" name="getNumTransmissions" method="_GVPPRLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F55-I7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F56lM7hUEe2UuoshngsjNA" name="getOptimizationFlag" method="_GVPPRrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F57MQLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F58aYrhUEe2UuoshngsjNA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_GRy5sLhUEe2UuoshngsjNA" name="WarpSystem" method="_GVNaErhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GRzgwrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GRzgw7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GRy5sbhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRzgwLhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GRzgwbhUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GRzgxLhUEe2UuoshngsjNA" type="_F5tJ0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GR0H0LhUEe2UuoshngsjNA" name="createProgram" visibility="private" method="_GVOoNLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GR0H0bhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GR0H0rhUEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GR0H07hUEe2UuoshngsjNA" name="choice" type="_GRMcwLhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F6ChALhUEe2UuoshngsjNA" name="WorkLoadDescription">
              <ownedComment xmi:id="_GVsiQ7hUEe2UuoshngsjNA">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_GPho0bhUEe2UuoshngsjNA" general="_F5E3sLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT7AoLhUEe2UuoshngsjNA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GT7nsLhUEe2UuoshngsjNA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GT7nsbhUEe2UuoshngsjNA" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GT7nsrhUEe2UuoshngsjNA" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GT7ns7hUEe2UuoshngsjNA" name="description" visibility="private" type="_F1DTULhUEe2UuoshngsjNA" association="_GWzVg7hUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT8OwbhUEe2UuoshngsjNA" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GT810LhUEe2UuoshngsjNA" name="fm" visibility="private" type="_F1Sj4LhUEe2UuoshngsjNA" association="_GWz8kbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT810rhUEe2UuoshngsjNA" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVP2ULhUEe2UuoshngsjNA" name="WorkLoadDescription" specification="_F6DvILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVP2UbhUEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVP2UrhUEe2UuoshngsjNA" type="_F6ChALhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVP2U7hUEe2UuoshngsjNA" name="visualization" specification="_F6EWMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVP2VLhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVP2VbhUEe2UuoshngsjNA" name="fileVisualization" specification="_F6E9QrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVP2VrhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVQdYLhUEe2UuoshngsjNA" name="toString" specification="_F6GycLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVQdYbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVQdYrhUEe2UuoshngsjNA" name="initialize" specification="_F6HZgrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVQdY7hUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVQdZLhUEe2UuoshngsjNA" name="main" specification="_F6IAkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVQdZbhUEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVQdZrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Get file contents&#xD;
	  String file = &quot;StressTest.txt&quot;;&#xD;
	  WorkLoadDescription stressTest = new WorkLoadDescription(file);&#xD;
	  Description toBeAlphabetized = stressTest.visualization();&#xD;
	  &#xD;
	  //Parse file name&#xD;
	  String firstLine = toBeAlphabetized.remove(0);&#xD;
	  String fileName = firstLine.substring(0, firstLine.indexOf(' '));&#xD;
	  &#xD;
	  //Trim and Sort toBeAlphabetized to only contain flows&#xD;
	  toBeAlphabetized.remove(toBeAlphabetized.size()-1);&#xD;
	  Collections.sort(toBeAlphabetized);&#xD;
	  &#xD;
	  //Print the file in the proper format&#xD;
	  System.out.println(fileName);&#xD;
	  for(int i = 0; i &lt; toBeAlphabetized.size(); i++) {&#xD;
		  System.out.print(&quot;Flow &quot; + (i+1) + &quot;: &quot; + toBeAlphabetized.get(i));&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F6DvILhUEe2UuoshngsjNA" name="WorkLoadDescription" visibility="package" method="_GVP2ULhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_F6DvIrhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_F6DvI7hUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_F6DvIbhUEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F6DvJLhUEe2UuoshngsjNA" type="_F6ChALhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F6EWMLhUEe2UuoshngsjNA" name="visualization" method="_GVP2U7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPhBwbhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F6E9QrhUEe2UuoshngsjNA" name="fileVisualization" method="_GVP2VbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPho0LhUEe2UuoshngsjNA" type="_F1DTULhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F6GycLhUEe2UuoshngsjNA" name="toString" method="_GVQdYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F6GycbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6HZgrhUEe2UuoshngsjNA" name="initialize" visibility="private" method="_GVQdYrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F6HZg7hUEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6IAkLhUEe2UuoshngsjNA" name="main" isStatic="true" method="_GVQdZLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GVtJULhUEe2UuoshngsjNA">
                  <body>Returns Flows alphabetically.&#xD;
	 *&#xD;
	 * @param args instantiates WorkLoadDescription, prints StressTest.txt alphabetically</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6IAkbhUEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F6InoLhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F6Kc0LhUEe2UuoshngsjNA" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_GVtJUbhUEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GR19ALhUEe2UuoshngsjNA" general="_GNC8kbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT9c4LhUEe2UuoshngsjNA" name="workLoad" visibility="package" type="_F6kFcLhUEe2UuoshngsjNA" association="_GW0jobhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT-D8bhUEe2UuoshngsjNA" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVREcLhUEe2UuoshngsjNA" name="WorkLoadListener" specification="_GPjeALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVREcbhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVREcrhUEe2UuoshngsjNA" type="_F6Kc0LhUEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVREc7hUEe2UuoshngsjNA" name="buildNodesAndFlows" specification="_GPmhULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVREdLhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then build the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVREdbhUEe2UuoshngsjNA" name="testPrintStdOut" specification="_F6LD4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVREdrhUEe2UuoshngsjNA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVRrgLhUEe2UuoshngsjNA" name="enterWarpName" specification="_GPmhUrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVRrgbhUEe2UuoshngsjNA" name="ctx" type="_GNF_4bhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVRrgrhUEe2UuoshngsjNA" name="enterFlowName" specification="_GPoWgLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVRrg7hUEe2UuoshngsjNA" name="ctx" type="_GNIcI7hUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVSSkLhUEe2UuoshngsjNA" name="exitPriority" specification="_GPqLsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVSSkbhUEe2UuoshngsjNA" name="ctx" type="_GPpkoLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVSSkrhUEe2UuoshngsjNA" name="exitPeriod" specification="_GPsA4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVSSk7hUEe2UuoshngsjNA" name="ctx" type="_GPrZ0rhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVSSlLhUEe2UuoshngsjNA" name="exitDeadline" specification="_GPudIbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVSSlbhUEe2UuoshngsjNA" name="ctx" type="_GPt2ELhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVS5oLhUEe2UuoshngsjNA" name="exitPhase" specification="_GPvrQbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVS5obhUEe2UuoshngsjNA" name="ctx" type="_GPvEM7hUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVS5orhUEe2UuoshngsjNA" name="exitSrcNode" specification="_GPw5YrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVS5o7hUEe2UuoshngsjNA" name="ctx" type="_GNJqQ7hUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVS5pLhUEe2UuoshngsjNA" name="exitSnkNode" specification="_GPyHgLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVS5pbhUEe2UuoshngsjNA" name="ctx" type="_GNNUobhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVS5prhUEe2UuoshngsjNA" name="exitFlow" specification="_GPyukrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVS5p7hUEe2UuoshngsjNA" name="ctx" type="_GNOiwrhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F6LD4LhUEe2UuoshngsjNA" name="testPrintStdOut" method="_GVREdbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F6Lq8LhUEe2UuoshngsjNA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GPjeALhUEe2UuoshngsjNA" name="WorkLoadListener" visibility="private" method="_GVREcLhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GPkFEbhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GPkFErhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_GPkFELhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GPkFE7hUEe2UuoshngsjNA" type="_F6Kc0LhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPmhULhUEe2UuoshngsjNA" name="buildNodesAndFlows" isStatic="true" method="_GVREc7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPmhUbhUEe2UuoshngsjNA" name="workLoad" type="_F6kFcLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPmhUrhUEe2UuoshngsjNA" name="enterWarpName" method="_GVRrgLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPmhU7hUEe2UuoshngsjNA" name="ctx" type="_GNF_4bhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPoWgLhUEe2UuoshngsjNA" name="enterFlowName" method="_GVRrgrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPoWgbhUEe2UuoshngsjNA" name="ctx" type="_GNIcI7hUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPqLsLhUEe2UuoshngsjNA" name="exitPriority" method="_GVSSkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPqLsbhUEe2UuoshngsjNA" name="ctx" type="_GPpkoLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPsA4LhUEe2UuoshngsjNA" name="exitPeriod" method="_GVSSkrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPsA4bhUEe2UuoshngsjNA" name="ctx" type="_GPrZ0rhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPudIbhUEe2UuoshngsjNA" name="exitDeadline" method="_GVSSlLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPudIrhUEe2UuoshngsjNA" name="ctx" type="_GPt2ELhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPvrQbhUEe2UuoshngsjNA" name="exitPhase" method="_GVS5oLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPvrQrhUEe2UuoshngsjNA" name="ctx" type="_GPvEM7hUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPw5YrhUEe2UuoshngsjNA" name="exitSrcNode" method="_GVS5orhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPw5Y7hUEe2UuoshngsjNA" name="ctx" type="_GNJqQ7hUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPyHgLhUEe2UuoshngsjNA" name="exitSnkNode" method="_GVS5pLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPyHgbhUEe2UuoshngsjNA" name="ctx" type="_GNNUobhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GPyukrhUEe2UuoshngsjNA" name="exitFlow" method="_GVS5prhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GPyuk7hUEe2UuoshngsjNA" name="ctx" type="_GNOiwrhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F6OHMLhUEe2UuoshngsjNA" name="WorkLoadTest" visibility="package">
              <ownedAttribute xmi:id="_GT_SELhUEe2UuoshngsjNA" name="stressTestWorkLoad" visibility="private" type="_F6kFcLhUEe2UuoshngsjNA" association="_GW1KsbhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GT_5ILhUEe2UuoshngsjNA" name="exampleThreeWorkLoad" visibility="private" type="_F6kFcLhUEe2UuoshngsjNA" association="_GW1KtLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVTgsLhUEe2UuoshngsjNA" name="setUp" specification="_F6S_sLhUEe2UuoshngsjNA">
                <language>java</language>
                <body>String stressTest = &quot;StressTest.txt&quot;;&#xD;
		stressTestWorkLoad = new WorkLoad(0.9, 0.99, stressTest);&#xD;
		&#xD;
		String exampleThree = &quot;Example3.txt&quot;;&#xD;
		exampleThreeWorkLoad = new WorkLoad(0.9, 0.99, exampleThree);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVTgsbhUEe2UuoshngsjNA" name="testAddFlow" specification="_F6Tmw7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>Flow originalFlow = new Flow(&quot;Test flow to be added&quot;, 0, 0);&#xD;
		stressTestWorkLoad.addFlow(originalFlow.getName());&#xD;
		FlowMap allFlowsInstressTestWorkLoad = stressTestWorkLoad.getFlows();&#xD;
		Flow addedFlow = allFlowsInstressTestWorkLoad.get(originalFlow.getName());&#xD;
		assertEquals(originalFlow.getName(), addedFlow.getName());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVTgsrhUEe2UuoshngsjNA" name="testAddNodeToFlow" specification="_F6UN0rhUEe2UuoshngsjNA">
                <language>java</language>
                <body>var initial = stressTestWorkLoad.getNodesInFlow(&quot;F5&quot;);&#xD;
		stressTestWorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;F&quot;);&#xD;
		var updated = stressTestWorkLoad.getNodesInFlow(&quot;F5&quot;);&#xD;
	&#xD;
		assertEquals(&quot;F&quot;, updated[updated.length-1]);&#xD;
		assertNotEquals(initial, updated);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVTgs7hUEe2UuoshngsjNA" name="testGetFlowPriority" specification="_F6U04rhUEe2UuoshngsjNA">
                <language>java</language>
                <body>Flow originalFlow = new Flow(&quot;Test flow to be added&quot;, 0, 0);&#xD;
		&#xD;
		//Using the stress test file&#xD;
		stressTestWorkLoad.addFlow(originalFlow.getName());&#xD;
		int expectedPriority = 15;&#xD;
		int actualPriority = stressTestWorkLoad.getFlowPriority(originalFlow.getName());&#xD;
		assertEquals(expectedPriority, actualPriority);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVTgtLhUEe2UuoshngsjNA" name="testSetFlowPriority" specification="_F6Vb8rhUEe2UuoshngsjNA">
                <language>java</language>
                <body>int setThreeFP = exampleThreeWorkLoad.getFlowPriority(&quot;F3&quot;);&#xD;
		exampleThreeWorkLoad.setFlowPriority(&quot;F3&quot;, 30);&#xD;
		int actualThreeFP = exampleThreeWorkLoad.getFlowPriority(&quot;F3&quot;);&#xD;
		assertEquals(30, actualThreeFP);&#xD;
		assertNotEquals(setThreeFP, actualThreeFP);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVTgtbhUEe2UuoshngsjNA" name="testSetFlowDeadline" specification="_F6WqELhUEe2UuoshngsjNA">
                <language>java</language>
                <body>int setFD = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		stressTestWorkLoad.setFlowDeadline(&quot;F3&quot;, 100);&#xD;
		int actualFD = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		assertEquals(100, actualFD);&#xD;
		assertNotEquals(setFD, actualFD);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVTgtrhUEe2UuoshngsjNA" name="testGetFlowDeadlineStressTest" specification="_F6WqFLhUEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 50;&#xD;
		Integer actual = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		assertEquals(expected, actual);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHwLhUEe2UuoshngsjNA" name="testGetFlowDeadlineDefault" specification="_F6XRIrhUEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 100;&#xD;
		Integer actual = exampleThreeWorkLoad.getFlowDeadline(&quot;F0&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHwbhUEe2UuoshngsjNA" name="testGetFlowTxAttemptsPerLink" specification="_F6XRJrhUEe2UuoshngsjNA">
                <language>java</language>
                <body>int expected = 3;&#xD;
		int actual = exampleThreeWorkLoad.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		assertEquals(expected, actual);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHwrhUEe2UuoshngsjNA" name="testSetFlowsInRMorderStressTest" specification="_F6X4M7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>stressTestWorkLoad.setFlowsInRMorder();&#xD;
		String expected = &quot;[F1, AF1, F2, AF2, F3, F4, AF4, F5, AF5, F6, F7, F8, F9, F10, AF10]&quot;;&#xD;
		String actual = stressTestWorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHw7hUEe2UuoshngsjNA" name="testSetFlowsInRMOrderExampleThree" specification="_F6YfQ7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>exampleThreeWorkLoad.setFlowsInRMorder();&#xD;
		String expected = &quot;[F0, F1, F2, F3, F4, F5]&quot;;&#xD;
		String actual = exampleThreeWorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHxLhUEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_StressTest" specification="_F6ZGU7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&#xD;
				&quot;J&quot;,&quot;K&quot;,&quot;L&quot;,&quot;M&quot;,&quot;N&quot;,&quot;O&quot;,&quot;P&quot;,&quot;Q&quot;,&quot;R&quot;,&quot;S&quot;,&quot;T&quot;,&quot;U&quot;,&quot;V&quot;,&quot;W&quot;,&quot;Y&quot;};&#xD;
		String[] actual = stressTestWorkLoad.getNodeNamesOrderedAlphabetically();&#xD;
		for (int i = 0; i &lt; expected.length; i++) {&#xD;
			assertEquals(expected[i], actual[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHxbhUEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_Example3" specification="_F6ZtY7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] expectedThree = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;F&quot;,&quot;G&quot;,&quot;I&quot;,&#xD;
				&quot;P&quot;,&quot;R&quot;,&quot;V&quot;,&quot;X&quot;};&#xD;
		String[] actualThree = exampleThreeWorkLoad.getNodeNamesOrderedAlphabetically();&#xD;
		for (int i = 0; i &lt; expectedThree.length; i++) {&#xD;
			assertEquals(expectedThree[i], actualThree[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHxrhUEe2UuoshngsjNA" name="testGetFlowNamesStressTest" specification="_F6a7g7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[F1, F5, F2, F4, F3, F6, F7, F8, F9, F10, AF1, AF5, AF2, AF4, AF10]&quot;;&#xD;
		String[] actual = stressTestWorkLoad.getFlowNames();&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHx7hUEe2UuoshngsjNA" name="testGetFlowNamesExampleThree" specification="_F6bik7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[F0, F1, F2, F3, F4, F5]&quot;;&#xD;
		String[] actual = exampleThreeWorkLoad.getFlowNames();&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHyLhUEe2UuoshngsjNA" name="testGetNodeIndex" specification="_F6cJo7hUEe2UuoshngsjNA">
                <language>java</language>
                <body>var expectedL = 11;&#xD;
		var actualL = stressTestWorkLoad.getNodeIndex(&quot;L&quot;);&#xD;
		assertEquals(expectedL,actualL);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUHybhUEe2UuoshngsjNA" name="testGetNodesInFlow" specification="_F6dXwrhUEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] actual = stressTestWorkLoad.getNodesInFlow(&quot;F9&quot;);&#xD;
		String expected = &quot;[A, B, C, D, E, J, K, L]&quot;;&#xD;
		assertEquals(expected, (Arrays.toString(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUu0LhUEe2UuoshngsjNA" name="testGetHyperPeriodStressTest" specification="_F6d-07hUEe2UuoshngsjNA">
                <language>java</language>
                <body>var expected = 300;&#xD;
		var actual = stressTestWorkLoad.getHyperPeriod();&#xD;
		assertEquals(expected,actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUu0bhUEe2UuoshngsjNA" name="testGetHyperPeriodDefault" specification="_F6el47hUEe2UuoshngsjNA">
                <language>java</language>
                <body>var expected = 100;&#xD;
		var actual = exampleThreeWorkLoad.getHyperPeriod();&#xD;
		assertEquals(expected,actual);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUu0rhUEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowStressTest" specification="_F6f0ALhUEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 11;&#xD;
		Integer actual = stressTestWorkLoad.getTotalTxAttemptsInFlow(&quot;F9&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUu07hUEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowDefault" specification="_F6gbELhUEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 4;&#xD;
		Integer actual = exampleThreeWorkLoad.getTotalTxAttemptsInFlow(&quot;F0&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUu1LhUEe2UuoshngsjNA" name="testGetNumTxAttemptsPerLink" specification="_F6hCIbhUEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[3, 4, 5, 6, 6, 6, 5, 0]&quot;;&#xD;
		Integer[] actual = stressTestWorkLoad.getNumTxAttemptsPerLink(&quot;F9&quot;);&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUu1bhUEe2UuoshngsjNA" name="testMaxFlowLength" specification="_F6hpMbhUEe2UuoshngsjNA">
                <language>java</language>
                <body>var maxFL = 8;&#xD;
		int actualFL = stressTestWorkLoad.maxFlowLength();&#xD;
		assertEquals(maxFL, actualFL);	&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F6S_sLhUEe2UuoshngsjNA" name="setUp" method="_GVTgsLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6Tmw7hUEe2UuoshngsjNA" name="testAddFlow" visibility="package" method="_GVTgsbhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6UN0rhUEe2UuoshngsjNA" name="testAddNodeToFlow" visibility="package" method="_GVTgsrhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6U04rhUEe2UuoshngsjNA" name="testGetFlowPriority" visibility="package" method="_GVTgs7hUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6Vb8rhUEe2UuoshngsjNA" name="testSetFlowPriority" visibility="package" method="_GVTgtLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6WqELhUEe2UuoshngsjNA" name="testSetFlowDeadline" visibility="package" method="_GVTgtbhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6WqFLhUEe2UuoshngsjNA" name="testGetFlowDeadlineStressTest" visibility="package" method="_GVTgtrhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6XRIrhUEe2UuoshngsjNA" name="testGetFlowDeadlineDefault" visibility="package" method="_GVUHwLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6XRJrhUEe2UuoshngsjNA" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_GVUHwbhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6X4M7hUEe2UuoshngsjNA" name="testSetFlowsInRMorderStressTest" visibility="package" method="_GVUHwrhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6YfQ7hUEe2UuoshngsjNA" name="testSetFlowsInRMOrderExampleThree" visibility="package" method="_GVUHw7hUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6ZGU7hUEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_StressTest" visibility="package" method="_GVUHxLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6ZtY7hUEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_Example3" visibility="package" method="_GVUHxbhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6a7g7hUEe2UuoshngsjNA" name="testGetFlowNamesStressTest" visibility="package" method="_GVUHxrhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6bik7hUEe2UuoshngsjNA" name="testGetFlowNamesExampleThree" visibility="package" method="_GVUHx7hUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6cJo7hUEe2UuoshngsjNA" name="testGetNodeIndex" visibility="package" method="_GVUHyLhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6dXwrhUEe2UuoshngsjNA" name="testGetNodesInFlow" visibility="package" method="_GVUHybhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6d-07hUEe2UuoshngsjNA" name="testGetHyperPeriodStressTest" visibility="package" method="_GVUu0LhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6el47hUEe2UuoshngsjNA" name="testGetHyperPeriodDefault" visibility="package" method="_GVUu0bhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6f0ALhUEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowStressTest" visibility="package" method="_GVUu0rhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6gbELhUEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowDefault" visibility="package" method="_GVUu07hUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6hCIbhUEe2UuoshngsjNA" name="testGetNumTxAttemptsPerLink" visibility="package" method="_GVUu1LhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6hpMbhUEe2UuoshngsjNA" name="testMaxFlowLength" visibility="package" method="_GVUu1bhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_F6kFcLhUEe2UuoshngsjNA" name="WorkLoad">
              <ownedComment xmi:id="_GsqnFcv4Ee2QFfqiYSegRA">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
Can be used for viewing, editing, and adding flows and nodes in the graph as well as calculating&#xD;
the per node and total transmission attempts.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_GP-70bhUEe2UuoshngsjNA" general="_F6ChALhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GUBuULhUEe2UuoshngsjNA" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUBuUbhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUBuUrhUEe2UuoshngsjNA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUCVYLhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUCVYbhUEe2UuoshngsjNA" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUCVYrhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUCVY7hUEe2UuoshngsjNA" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUCVZLhUEe2UuoshngsjNA" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUC8cLhUEe2UuoshngsjNA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUC8cbhUEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUC8crhUEe2UuoshngsjNA" name="minPacketReceptionRate" type="_GRQuMLhUEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUC8c7hUEe2UuoshngsjNA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUC8dLhUEe2UuoshngsjNA" name="e2e" visibility="private" type="_GRQuMLhUEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUDjgLhUEe2UuoshngsjNA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUDjgrhUEe2UuoshngsjNA" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUDjg7hUEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUEKkLhUEe2UuoshngsjNA" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUEKkbhUEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUEKk7hUEe2UuoshngsjNA" name="flows" type="_F1q-YLhUEe2UuoshngsjNA" association="_GVtwYLhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GUExoLhUEe2UuoshngsjNA" name="nodes" type="_F2YwELhUEe2UuoshngsjNA" association="_GVtwYrhUEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_GUExobhUEe2UuoshngsjNA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUFYsbhUEe2UuoshngsjNA" name="flowNamesInOriginalOrder" type="_GMRggLhUEe2UuoshngsjNA" association="_GW3m8LhUEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUF_wbhUEe2UuoshngsjNA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_GUF_wrhUEe2UuoshngsjNA" name="flowNamesInPriorityOrder" type="_GMRggLhUEe2UuoshngsjNA" association="_GW4OAbhUEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_GUGm0bhUEe2UuoshngsjNA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_GP7RcbhUEe2UuoshngsjNA" client="_F6kFcLhUEe2UuoshngsjNA" supplier="_F3sXoLhUEe2UuoshngsjNA" contract="_F3sXoLhUEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVVV4LhUEe2UuoshngsjNA" name="WorkLoad" specification="_GR4ZQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVVV4bhUEe2UuoshngsjNA" name="m" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVVV4rhUEe2UuoshngsjNA" name="e2e" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVVV47hUEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVVV5LhUEe2UuoshngsjNA" type="_F6kFcLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVVV5bhUEe2UuoshngsjNA" name="WorkLoad" specification="_GR5AULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVVV5rhUEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVVV57hUEe2UuoshngsjNA" name="m" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVVV6LhUEe2UuoshngsjNA" name="e2e" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GVVV6bhUEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVVV6rhUEe2UuoshngsjNA" type="_F6kFcLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVVV67hUEe2UuoshngsjNA" name="setDefaultParameters" specification="_F6oW4LhUEe2UuoshngsjNA">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVV88LhUEe2UuoshngsjNA" name="getE2e" specification="_F6oW4bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVV88bhUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVV88rhUEe2UuoshngsjNA" name="getIntForFlowNames" specification="_F6plALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVV887hUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVV89LhUEe2UuoshngsjNA" name="getName" specification="_F6qMELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVV89bhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVV89rhUEe2UuoshngsjNA" name="setMinPacketReceptionRate" specification="_GR6OcbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVV897hUEe2UuoshngsjNA" name="minPacketReceptionRate" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVV8-LhUEe2UuoshngsjNA" name="getMaxPhase" specification="_F6raMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVV8-bhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVV8-rhUEe2UuoshngsjNA" name="getMinPeriod" specification="_F6sBQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVV8-7hUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVWkALhUEe2UuoshngsjNA" name="setE2e" specification="_GR61gLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVWkAbhUEe2UuoshngsjNA" name="e2e" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVWkArhUEe2UuoshngsjNA" name="setIntForFlowNames" specification="_F6soULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVWkA7hUEe2UuoshngsjNA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVWkBLhUEe2UuoshngsjNA" name="setName" specification="_F6vEkLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVWkBbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVWkBrhUEe2UuoshngsjNA" name="setNodeChannel" specification="_F6wSsLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVWkB7hUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVWkCLhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVWkCbhUEe2UuoshngsjNA" name="getNodeChannel" specification="_F6w5wLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVWkCrhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVWkC7hUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVWkDLhUEe2UuoshngsjNA" name="addFlow" specification="_F6xg0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVWkDbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXLELhUEe2UuoshngsjNA" name="isIntForNodeNames" specification="_F6yH4LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXLEbhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXLErhUEe2UuoshngsjNA" name="isIntForFlowNames" specification="_F6yH4rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXLE7hUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXLFLhUEe2UuoshngsjNA" name="addNodeToFlow" specification="_F6yu8bhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXLFbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXLFrhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXLF7hUEe2UuoshngsjNA" name="getFlowPriority" specification="_F6zWALhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXLGLhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXLGbhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXLGrhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXLG7hUEe2UuoshngsjNA" name="setFlowPriority" specification="_F6z9ELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXLHLhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXLHbhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXLHrhUEe2UuoshngsjNA" name="setFlowPeriod" specification="_F60kILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXLH7hUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXLILhUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXyILhUEe2UuoshngsjNA" name="setFlowDeadline" specification="_F60kI7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXyIbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXyIrhUEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXyI7hUEe2UuoshngsjNA" name="setFlowPhase" specification="_F61LMLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXyJLhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXyJbhUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXyJrhUEe2UuoshngsjNA" name="getFlowIndex" specification="_F61yQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXyJ7hUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXyKLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXyKbhUEe2UuoshngsjNA" name="getFlowPriority" specification="_F62ZULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXyKrhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXyK7hUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXyLLhUEe2UuoshngsjNA" name="getFlowPeriod" specification="_F63AYLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXyLbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXyLrhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVXyL7hUEe2UuoshngsjNA" name="getFlowDeadline" specification="_F63AY7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVXyMLhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVXyMbhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVYZMLhUEe2UuoshngsjNA" name="getFlowPhase" specification="_F63ncrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVYZMbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVYZMrhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVYZM7hUEe2UuoshngsjNA" name="getFlowTxAttemptsPerLink" specification="_F641kLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVYZNLhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVYZNbhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVYZNrhUEe2UuoshngsjNA" name="setFlowsInPriorityOrder" specification="_F65cobhUEe2UuoshngsjNA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVYZN7hUEe2UuoshngsjNA" name="setFlowsInDMorder" specification="_F65corhUEe2UuoshngsjNA">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVYZOLhUEe2UuoshngsjNA" name="setFlowsInRMorder" specification="_F66DsLhUEe2UuoshngsjNA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVYZObhUEe2UuoshngsjNA" name="setFlowsInRealTimeHARTorder" specification="_F66DsbhUEe2UuoshngsjNA">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVYZOrhUEe2UuoshngsjNA" name="finalizeCurrentFlow" specification="_F66qwLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVYZO7hUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVZAQLhUEe2UuoshngsjNA" name="nextReleaseTime" specification="_F67R0LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVZAQbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVZAQrhUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVZAQ7hUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVZARLhUEe2UuoshngsjNA" name="nextAbsoluteDeadline" specification="_F6744LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVZARbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVZARrhUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVZAR7hUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVZASLhUEe2UuoshngsjNA" name="finalizeFlowWithE2eParameters" specification="_F68f8LhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVZASbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis analyzer = new ReliabilityAnalysis(e2e, m);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = analyzer.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVZASrhUEe2UuoshngsjNA" name="finalizeFlowWithFixedFaultTolerance" specification="_F68f8rhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVZAS7hUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis analyzer = new ReliabilityAnalysis(e2e, minPacketReceptionRate);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = analyzer.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVZnVrhUEe2UuoshngsjNA" name="getNodeNamesOrderedAlphabetically" specification="_F69uELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVZnV7hUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVZnWLhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVZnWbhUEe2UuoshngsjNA" name="getFlow" specification="_F6-VILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVZnWrhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVZnW7hUEe2UuoshngsjNA" type="_F1afsLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it.\n&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVZnXLhUEe2UuoshngsjNA" name="getFlowNames" specification="_F6-8MLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVZnXbhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVZnXrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVaOYLhUEe2UuoshngsjNA" name="getNodeIndex" specification="_F6_jQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVaOYbhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVaOYrhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVaOY7hUEe2UuoshngsjNA" name="getNodesInFlow" specification="_F7AKULhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVaOZLhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVaOZbhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVaOZrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVaOZ7hUEe2UuoshngsjNA" name="getHyperPeriod" specification="_F7AxYbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVaOaLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
     // Find LCM of hyperPeriod so far and the current period, then update the&#xD;
     // hyperPeriod with that value&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); &#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVaOabhUEe2UuoshngsjNA" name="getTotalTxAttemptsInFlow" specification="_F7BYcLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVaOarhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVaOa7hUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVaObLhUEe2UuoshngsjNA" name="getNumTxAttemptsPerLink" specification="_F7B_gLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVaObbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVaObrhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVaOb7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVa1cLhUEe2UuoshngsjNA" name="addEdge" specification="_GP-UwbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVa1cbhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GVa1crhUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVa1c7hUEe2UuoshngsjNA" name="maxFlowLength" specification="_F7D0sLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_GVa1dLhUEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_F6oW4LhUEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_GVVV67hUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F6oW4bhUEe2UuoshngsjNA" name="getE2e" method="_GVV88LhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsqnGMv4Ee2QFfqiYSegRA">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_GR6OcLhUEe2UuoshngsjNA" type="_GRQuMLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F6plALhUEe2UuoshngsjNA" name="getIntForFlowNames" method="_GVV88rhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOIMv4Ee2QFfqiYSegRA">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6plAbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6qMELhUEe2UuoshngsjNA" name="getName" method="_GVV89LhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOIcv4Ee2QFfqiYSegRA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6qMEbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6raMLhUEe2UuoshngsjNA" name="getMaxPhase" method="_GVV8-LhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOI8v4Ee2QFfqiYSegRA">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6raMbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6sBQLhUEe2UuoshngsjNA" name="getMinPeriod" method="_GVV8-rhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOJMv4Ee2QFfqiYSegRA">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6sBQbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6soULhUEe2UuoshngsjNA" name="setIntForFlowNames" method="_GVWkArhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOJsv4Ee2QFfqiYSegRA">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6tPYLhUEe2UuoshngsjNA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6vEkLhUEe2UuoshngsjNA" name="setName" method="_GVWkBLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOJ8v4Ee2QFfqiYSegRA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6vroLhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6wSsLhUEe2UuoshngsjNA" name="setNodeChannel" method="_GVWkBrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOKMv4Ee2QFfqiYSegRA">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6wSsbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F6wSsrhUEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6w5wLhUEe2UuoshngsjNA" name="getNodeChannel" method="_GVWkCbhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOKcv4Ee2QFfqiYSegRA">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6w5wbhUEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F6w5wrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6xg0LhUEe2UuoshngsjNA" name="addFlow" method="_GVWkDLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOKsv4Ee2QFfqiYSegRA">
                  <body>Adds a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
   * the default values. Priority is set to the number of flows already added (index), 0 for first&#xD;
   * flow. This will create a default priority equal to the order listed in the input graph file.&#xD;
   * Index is set to the same value to preserve that order as a secondary sort key.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6xg0bhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6yH4LhUEe2UuoshngsjNA" name="isIntForNodeNames" method="_GVXLELhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F6yH4bhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6yH4rhUEe2UuoshngsjNA" name="isIntForFlowNames" method="_GVXLErhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F6yu8LhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6yu8bhUEe2UuoshngsjNA" name="addNodeToFlow" method="_GVXLFLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOK8v4Ee2QFfqiYSegRA">
                  <body>Adds the given node to the flow. Creates a new node with default priority if there is not&#xD;
   * already an existing node with the given name. Updates the flow's transmission cost after &#xD;
   * the node has been added.&#xD;
   * &#xD;
   * @param flowName the flow to add the node to&#xD;
   * @param nodeName the name of the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6yu8rhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F6yu87hUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6zWALhUEe2UuoshngsjNA" name="getFlowPriority" method="_GVXLF7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1MMv4Ee2QFfqiYSegRA">
                  <body>Finds the priority of the given node within the given flow.&#xD;
   * &#xD;
   * @param flowName the flow the node belongs to&#xD;
   * @param nodeName the node to find the priority of&#xD;
   * @return the priority of the given node, 0 if node does not exist</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6zWAbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F6zWArhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F6zWA7hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6z9ELhUEe2UuoshngsjNA" name="setFlowPriority" method="_GVXLG7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F6z9EbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F6z9ErhUEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F60kILhUEe2UuoshngsjNA" name="setFlowPeriod" method="_GVXLHrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F60kIbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F60kIrhUEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F60kI7hUEe2UuoshngsjNA" name="setFlowDeadline" method="_GVXyILhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F60kJLhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F60kJbhUEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F61LMLhUEe2UuoshngsjNA" name="setFlowPhase" method="_GVXyI7hUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F61LMbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F61LMrhUEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F61yQLhUEe2UuoshngsjNA" name="getFlowIndex" method="_GVXyJrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F61yQbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F61yQrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F62ZULhUEe2UuoshngsjNA" name="getFlowPriority" method="_GVXyKbhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1Mcv4Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get the priority from&#xD;
   * @return the priority of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_F62ZUbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F62ZUrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F63AYLhUEe2UuoshngsjNA" name="getFlowPeriod" method="_GVXyLLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1Msv4Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get the period from&#xD;
   * @return the period of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_F63AYbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F63AYrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F63AY7hUEe2UuoshngsjNA" name="getFlowDeadline" method="_GVXyL7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1M8v4Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get the deadline from&#xD;
   * @return the deadline of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_F63ncLhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F63ncbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F63ncrhUEe2UuoshngsjNA" name="getFlowPhase" method="_GVYZMLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1NMv4Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get the phase from&#xD;
   * @return the phase of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_F63nc7hUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F64OgLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F641kLhUEe2UuoshngsjNA" name="getFlowTxAttemptsPerLink" method="_GVYZM7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1Ncv4Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to retrieve transmission attempts from&#xD;
   * @return the number of transmission attempts for any one link in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_F641kbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F65coLhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F65cobhUEe2UuoshngsjNA" name="setFlowsInPriorityOrder" method="_GVYZNrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1Nsv4Ee2QFfqiYSegRA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by priority, and then by&#xD;
   * index.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_F65corhUEe2UuoshngsjNA" name="setFlowsInDMorder" method="_GVYZN7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1N8v4Ee2QFfqiYSegRA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by deadline, and then by&#xD;
   * priority.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_F66DsLhUEe2UuoshngsjNA" name="setFlowsInRMorder" method="_GVYZOLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1OMv4Ee2QFfqiYSegRA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by period, and then by&#xD;
   * priority.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_F66DsbhUEe2UuoshngsjNA" name="setFlowsInRealTimeHARTorder" method="_GVYZObhUEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_F66qwLhUEe2UuoshngsjNA" name="finalizeCurrentFlow" method="_GVYZOrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F66qwbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F67R0LhUEe2UuoshngsjNA" name="nextReleaseTime" method="_GVZAQLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F67R0bhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F67R0rhUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F67R07hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6744LhUEe2UuoshngsjNA" name="nextAbsoluteDeadline" method="_GVZARLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F6744bhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F6744rhUEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F67447hUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F68f8LhUEe2UuoshngsjNA" name="finalizeFlowWithE2eParameters" visibility="private" method="_GVZASLhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F68f8bhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F68f8rhUEe2UuoshngsjNA" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_GVZASrhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F68f87hUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F69uELhUEe2UuoshngsjNA" name="getNodeNamesOrderedAlphabetically" method="_GVZnVrhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1Ocv4Ee2QFfqiYSegRA">
                  <body>@return a String array of all node names in alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_F69uEbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F69uErhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6-VILhUEe2UuoshngsjNA" name="getFlow" visibility="private" method="_GVZnWbhUEe2UuoshngsjNA">
                <ownedParameter xmi:id="_F6-VIbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GP-UwLhUEe2UuoshngsjNA" type="_F1afsLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_F6-8MLhUEe2UuoshngsjNA" name="getFlowNames" method="_GVZnXLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1Osv4Ee2QFfqiYSegRA">
                  <body>@return a String array with the flow names in their original order from the graph file</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6-8MbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F6-8MrhUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F6_jQLhUEe2UuoshngsjNA" name="getNodeIndex" method="_GVaOYLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1O8v4Ee2QFfqiYSegRA">
                  <body>@param nodeName the node to find the index of&#xD;
   * @return the index of the given node</body>
                </ownedComment>
                <ownedParameter xmi:id="_F6_jQbhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F6_jQrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F7AKULhUEe2UuoshngsjNA" name="getNodesInFlow" method="_GVaOY7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_Gsr1PMv4Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get node names from&#xD;
   * @return an empty array if the flow given doesn't exists, otherwise&#xD;
   * returns an array of the names of the nodes in the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_F7AKUbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F7AKUrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F7AKU7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F7AxYbhUEe2UuoshngsjNA" name="getHyperPeriod" method="_GVaOZ7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsscQMv4Ee2QFfqiYSegRA">
                  <body>Calculates the hyperPeriod, which is the smallest time period required to wait&#xD;
   * until all flows can be repeated.&#xD;
   * &#xD;
   * @return the hyperPeriod of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_F7AxYrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F7BYcLhUEe2UuoshngsjNA" name="getTotalTxAttemptsInFlow" method="_GVaOabhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsscQcv4Ee2QFfqiYSegRA">
                  <body>@param flowName the name of the flow being analyzed&#xD;
   * @return the total number of transmission attempts in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_F7BYcbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F7BYcrhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F7B_gLhUEe2UuoshngsjNA" name="getNumTxAttemptsPerLink" method="_GVaObLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsscQsv4Ee2QFfqiYSegRA">
                  <body>Calculates the number of transmission attempts for each link in a given flow.&#xD;
   * &#xD;
   * @param flowName the name of the flow being analyzed&#xD;
   * @return an array of the number of transmissions needed for each&#xD;
   * edge to meet E2E target</body>
                </ownedComment>
                <ownedParameter xmi:id="_F7B_gbhUEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_F7B_grhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_F7B_g7hUEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_F7D0sLhUEe2UuoshngsjNA" name="maxFlowLength" method="_GVa1c7hUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsscRMv4Ee2QFfqiYSegRA">
                  <body>@return the length of the longest flow in the WorkLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_F7D0sbhUEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_GP-UwbhUEe2UuoshngsjNA" name="addEdge" method="_GVa1cLhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsscQ8v4Ee2QFfqiYSegRA">
                  <body>Adds an edge to an existing node's list of connected edges.&#xD;
   * &#xD;
   * @param nodeName the node the edge is being added to&#xD;
   * @param edge the edge to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_GP-UwrhUEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GP-70LhUEe2UuoshngsjNA" name="edge" type="_F1G9sLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GR4ZQLhUEe2UuoshngsjNA" name="WorkLoad" visibility="package" method="_GVVV4LhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GR4ZRLhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GR4ZRbhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GsqnFsv4Ee2QFfqiYSegRA">
                  <body>Creates a new WorkLoad based on the provided file, packet reception rate, and end to end&#xD;
   * reliability. In addition to initializing the WorkLoad attributes, it will read the input&#xD;
   * file, built the AST of the graph, and build the node and flow data objects. This constructor&#xD;
   * sets the number of faults equal to 0.&#xD;
   * &#xD;
   * @param m the minimum packet reception rate to use for the Workload, between 0.0 and 1.0&#xD;
   * @param e2e the end to end communication reliability for the Workload, between 0.0 and 1.0&#xD;
   * @param inputFileName the file to develop the graph from</body>
                </ownedComment>
                <ownedParameter xmi:id="_GR4ZQbhUEe2UuoshngsjNA" name="m" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GR4ZQrhUEe2UuoshngsjNA" name="e2e" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GR4ZQ7hUEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GR4ZRrhUEe2UuoshngsjNA" type="_F6kFcLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GR5AULhUEe2UuoshngsjNA" name="WorkLoad" visibility="package" method="_GVVV5bhUEe2UuoshngsjNA">
                <eAnnotations xmi:id="_GR5nY7hUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_GR5nZLhUEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_GsqnF8v4Ee2QFfqiYSegRA">
                  <body>Creates a new WorkLoad based on the provided file, packet reception rate, and end to end&#xD;
   * reliability. In addition to initializing the WorkLoad attributes, it will read the input&#xD;
   * file, built the AST of the graph, and build the node and flow data objects.&#xD;
   * &#xD;
   * @param numFaults the number of faults per edge to use for the Workload, integer >= 0&#xD;
   * @param m the minimum packet reception rate to use for the Workload, between 0.0 and 1.0&#xD;
   * @param e2e the end to end communication reliability for the Workload, between 0.0 and 1.0&#xD;
   * @param inputFileName the file to develop the graph from</body>
                </ownedComment>
                <ownedParameter xmi:id="_GR5AUbhUEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GR5nYLhUEe2UuoshngsjNA" name="m" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GR5nYbhUEe2UuoshngsjNA" name="e2e" type="_GRQuMLhUEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_GR5nYrhUEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_GR5nZbhUEe2UuoshngsjNA" type="_F6kFcLhUEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GR6OcbhUEe2UuoshngsjNA" name="setMinPacketReceptionRate" method="_GVV89rhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOIsv4Ee2QFfqiYSegRA">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_GR6OcrhUEe2UuoshngsjNA" name="minPacketReceptionRate" type="_GRQuMLhUEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_GR61gLhUEe2UuoshngsjNA" name="setE2e" method="_GVWkALhUEe2UuoshngsjNA">
                <ownedComment xmi:id="_GsrOJcv4Ee2QFfqiYSegRA">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_GR61gbhUEe2UuoshngsjNA" name="e2e" type="_GRQuMLhUEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_GQsGcbhUEe2UuoshngsjNA" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_GRHkQLhUEe2UuoshngsjNA" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_GRMcwLhUEe2UuoshngsjNA" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_GRjpILhUEe2UuoshngsjNA" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_GRk3QLhUEe2UuoshngsjNA" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_GViKNbhUEe2UuoshngsjNA" name="" memberEnd="_GSdBAbhUEe2UuoshngsjNA _GVixQLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GVixQLhUEe2UuoshngsjNA" name="" type="_F1G9sLhUEe2UuoshngsjNA" association="_GViKNbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GVo34LhUEe2UuoshngsjNA" name="" memberEnd="_GTRgYLhUEe2UuoshngsjNA _GVo34bhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GVo34bhUEe2UuoshngsjNA" name="" type="_F37oMLhUEe2UuoshngsjNA" association="_GVo34LhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GVtwYLhUEe2UuoshngsjNA" name="" memberEnd="_GUEKk7hUEe2UuoshngsjNA _GVtwYbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GVtwYbhUEe2UuoshngsjNA" name="" type="_F6kFcLhUEe2UuoshngsjNA" association="_GVtwYLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GVtwYrhUEe2UuoshngsjNA" name="" memberEnd="_GUExoLhUEe2UuoshngsjNA _GVtwY7hUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GVtwY7hUEe2UuoshngsjNA" name="" type="_F6kFcLhUEe2UuoshngsjNA" association="_GVtwYrhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWJOMLhUEe2UuoshngsjNA" name="" memberEnd="_GWJOMbhUEe2UuoshngsjNA _GSKtIrhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWJOMbhUEe2UuoshngsjNA" name="" type="_Fz9uMLhUEe2UuoshngsjNA" association="_GWJOMLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWJ1QbhUEe2UuoshngsjNA" name="" memberEnd="_GWJ1QrhUEe2UuoshngsjNA _GSL7QLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWJ1QrhUEe2UuoshngsjNA" name="" type="_Fz9uMLhUEe2UuoshngsjNA" association="_GWJ1QbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWKcUbhUEe2UuoshngsjNA" name="" memberEnd="_GWKcUrhUEe2UuoshngsjNA _GSMiULhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWKcUrhUEe2UuoshngsjNA" name="" type="_Fz9uMLhUEe2UuoshngsjNA" association="_GWKcUbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWLDYbhUEe2UuoshngsjNA" name="" memberEnd="_GWLDYrhUEe2UuoshngsjNA _GSNwcrhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWLDYrhUEe2UuoshngsjNA" name="" type="_F0bBMLhUEe2UuoshngsjNA" association="_GWLDYbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWLqcbhUEe2UuoshngsjNA" name="" memberEnd="_GWLqcrhUEe2UuoshngsjNA _GSOXgbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWLqcrhUEe2UuoshngsjNA" name="" type="_F0bBMLhUEe2UuoshngsjNA" association="_GWLqcbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWMRgbhUEe2UuoshngsjNA" name="" memberEnd="_GWMRgrhUEe2UuoshngsjNA _GSQzwLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWMRgrhUEe2UuoshngsjNA" name="" type="_F0c2YLhUEe2UuoshngsjNA" association="_GWMRgbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWM4kbhUEe2UuoshngsjNA" name="" memberEnd="_GWM4krhUEe2UuoshngsjNA _GSRa0bhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWM4krhUEe2UuoshngsjNA" name="" type="_F0c2YLhUEe2UuoshngsjNA" association="_GWM4kbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWOGsLhUEe2UuoshngsjNA" name="" memberEnd="_GWOGsbhUEe2UuoshngsjNA _GSTQALhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWOGsbhUEe2UuoshngsjNA" name="" type="_F0erkLhUEe2UuoshngsjNA" association="_GWOGsLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWOtwbhUEe2UuoshngsjNA" name="" memberEnd="_GWOtwrhUEe2UuoshngsjNA _GSUeI7hUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWOtwrhUEe2UuoshngsjNA" name="" type="_F0n1gLhUEe2UuoshngsjNA" association="_GWOtwbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWPU0bhUEe2UuoshngsjNA" name="" memberEnd="_GWPU0rhUEe2UuoshngsjNA _GSVsQrhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWPU0rhUEe2UuoshngsjNA" name="" type="_F0n1gLhUEe2UuoshngsjNA" association="_GWPU0bhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWP74bhUEe2UuoshngsjNA" name="" memberEnd="_GWP74rhUEe2UuoshngsjNA _GSXhcbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWP74rhUEe2UuoshngsjNA" name="" type="_F04UMLhUEe2UuoshngsjNA" association="_GWP74bhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWQi8bhUEe2UuoshngsjNA" name="" memberEnd="_GWQi8rhUEe2UuoshngsjNA _GSZWobhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWQi8rhUEe2UuoshngsjNA" name="" type="_F04UMLhUEe2UuoshngsjNA" association="_GWQi8bhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWRKAbhUEe2UuoshngsjNA" name="" memberEnd="_GWRKArhUEe2UuoshngsjNA _GSgrYrhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWRKArhUEe2UuoshngsjNA" name="" type="_F1afsLhUEe2UuoshngsjNA" association="_GWRKAbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWRxEbhUEe2UuoshngsjNA" name="" memberEnd="_GWRxErhUEe2UuoshngsjNA _GSh5gbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWRxErhUEe2UuoshngsjNA" name="" type="_F1afsLhUEe2UuoshngsjNA" association="_GWRxEbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWS_MLhUEe2UuoshngsjNA" name="" memberEnd="_GWS_MbhUEe2UuoshngsjNA _GSigkbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWS_MbhUEe2UuoshngsjNA" name="" type="_F1afsLhUEe2UuoshngsjNA" association="_GWS_MLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWTmQLhUEe2UuoshngsjNA" name="" memberEnd="_GWTmQbhUEe2UuoshngsjNA _GSjHorhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWTmQbhUEe2UuoshngsjNA" name="" type="_F1afsLhUEe2UuoshngsjNA" association="_GWTmQLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWUNULhUEe2UuoshngsjNA" name="" memberEnd="_GWUNUbhUEe2UuoshngsjNA _GSjusbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWUNUbhUEe2UuoshngsjNA" name="" type="_F1afsLhUEe2UuoshngsjNA" association="_GWUNULhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWU0YLhUEe2UuoshngsjNA" name="" memberEnd="_GWU0YbhUEe2UuoshngsjNA _GSnZErhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWU0YbhUEe2UuoshngsjNA" name="" type="_F1sMgLhUEe2UuoshngsjNA" association="_GWU0YLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWVbcLhUEe2UuoshngsjNA" name="" memberEnd="_GWVbcbhUEe2UuoshngsjNA _GSonMbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWVbcbhUEe2UuoshngsjNA" name="" type="_F1sMgLhUEe2UuoshngsjNA" association="_GWVbcLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWVbc7hUEe2UuoshngsjNA" name="" memberEnd="_GWVbdLhUEe2UuoshngsjNA _GSpOQLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWVbdLhUEe2UuoshngsjNA" name="" type="_F10vYLhUEe2UuoshngsjNA" association="_GWVbc7hUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWWCgbhUEe2UuoshngsjNA" name="" memberEnd="_GWWCgrhUEe2UuoshngsjNA _GSp1ULhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWWCgrhUEe2UuoshngsjNA" name="" type="_F14ZwLhUEe2UuoshngsjNA" association="_GWWCgbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWWpkbhUEe2UuoshngsjNA" name="" memberEnd="_GWWpkrhUEe2UuoshngsjNA _GSqcYLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWWpkrhUEe2UuoshngsjNA" name="" type="_F14ZwLhUEe2UuoshngsjNA" association="_GWWpkbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWX3sLhUEe2UuoshngsjNA" name="" memberEnd="_GWX3sbhUEe2UuoshngsjNA _GSrDcbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWX3sbhUEe2UuoshngsjNA" name="" type="_F17dELhUEe2UuoshngsjNA" association="_GWX3sLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWZF0LhUEe2UuoshngsjNA" name="" memberEnd="_GWZF0bhUEe2UuoshngsjNA _GStfsrhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWZF0bhUEe2UuoshngsjNA" name="" type="_F2F1ILhUEe2UuoshngsjNA" association="_GWZF0LhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWZs4LhUEe2UuoshngsjNA" name="" memberEnd="_GWZs4bhUEe2UuoshngsjNA _GSut0LhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWZs4bhUEe2UuoshngsjNA" name="" type="_F2F1ILhUEe2UuoshngsjNA" association="_GWZs4LhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWaT8LhUEe2UuoshngsjNA" name="" memberEnd="_GWaT8bhUEe2UuoshngsjNA _GSvU4bhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWaT8bhUEe2UuoshngsjNA" name="" type="_F2F1ILhUEe2UuoshngsjNA" association="_GWaT8LhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWa7AbhUEe2UuoshngsjNA" name="" memberEnd="_GWa7ArhUEe2UuoshngsjNA _GSvU47hUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWa7ArhUEe2UuoshngsjNA" name="" type="_F2F1ILhUEe2UuoshngsjNA" association="_GWa7AbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWbiEbhUEe2UuoshngsjNA" name="" memberEnd="_GWbiErhUEe2UuoshngsjNA _GSv78bhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWbiErhUEe2UuoshngsjNA" name="" type="_F2F1ILhUEe2UuoshngsjNA" association="_GWbiEbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWcJILhUEe2UuoshngsjNA" name="" memberEnd="_GWcJIbhUEe2UuoshngsjNA _GSxKFLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWcJIbhUEe2UuoshngsjNA" name="" type="_F2KtoLhUEe2UuoshngsjNA" association="_GWcJILhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWcJI7hUEe2UuoshngsjNA" name="" memberEnd="_GWcJJLhUEe2UuoshngsjNA _GSxxIbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWcJJLhUEe2UuoshngsjNA" name="" type="_F2KtoLhUEe2UuoshngsjNA" association="_GWcJI7hUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWcwMbhUEe2UuoshngsjNA" name="" memberEnd="_GWcwMrhUEe2UuoshngsjNA _GSy_QrhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWcwMrhUEe2UuoshngsjNA" name="" type="_F2Q0QLhUEe2UuoshngsjNA" association="_GWcwMbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWdXQbhUEe2UuoshngsjNA" name="" memberEnd="_GWdXQrhUEe2UuoshngsjNA _GS1bg7hUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWdXQrhUEe2UuoshngsjNA" name="" type="_F2fdwLhUEe2UuoshngsjNA" association="_GWdXQbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWd-UbhUEe2UuoshngsjNA" name="" memberEnd="_GWd-UrhUEe2UuoshngsjNA _GS2CkbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWd-UrhUEe2UuoshngsjNA" name="" type="_F2fdwLhUEe2UuoshngsjNA" association="_GWd-UbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWelYbhUEe2UuoshngsjNA" name="" memberEnd="_GWelYrhUEe2UuoshngsjNA _GS2poLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWelYrhUEe2UuoshngsjNA" name="" type="_F2fdwLhUEe2UuoshngsjNA" association="_GWelYbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWfMcbhUEe2UuoshngsjNA" name="" memberEnd="_GWfMcrhUEe2UuoshngsjNA _GS3QsbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWfMcrhUEe2UuoshngsjNA" name="" type="_F2fdwLhUEe2UuoshngsjNA" association="_GWfMcbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWgakLhUEe2UuoshngsjNA" name="" memberEnd="_GWgakbhUEe2UuoshngsjNA _GS33wbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWgakbhUEe2UuoshngsjNA" name="" type="_F2fdwLhUEe2UuoshngsjNA" association="_GWgakLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWhBoLhUEe2UuoshngsjNA" name="" memberEnd="_GWhBobhUEe2UuoshngsjNA _GS4e0bhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWhBobhUEe2UuoshngsjNA" name="" type="_F2fdwLhUEe2UuoshngsjNA" association="_GWhBoLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWhosbhUEe2UuoshngsjNA" name="" memberEnd="_GWhosrhUEe2UuoshngsjNA _GS6UArhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWhosrhUEe2UuoshngsjNA" name="" type="_F2fdwLhUEe2UuoshngsjNA" association="_GWhosbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWi20LhUEe2UuoshngsjNA" name="" memberEnd="_GWi20bhUEe2UuoshngsjNA _GS7iIbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWi20bhUEe2UuoshngsjNA" name="" type="_F2fdwLhUEe2UuoshngsjNA" association="_GWi20LhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWjd4bhUEe2UuoshngsjNA" name="" memberEnd="_GWjd4rhUEe2UuoshngsjNA _GS9XU7hUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWjd4rhUEe2UuoshngsjNA" name="" type="_F29X0LhUEe2UuoshngsjNA" association="_GWjd4bhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWkE8bhUEe2UuoshngsjNA" name="" memberEnd="_GWkE8rhUEe2UuoshngsjNA _GS9-YbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWkE8rhUEe2UuoshngsjNA" name="" type="_F29X0LhUEe2UuoshngsjNA" association="_GWkE8bhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWksAbhUEe2UuoshngsjNA" name="" memberEnd="_GWksArhUEe2UuoshngsjNA _GS-lcLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWksArhUEe2UuoshngsjNA" name="" type="_F29X0LhUEe2UuoshngsjNA" association="_GWksAbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWlTEbhUEe2UuoshngsjNA" name="" memberEnd="_GWlTErhUEe2UuoshngsjNA _GTBBsbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWlTErhUEe2UuoshngsjNA" name="" type="_F29X0LhUEe2UuoshngsjNA" association="_GWlTEbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWl6IbhUEe2UuoshngsjNA" name="" memberEnd="_GWl6IrhUEe2UuoshngsjNA _GTEFALhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWl6IrhUEe2UuoshngsjNA" name="" type="_F29X0LhUEe2UuoshngsjNA" association="_GWl6IbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWmhMLhUEe2UuoshngsjNA" name="" memberEnd="_GWmhMbhUEe2UuoshngsjNA _GTGhQLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWmhMbhUEe2UuoshngsjNA" name="" type="_F3e8QLhUEe2UuoshngsjNA" association="_GWmhMLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWmhM7hUEe2UuoshngsjNA" name="" memberEnd="_GWmhNLhUEe2UuoshngsjNA _GTGhQrhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWmhNLhUEe2UuoshngsjNA" name="" type="_F3e8QLhUEe2UuoshngsjNA" association="_GWmhM7hUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWnIQbhUEe2UuoshngsjNA" name="" memberEnd="_GWnIQrhUEe2UuoshngsjNA _GTJkkLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWnIQrhUEe2UuoshngsjNA" name="" type="_F3yeQLhUEe2UuoshngsjNA" association="_GWnIQbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWnvUbhUEe2UuoshngsjNA" name="" memberEnd="_GWnvUrhUEe2UuoshngsjNA _GTJkkrhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWnvUrhUEe2UuoshngsjNA" name="" type="_F3yeQLhUEe2UuoshngsjNA" association="_GWnvUbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWoWYbhUEe2UuoshngsjNA" name="" memberEnd="_GWoWYrhUEe2UuoshngsjNA _GTKysbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWoWYrhUEe2UuoshngsjNA" name="" type="_F3zsYLhUEe2UuoshngsjNA" association="_GWoWYbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWo9cLhUEe2UuoshngsjNA" name="" memberEnd="_GWo9cbhUEe2UuoshngsjNA _GTRgYbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWo9cbhUEe2UuoshngsjNA" name="" type="_F37oMLhUEe2UuoshngsjNA" association="_GWo9cLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWo9c7hUEe2UuoshngsjNA" name="" memberEnd="_GWo9dLhUEe2UuoshngsjNA _GTSugLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWo9dLhUEe2UuoshngsjNA" name="" type="_F37oMLhUEe2UuoshngsjNA" association="_GWo9c7hUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWpkgbhUEe2UuoshngsjNA" name="" memberEnd="_GWpkgrhUEe2UuoshngsjNA _GTWY4bhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWpkgrhUEe2UuoshngsjNA" name="" type="_F4UpwLhUEe2UuoshngsjNA" association="_GWpkgbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWqLkbhUEe2UuoshngsjNA" name="" memberEnd="_GWqLkrhUEe2UuoshngsjNA _GTW_8LhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWqLkrhUEe2UuoshngsjNA" name="" type="_F4UpwLhUEe2UuoshngsjNA" association="_GWqLkbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWqyoLhUEe2UuoshngsjNA" name="" memberEnd="_GWqyobhUEe2UuoshngsjNA _GTbRYLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWqyobhUEe2UuoshngsjNA" name="" type="_F48U0LhUEe2UuoshngsjNA" association="_GWqyoLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWrZsbhUEe2UuoshngsjNA" name="" memberEnd="_GWrZsrhUEe2UuoshngsjNA _GTb4cLhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWrZsrhUEe2UuoshngsjNA" name="" type="_F48U0LhUEe2UuoshngsjNA" association="_GWrZsbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWsAwbhUEe2UuoshngsjNA" name="" memberEnd="_GWsAwrhUEe2UuoshngsjNA _GTb4crhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWsAwrhUEe2UuoshngsjNA" name="" type="_F48U0LhUEe2UuoshngsjNA" association="_GWsAwbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWt18LhUEe2UuoshngsjNA" name="" memberEnd="_GWt18bhUEe2UuoshngsjNA _GTdtobhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWt18bhUEe2UuoshngsjNA" name="" type="_F48U0LhUEe2UuoshngsjNA" association="_GWt18LhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWudAbhUEe2UuoshngsjNA" name="" memberEnd="_GWudArhUEe2UuoshngsjNA _GTeUsbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWudArhUEe2UuoshngsjNA" name="" type="_F48U0LhUEe2UuoshngsjNA" association="_GWudAbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWvEEbhUEe2UuoshngsjNA" name="" memberEnd="_GWvEErhUEe2UuoshngsjNA _GTe7wbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWvEErhUEe2UuoshngsjNA" name="" type="_F48U0LhUEe2UuoshngsjNA" association="_GWvEEbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWvrIbhUEe2UuoshngsjNA" name="" memberEnd="_GWvrIrhUEe2UuoshngsjNA _GTfi0bhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWvrIrhUEe2UuoshngsjNA" name="" type="_F48U0LhUEe2UuoshngsjNA" association="_GWvrIbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWwSMLhUEe2UuoshngsjNA" name="" memberEnd="_GWwSMbhUEe2UuoshngsjNA _GTgw8LhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWwSMbhUEe2UuoshngsjNA" name="" type="_F5E3sLhUEe2UuoshngsjNA" association="_GWwSMLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWwSM7hUEe2UuoshngsjNA" name="" memberEnd="_GWwSNLhUEe2UuoshngsjNA _GTzE0bhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWwSNLhUEe2UuoshngsjNA" name="" type="_F5gVgLhUEe2UuoshngsjNA" association="_GWwSM7hUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWw5QbhUEe2UuoshngsjNA" name="" memberEnd="_GWw5QrhUEe2UuoshngsjNA _GTzr4bhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWw5QrhUEe2UuoshngsjNA" name="" type="_F5gVgLhUEe2UuoshngsjNA" association="_GWw5QbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWxgUbhUEe2UuoshngsjNA" name="" memberEnd="_GWxgUrhUEe2UuoshngsjNA _GT06ALhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWxgUrhUEe2UuoshngsjNA" name="" type="_F5tJ0LhUEe2UuoshngsjNA" association="_GWxgUbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWxgVLhUEe2UuoshngsjNA" name="" memberEnd="_GWxgVbhUEe2UuoshngsjNA _GT2IILhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWxgVbhUEe2UuoshngsjNA" name="" type="_F5tJ0LhUEe2UuoshngsjNA" association="_GWxgVLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWyHYbhUEe2UuoshngsjNA" name="" memberEnd="_GWyHYrhUEe2UuoshngsjNA _GT2vMbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWyHYrhUEe2UuoshngsjNA" name="" type="_F5tJ0LhUEe2UuoshngsjNA" association="_GWyHYbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWyucbhUEe2UuoshngsjNA" name="" memberEnd="_GWyucrhUEe2UuoshngsjNA _GT3WQbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWyucrhUEe2UuoshngsjNA" name="" type="_F5tJ0LhUEe2UuoshngsjNA" association="_GWyucbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWzVgLhUEe2UuoshngsjNA" name="" memberEnd="_GWzVgbhUEe2UuoshngsjNA _GT39ULhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWzVgbhUEe2UuoshngsjNA" name="" type="_F5tJ0LhUEe2UuoshngsjNA" association="_GWzVgLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWzVg7hUEe2UuoshngsjNA" name="" memberEnd="_GWzVhLhUEe2UuoshngsjNA _GT7ns7hUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWzVhLhUEe2UuoshngsjNA" name="" type="_F6ChALhUEe2UuoshngsjNA" association="_GWzVg7hUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GWz8kbhUEe2UuoshngsjNA" name="" memberEnd="_GWz8krhUEe2UuoshngsjNA _GT810LhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GWz8krhUEe2UuoshngsjNA" name="" type="_F6ChALhUEe2UuoshngsjNA" association="_GWz8kbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GW0jobhUEe2UuoshngsjNA" name="" memberEnd="_GW0jorhUEe2UuoshngsjNA _GT9c4LhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GW0jorhUEe2UuoshngsjNA" name="" type="_F6Kc0LhUEe2UuoshngsjNA" association="_GW0jobhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GW1KsbhUEe2UuoshngsjNA" name="" memberEnd="_GW1KsrhUEe2UuoshngsjNA _GT_SELhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GW1KsrhUEe2UuoshngsjNA" name="" type="_F6OHMLhUEe2UuoshngsjNA" association="_GW1KsbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GW1KtLhUEe2UuoshngsjNA" name="" memberEnd="_GW1KtbhUEe2UuoshngsjNA _GT_5ILhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GW1KtbhUEe2UuoshngsjNA" name="" type="_F6OHMLhUEe2UuoshngsjNA" association="_GW1KtLhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GW3m8LhUEe2UuoshngsjNA" name="" memberEnd="_GW3m8bhUEe2UuoshngsjNA _GUFYsbhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GW3m8bhUEe2UuoshngsjNA" name="" type="_F6kFcLhUEe2UuoshngsjNA" association="_GW3m8LhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GW4OAbhUEe2UuoshngsjNA" name="" memberEnd="_GW4OArhUEe2UuoshngsjNA _GUF_wrhUEe2UuoshngsjNA">
              <ownedEnd xmi:id="_GW4OArhUEe2UuoshngsjNA" name="" type="_F6kFcLhUEe2UuoshngsjNA" association="_GW4OAbhUEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_GsuRcMv4Ee2QFfqiYSegRA" name="" memberEnd="_GsuRccv4Ee2QFfqiYSegRA _GsjSUcv4Ee2QFfqiYSegRA">
              <ownedEnd xmi:id="_GsuRccv4Ee2QFfqiYSegRA" name="" type="_F3rJgLhUEe2UuoshngsjNA" association="_GsuRcMv4Ee2QFfqiYSegRA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_FuIL8LhUEe2UuoshngsjNA" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_GNC8kbhUEe2UuoshngsjNA" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_GNDjobhUEe2UuoshngsjNA" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_GNEKsbhUEe2UuoshngsjNA" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_GRuBMLhUEe2UuoshngsjNA" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_Fu19oLhUEe2UuoshngsjNA" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_GN87gLhUEe2UuoshngsjNA" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Fs-VYLhUEe2UuoshngsjNA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_Fs-VYbhUEe2UuoshngsjNA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_Ftgg4LhUEe2UuoshngsjNA" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_GMlpkLhUEe2UuoshngsjNA" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Fw6aMLhUEe2UuoshngsjNA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_GP6qYbhUEe2UuoshngsjNA" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_F3p7YLhUEe2UuoshngsjNA" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GMPrULhUEe2UuoshngsjNA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GMRggLhUEe2UuoshngsjNA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GMSHkbhUEe2UuoshngsjNA" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GMSuobhUEe2UuoshngsjNA" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GMTVsbhUEe2UuoshngsjNA" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GMuMcLhUEe2UuoshngsjNA" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GNm9QLhUEe2UuoshngsjNA" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GN-JoLhUEe2UuoshngsjNA" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GOiKULhUEe2UuoshngsjNA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GOixYLhUEe2UuoshngsjNA" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GPfzoLhUEe2UuoshngsjNA" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GPgasbhUEe2UuoshngsjNA" name="Scanner"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GP5cQLhUEe2UuoshngsjNA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GP6DUbhUEe2UuoshngsjNA" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Ft1RALhUEe2UuoshngsjNA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_GMyd4bhUEe2UuoshngsjNA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GMyd47hUEe2UuoshngsjNA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNWekLhUEe2UuoshngsjNA" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNXFobhUEe2UuoshngsjNA" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Ft1RAbhUEe2UuoshngsjNA" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_Ft1RArhUEe2UuoshngsjNA" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_GMzE8bhUEe2UuoshngsjNA" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_GMzsAbhUEe2UuoshngsjNA" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_GM0TELhUEe2UuoshngsjNA" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_FuQu0LhUEe2UuoshngsjNA" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_GNQX8LhUEe2UuoshngsjNA" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_GQZykLhUEe2UuoshngsjNA" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_GQZykbhUEe2UuoshngsjNA" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GQ46wLhUEe2UuoshngsjNA" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_GRQuMLhUEe2UuoshngsjNA" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Ft0p8LhUEe2UuoshngsjNA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_Ft0p8bhUEe2UuoshngsjNA" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_Ft0p8rhUEe2UuoshngsjNA" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_GMx20LhUEe2UuoshngsjNA" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Ft1RA7hUEe2UuoshngsjNA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_Ft1RBLhUEe2UuoshngsjNA" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_FuQu0bhUEe2UuoshngsjNA" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_GNS0MbhUEe2UuoshngsjNA" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_GNTbQbhUEe2UuoshngsjNA" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_GM0TErhUEe2UuoshngsjNA" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNQ_AbhUEe2UuoshngsjNA" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNRmEbhUEe2UuoshngsjNA" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNSNIbhUEe2UuoshngsjNA" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_FuHk4LhUEe2UuoshngsjNA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_FuHk4bhUEe2UuoshngsjNA" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_FuHk4rhUEe2UuoshngsjNA" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_FuHk47hUEe2UuoshngsjNA" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_FuHk5LhUEe2UuoshngsjNA" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_GNBucbhUEe2UuoshngsjNA" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_GNCVgbhUEe2UuoshngsjNA" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_GM_SMLhUEe2UuoshngsjNA" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_GM_5QbhUEe2UuoshngsjNA" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_GNBHYbhUEe2UuoshngsjNA" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_FwxQQLhUEe2UuoshngsjNA" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_FwxQQbhUEe2UuoshngsjNA" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_FwxQQrhUEe2UuoshngsjNA" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_GP0jwLhUEe2UuoshngsjNA" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_GP1K0bhUEe2UuoshngsjNA" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_GP1x4bhUEe2UuoshngsjNA" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_FuKBIbhUEe2UuoshngsjNA" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_GNF_4bhUEe2UuoshngsjNA" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GNHOA7hUEe2UuoshngsjNA" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GNIcI7hUEe2UuoshngsjNA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GNJqQ7hUEe2UuoshngsjNA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GNNUobhUEe2UuoshngsjNA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GNOiwrhUEe2UuoshngsjNA" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPpkoLhUEe2UuoshngsjNA" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPrZ0rhUEe2UuoshngsjNA" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPt2ELhUEe2UuoshngsjNA" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPvEM7hUEe2UuoshngsjNA" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_FwFTwLhUEe2UuoshngsjNA" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_GPHZILhUEe2UuoshngsjNA" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPIAMbhUEe2UuoshngsjNA" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPInQbhUEe2UuoshngsjNA" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPJOUbhUEe2UuoshngsjNA" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPJ1YLhUEe2UuoshngsjNA" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_FwT9QLhUEe2UuoshngsjNA" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_GPP8ALhUEe2UuoshngsjNA" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPSYQrhUEe2UuoshngsjNA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPTmYrhUEe2UuoshngsjNA" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPU0gLhUEe2UuoshngsjNA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPVbk7hUEe2UuoshngsjNA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_GPWps7hUEe2UuoshngsjNA" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_EENn0LhUEe2UuoshngsjNA">
      <eAnnotations xmi:id="_EENn0bhUEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_EEOO4LhUEe2UuoshngsjNA" base_Package="_D4jxcLhUEe2UuoshngsjNA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_Fz7R8LhUEe2UuoshngsjNA" genericsValue="T,E" base_Element="_Fz6D0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Fz_jYLhUEe2UuoshngsjNA" base_Element="_Fz-8U7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F0AKcLhUEe2UuoshngsjNA" base_Element="_Fz-8U7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F0AKcbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_F0AxgLhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_F0AKcrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F0BYkLhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_F0AxgbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F0CmsLhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_F0B_oLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F0Eb4LhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_F0DNwLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F0FC8LhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_F0Eb4bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F0kLILhUEe2UuoshngsjNA" genericsValue="String" base_Element="_F0i9A7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F0q40LhUEe2UuoshngsjNA" genericsValue="String" base_Element="_F0qRwLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F06wcLhUEe2UuoshngsjNA" base_Element="_F06JYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F06wcbhUEe2UuoshngsjNA" base_Element="_F06JYLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F06wcrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F07XgbhUEe2UuoshngsjNA" base_Element="_F07XgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F07-kLhUEe2UuoshngsjNA" base_Element="_F07XgLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F07-kbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F07-k7hUEe2UuoshngsjNA" base_Element="_F07-krhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F08loLhUEe2UuoshngsjNA" base_Element="_F07-krhUEe2UuoshngsjNA">
    <annotations xmi:id="_F08lobhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_F1CFMLhUEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_F1BeILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F1FvkLhUEe2UuoshngsjNA" base_Element="_F1FIg7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F1FvkbhUEe2UuoshngsjNA" base_Element="_F1FIg7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F1FvkrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F1Iy4LhUEe2UuoshngsjNA" base_Element="_F1IL0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F1NEUbhUEe2UuoshngsjNA" base_Element="_F1MdQLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F1NEUrhUEe2UuoshngsjNA" base_Element="_F1MdQLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F1NrYLhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F1OScLhUEe2UuoshngsjNA" base_Element="_F1NrYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F1OScbhUEe2UuoshngsjNA" base_Element="_F1NrYbhUEe2UuoshngsjNA">
    <annotations xmi:id="_F1OScrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F1O5gLhUEe2UuoshngsjNA" base_Element="_F1OSc7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F1O5gbhUEe2UuoshngsjNA" base_Element="_F1OSc7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F1O5grhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_F1fYMLhUEe2UuoshngsjNA" genericsValue="Node" base_Element="_F1eKErhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F1gmULhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_F1f_QLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F1h0cLhUEe2UuoshngsjNA" genericsValue="Integer" base_Element="_F1hNYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F1k3wLhUEe2UuoshngsjNA" base_Element="_F1kQsLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F1k3wbhUEe2UuoshngsjNA" base_Element="_F1kQsLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F1k3wrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F1uBsbhUEe2UuoshngsjNA" base_Element="_F1uBsLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F1uowLhUEe2UuoshngsjNA" base_Element="_F1uBsLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F1uowbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_F16O8rhUEe2UuoshngsjNA" dimensions="2" base_Element="_F15n47hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F2Nw8LhUEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_F2NJ4LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F2PmILhUEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_F2O_ELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F2UeoLhUEe2UuoshngsjNA" base_Element="_F2T3kLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F2UeobhUEe2UuoshngsjNA" base_Element="_F2T3kLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F2UeorhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F2WT0LhUEe2UuoshngsjNA" base_Element="_F2VswLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F2WT0bhUEe2UuoshngsjNA" base_Element="_F2VswLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F2WT0rhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F2W64LhUEe2UuoshngsjNA" base_Element="_F2WT07hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F2W64bhUEe2UuoshngsjNA" base_Element="_F2WT07hUEe2UuoshngsjNA">
    <annotations xmi:id="_F2W64rhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F2dBgLhUEe2UuoshngsjNA" base_Element="_F2cacLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F2dBgbhUEe2UuoshngsjNA" base_Element="_F2cacLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F2dBgrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_F2e2sLhUEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_F2dokLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F2hS8LhUEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_F2gr4LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F2h6ALhUEe2UuoshngsjNA" genericsValue="String" base_Element="_F2hS8bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_F2ihE7hUEe2UuoshngsjNA" base_Element="_F2ihELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F2zm0LhUEe2UuoshngsjNA" base_Element="_F2y_wLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F2zm0bhUEe2UuoshngsjNA" base_Element="_F2y_wLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F2zm0rhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_F28JsLhUEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_F234QLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3LaQLhUEe2UuoshngsjNA" base_Element="_F3KzMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3LaQbhUEe2UuoshngsjNA" base_Element="_F3KzMLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3LaQrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3MoYbhUEe2UuoshngsjNA" base_Element="_F3MBUrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3NPcLhUEe2UuoshngsjNA" base_Element="_F3MBUrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3NPcbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3N2gLhUEe2UuoshngsjNA" base_Element="_F3NPcrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3PrsLhUEe2UuoshngsjNA" base_Element="_F3NPcrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3PrsbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3Q50bhUEe2UuoshngsjNA" base_Element="_F3Q50LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3Rg4LhUEe2UuoshngsjNA" base_Element="_F3Q50LhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3Rg4bhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3SH8LhUEe2UuoshngsjNA" base_Element="_F3Rg4rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3SvALhUEe2UuoshngsjNA" base_Element="_F3Rg4rhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3SvAbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3TWELhUEe2UuoshngsjNA" base_Element="_F3SvArhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3TWEbhUEe2UuoshngsjNA" base_Element="_F3SvArhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3TWErhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3T9IbhUEe2UuoshngsjNA" base_Element="_F3TWE7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3T9IrhUEe2UuoshngsjNA" base_Element="_F3TWE7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F3T9I7hUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3VLQLhUEe2UuoshngsjNA" base_Element="_F3UkMbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3VLQbhUEe2UuoshngsjNA" base_Element="_F3UkMbhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3VLQrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_F3VyULhUEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_F3VLQ7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3fjUbhUEe2UuoshngsjNA" base_Element="_F3fjULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3gKYLhUEe2UuoshngsjNA" base_Element="_F3fjULhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3gKYbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3gxcLhUEe2UuoshngsjNA" base_Element="_F3gKYrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3gxcbhUEe2UuoshngsjNA" base_Element="_F3gKYrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3gxcrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3hYgLhUEe2UuoshngsjNA" base_Element="_F3gxc7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3hYgbhUEe2UuoshngsjNA" base_Element="_F3gxc7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F3hYgrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_F3h_k7hUEe2UuoshngsjNA" dimensions="1" base_Element="_F3h_kLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3imoLhUEe2UuoshngsjNA" base_Element="_F3h_kLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3jNsLhUEe2UuoshngsjNA" base_Element="_F3h_kLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3jNsbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_F3j0wrhUEe2UuoshngsjNA" dimensions="2" base_Element="_F3jNsrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F3kb0LhUEe2UuoshngsjNA" base_Element="_F3jNsrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F3kb0bhUEe2UuoshngsjNA" base_Element="_F3jNsrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F3kb0rhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_F3nfILhUEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_F3m4ELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F3otQLhUEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_F3oGMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_F3p7YbhUEe2UuoshngsjNA" base_Element="_F3p7YLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F3qicbhUEe2UuoshngsjNA" genericsValue="T" base_Element="_F3qicLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F306gbhUEe2UuoshngsjNA" base_Element="_F306gLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F31hkLhUEe2UuoshngsjNA" base_Element="_F306gLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F31hkbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_F35L8LhUEe2UuoshngsjNA" genericsValue="T" base_Element="_F33WwLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F4AgsLhUEe2UuoshngsjNA" genericsValue="Integer" base_Element="_F3_5obhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F4SNgLhUEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_F4RmcLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F4UCsLhUEe2UuoshngsjNA" genericsValue="T" base_Element="_F4TboLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F4nksLhUEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_F4m9oLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F4oy0LhUEe2UuoshngsjNA" genericsValue="T" base_Element="_F4oLw7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F4qoALhUEe2UuoshngsjNA" base_Element="_F4qA8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F4wHkLhUEe2UuoshngsjNA" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_F4vggLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F44DYLhUEe2UuoshngsjNA" base_Element="_F43cULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F45RgbhUEe2UuoshngsjNA" base_Element="_F45RgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F4-KAbhUEe2UuoshngsjNA" base_Element="_F4-KALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F4-xELhUEe2UuoshngsjNA" base_Element="_F4-KALhUEe2UuoshngsjNA">
    <annotations xmi:id="_F4-xEbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F4_YILhUEe2UuoshngsjNA" base_Element="_F4-xErhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F4__MLhUEe2UuoshngsjNA" base_Element="_F4-xErhUEe2UuoshngsjNA">
    <annotations xmi:id="_F4__MbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F5AmQLhUEe2UuoshngsjNA" base_Element="_F4__MrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F5AmQbhUEe2UuoshngsjNA" base_Element="_F4__MrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F5AmQrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_F5LlYLhUEe2UuoshngsjNA" base_Element="_F5K-ULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_F5MMcLhUEe2UuoshngsjNA" dimensions="2" base_Element="_F5LlYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_F5STEbhUEe2UuoshngsjNA" base_Element="_F5RsAbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_F5UvULhUEe2UuoshngsjNA" dimensions="1" base_Element="_F5UIQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F5fucLhUEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_F5fHYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_F5iKsLhUEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_F5g8lLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F5uX8bhUEe2UuoshngsjNA" base_Element="_F5uX8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F5u_ALhUEe2UuoshngsjNA" base_Element="_F5uX8LhUEe2UuoshngsjNA">
    <annotations xmi:id="_F5u_AbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F5vmELhUEe2UuoshngsjNA" base_Element="_F5u_ArhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F5vmEbhUEe2UuoshngsjNA" base_Element="_F5u_ArhUEe2UuoshngsjNA">
    <annotations xmi:id="_F5vmErhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F5wNILhUEe2UuoshngsjNA" base_Element="_F5vmE7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F5wNIbhUEe2UuoshngsjNA" base_Element="_F5vmE7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F5wNIrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F5w0MLhUEe2UuoshngsjNA" base_Element="_F5wNI7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F5xbQLhUEe2UuoshngsjNA" base_Element="_F5wNI7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F5xbQbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F5ypYLhUEe2UuoshngsjNA" base_Element="_F5yCULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F5ypYbhUEe2UuoshngsjNA" base_Element="_F5yCULhUEe2UuoshngsjNA">
    <annotations xmi:id="_F5zQcLhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F5zQcrhUEe2UuoshngsjNA" base_Element="_F5zQcbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F5z3gLhUEe2UuoshngsjNA" base_Element="_F5zQcbhUEe2UuoshngsjNA">
    <annotations xmi:id="_F5z3gbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F50ekbhUEe2UuoshngsjNA" base_Element="_F5z3grhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F50ekrhUEe2UuoshngsjNA" base_Element="_F5z3grhUEe2UuoshngsjNA">
    <annotations xmi:id="_F51FoLhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F51Fo7hUEe2UuoshngsjNA" base_Element="_F51FobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F51ssLhUEe2UuoshngsjNA" base_Element="_F51FobhUEe2UuoshngsjNA">
    <annotations xmi:id="_F51ssbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F52TwbhUEe2UuoshngsjNA" base_Element="_F51ssrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F5260LhUEe2UuoshngsjNA" base_Element="_F51ssrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F5260bhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F52607hUEe2UuoshngsjNA" base_Element="_F5260rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F53h4LhUEe2UuoshngsjNA" base_Element="_F5260rhUEe2UuoshngsjNA">
    <annotations xmi:id="_F53h4bhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F54I8LhUEe2UuoshngsjNA" base_Element="_F53h4rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F54I8bhUEe2UuoshngsjNA" base_Element="_F53h4rhUEe2UuoshngsjNA">
    <annotations xmi:id="_F54I8rhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F54wAbhUEe2UuoshngsjNA" base_Element="_F54I87hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F55XELhUEe2UuoshngsjNA" base_Element="_F54I87hUEe2UuoshngsjNA">
    <annotations xmi:id="_F55XEbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F55XFLhUEe2UuoshngsjNA" base_Element="_F55XErhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F55-ILhUEe2UuoshngsjNA" base_Element="_F55XErhUEe2UuoshngsjNA">
    <annotations xmi:id="_F55-IbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F56lMLhUEe2UuoshngsjNA" base_Element="_F55-IrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F56lMbhUEe2UuoshngsjNA" base_Element="_F55-IrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F56lMrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F57zULhUEe2UuoshngsjNA" base_Element="_F56lM7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F58aYLhUEe2UuoshngsjNA" base_Element="_F56lM7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F58aYbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F58aY7hUEe2UuoshngsjNA" base_Element="_F58aYrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F59ogLhUEe2UuoshngsjNA" base_Element="_F58aYrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F59ogbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6EWMbhUEe2UuoshngsjNA" base_Element="_F6EWMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6E9QLhUEe2UuoshngsjNA" base_Element="_F6EWMLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6E9QbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6FkULhUEe2UuoshngsjNA" base_Element="_F6E9QrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6GLYLhUEe2UuoshngsjNA" base_Element="_F6E9QrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6GLYbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6GycrhUEe2UuoshngsjNA" base_Element="_F6GycLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6HZgLhUEe2UuoshngsjNA" base_Element="_F6GycLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6HZgbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6TmwLhUEe2UuoshngsjNA" base_Element="_F6S_sLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6TmwbhUEe2UuoshngsjNA" base_Element="_F6S_sLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6TmwrhUEe2UuoshngsjNA" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6TmxLhUEe2UuoshngsjNA" base_Element="_F6Tmw7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6UN0LhUEe2UuoshngsjNA" base_Element="_F6Tmw7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6UN0bhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6UN07hUEe2UuoshngsjNA" base_Element="_F6UN0rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6U04LhUEe2UuoshngsjNA" base_Element="_F6UN0rhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6U04bhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6U047hUEe2UuoshngsjNA" base_Element="_F6U04rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6Vb8LhUEe2UuoshngsjNA" base_Element="_F6U04rhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6Vb8bhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6Vb87hUEe2UuoshngsjNA" base_Element="_F6Vb8rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6WDALhUEe2UuoshngsjNA" base_Element="_F6Vb8rhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6WDAbhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6WqEbhUEe2UuoshngsjNA" base_Element="_F6WqELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6WqErhUEe2UuoshngsjNA" base_Element="_F6WqELhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6WqE7hUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6WqFbhUEe2UuoshngsjNA" base_Element="_F6WqFLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6XRILhUEe2UuoshngsjNA" base_Element="_F6WqFLhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6XRIbhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6XRI7hUEe2UuoshngsjNA" base_Element="_F6XRIrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6XRJLhUEe2UuoshngsjNA" base_Element="_F6XRIrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6XRJbhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6X4MLhUEe2UuoshngsjNA" base_Element="_F6XRJrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6X4MbhUEe2UuoshngsjNA" base_Element="_F6XRJrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6X4MrhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6YfQLhUEe2UuoshngsjNA" base_Element="_F6X4M7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6YfQbhUEe2UuoshngsjNA" base_Element="_F6X4M7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6YfQrhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6ZGULhUEe2UuoshngsjNA" base_Element="_F6YfQ7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6ZGUbhUEe2UuoshngsjNA" base_Element="_F6YfQ7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6ZGUrhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6ZtYLhUEe2UuoshngsjNA" base_Element="_F6ZGU7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6ZtYbhUEe2UuoshngsjNA" base_Element="_F6ZGU7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6ZtYrhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6a7gLhUEe2UuoshngsjNA" base_Element="_F6ZtY7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6a7gbhUEe2UuoshngsjNA" base_Element="_F6ZtY7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6a7grhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6bikLhUEe2UuoshngsjNA" base_Element="_F6a7g7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6bikbhUEe2UuoshngsjNA" base_Element="_F6a7g7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6bikrhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6cJoLhUEe2UuoshngsjNA" base_Element="_F6bik7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6cJobhUEe2UuoshngsjNA" base_Element="_F6bik7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6cJorhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6cwsLhUEe2UuoshngsjNA" base_Element="_F6cJo7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6dXwLhUEe2UuoshngsjNA" base_Element="_F6cJo7hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6dXwbhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6d-0LhUEe2UuoshngsjNA" base_Element="_F6dXwrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6d-0bhUEe2UuoshngsjNA" base_Element="_F6dXwrhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6d-0rhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6el4LhUEe2UuoshngsjNA" base_Element="_F6d-07hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6el4bhUEe2UuoshngsjNA" base_Element="_F6d-07hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6el4rhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6fM8LhUEe2UuoshngsjNA" base_Element="_F6el47hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6fM8bhUEe2UuoshngsjNA" base_Element="_F6el47hUEe2UuoshngsjNA">
    <annotations xmi:id="_F6fM8rhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6f0AbhUEe2UuoshngsjNA" base_Element="_F6f0ALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6f0ArhUEe2UuoshngsjNA" base_Element="_F6f0ALhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6f0A7hUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6gbEbhUEe2UuoshngsjNA" base_Element="_F6gbELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6gbErhUEe2UuoshngsjNA" base_Element="_F6gbELhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6hCILhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6hCIrhUEe2UuoshngsjNA" base_Element="_F6hCIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6hCI7hUEe2UuoshngsjNA" base_Element="_F6hCIbhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6hpMLhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_F6hpMrhUEe2UuoshngsjNA" base_Element="_F6hpMbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_F6iQQLhUEe2UuoshngsjNA" base_Element="_F6hpMbhUEe2UuoshngsjNA">
    <annotations xmi:id="_F6iQQbhUEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_F69uE7hUEe2UuoshngsjNA" base_Element="_F69uELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_F6-8M7hUEe2UuoshngsjNA" dimensions="1" base_Element="_F6-8MLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_F7AxYLhUEe2UuoshngsjNA" dimensions="0" base_Element="_F7AKULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_F7CmkLhUEe2UuoshngsjNA" base_Element="_F7B_gLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMQSYLhUEe2UuoshngsjNA" base_Element="_GMPrULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMSHkLhUEe2UuoshngsjNA" base_Element="_GMRggLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMSuoLhUEe2UuoshngsjNA" base_Element="_GMSHkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMTVsLhUEe2UuoshngsjNA" base_Element="_GMSuobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMT8wLhUEe2UuoshngsjNA" base_Element="_GMTVsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GMWZA7hUEe2UuoshngsjNA" base_Element="_GMWZALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GMXAELhUEe2UuoshngsjNA" base_Element="_GMWZALhUEe2UuoshngsjNA">
    <annotations xmi:id="_GMXAEbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GMaqcLhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_GMaDYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GMbRgLhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_GMaqcrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GMe74LhUEe2UuoshngsjNA" genericsValue="String, Activation" base_Element="_GMeU0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMmQoLhUEe2UuoshngsjNA" base_Element="_GMlpkLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GMpT8bhUEe2UuoshngsjNA" base_Element="_GMos5rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GMpT8rhUEe2UuoshngsjNA" base_Element="_GMos5rhUEe2UuoshngsjNA">
    <annotations xmi:id="_GMpT87hUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GMuMcbhUEe2UuoshngsjNA" base_Element="_GMuMcLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GMwosLhUEe2UuoshngsjNA" base_Element="_GMwBoLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GMwosbhUEe2UuoshngsjNA" base_Element="_GMwBoLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GMwosrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GMyd4LhUEe2UuoshngsjNA" base_Element="_GMx20LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMyd4rhUEe2UuoshngsjNA" base_Element="_GMyd4bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMzE8LhUEe2UuoshngsjNA" base_Element="_GMyd47hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMzsALhUEe2UuoshngsjNA" base_Element="_GMzE8bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GMzsArhUEe2UuoshngsjNA" base_Element="_GMzsAbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GM0TEbhUEe2UuoshngsjNA" base_Element="_GM0TELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GM06ILhUEe2UuoshngsjNA" base_Element="_GM0TErhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GM4kgLhUEe2UuoshngsjNA" base_Element="_GM39cLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GM4kgbhUEe2UuoshngsjNA" base_Element="_GM39cLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GM4kgrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GM7n0bhUEe2UuoshngsjNA" genericsValue="String, Flow" base_Element="_GM7n0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GM818LhUEe2UuoshngsjNA" genericsValue="Node, Activation" base_Element="_GM8O4LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GM_5QLhUEe2UuoshngsjNA" base_Element="_GM_SMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNBHYLhUEe2UuoshngsjNA" base_Element="_GM_5QbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNBucLhUEe2UuoshngsjNA" base_Element="_GNBHYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNCVgLhUEe2UuoshngsjNA" base_Element="_GNBucbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNC8kLhUEe2UuoshngsjNA" base_Element="_GNCVgbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNDjoLhUEe2UuoshngsjNA" base_Element="_GNC8kbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNEKsLhUEe2UuoshngsjNA" base_Element="_GNDjobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNExwLhUEe2UuoshngsjNA" base_Element="_GNEKsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNGm8LhUEe2UuoshngsjNA" base_Element="_GNF_4bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GNHOALhUEe2UuoshngsjNA" base_Element="_GNGm8bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GNHOAbhUEe2UuoshngsjNA" base_Element="_GNGm8bhUEe2UuoshngsjNA">
    <annotations xmi:id="_GNHOArhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GNH1ELhUEe2UuoshngsjNA" base_Element="_GNHOA7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GNIcILhUEe2UuoshngsjNA" base_Element="_GNH1EbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GNIcIbhUEe2UuoshngsjNA" base_Element="_GNH1EbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GNIcIrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GNJDMLhUEe2UuoshngsjNA" base_Element="_GNIcI7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GNJqQLhUEe2UuoshngsjNA" base_Element="_GNJDMbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GNJqQbhUEe2UuoshngsjNA" base_Element="_GNJDMbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GNJqQrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GNLfcLhUEe2UuoshngsjNA" base_Element="_GNJqQ7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GNLfc7hUEe2UuoshngsjNA" base_Element="_GNLfcbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GNMGgLhUEe2UuoshngsjNA" base_Element="_GNLfcbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GNNUoLhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GNN7sLhUEe2UuoshngsjNA" base_Element="_GNNUobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GNN7s7hUEe2UuoshngsjNA" base_Element="_GNN7sbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GNOiwLhUEe2UuoshngsjNA" base_Element="_GNN7sbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GNOiwbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GNPJ0LhUEe2UuoshngsjNA" base_Element="_GNOiwrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GNPw4LhUEe2UuoshngsjNA" base_Element="_GNPJ0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GNPw4bhUEe2UuoshngsjNA" base_Element="_GNPJ0bhUEe2UuoshngsjNA">
    <annotations xmi:id="_GNPw4rhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GNQ_ALhUEe2UuoshngsjNA" base_Element="_GNQX8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNRmELhUEe2UuoshngsjNA" base_Element="_GNQ_AbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNSNILhUEe2UuoshngsjNA" base_Element="_GNRmEbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNS0MLhUEe2UuoshngsjNA" base_Element="_GNSNIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNTbQLhUEe2UuoshngsjNA" base_Element="_GNS0MbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNVQcLhUEe2UuoshngsjNA" base_Element="_GNTbQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNXFoLhUEe2UuoshngsjNA" base_Element="_GNWekLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNXssLhUEe2UuoshngsjNA" base_Element="_GNXFobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GNaI8LhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GNZh4LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNawALhUEe2UuoshngsjNA" base_Element="_GNaI8bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GNg2obhUEe2UuoshngsjNA" base_Element="_GNgPkLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GNg2orhUEe2UuoshngsjNA" base_Element="_GNgPkLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GNg2o7hUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GNjS4LhUEe2UuoshngsjNA" genericsValue="String, Node" base_Element="_GNir0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GNnkULhUEe2UuoshngsjNA" base_Element="_GNm9QLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GNx8YLhUEe2UuoshngsjNA" base_Element="_GNwuQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GN0_sLhUEe2UuoshngsjNA" base_Element="_GNwuQbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GN0_sbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GN3b8LhUEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_GN2N0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GN6fQLhUEe2UuoshngsjNA" base_Element="_GN54MbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GN6fQbhUEe2UuoshngsjNA" base_Element="_GN54MbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GN6fQrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GN9ikLhUEe2UuoshngsjNA" base_Element="_GN87gLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GN-JobhUEe2UuoshngsjNA" base_Element="_GN-JoLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GOP2cLhUEe2UuoshngsjNA" genericsValue="String,InstructionTimeSlot" base_Element="_GOPPYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GOXyQLhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GOWkIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GOa1kLhUEe2UuoshngsjNA" genericsValue="Double" base_Element="_GOaOgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GOcqwLhUEe2UuoshngsjNA" genericsValue="Double,ReliabilityRow" base_Element="_GOcDsLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GOiKUbhUEe2UuoshngsjNA" base_Element="_GOiKULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GOixYbhUEe2UuoshngsjNA" base_Element="_GOixYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GO4vobhUEe2UuoshngsjNA" genericsValue="Activation,Row&lt;Activation>" base_Element="_GO4voLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GO6k0LhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GO5WsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GO7y8LhUEe2UuoshngsjNA" base_Element="_GO7L4LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GO9oILhUEe2UuoshngsjNA" base_Element="_GO9BELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GO-PMLhUEe2UuoshngsjNA" base_Element="_GO9oIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GPIAMLhUEe2UuoshngsjNA" base_Element="_GPHZILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GPInQLhUEe2UuoshngsjNA" base_Element="_GPIAMbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GPJOULhUEe2UuoshngsjNA" base_Element="_GPInQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GPJOUrhUEe2UuoshngsjNA" base_Element="_GPJOUbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GPJ1YbhUEe2UuoshngsjNA" base_Element="_GPJ1YLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GPQjELhUEe2UuoshngsjNA" base_Element="_GPP8ALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPRKILhUEe2UuoshngsjNA" base_Element="_GPQjEbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPRKIbhUEe2UuoshngsjNA" base_Element="_GPQjEbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPRKIrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPRxMrhUEe2UuoshngsjNA" base_Element="_GPRxMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPSYQLhUEe2UuoshngsjNA" base_Element="_GPRxMLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPSYQbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPSYQ7hUEe2UuoshngsjNA" base_Element="_GPSYQrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPS_UrhUEe2UuoshngsjNA" base_Element="_GPS_ULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPTmYLhUEe2UuoshngsjNA" base_Element="_GPS_ULhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPTmYbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPTmY7hUEe2UuoshngsjNA" base_Element="_GPTmYrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPUNcLhUEe2UuoshngsjNA" base_Element="_GPTmZLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPUNcbhUEe2UuoshngsjNA" base_Element="_GPTmZLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPUNcrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPU0gbhUEe2UuoshngsjNA" base_Element="_GPU0gLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPVbkLhUEe2UuoshngsjNA" base_Element="_GPU0grhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPVbkbhUEe2UuoshngsjNA" base_Element="_GPU0grhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPVbkrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPWCoLhUEe2UuoshngsjNA" base_Element="_GPVbk7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPWpsLhUEe2UuoshngsjNA" base_Element="_GPWCobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPWpsbhUEe2UuoshngsjNA" base_Element="_GPWCobhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPWpsrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPXQwLhUEe2UuoshngsjNA" base_Element="_GPWps7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPX30LhUEe2UuoshngsjNA" base_Element="_GPXQwbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPX30bhUEe2UuoshngsjNA" base_Element="_GPXQwbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPX30rhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPgasLhUEe2UuoshngsjNA" base_Element="_GPfzoLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GPhBwLhUEe2UuoshngsjNA" base_Element="_GPgasbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPnvcLhUEe2UuoshngsjNA" base_Element="_GPmhUrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPnvcbhUEe2UuoshngsjNA" base_Element="_GPmhUrhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPnvcrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPo9kLhUEe2UuoshngsjNA" base_Element="_GPoWgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPo9kbhUEe2UuoshngsjNA" base_Element="_GPoWgLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPo9krhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPpkobhUEe2UuoshngsjNA" base_Element="_GPpkoLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPqywLhUEe2UuoshngsjNA" base_Element="_GPqLsLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPrZ0LhUEe2UuoshngsjNA" base_Element="_GPqLsLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPrZ0bhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPrZ07hUEe2UuoshngsjNA" base_Element="_GPrZ0rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPsn8LhUEe2UuoshngsjNA" base_Element="_GPsA4LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPtPALhUEe2UuoshngsjNA" base_Element="_GPsA4LhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPtPAbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPudILhUEe2UuoshngsjNA" base_Element="_GPt2ELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPvEMLhUEe2UuoshngsjNA" base_Element="_GPudIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPvEMbhUEe2UuoshngsjNA" base_Element="_GPudIbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPvEMrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GPvrQLhUEe2UuoshngsjNA" base_Element="_GPvEM7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPwSULhUEe2UuoshngsjNA" base_Element="_GPvrQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPw5YLhUEe2UuoshngsjNA" base_Element="_GPvrQbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPw5YbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPxgcLhUEe2UuoshngsjNA" base_Element="_GPw5YrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPxgcbhUEe2UuoshngsjNA" base_Element="_GPw5YrhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPxgcrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPyHgrhUEe2UuoshngsjNA" base_Element="_GPyHgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPyukLhUEe2UuoshngsjNA" base_Element="_GPyHgLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPyukbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPzVoLhUEe2UuoshngsjNA" base_Element="_GPyukrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GPzVobhUEe2UuoshngsjNA" base_Element="_GPyukrhUEe2UuoshngsjNA">
    <annotations xmi:id="_GPzVorhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GP1K0LhUEe2UuoshngsjNA" base_Element="_GP0jwLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GP1x4LhUEe2UuoshngsjNA" base_Element="_GP1K0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GP3AALhUEe2UuoshngsjNA" base_Element="_GP1x4bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GP6DULhUEe2UuoshngsjNA" base_Element="_GP5cQLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GP6qYLhUEe2UuoshngsjNA" base_Element="_GP6DUbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GP7RcLhUEe2UuoshngsjNA" base_Element="_GP6qYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQZLgLhUEe2UuoshngsjNA" genericsValue="T, E" base_Element="_GQYkcLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GQZykrhUEe2UuoshngsjNA" base_Element="_GQZykbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQaZoLhUEe2UuoshngsjNA" genericsValue="Activation" base_Element="_GQZyk7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQbnwLhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_GQbAsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQc14LhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GQcO0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQdc8LhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GQc14rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQeEALhUEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_GQdc8rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQhHULhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GQggQLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQkKoLhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_GQi8grhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQkKobhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GQjjkLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQl_0LhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GQkxsrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQmm4bhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GQl_0rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQocELhUEe2UuoshngsjNA" genericsValue="Activation" base_Element="_GQn1ALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQpqMLhUEe2UuoshngsjNA" base_Element="_GQpDILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQqRQLhUEe2UuoshngsjNA" genericsValue="Node" base_Element="_GQpDIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GQq4ULhUEe2UuoshngsjNA" base_Element="_GQpDILhUEe2UuoshngsjNA">
    <annotations xmi:id="_GQq4UbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GQsGcLhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GQrfYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GQstgLhUEe2UuoshngsjNA" base_Element="_GQsGcbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQtUlLhUEe2UuoshngsjNA" base_Element="_GQtUkLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GQt7oLhUEe2UuoshngsjNA" base_Element="_GQtUkLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GQt7obhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GQuisLhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GQt7orhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQvJwbhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_GQvJwLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQw-8bhUEe2UuoshngsjNA" genericsValue="Flow" base_Element="_GQw-8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQzbMLhUEe2UuoshngsjNA" genericsValue="Node" base_Element="_GQy0IbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQ0CQLhUEe2UuoshngsjNA" genericsValue="Integer" base_Element="_GQzbMrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GQ46wbhUEe2UuoshngsjNA" base_Element="_GQ46wLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GQ7-ELhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GQ6v8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQ9MMLhUEe2UuoshngsjNA" base_Element="_GQ8lILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GQ9MMbhUEe2UuoshngsjNA" base_Element="_GQ8lILhUEe2UuoshngsjNA">
    <annotations xmi:id="_GQ9MMrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GQ9zQbhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GQ9zQLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQ_ocbhUEe2UuoshngsjNA" base_Element="_GQ_BYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GRAPgLhUEe2UuoshngsjNA" base_Element="_GQ_BYLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GRAPgbhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GRA2kbhUEe2UuoshngsjNA" genericsValue="Node" base_Element="_GRA2kLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GRCrwLhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GRCEsLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRDS1LhUEe2UuoshngsjNA" base_Element="_GRDS0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GRD54LhUEe2UuoshngsjNA" base_Element="_GRDS0LhUEe2UuoshngsjNA">
    <annotations xmi:id="_GRD54bhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GRFIAbhUEe2UuoshngsjNA" genericsValue="Node" base_Element="_GREg87hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_GRFvFLhUEe2UuoshngsjNA" base_Element="_GRFvELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GRGWILhUEe2UuoshngsjNA" genericsValue="Node" base_Element="_GRFvEbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GRILULhUEe2UuoshngsjNA" base_Element="_GRHkQLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GRKnkLhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GRKAgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRL1sLhUEe2UuoshngsjNA" base_Element="_GRLOoLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GRL1sbhUEe2UuoshngsjNA" base_Element="_GRLOoLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GRL1srhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GRND0LhUEe2UuoshngsjNA" base_Element="_GRMcwLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GRQuMbhUEe2UuoshngsjNA" base_Element="_GRQuMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GRUYkLhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GRTxgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRVmsbhUEe2UuoshngsjNA" base_Element="_GRU_oLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GRVmsrhUEe2UuoshngsjNA" base_Element="_GRU_oLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GRWNwLhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GRafMLhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GRZ4IbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GRewoLhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GReJkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GRf-wLhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GRfXsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GRgl0LhUEe2UuoshngsjNA" genericsValue="T" base_Element="_GRfXsrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GRjCELhUEe2UuoshngsjNA" genericsValue="E" base_Element="_GRibAbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GRjpIbhUEe2UuoshngsjNA" base_Element="_GRjpILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GRk3QbhUEe2UuoshngsjNA" base_Element="_GRk3QLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_GRnTgbhUEe2UuoshngsjNA" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_GRmscLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRn6kLhUEe2UuoshngsjNA" base_Element="_GRmscLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GRuBMbhUEe2UuoshngsjNA" base_Element="_GRuBMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRxEgLhUEe2UuoshngsjNA" base_Element="_GRwdcLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GRxrkLhUEe2UuoshngsjNA" genericsValue="Node" base_Element="_GRwdcbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_GRySoLhUEe2UuoshngsjNA" base_Element="_GRwdcLhUEe2UuoshngsjNA">
    <annotations xmi:id="_GRySobhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GSLUMLhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GSKtIrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GSL7QbhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_GSL7QLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GSMiUbhUEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_GSMiULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSOXgLhUEe2UuoshngsjNA" base_Element="_GSNwcrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSOXgrhUEe2UuoshngsjNA" base_Element="_GSOXgbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSO-kbhUEe2UuoshngsjNA" base_Element="_GSO-kLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSRa0LhUEe2UuoshngsjNA" base_Element="_GSQzwLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSRa0rhUEe2UuoshngsjNA" base_Element="_GSRa0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSSo8LhUEe2UuoshngsjNA" base_Element="_GSSB4rhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSSo8rhUEe2UuoshngsjNA" base_Element="_GSSo8bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GST3ELhUEe2UuoshngsjNA" genericsValue="ChannelSet" base_Element="_GSTQALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSUeILhUEe2UuoshngsjNA" base_Element="_GSTQALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GSVFMLhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_GSUeI7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSVFMbhUEe2UuoshngsjNA" base_Element="_GSUeI7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSVsQbhUEe2UuoshngsjNA" base_Element="_GSVsQLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GSWTULhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GSVsQrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSWTUbhUEe2UuoshngsjNA" base_Element="_GSVsQrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSW6YbhUEe2UuoshngsjNA" base_Element="_GSW6YLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSXhcLhUEe2UuoshngsjNA" base_Element="_GSW6YrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSYIgLhUEe2UuoshngsjNA" base_Element="_GSXhcbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSYvkLhUEe2UuoshngsjNA" base_Element="_GSYIgbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSZWoLhUEe2UuoshngsjNA" base_Element="_GSYvkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSZ9sLhUEe2UuoshngsjNA" base_Element="_GSZWobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSdoEbhUEe2UuoshngsjNA" base_Element="_GSdoELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSgEULhUEe2UuoshngsjNA" base_Element="_GSfdQrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSgEUrhUEe2UuoshngsjNA" base_Element="_GSgEUbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSgrYbhUEe2UuoshngsjNA" base_Element="_GSgrYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GShScLhUEe2UuoshngsjNA" genericsValue="Node" base_Element="_GSgrYrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSh5gLhUEe2UuoshngsjNA" base_Element="_GSgrYrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GSh5grhUEe2UuoshngsjNA" genericsValue="Integer" base_Element="_GSh5gbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSigkLhUEe2UuoshngsjNA" base_Element="_GSh5gbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GSjHoLhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_GSigkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSjHobhUEe2UuoshngsjNA" base_Element="_GSigkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSjusLhUEe2UuoshngsjNA" base_Element="_GSjHorhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSk80LhUEe2UuoshngsjNA" base_Element="_GSjusbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSmyA7hUEe2UuoshngsjNA" base_Element="_GSmyArhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSnZEbhUEe2UuoshngsjNA" base_Element="_GSnZELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSoAILhUEe2UuoshngsjNA" base_Element="_GSnZErhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSoAIrhUEe2UuoshngsjNA" base_Element="_GSoAIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSonMLhUEe2UuoshngsjNA" base_Element="_GSoAI7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSonMrhUEe2UuoshngsjNA" base_Element="_GSonMbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSpOQbhUEe2UuoshngsjNA" base_Element="_GSpOQLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSp1UbhUEe2UuoshngsjNA" base_Element="_GSp1ULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSqcYbhUEe2UuoshngsjNA" base_Element="_GSqcYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSrDcrhUEe2UuoshngsjNA" base_Element="_GSrDcbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSrqgbhUEe2UuoshngsjNA" base_Element="_GSrqgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSsRkLhUEe2UuoshngsjNA" base_Element="_GSrqgrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSs4orhUEe2UuoshngsjNA" base_Element="_GSs4oLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GStfsLhUEe2UuoshngsjNA" base_Element="_GSs4o7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSuGwLhUEe2UuoshngsjNA" base_Element="_GStfsrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSvU4LhUEe2UuoshngsjNA" base_Element="_GSut0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSvU4rhUEe2UuoshngsjNA" base_Element="_GSvU4bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSv78LhUEe2UuoshngsjNA" base_Element="_GSvU47hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GSwjALhUEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_GSv78bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSwjAbhUEe2UuoshngsjNA" base_Element="_GSv78bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSxxILhUEe2UuoshngsjNA" base_Element="_GSxKFLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSxxIrhUEe2UuoshngsjNA" base_Element="_GSxxIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GSzmULhUEe2UuoshngsjNA" genericsValue="Edge" base_Element="_GSy_QrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS2CkLhUEe2UuoshngsjNA" base_Element="_GS1bg7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS2CkrhUEe2UuoshngsjNA" base_Element="_GS2CkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS3QsLhUEe2UuoshngsjNA" base_Element="_GS2poLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS33wLhUEe2UuoshngsjNA" base_Element="_GS3QsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS4e0LhUEe2UuoshngsjNA" base_Element="_GS33wbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GS6UALhUEe2UuoshngsjNA" genericsValue="Activation" base_Element="_GS4e0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS6UAbhUEe2UuoshngsjNA" base_Element="_GS4e0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GS67ELhUEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_GS6UArhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS7iILhUEe2UuoshngsjNA" base_Element="_GS6UArhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS7iIrhUEe2UuoshngsjNA" base_Element="_GS7iIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS9-YLhUEe2UuoshngsjNA" base_Element="_GS9XU7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS9-YrhUEe2UuoshngsjNA" base_Element="_GS9-YbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS-lcbhUEe2UuoshngsjNA" base_Element="_GS-lcLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS_MgLhUEe2UuoshngsjNA" base_Element="_GS-lcrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS_zkLhUEe2UuoshngsjNA" base_Element="_GS_MgbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS_zkrhUEe2UuoshngsjNA" base_Element="_GS_zkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTAaobhUEe2UuoshngsjNA" base_Element="_GTAaoLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTBBsLhUEe2UuoshngsjNA" base_Element="_GTAaorhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTBowLhUEe2UuoshngsjNA" base_Element="_GTBBsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTCP0LhUEe2UuoshngsjNA" base_Element="_GTBowbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTC24LhUEe2UuoshngsjNA" base_Element="_GTCP0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTDd8bhUEe2UuoshngsjNA" base_Element="_GTDd8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTEFAbhUEe2UuoshngsjNA" base_Element="_GTEFALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTGhQbhUEe2UuoshngsjNA" base_Element="_GTGhQLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTHIULhUEe2UuoshngsjNA" base_Element="_GTGhQrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTHIUrhUEe2UuoshngsjNA" base_Element="_GTHIUbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTJkkbhUEe2UuoshngsjNA" base_Element="_GTJkkLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTKLoLhUEe2UuoshngsjNA" base_Element="_GTJkkrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTKysrhUEe2UuoshngsjNA" base_Element="_GTKysbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTLZwbhUEe2UuoshngsjNA" base_Element="_GTLZwLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTPEILhUEe2UuoshngsjNA" base_Element="_GTOdE7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTPrMbhUEe2UuoshngsjNA" base_Element="_GTPrMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTQSQLhUEe2UuoshngsjNA" base_Element="_GTPrMrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTQ5ULhUEe2UuoshngsjNA" base_Element="_GTQSQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GTSHcLhUEe2UuoshngsjNA" genericsValue="Integer" base_Element="_GTRgYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTSHcbhUEe2UuoshngsjNA" base_Element="_GTRgYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GTSugbhUEe2UuoshngsjNA" genericsValue="SchedulableObject" base_Element="_GTSugLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTVKwLhUEe2UuoshngsjNA" base_Element="_GTUjs7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTVKwrhUEe2UuoshngsjNA" base_Element="_GTVKwbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTVx0rhUEe2UuoshngsjNA" base_Element="_GTVx0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTWY4LhUEe2UuoshngsjNA" base_Element="_GTVx07hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTWY4rhUEe2UuoshngsjNA" base_Element="_GTWY4bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTXnALhUEe2UuoshngsjNA" base_Element="_GTW_8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTYOELhUEe2UuoshngsjNA" base_Element="_GTXnAbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTY1ILhUEe2UuoshngsjNA" base_Element="_GTYOEbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTbRYbhUEe2UuoshngsjNA" base_Element="_GTbRYLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTb4cbhUEe2UuoshngsjNA" base_Element="_GTb4cLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTcfgLhUEe2UuoshngsjNA" base_Element="_GTb4crhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTdGkLhUEe2UuoshngsjNA" base_Element="_GTcfgbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTdGkrhUEe2UuoshngsjNA" base_Element="_GTdGkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTdtoLhUEe2UuoshngsjNA" base_Element="_GTdGk7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTeUsLhUEe2UuoshngsjNA" base_Element="_GTdtobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTe7wLhUEe2UuoshngsjNA" base_Element="_GTeUsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTfi0LhUEe2UuoshngsjNA" base_Element="_GTe7wbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTgJ4LhUEe2UuoshngsjNA" base_Element="_GTfi0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTgw8bhUEe2UuoshngsjNA" base_Element="_GTgw8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTh_ELhUEe2UuoshngsjNA" base_Element="_GThYALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTimIbhUEe2UuoshngsjNA" base_Element="_GTimILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_GTjNM7hUEe2UuoshngsjNA" dimensions="2" base_Element="_GTjNMbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTj0QLhUEe2UuoshngsjNA" base_Element="_GTjNMbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTmQgbhUEe2UuoshngsjNA" base_Element="_GTmQgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTm3kLhUEe2UuoshngsjNA" base_Element="_GTmQgrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTm3krhUEe2UuoshngsjNA" base_Element="_GTm3kbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTneobhUEe2UuoshngsjNA" base_Element="_GTneoLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GToFsLhUEe2UuoshngsjNA" base_Element="_GTneorhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GToFsrhUEe2UuoshngsjNA" base_Element="_GToFsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GToswbhUEe2UuoshngsjNA" base_Element="_GToswLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTpT0LhUEe2UuoshngsjNA" base_Element="_GToswrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTpT0rhUEe2UuoshngsjNA" base_Element="_GTpT0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTp64bhUEe2UuoshngsjNA" base_Element="_GTp64LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTqh8bhUEe2UuoshngsjNA" base_Element="_GTqh8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTrwELhUEe2UuoshngsjNA" base_Element="_GTrJALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTsXIbhUEe2UuoshngsjNA" base_Element="_GTsXILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTs-MLhUEe2UuoshngsjNA" base_Element="_GTsXIrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTtlQLhUEe2UuoshngsjNA" base_Element="_GTs-MbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTuMULhUEe2UuoshngsjNA" base_Element="_GTtlQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTuzYLhUEe2UuoshngsjNA" base_Element="_GTuMUbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTuzYrhUEe2UuoshngsjNA" base_Element="_GTuzYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTx2srhUEe2UuoshngsjNA" base_Element="_GTx2sLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTzE0LhUEe2UuoshngsjNA" base_Element="_GTydwrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GTzE0rhUEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_GTzE0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTzr4LhUEe2UuoshngsjNA" base_Element="_GTzE0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT0S8LhUEe2UuoshngsjNA" base_Element="_GTzr4bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT1hELhUEe2UuoshngsjNA" base_Element="_GT06ALhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT2vMLhUEe2UuoshngsjNA" base_Element="_GT2IILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT3WQLhUEe2UuoshngsjNA" base_Element="_GT2vMbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT3WQrhUEe2UuoshngsjNA" base_Element="_GT3WQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT39UbhUEe2UuoshngsjNA" base_Element="_GT39ULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT4kYLhUEe2UuoshngsjNA" base_Element="_GT39UrhUEe2UuoshngsjNA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_GT4kYbhUEe2UuoshngsjNA" name="getNumChannels" method="_GVNaELhUEe2UuoshngsjNA">
      <ownedParameter xmi:id="_GT5LcLhUEe2UuoshngsjNA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_GT5LcbhUEe2UuoshngsjNA" base_Element="_GT4kYbhUEe2UuoshngsjNA">
    <annotations xmi:id="_GT5LcrhUEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT5ygbhUEe2UuoshngsjNA" base_Element="_GT5Lc7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT6ZkLhUEe2UuoshngsjNA" base_Element="_GT5ygrhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT8OwLhUEe2UuoshngsjNA" base_Element="_GT7ns7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT8OwrhUEe2UuoshngsjNA" base_Element="_GT8OwbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT810bhUEe2UuoshngsjNA" base_Element="_GT810LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT-D8LhUEe2UuoshngsjNA" base_Element="_GT9c4LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT-rALhUEe2UuoshngsjNA" base_Element="_GT-D8bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GT_SEbhUEe2UuoshngsjNA" base_Element="_GT_SELhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GUAgMLhUEe2UuoshngsjNA" base_Element="_GT_5ILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GUDjgbhUEe2UuoshngsjNA" base_Element="_GUC8dLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GUEKkrhUEe2UuoshngsjNA" base_Element="_GUEKkLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GUFYsLhUEe2UuoshngsjNA" base_Element="_GUExobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GUF_wLhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GUFYsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_GUGm0LhUEe2UuoshngsjNA" genericsValue="String" base_Element="_GUF_wrhUEe2UuoshngsjNA"/>
  <uml:OpaqueBehavior xmi:id="_GVNaELhUEe2UuoshngsjNA" name="getNumChannels" specification="_GT4kYbhUEe2UuoshngsjNA">
    <ownedParameter xmi:id="_GVNaEbhUEe2UuoshngsjNA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_GWJ1QLhUEe2UuoshngsjNA" base_Element="_GWJOMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWKcULhUEe2UuoshngsjNA" base_Element="_GWJ1QbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWLDYLhUEe2UuoshngsjNA" base_Element="_GWKcUbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWLqcLhUEe2UuoshngsjNA" base_Element="_GWLDYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWMRgLhUEe2UuoshngsjNA" base_Element="_GWLqcbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWM4kLhUEe2UuoshngsjNA" base_Element="_GWMRgbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWNfoLhUEe2UuoshngsjNA" base_Element="_GWM4kbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWOtwLhUEe2UuoshngsjNA" base_Element="_GWOGsLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWPU0LhUEe2UuoshngsjNA" base_Element="_GWOtwbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWP74LhUEe2UuoshngsjNA" base_Element="_GWPU0bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWQi8LhUEe2UuoshngsjNA" base_Element="_GWP74bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWRKALhUEe2UuoshngsjNA" base_Element="_GWQi8bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWRxELhUEe2UuoshngsjNA" base_Element="_GWRKAbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWSYILhUEe2UuoshngsjNA" base_Element="_GWRxEbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWS_MrhUEe2UuoshngsjNA" base_Element="_GWS_MLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWTmQrhUEe2UuoshngsjNA" base_Element="_GWTmQLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWUNUrhUEe2UuoshngsjNA" base_Element="_GWUNULhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWU0YrhUEe2UuoshngsjNA" base_Element="_GWU0YLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWVbcrhUEe2UuoshngsjNA" base_Element="_GWVbcLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWWCgLhUEe2UuoshngsjNA" base_Element="_GWVbc7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWWpkLhUEe2UuoshngsjNA" base_Element="_GWWCgbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWXQoLhUEe2UuoshngsjNA" base_Element="_GWWpkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWYewLhUEe2UuoshngsjNA" base_Element="_GWX3sLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWZF0rhUEe2UuoshngsjNA" base_Element="_GWZF0LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWZs4rhUEe2UuoshngsjNA" base_Element="_GWZs4LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWa7ALhUEe2UuoshngsjNA" base_Element="_GWaT8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWbiELhUEe2UuoshngsjNA" base_Element="_GWa7AbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWbiE7hUEe2UuoshngsjNA" base_Element="_GWbiEbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWcJIrhUEe2UuoshngsjNA" base_Element="_GWcJILhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWcwMLhUEe2UuoshngsjNA" base_Element="_GWcJI7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWdXQLhUEe2UuoshngsjNA" base_Element="_GWcwMbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWd-ULhUEe2UuoshngsjNA" base_Element="_GWdXQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWelYLhUEe2UuoshngsjNA" base_Element="_GWd-UbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWfMcLhUEe2UuoshngsjNA" base_Element="_GWelYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWfzgLhUEe2UuoshngsjNA" base_Element="_GWfMcbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWgakrhUEe2UuoshngsjNA" base_Element="_GWgakLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWhosLhUEe2UuoshngsjNA" base_Element="_GWhBoLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWiPwLhUEe2UuoshngsjNA" base_Element="_GWhosbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWjd4LhUEe2UuoshngsjNA" base_Element="_GWi20LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWkE8LhUEe2UuoshngsjNA" base_Element="_GWjd4bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWksALhUEe2UuoshngsjNA" base_Element="_GWkE8bhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWlTELhUEe2UuoshngsjNA" base_Element="_GWksAbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWl6ILhUEe2UuoshngsjNA" base_Element="_GWlTEbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWl6I7hUEe2UuoshngsjNA" base_Element="_GWl6IbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWmhMrhUEe2UuoshngsjNA" base_Element="_GWmhMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWnIQLhUEe2UuoshngsjNA" base_Element="_GWmhM7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWnvULhUEe2UuoshngsjNA" base_Element="_GWnIQbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWoWYLhUEe2UuoshngsjNA" base_Element="_GWnvUbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWoWY7hUEe2UuoshngsjNA" base_Element="_GWoWYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWo9crhUEe2UuoshngsjNA" base_Element="_GWo9cLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWpkgLhUEe2UuoshngsjNA" base_Element="_GWo9c7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWqLkLhUEe2UuoshngsjNA" base_Element="_GWpkgbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWqLk7hUEe2UuoshngsjNA" base_Element="_GWqLkbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWrZsLhUEe2UuoshngsjNA" base_Element="_GWqyoLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWsAwLhUEe2UuoshngsjNA" base_Element="_GWrZsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWtO4LhUEe2UuoshngsjNA" base_Element="_GWsAwbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWudALhUEe2UuoshngsjNA" base_Element="_GWt18LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWvEELhUEe2UuoshngsjNA" base_Element="_GWudAbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWvrILhUEe2UuoshngsjNA" base_Element="_GWvEEbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWvrI7hUEe2UuoshngsjNA" base_Element="_GWvrIbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWwSMrhUEe2UuoshngsjNA" base_Element="_GWwSMLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWw5QLhUEe2UuoshngsjNA" base_Element="_GWwSM7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWxgULhUEe2UuoshngsjNA" base_Element="_GWw5QbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWxgU7hUEe2UuoshngsjNA" base_Element="_GWxgUbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWyHYLhUEe2UuoshngsjNA" base_Element="_GWxgVLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWyucLhUEe2UuoshngsjNA" base_Element="_GWyHYbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWyuc7hUEe2UuoshngsjNA" base_Element="_GWyucbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWzVgrhUEe2UuoshngsjNA" base_Element="_GWzVgLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GWz8kLhUEe2UuoshngsjNA" base_Element="_GWzVg7hUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GW0joLhUEe2UuoshngsjNA" base_Element="_GWz8kbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GW1KsLhUEe2UuoshngsjNA" base_Element="_GW0jobhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GW1Ks7hUEe2UuoshngsjNA" base_Element="_GW1KsbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GW1xwLhUEe2UuoshngsjNA" base_Element="_GW1KtLhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GW4OALhUEe2UuoshngsjNA" base_Element="_GW3m8LhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_GW41ELhUEe2UuoshngsjNA" base_Element="_GW4OAbhUEe2UuoshngsjNA"/>
  <UMLLabProfile:Patch xmi:id="_HhfnALhUEe2UuoshngsjNA" base_Element="_F1G9sLhUEe2UuoshngsjNA" patchText="@@ -367,26 +367,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_Hhg1ILhUEe2UuoshngsjNA" base_Element="_F2F1ILhUEe2UuoshngsjNA" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_HhiDQLhUEe2UuoshngsjNA" base_Element="_F4pZ4LhUEe2UuoshngsjNA" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_HhjRYLhUEe2UuoshngsjNA" base_Element="_F4zx8LhUEe2UuoshngsjNA" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_HhltoLhUEe2UuoshngsjNA" base_Element="_F5P20LhUEe2UuoshngsjNA" patchText="@@ -3991,22 +3991,25 @@&#xA; .%0D%0A */%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Generics xmi:id="_GsC8A8v4Ee2QFfqiYSegRA" genericsValue="Integer" base_Element="_GsC8AMv4Ee2QFfqiYSegRA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GsiEMcv4Ee2QFfqiYSegRA" base_Element="_GsiEMMv4Ee2QFfqiYSegRA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GsirQMv4Ee2QFfqiYSegRA" base_Element="_GsiEMsv4Ee2QFfqiYSegRA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GsjSUMv4Ee2QFfqiYSegRA" base_Element="_GsirQcv4Ee2QFfqiYSegRA"/>
  <UMLLabProfile:Generics xmi:id="_Gsj5YMv4Ee2QFfqiYSegRA" genericsValue="Integer" base_Element="_GsjSUcv4Ee2QFfqiYSegRA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GskgcMv4Ee2QFfqiYSegRA" base_Element="_GsjSUcv4Ee2QFfqiYSegRA"/>
  <UMLLabProfile:Reference xmi:id="_Gsu4gMv4Ee2QFfqiYSegRA" base_Element="_GsuRcMv4Ee2QFfqiYSegRA"/>
</xmi:XMI>
