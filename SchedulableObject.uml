<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_BvuUULhiEe2UuoshngsjNA" name="SchedulableObject">
    <eAnnotations xmi:id="_B2lKQLhiEe2UuoshngsjNA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_B2lKQbhiEe2UuoshngsjNA" source="codegen">
        <details xmi:id="_B2lKQrhiEe2UuoshngsjNA" key="codegenDirectory" value="/cs2820/src"/>
        <details xmi:id="_KANj0bhiEe2UuoshngsjNA" key="AssociatedSourceCode" value="/cs2820/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820/src/edu/uiowa/cs/warp/Edge.java;3274728775/1;/cs2820/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820/src/edu/uiowa/cs/warp/Flow.java;559645871/1;/cs2820/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820/src/edu/uiowa/cs/warp/Program.java;2750337732/1;/cs2820/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820/src/edu/uiowa/cs/warp/ProgramVisualization.java;1316782014/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;755733015/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2803977720/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820/src/edu/uiowa/cs/warp/Warp.java;1531133216/1;/cs2820/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadDescription.java;3772857374/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoad.java;2978729470/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadListener.java;3333188147/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadTest.java;2658600754/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_DA0v0LhiEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_DA0v0bhiEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_DA0v0rhiEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_DA0v07hiEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_DA0v1LhiEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_DA0v1bhiEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_DA0v1rhiEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_DA0v17hiEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_DA0v2LhiEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_C_ViELhiEe2UuoshngsjNA" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_C_WJILhiEe2UuoshngsjNA" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_C_WJIbhiEe2UuoshngsjNA" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_C_YlYLhiEe2UuoshngsjNA" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_DA_u8LhiEe2UuoshngsjNA" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_DYdMsbhiEe2UuoshngsjNA" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_DCC30LhiEe2UuoshngsjNA" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_DZPP0bhiEe2UuoshngsjNA" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_DCHJQLhiEe2UuoshngsjNA" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_DZQd9LhiEe2UuoshngsjNA" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_DZRsELhiEe2UuoshngsjNA" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFQj4LhiEe2UuoshngsjNA" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_DaJ10LhiEe2UuoshngsjNA" general="_DXuM4LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbhHwLhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dbhu0LhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdIRULhiEe2UuoshngsjNA" name="AbstractMap" specification="_DFRyALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdIRUbhiEe2UuoshngsjNA" type="_DFQj4LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFRyALhiEe2UuoshngsjNA" name="AbstractMap" method="_DdIRULhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DFRyAbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFSZELhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFSZEbhiEe2UuoshngsjNA" type="_DFQj4LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFSZErhiEe2UuoshngsjNA" name="Activation">
              <generalization xmi:id="_DX2IsbhiEe2UuoshngsjNA" general="_DH190LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dbhu0bhiEe2UuoshngsjNA" name="coordinators" type="_DXvbALhiEe2UuoshngsjNA" isReadOnly="true" association="_DeeVILhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbiV4bhiEe2UuoshngsjNA" name="edges" type="_DXvbALhiEe2UuoshngsjNA" isReadOnly="true" association="_Dee8MbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dbi88bhiEe2UuoshngsjNA" name="additionalScheduleTimes" type="_DXvbALhiEe2UuoshngsjNA" isReadOnly="true" association="_DefjQbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbjkALhiEe2UuoshngsjNA" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DbjkAbhiEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DaLrAbhiEe2UuoshngsjNA" client="_DFSZErhiEe2UuoshngsjNA" supplier="_DaLD8rhiEe2UuoshngsjNA" contract="_DaLD8rhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdIRUrhiEe2UuoshngsjNA" name="Activation" specification="_DFTnMLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdIRU7hiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdIRVLhiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdI4YLhiEe2UuoshngsjNA" name="Activation" specification="_DXxQMLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdI4YbhiEe2UuoshngsjNA" name="elem" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdI4YrhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdI4Y7hiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdI4ZLhiEe2UuoshngsjNA" name="clone" specification="_DFUOQLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdI4ZbhiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdI4ZrhiEe2UuoshngsjNA" name="getEdgesByReleaseTime" specification="_DFU1ULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdI4Z7hiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdI4aLhiEe2UuoshngsjNA" name="getEdgesByLatestReleaseTime" specification="_DFVcYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdI4abhiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdI4arhiEe2UuoshngsjNA" name="getEdgesByPeriod" specification="_DFWDcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdI4a7hiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdI4bLhiEe2UuoshngsjNA" name="getEdgesByDeadline" specification="_DFWqgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdI4bbhiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdI4brhiEe2UuoshngsjNA" name="getEdgesByPriority" specification="_DFXRkbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdI4b7hiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdI4cLhiEe2UuoshngsjNA" name="addEdges" specification="_DaM5ILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdI4cbhiEe2UuoshngsjNA" name="edges" type="_DXvbALhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdI4crhiEe2UuoshngsjNA" name="addEdge" specification="_DXzFYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdI4c7hiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdJfcLhiEe2UuoshngsjNA" name="increaseEdgePhases" specification="_DFX4obhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdJfcbhiEe2UuoshngsjNA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdJfcrhiEe2UuoshngsjNA" name="updatePriorityAndRelease" specification="_DFYfsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdJfc7hiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdJfdLhiEe2UuoshngsjNA" name="addConflict" specification="_DFYfsrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdJfdbhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdJfdrhiEe2UuoshngsjNA" name="addConflicts" specification="_DaNgMbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdJfd7hiEe2UuoshngsjNA" name="conflicts" type="_DXwpIrhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdJfeLhiEe2UuoshngsjNA" name="addCoordinator" specification="_DFYftLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdJfebhiEe2UuoshngsjNA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdJferhiEe2UuoshngsjNA" name="addCoordinators" specification="_DaOHQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdJfe7hiEe2UuoshngsjNA" name="coordinators" type="_DXvbALhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdJffLhiEe2UuoshngsjNA" name="addScheduleTimes" specification="_DaOuUbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdJffbhiEe2UuoshngsjNA" name="scheduleTime" type="_DXvbALhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdJffrhiEe2UuoshngsjNA" name="getNextScheduleTime" specification="_DFZGwbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdJff7hiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdJfgLhiEe2UuoshngsjNA" type="_DIWUJLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdJfgbhiEe2UuoshngsjNA" name="getMatchingEndTime" specification="_DFZt0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdJfgrhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdJfg7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKGgLhiEe2UuoshngsjNA" name="getNextStartTime" specification="_DFaU4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKGgbhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdKGgrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKGg7hiEe2UuoshngsjNA" name="getNextEndTime" specification="_DFaU47hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKGhLhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdKGhbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKGhrhiEe2UuoshngsjNA" name="getNumEdges" specification="_DFa78LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKGh7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKGiLhiEe2UuoshngsjNA" name="compareTo" specification="_DXzscLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKGibhiEe2UuoshngsjNA" name="obj" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdKGirhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKGi7hiEe2UuoshngsjNA" name="conflictExists" specification="_DX0TgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKGjLhiEe2UuoshngsjNA" name="obj" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdKGjbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKGjrhiEe2UuoshngsjNA" name="canCombine" specification="_DX0Tg7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKGj7hiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdKGkLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKGkbhiEe2UuoshngsjNA" name="getDelta" specification="_DFa78rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKGkrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKtkLhiEe2UuoshngsjNA" name="getExecutionDuration" specification="_DFbjALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKtkbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKtkrhiEe2UuoshngsjNA" name="getCombinedExecutionDuration" specification="_DX06kLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKtk7hiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdKtlLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdKtlbhiEe2UuoshngsjNA" name="printAll" specification="_DFbjArhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdKtlrhiEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdLUoLhiEe2UuoshngsjNA" name="printAll" specification="_DFbjBLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdLUobhiEe2UuoshngsjNA" name="printEdges" specification="_DX06k7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdLUorhiEe2UuoshngsjNA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdLUo7hiEe2UuoshngsjNA" name="edges" type="_DHmGMLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdLUpLhiEe2UuoshngsjNA" name="printEdges" specification="_DX1hobhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdLUpbhiEe2UuoshngsjNA" name="edges" type="_DHmGMLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFTnMLhiEe2UuoshngsjNA" name="Activation" visibility="package" method="_DdIRUrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DFTnMrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFTnM7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFTnMbhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFTnNLhiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFUOQLhiEe2UuoshngsjNA" name="clone" method="_DdI4ZLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DXx3RLhiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFU1ULhiEe2UuoshngsjNA" name="getEdgesByReleaseTime" method="_DdI4ZrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbELhiEe2UuoshngsjNA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DXx3RbhiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFVcYLhiEe2UuoshngsjNA" name="getEdgesByLatestReleaseTime" method="_DdI4aLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbEbhiEe2UuoshngsjNA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DXyeULhiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFWDcLhiEe2UuoshngsjNA" name="getEdgesByPeriod" method="_DdI4arhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbErhiEe2UuoshngsjNA">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_DXyeUbhiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFWqgLhiEe2UuoshngsjNA" name="getEdgesByDeadline" method="_DdI4bLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbE7hiEe2UuoshngsjNA">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_DXyeUrhiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFXRkbhiEe2UuoshngsjNA" name="getEdgesByPriority" method="_DdI4brhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbFLhiEe2UuoshngsjNA">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_DXyeU7hiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFX4obhiEe2UuoshngsjNA" name="increaseEdgePhases" method="_DdJfcLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbFbhiEe2UuoshngsjNA">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFX4orhiEe2UuoshngsjNA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFYfsLhiEe2UuoshngsjNA" name="updatePriorityAndRelease" method="_DdJfcrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbFrhiEe2UuoshngsjNA">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_DFYfsbhiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFYfsrhiEe2UuoshngsjNA" name="addConflict" method="_DdJfdLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFYfs7hiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFYftLhiEe2UuoshngsjNA" name="addCoordinator" method="_DdJfeLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFZGwLhiEe2UuoshngsjNA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFZGwbhiEe2UuoshngsjNA" name="getNextScheduleTime" method="_DdJffrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbGLhiEe2UuoshngsjNA">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFZGwrhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DXzFYrhiEe2UuoshngsjNA" type="_DIWUJLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFZt0LhiEe2UuoshngsjNA" name="getMatchingEndTime" method="_DdJfgbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbGbhiEe2UuoshngsjNA">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFZt0bhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFZt0rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFaU4LhiEe2UuoshngsjNA" name="getNextStartTime" method="_DdKGgLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbGrhiEe2UuoshngsjNA">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFaU4bhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFaU4rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFaU47hiEe2UuoshngsjNA" name="getNextEndTime" method="_DdKGg7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbG7hiEe2UuoshngsjNA">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFaU5LhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFaU5bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFa78LhiEe2UuoshngsjNA" name="getNumEdges" method="_DdKGhrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFa78bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFa78rhiEe2UuoshngsjNA" name="getDelta" method="_DdKGkbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbHLhiEe2UuoshngsjNA">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFa787hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFbjALhiEe2UuoshngsjNA" name="getExecutionDuration" method="_DdKtkLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFbjAbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFbjArhiEe2UuoshngsjNA" name="printAll" method="_DdKtlbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFbjA7hiEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFbjBLhiEe2UuoshngsjNA" name="printAll" method="_DdLUoLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DXxQMLhiEe2UuoshngsjNA" name="Activation" visibility="package" method="_DdI4YLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DXx3QbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DXx3QrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DXxQMbhiEe2UuoshngsjNA" name="elem" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DXx3QLhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DXx3Q7hiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DXzFYLhiEe2UuoshngsjNA" name="addEdge" method="_DdI4crhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DXzFYbhiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DXzscLhiEe2UuoshngsjNA" name="compareTo" method="_DdKGiLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DXzscbhiEe2UuoshngsjNA" name="obj" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DXzscrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DX0TgLhiEe2UuoshngsjNA" name="conflictExists" method="_DdKGi7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DX0TgbhiEe2UuoshngsjNA" name="obj" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX0TgrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DX0Tg7hiEe2UuoshngsjNA" name="canCombine" method="_DdKGjrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DX0ThLhiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX0ThbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DX06kLhiEe2UuoshngsjNA" name="getCombinedExecutionDuration" method="_DdKtkrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DX06kbhiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX06krhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DX06k7hiEe2UuoshngsjNA" name="printEdges" visibility="private" method="_DdLUobhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DX06lLhiEe2UuoshngsjNA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DX06lbhiEe2UuoshngsjNA" name="edges" type="_DHmGMLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DX1hobhiEe2UuoshngsjNA" name="printEdges" visibility="private" method="_DdLUpLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DX1horhiEe2UuoshngsjNA" name="edges" type="_DHmGMLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DaM5ILhiEe2UuoshngsjNA" name="addEdges" method="_DdI4cLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DaM5IbhiEe2UuoshngsjNA" name="edges" type="_DXvbALhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DaNgMbhiEe2UuoshngsjNA" name="addConflicts" method="_DdJfdrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DaOHQLhiEe2UuoshngsjNA" name="conflicts" type="_DXwpIrhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DaOHQrhiEe2UuoshngsjNA" name="addCoordinators" method="_DdJferhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DaOHQ7hiEe2UuoshngsjNA" name="coordinators" type="_DXvbALhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DaOuUbhiEe2UuoshngsjNA" name="addScheduleTimes" method="_DdJffLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeAbF7hiEe2UuoshngsjNA">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_DaOuUrhiEe2UuoshngsjNA" name="scheduleTime" type="_DXvbALhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFfNYLhiEe2UuoshngsjNA" name="Activations">
              <generalization xmi:id="_DX3W0LhiEe2UuoshngsjNA" general="_DFQj4LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbkLELhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DbkLEbhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFf0cLhiEe2UuoshngsjNA" name="BasicPoset">
              <ownedComment xmi:id="_DeAbHbhiEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_DX395bhiEe2UuoshngsjNA" general="_DG6wwLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdLUprhiEe2UuoshngsjNA" name="BasicPoset" specification="_DX394LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdLUp7hiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdLUqLhiEe2UuoshngsjNA" type="_DFf0cLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DX394LhiEe2UuoshngsjNA" name="BasicPoset" visibility="package" method="_DdLUprhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DX394rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DX3947hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DX394bhiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX395LhiEe2UuoshngsjNA" type="_DFf0cLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFhpoLhiEe2UuoshngsjNA" name="ChannelAnalysis">
              <ownedComment xmi:id="_DeAbHrhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DbkLErhiEe2UuoshngsjNA" name="program" visibility="private" type="_DHKBUbhiEe2UuoshngsjNA" association="_DegKUbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbkyIbhiEe2UuoshngsjNA" name="programTable" visibility="private" type="_DHeKYLhiEe2UuoshngsjNA" association="_DegxYbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbkyI7hiEe2UuoshngsjNA" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdMiwLhiEe2UuoshngsjNA" name="ChannelAnalysis" specification="_DX4k8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdMiwbhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdMiwrhiEe2UuoshngsjNA" type="_DFhpoLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdMiw7hiEe2UuoshngsjNA" name="ChannelAnalysis" specification="_DX4k9bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdMixLhiEe2UuoshngsjNA" name="program" type="_DHKBUbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdMixbhiEe2UuoshngsjNA" type="_DFhpoLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdMixrhiEe2UuoshngsjNA" name="isChannelConflict" specification="_DFiQsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdMix7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFiQsLhiEe2UuoshngsjNA" name="isChannelConflict" method="_DdMixrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFi3wLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DX4k8LhiEe2UuoshngsjNA" name="ChannelAnalysis" visibility="package" method="_DdMiwLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DX4k8rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DX4k87hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DX4k8bhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX4k9LhiEe2UuoshngsjNA" type="_DFhpoLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DX4k9bhiEe2UuoshngsjNA" name="ChannelAnalysis" visibility="package" method="_DdMiw7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DX4k97hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DX4k-LhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DX4k9rhiEe2UuoshngsjNA" name="program" type="_DHKBUbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX5MALhiEe2UuoshngsjNA" type="_DFhpoLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFje0LhiEe2UuoshngsjNA" name="ChannelVisualization">
              <ownedComment xmi:id="_DeBCILhiEe2UuoshngsjNA">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DX5zE7hiEe2UuoshngsjNA" general="_DIuHkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DblZMbhiEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DblZMrhiEe2UuoshngsjNA" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DblZM7hiEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DblZNLhiEe2UuoshngsjNA" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbmAQLhiEe2UuoshngsjNA" name="warp" visibility="private" type="_DJFT8LhiEe2UuoshngsjNA" association="_DehYcLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbmnULhiEe2UuoshngsjNA" name="ca" visibility="private" type="_DFhpoLhiEe2UuoshngsjNA" association="_DehYc7hiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdMiyLhiEe2UuoshngsjNA" name="ChannelVisualization" specification="_DX5MAbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdMiybhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdMiyrhiEe2UuoshngsjNA" type="_DFje0LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DX5MAbhiEe2UuoshngsjNA" name="ChannelVisualization" visibility="package" method="_DdMiyLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DX5zELhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DX5zEbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DX5MArhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX5zErhiEe2UuoshngsjNA" type="_DFje0LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFks8LhiEe2UuoshngsjNA" name="Channels">
              <ownedComment xmi:id="_DeBCIbhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dbn1cLhiEe2UuoshngsjNA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dbn1crhiEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbocgbhiEe2UuoshngsjNA" name="channelsAvailable" visibility="package" type="_DXvbALhiEe2UuoshngsjNA" association="_Deh_gbhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNJ1bhiEe2UuoshngsjNA" name="Channels" specification="_DFmiIbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNJ1rhiEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNJ17hiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNJ2LhiEe2UuoshngsjNA" type="_DFks8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNJ2bhiEe2UuoshngsjNA" name="getChannelSet" specification="_DFnJNbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNJ2rhiEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNJ27hiEe2UuoshngsjNA" type="_DXwCELhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNJ3LhiEe2UuoshngsjNA" name="addNewChannelSet" specification="_DFnwQbhiEe2UuoshngsjNA">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNJ3bhiEe2UuoshngsjNA" name="isEmpty" specification="_DFnwQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNJ3rhiEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNJ37hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNJ4LhiEe2UuoshngsjNA" name="removeChannel" specification="_DFoXUrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNJ4bhiEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNJ4rhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNJ47hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNw4LhiEe2UuoshngsjNA" name="addChannel" specification="_DFo-YLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNw4bhiEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNw4rhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNw47hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNw5LhiEe2UuoshngsjNA" name="getNumChannels" specification="_DFo-ZLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNw5bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFmiIbhiEe2UuoshngsjNA" name="Channels" visibility="package" method="_DdNJ1bhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DFnJMrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFnJM7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFnJMLhiEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFnJMbhiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFnJNLhiEe2UuoshngsjNA" type="_DFks8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFnJNbhiEe2UuoshngsjNA" name="getChannelSet" method="_DdNJ2bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFnJNrhiEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DaRxoLhiEe2UuoshngsjNA" type="_DXwCELhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFnwQbhiEe2UuoshngsjNA" name="addNewChannelSet" method="_DdNJ3LhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DFnwQrhiEe2UuoshngsjNA" name="isEmpty" method="_DdNJ3bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFoXULhiEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFoXUbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFoXUrhiEe2UuoshngsjNA" name="removeChannel" method="_DdNJ4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFoXU7hiEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFoXVLhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFoXVbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFo-YLhiEe2UuoshngsjNA" name="addChannel" method="_DdNw4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFo-YbhiEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFo-YrhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFo-Y7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFo-ZLhiEe2UuoshngsjNA" name="getNumChannels" method="_DdNw5LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFo-ZbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_DFlUALhiEe2UuoshngsjNA" name="ChannelSet" visibility="private">
                <generalization xmi:id="_DaQjgLhiEe2UuoshngsjNA" general="_DXwCELhiEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_DbnOYbhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DbnOYrhiEe2UuoshngsjNA" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNJ0LhiEe2UuoshngsjNA" name="ChannelSet" specification="_DFl7ELhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdNJ0bhiEe2UuoshngsjNA" type="_DFlUALhiEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNJ0rhiEe2UuoshngsjNA" name="ChannelSet" specification="_DFl7FLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdNJ07hiEe2UuoshngsjNA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DdNJ1LhiEe2UuoshngsjNA" type="_DFlUALhiEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DFl7ELhiEe2UuoshngsjNA" name="ChannelSet" visibility="private" method="_DdNJ0LhiEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_DFl7EbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DFl7ErhiEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DFl7E7hiEe2UuoshngsjNA" type="_DFlUALhiEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DFl7FLhiEe2UuoshngsjNA" name="ChannelSet" visibility="private" method="_DdNJ0rhiEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_DFl7FrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DFl7F7hiEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DFl7FbhiEe2UuoshngsjNA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DFmiILhiEe2UuoshngsjNA" type="_DFlUALhiEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFqMgLhiEe2UuoshngsjNA" name="CodeFragment">
              <ownedAttribute xmi:id="_DbpqoLhiEe2UuoshngsjNA" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DbpqobhiEe2UuoshngsjNA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbpqorhiEe2UuoshngsjNA" name="edges" visibility="package" type="_DXvbALhiEe2UuoshngsjNA" association="_DeimkbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbqRsbhiEe2UuoshngsjNA" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbqRs7hiEe2UuoshngsjNA" name="codeFragment" visibility="package" type="_DXvbALhiEe2UuoshngsjNA" association="_DejNobhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dbq4wrhiEe2UuoshngsjNA" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dbrf0bhiEe2UuoshngsjNA" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNw5rhiEe2UuoshngsjNA" name="CodeFragment" specification="_DFraoLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNw57hiEe2UuoshngsjNA" type="_DFqMgLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNw6LhiEe2UuoshngsjNA" name="CodeFragment" specification="_DaSYsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNw6bhiEe2UuoshngsjNA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNw6rhiEe2UuoshngsjNA" name="edges" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdNw67hiEe2UuoshngsjNA" name="coordinators" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdNw7LhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdNw7bhiEe2UuoshngsjNA" type="_DFqMgLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNw7rhiEe2UuoshngsjNA" name="getCoordinator" specification="_DFsBs7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNw77hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdNw8LhiEe2UuoshngsjNA" name="instructions" specification="_DFsowLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdNw8bhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdOX8LhiEe2UuoshngsjNA" name="size" specification="_DFtP0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdOX8bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdOX8rhiEe2UuoshngsjNA" name="generateCodeFragment" specification="_DFtP0rhiEe2UuoshngsjNA">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdOX87hiEe2UuoshngsjNA" name="getBaseInstruction" specification="_DFtP07hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdOX9LhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOX9bhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOX9rhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOX97hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdOX-LhiEe2UuoshngsjNA" name="push" specification="_DFt24rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdOX-bhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOX-rhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOX-7hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOX_LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdOX_bhiEe2UuoshngsjNA" name="pull" specification="_DFud8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdOX_rhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOX_7hiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOYALhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOYAbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdOYArhiEe2UuoshngsjNA" name="ifHas" specification="_DFud9bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdOYA7hiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOYBLhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOYBbhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOYBrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdOYB7hiEe2UuoshngsjNA" name="ifNotHas" specification="_DFvFBLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdOYCLhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOYCbhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOYCrhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOYC7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdOYDLhiEe2UuoshngsjNA" name="wait" specification="_DFvsELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdOYDbhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdOYDrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdOYD7hiEe2UuoshngsjNA" name="sleep" specification="_DFvsE7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdOYELhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdO_ALhiEe2UuoshngsjNA" name="reportIfDifferentCoordinators" specification="_DaUN4bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdO_AbhiEe2UuoshngsjNA" name="coordinators" type="_DXvbALhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdO_ArhiEe2UuoshngsjNA" name="multipleCoordinators" specification="_DaVcAbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdO_A7hiEe2UuoshngsjNA" name="coordinators" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdO_BLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFraoLhiEe2UuoshngsjNA" name="CodeFragment" visibility="package" method="_DdNw5rhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DFsBsLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFsBsbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeBCIrhiEe2UuoshngsjNA">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFsBsrhiEe2UuoshngsjNA" type="_DFqMgLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFsBs7hiEe2UuoshngsjNA" name="getCoordinator" method="_DdNw7rhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeBCJLhiEe2UuoshngsjNA">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFsBtLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFsowLhiEe2UuoshngsjNA" name="instructions" method="_DdNw8LhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeBCJbhiEe2UuoshngsjNA">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_DaUN4LhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFtP0LhiEe2UuoshngsjNA" name="size" method="_DdOX8LhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeBCJrhiEe2UuoshngsjNA">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFtP0bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFtP0rhiEe2UuoshngsjNA" name="generateCodeFragment" visibility="private" method="_DdOX8rhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DFtP07hiEe2UuoshngsjNA" name="getBaseInstruction" visibility="private" method="_DdOX87hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFtP1LhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFtP1bhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFt24LhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFt24bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFt24rhiEe2UuoshngsjNA" name="push" visibility="private" method="_DdOX-LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFt247hiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFt25LhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFt25bhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFt25rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFud8LhiEe2UuoshngsjNA" name="pull" visibility="private" method="_DdOX_bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFud8bhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFud8rhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFud87hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFud9LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFud9bhiEe2UuoshngsjNA" name="ifHas" visibility="private" method="_DdOYArhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFvFALhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFvFAbhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFvFArhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFvFA7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFvFBLhiEe2UuoshngsjNA" name="ifNotHas" visibility="private" method="_DdOYB7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFvFBbhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFvFBrhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFvFB7hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFvFCLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFvsELhiEe2UuoshngsjNA" name="wait" method="_DdOYDLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFvsEbhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFvsErhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFvsE7hiEe2UuoshngsjNA" name="sleep" isStatic="true" method="_DdOYD7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DFvsFLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DaSYsLhiEe2UuoshngsjNA" name="CodeFragment" visibility="package" method="_DdNw6LhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DaS_w7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DaS_xLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeBCI7hiEe2UuoshngsjNA">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_DaSYsbhiEe2UuoshngsjNA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DaS_wLhiEe2UuoshngsjNA" name="edges" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DaS_wbhiEe2UuoshngsjNA" name="coordinators" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DaS_wrhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DaS_xbhiEe2UuoshngsjNA" type="_DFqMgLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DaUN4bhiEe2UuoshngsjNA" name="reportIfDifferentCoordinators" visibility="private" method="_DdO_ALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DaUN4rhiEe2UuoshngsjNA" name="coordinators" type="_DXvbALhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DaVcAbhiEe2UuoshngsjNA" name="multipleCoordinators" visibility="private" method="_DdO_ArhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DaVcArhiEe2UuoshngsjNA" name="coordinators" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DaWDELhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFyIULhiEe2UuoshngsjNA" name="CombinedActivation">
              <generalization xmi:id="_DX-rkbhiEe2UuoshngsjNA" general="_DFSZErhiEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_DaWqILhiEe2UuoshngsjNA" client="_DFyIULhiEe2UuoshngsjNA" supplier="_DaLD8rhiEe2UuoshngsjNA" contract="_DaLD8rhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdO_BbhiEe2UuoshngsjNA" name="CombinedActivation" specification="_DFyIUbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdO_BrhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdO_B7hiEe2UuoshngsjNA" type="_DFyIULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdPmELhiEe2UuoshngsjNA" name="CombinedActivation" specification="_DX9dcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdPmEbhiEe2UuoshngsjNA" name="elem" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdPmErhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdPmE7hiEe2UuoshngsjNA" type="_DFyIULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdPmFLhiEe2UuoshngsjNA" name="CombinedActivation" specification="_DX9ddrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdPmFbhiEe2UuoshngsjNA" name="priorEntry" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdPmFrhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdPmF7hiEe2UuoshngsjNA" type="_DFyIULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdPmGLhiEe2UuoshngsjNA" name="canCombine" specification="_DX-Eg7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdPmGbhiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdPmGrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFyIUbhiEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_DdO_BbhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DFyvYLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFyvYbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFyIUrhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFyvYrhiEe2UuoshngsjNA" type="_DFyIULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DX9dcLhiEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_DdPmELhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DX9dc7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DX9ddLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DX9dcbhiEe2UuoshngsjNA" name="elem" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX9dcrhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DX9ddbhiEe2UuoshngsjNA" type="_DFyIULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DX9ddrhiEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_DdPmFLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DX-EgLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DX-EgbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DX9dd7hiEe2UuoshngsjNA" name="priorEntry" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX9deLhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX-EgrhiEe2UuoshngsjNA" type="_DFyIULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DX-Eg7hiEe2UuoshngsjNA" name="canCombine" method="_DdPmGLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DX-EhLhiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX-EhbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFz9gLhiEe2UuoshngsjNA" name="CommunicationGraph">
              <ownedComment xmi:id="_DeBCJ7hiEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DX_5s7hiEe2UuoshngsjNA" general="_DIuHkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbsG4LhiEe2UuoshngsjNA" name="wfm" visibility="package" type="_DGFqULhiEe2UuoshngsjNA" association="_DejNpLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dbst8LhiEe2UuoshngsjNA" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dbst8rhiEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbtVALhiEe2UuoshngsjNA" name="workLoad" visibility="package" type="_DJdHYLhiEe2UuoshngsjNA" association="_Dej0sbhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdPmG7hiEe2UuoshngsjNA" name="CommunicationGraph" specification="_DX-rkrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdPmHLhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdPmHbhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdPmHrhiEe2UuoshngsjNA" type="_DFz9gLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdQNILhiEe2UuoshngsjNA" name="CommunicationGraph" specification="_DX_SpLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdQNIbhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdQNIrhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdQNI7hiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdQNJLhiEe2UuoshngsjNA" type="_DFz9gLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdQNJbhiEe2UuoshngsjNA" name="createHeader" specification="_DF1LoLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdQNJrhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdQNJ7hiEe2UuoshngsjNA" name="createFooter" specification="_DF2ZwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdQNKLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdQNKbhiEe2UuoshngsjNA" name="visualization" specification="_DF3A0rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdQNKrhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdQNK7hiEe2UuoshngsjNA" name="createWarpFileContent" specification="_DF3A1rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdQNLLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DF1LoLhiEe2UuoshngsjNA" name="createHeader" method="_DdQNJbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DX_5sLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF2ZwLhiEe2UuoshngsjNA" name="createFooter" method="_DdQNJ7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DX_5sbhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF3A0rhiEe2UuoshngsjNA" name="visualization" method="_DdQNKbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DX_5srhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF3A1rhiEe2UuoshngsjNA" name="createWarpFileContent" method="_DdQNK7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DF3n4LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DX-rkrhiEe2UuoshngsjNA" name="CommunicationGraph" method="_DdPmG7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DX_SobhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DX_SorhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DX-rk7hiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX_SoLhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX_So7hiEe2UuoshngsjNA" type="_DFz9gLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DX_SpLhiEe2UuoshngsjNA" name="CommunicationGraph" method="_DdQNILhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DX_SqLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DX_SqbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DX_SpbhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX_SprhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DX_Sp7hiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DX_SqrhiEe2UuoshngsjNA" type="_DFz9gLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DF5dELhiEe2UuoshngsjNA" name="ConnectivityPoset">
              <ownedComment xmi:id="_DeBCKLhiEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_DYAgxbhiEe2UuoshngsjNA" general="_DG6wwLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdQ0MLhiEe2UuoshngsjNA" name="ConnectivityPoset" specification="_DYAgwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdQ0MbhiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdQ0MrhiEe2UuoshngsjNA" type="_DF5dELhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdQ0M7hiEe2UuoshngsjNA" name="findCoordinator" specification="_DaX4QLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdQ0NLhiEe2UuoshngsjNA" name="nodesInFlow" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdQ0NbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DYAgwLhiEe2UuoshngsjNA" name="ConnectivityPoset" visibility="package" method="_DdQ0MLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYAgwrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYAgw7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYAgwbhiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYAgxLhiEe2UuoshngsjNA" type="_DF5dELhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DaX4QLhiEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_DdQ0M7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DaYfULhiEe2UuoshngsjNA" name="nodesInFlow" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DaYfUbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DF6rMLhiEe2UuoshngsjNA" name="DeadlineComparator">
              <interfaceRealization xmi:id="_DaZGYrhiEe2UuoshngsjNA" client="_DF6rMLhiEe2UuoshngsjNA" supplier="_DYBH0LhiEe2UuoshngsjNA" contract="_DYBH0LhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdRbQLhiEe2UuoshngsjNA" name="compare" specification="_DaaUgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdRbQbhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdRbQrhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdRbQ7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DaaUgLhiEe2UuoshngsjNA" name="compare" method="_DdRbQLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DaaUgbhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DaaUgrhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DaaUg7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DF75ULhiEe2UuoshngsjNA" name="Description">
              <ownedComment xmi:id="_DeBCKbhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Daa7krhiEe2UuoshngsjNA" general="_DXvbALhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbtVArhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DbtVA7hiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdRbRLhiEe2UuoshngsjNA" name="Description" specification="_DF8gYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdRbRbhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdRbRrhiEe2UuoshngsjNA" name="Description" specification="_DF9HcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdRbR7hiEe2UuoshngsjNA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdRbSLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdRbSbhiEe2UuoshngsjNA" name="toString" specification="_DF9HdbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdRbSrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DF8gYLhiEe2UuoshngsjNA" name="Description" method="_DdRbRLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DF8gYbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF8gYrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF8gY7hiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF9HcLhiEe2UuoshngsjNA" name="Description" method="_DdRbRrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DF9HcrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF9Hc7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF9HcbhiEe2UuoshngsjNA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF9HdLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF9HdbhiEe2UuoshngsjNA" name="toString" method="_DdRbSbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DF9ugLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DF-VkLhiEe2UuoshngsjNA" name="Edge">
              <generalization xmi:id="_DYC9ArhiEe2UuoshngsjNA" general="_DH190LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dbt8ELhiEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dbt8EbhiEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dbt8ErhiEe2UuoshngsjNA" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dbt8E7hiEe2UuoshngsjNA" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dbt8FLhiEe2UuoshngsjNA" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbujILhiEe2UuoshngsjNA" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbujIbhiEe2UuoshngsjNA" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbujIrhiEe2UuoshngsjNA" name="state" type="_DGAKwLhiEe2UuoshngsjNA" association="_DeBpMLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbujI7hiEe2UuoshngsjNA" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DabiobhiEe2UuoshngsjNA" client="_DF-VkLhiEe2UuoshngsjNA" supplier="_DaLD8rhiEe2UuoshngsjNA" contract="_DaLD8rhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdRbS7hiEe2UuoshngsjNA" name="Edge" specification="_DGAx0bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdRbTLhiEe2UuoshngsjNA" type="_DF-VkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdSCULhiEe2UuoshngsjNA" name="Edge" specification="_DGBY4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdSCUbhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdSCUrhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdSCU7hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdSCVLhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdSCVbhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdSCVrhiEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdSCV7hiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdSCWLhiEe2UuoshngsjNA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdSCWbhiEe2UuoshngsjNA" type="_DF-VkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdSCWrhiEe2UuoshngsjNA" name="compareTo" specification="_DYCV8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdSCW7hiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdSCXLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdSCXbhiEe2UuoshngsjNA" name="toString" specification="_DGB_87hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdSCXrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdSCX7hiEe2UuoshngsjNA" name="print" specification="_DGDOELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdSCYLhiEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdSCYbhiEe2UuoshngsjNA" name="print" specification="_DGD1ILhiEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGAx0bhiEe2UuoshngsjNA" name="Edge" visibility="package" method="_DdRbS7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGAx0rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGAx07hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGAx1LhiEe2UuoshngsjNA" type="_DF-VkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGBY4LhiEe2UuoshngsjNA" name="Edge" visibility="package" method="_DdSCULhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGB_8LhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGB_8bhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGBY4bhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGBY4rhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGBY47hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGBY5LhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGBY5bhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGBY5rhiEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGBY57hiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGBY6LhiEe2UuoshngsjNA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGB_8rhiEe2UuoshngsjNA" type="_DF-VkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGB_87hiEe2UuoshngsjNA" name="toString" method="_DdSCXbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGCnALhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGDOELhiEe2UuoshngsjNA" name="print" method="_DdSCX7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGDOEbhiEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGD1ILhiEe2UuoshngsjNA" name="print" method="_DdSCYbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DYCV8LhiEe2UuoshngsjNA" name="compareTo" method="_DdSCWrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYCV8bhiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYCV8rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_DGAKwLhiEe2UuoshngsjNA" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_DGAKwrhiEe2UuoshngsjNA" name="RELEASED"/>
                <ownedLiteral xmi:id="_DGAKw7hiEe2UuoshngsjNA" name="EXECUTING"/>
                <ownedLiteral xmi:id="_DGAx0LhiEe2UuoshngsjNA" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGFqULhiEe2UuoshngsjNA" name="FileManager">
              <ownedComment xmi:id="_DeBpMrhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DbvKMLhiEe2UuoshngsjNA" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbvKMbhiEe2UuoshngsjNA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdSCYrhiEe2UuoshngsjNA" name="FileManager" specification="_DGGRYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdSCY7hiEe2UuoshngsjNA" type="_DGFqULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdSpYLhiEe2UuoshngsjNA" name="FileManager" specification="_DGG4cLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdSpYbhiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdSpYrhiEe2UuoshngsjNA" type="_DGFqULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdSpY7hiEe2UuoshngsjNA" name="getDocumentsDirectory" specification="_DGG4dbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdSpZLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdSpZbhiEe2UuoshngsjNA" name="getCurrentDirectory" specification="_DGHfgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdSpZrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdTQcLhiEe2UuoshngsjNA" name="createFile" specification="_DGHfgrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdTQcbhiEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQcrhiEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQc7hiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQdLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdTQdbhiEe2UuoshngsjNA" name="createFile" specification="_DGIGkbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdTQdrhiEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQd7hiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQeLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdTQebhiEe2UuoshngsjNA" name="createDirectory" specification="_DGItoLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdTQerhiEe2UuoshngsjNA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQe7hiEe2UuoshngsjNA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQfLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdTQfbhiEe2UuoshngsjNA" name="writeFile" specification="_DGJUsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdTQfrhiEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQf7hiEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdTQgLhiEe2UuoshngsjNA" name="readFile" specification="_DGJ7wLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdTQgbhiEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQgrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGGRYLhiEe2UuoshngsjNA" name="FileManager" method="_DdSCYrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGGRYbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGGRYrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeCQQLhiEe2UuoshngsjNA">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGGRY7hiEe2UuoshngsjNA" type="_DGFqULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGG4cLhiEe2UuoshngsjNA" name="FileManager" method="_DdSpYLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGG4crhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGG4c7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGG4cbhiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGG4dLhiEe2UuoshngsjNA" type="_DGFqULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGG4dbhiEe2UuoshngsjNA" name="getDocumentsDirectory" method="_DdSpY7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGG4drhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGHfgLhiEe2UuoshngsjNA" name="getCurrentDirectory" method="_DdSpZbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGHfgbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGHfgrhiEe2UuoshngsjNA" name="createFile" method="_DdTQcLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeCQQbhiEe2UuoshngsjNA">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGHfg7hiEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGHfhLhiEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGHfhbhiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGIGkLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGIGkbhiEe2UuoshngsjNA" name="createFile" method="_DdTQdbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGIGkrhiEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGIGk7hiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGIGlLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGItoLhiEe2UuoshngsjNA" name="createDirectory" method="_DdTQebhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGItobhiEe2UuoshngsjNA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGItorhiEe2UuoshngsjNA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGIto7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGJUsLhiEe2UuoshngsjNA" name="writeFile" method="_DdTQfbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGJUsbhiEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGJUsrhiEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGJ7wLhiEe2UuoshngsjNA" name="readFile" method="_DdTQgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGJ7wbhiEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGJ7wrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGKi0LhiEe2UuoshngsjNA" name="Flow">
              <ownedComment xmi:id="_DeCQQrhiEe2UuoshngsjNA">
                <body>The Flow class extends the SchedulableObject file and implements Comparable.&#xD;
It keeps track of the flows used for the WARP project.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DYIclLhiEe2UuoshngsjNA" general="_DH190LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbvxQLhiEe2UuoshngsjNA" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DbvxQbhiEe2UuoshngsjNA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbvxQrhiEe2UuoshngsjNA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DbwYULhiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbwYUbhiEe2UuoshngsjNA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DbwYUrhiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbwYU7hiEe2UuoshngsjNA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DbwYVLhiEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dbw_YLhiEe2UuoshngsjNA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dbw_YbhiEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dbw_YrhiEe2UuoshngsjNA" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dbw_Y7hiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbxmcLhiEe2UuoshngsjNA" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DbxmcbhiEe2UuoshngsjNA" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dbxmc7hiEe2UuoshngsjNA" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbyNgLhiEe2UuoshngsjNA" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DbyNgrhiEe2UuoshngsjNA" name="nodes" visibility="package" type="_DXvbALhiEe2UuoshngsjNA" association="_DekbwbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dby0kbhiEe2UuoshngsjNA" name="linkTxAndTotalCost" visibility="package" type="_DXvbALhiEe2UuoshngsjNA" association="_DelC0bhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DbzbobhiEe2UuoshngsjNA" name="edges" visibility="package" type="_DXvbALhiEe2UuoshngsjNA" association="_Delp4LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db0CsbhiEe2UuoshngsjNA" name="nodePredecessor" visibility="package" type="_DGwYsLhiEe2UuoshngsjNA" association="_Delp47hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db0Cs7hiEe2UuoshngsjNA" name="edgePredecessor" visibility="package" type="_DF-VkLhiEe2UuoshngsjNA" association="_DemQ8bhiEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_DadX0LhiEe2UuoshngsjNA" client="_DGKi0LhiEe2UuoshngsjNA" supplier="_DaLD8rhiEe2UuoshngsjNA" contract="_DaLD8rhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdTQg7hiEe2UuoshngsjNA" name="Flow" specification="_DGMYALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdTQhLhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQhbhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQhrhiEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdTQh7hiEe2UuoshngsjNA" type="_DGKi0LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdT3gLhiEe2UuoshngsjNA" name="Flow" specification="_DGM_ELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdT3gbhiEe2UuoshngsjNA" type="_DGKi0LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdT3grhiEe2UuoshngsjNA" name="getInitialPriority" specification="_DGM_FLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdT3g7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdT3hLhiEe2UuoshngsjNA" name="getIndex" specification="_DGM_FrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdT3hbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdT3hrhiEe2UuoshngsjNA" name="getNumTxPerLink" specification="_DGNmIbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdT3h7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdT3iLhiEe2UuoshngsjNA" name="getNodes" specification="_DGNmI7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdT3ibhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdT3irhiEe2UuoshngsjNA" name="getEdges" specification="_DGONMbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdT3i7hiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdT3jLhiEe2UuoshngsjNA" name="addEdge" specification="_DYHOcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdT3jbhiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdT3jrhiEe2UuoshngsjNA" name="addNode" specification="_DYH1gLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdT3j7hiEe2UuoshngsjNA" name="node" type="_DGwYsLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdT3kLhiEe2UuoshngsjNA" name="getLinkTxAndTotalCost" specification="_DGO0QbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdT3kbhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdUekLhiEe2UuoshngsjNA" name="setInitialPriority" specification="_DGPbUbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdUekbhiEe2UuoshngsjNA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdUekrhiEe2UuoshngsjNA" name="setIndex" specification="_DGQCYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdUek7hiEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdUelLhiEe2UuoshngsjNA" name="setNumTxPerLink" specification="_DGQCYrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdUelbhiEe2UuoshngsjNA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdUelrhiEe2UuoshngsjNA" name="setNodes" specification="_Daf0ELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdUel7hiEe2UuoshngsjNA" name="nodes" type="_DXvbALhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdUemLhiEe2UuoshngsjNA" name="setLinkTxAndTotalCost" specification="_DagbILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdUembhiEe2UuoshngsjNA" name="linkTxAndTotalCost" type="_DXvbALhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdUemrhiEe2UuoshngsjNA" name="compareTo" specification="_DYH1grhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdUem7hiEe2UuoshngsjNA" name="flow" type="_DGKi0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdUenLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdUenbhiEe2UuoshngsjNA" name="toString" specification="_DGQpcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdUenrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGMYALhiEe2UuoshngsjNA" name="Flow" visibility="package" method="_DdTQg7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGMYBLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGMYBbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeCQQ7hiEe2UuoshngsjNA">
                  <body>Constructor that sets name, priority, and index.&#xD;
     * &#xD;
     * @param name the name of the flow&#xD;
     * @param priority the priority of the flow&#xD;
     * @param index the index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGMYAbhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGMYArhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGMYA7hiEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGMYBrhiEe2UuoshngsjNA" type="_DGKi0LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGM_ELhiEe2UuoshngsjNA" name="Flow" visibility="package" method="_DdT3gLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGM_EbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGM_ErhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeCQRLhiEe2UuoshngsjNA">
                  <body>Constructor that sets the index, numTxPerLink, nodePredecessor, and edgePredecessor.&#xD;
     * It also initializes an ArrayList each for nodes, linkTxAndTotalCost, and edges.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGM_E7hiEe2UuoshngsjNA" type="_DGKi0LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGM_FLhiEe2UuoshngsjNA" name="getInitialPriority" method="_DdT3grhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeCQRbhiEe2UuoshngsjNA">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGM_FbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGM_FrhiEe2UuoshngsjNA" name="getIndex" method="_DdT3hLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeCQRrhiEe2UuoshngsjNA">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGNmILhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGNmIbhiEe2UuoshngsjNA" name="getNumTxPerLink" method="_DdT3hrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3ULhiEe2UuoshngsjNA">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGNmIrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGNmI7hiEe2UuoshngsjNA" name="getNodes" method="_DdT3iLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3UbhiEe2UuoshngsjNA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dael8LhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGONMbhiEe2UuoshngsjNA" name="getEdges" method="_DdT3irhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3UrhiEe2UuoshngsjNA">
                  <body>@return the edges</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dael8bhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGO0QbhiEe2UuoshngsjNA" name="getLinkTxAndTotalCost" method="_DdT3kLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3VbhiEe2UuoshngsjNA">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_DafNALhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGPbUbhiEe2UuoshngsjNA" name="setInitialPriority" method="_DdUekLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3VrhiEe2UuoshngsjNA">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGPbUrhiEe2UuoshngsjNA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGQCYLhiEe2UuoshngsjNA" name="setIndex" method="_DdUekrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3V7hiEe2UuoshngsjNA">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGQCYbhiEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGQCYrhiEe2UuoshngsjNA" name="setNumTxPerLink" method="_DdUelLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3WLhiEe2UuoshngsjNA">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGQCY7hiEe2UuoshngsjNA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGQpcLhiEe2UuoshngsjNA" name="toString" method="_DdUenbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGQpcbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DYHOcLhiEe2UuoshngsjNA" name="addEdge" method="_DdT3jLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3U7hiEe2UuoshngsjNA">
                  <body>Add an edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DYHOcbhiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYH1gLhiEe2UuoshngsjNA" name="addNode" method="_DdT3jrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3VLhiEe2UuoshngsjNA">
                  <body>Add a node to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DYH1gbhiEe2UuoshngsjNA" name="node" type="_DGwYsLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYH1grhiEe2UuoshngsjNA" name="compareTo" method="_DdUemrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYH1g7hiEe2UuoshngsjNA" name="flow" type="_DGKi0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYIckLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Daf0ELhiEe2UuoshngsjNA" name="setNodes" method="_DdUelrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3WbhiEe2UuoshngsjNA">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Daf0EbhiEe2UuoshngsjNA" name="nodes" type="_DXvbALhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DagbILhiEe2UuoshngsjNA" name="setLinkTxAndTotalCost" method="_DdUemLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3WrhiEe2UuoshngsjNA">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DagbIbhiEe2UuoshngsjNA" name="linkTxAndTotalCost" type="_DXvbALhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGU64LhiEe2UuoshngsjNA" name="FlowMap">
              <ownedComment xmi:id="_DeC3W7hiEe2UuoshngsjNA">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DYKRwLhiEe2UuoshngsjNA" general="_DFQj4LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db1Q0LhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db1Q0bhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGVh8LhiEe2UuoshngsjNA" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_DeC3XLhiEe2UuoshngsjNA">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DYK40LhiEe2UuoshngsjNA" general="_DFQj4LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db1Q0rhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db1Q07hiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGWJALhiEe2UuoshngsjNA" name="GraphViz">
              <ownedComment xmi:id="_DeC3XbhiEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DYMG9rhiEe2UuoshngsjNA" general="_DIuHkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db1Q1LhiEe2UuoshngsjNA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db134LhiEe2UuoshngsjNA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db134bhiEe2UuoshngsjNA" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db134rhiEe2UuoshngsjNA" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db1347hiEe2UuoshngsjNA" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db135bhiEe2UuoshngsjNA" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db2e8bhiEe2UuoshngsjNA" name="wfm" visibility="package" type="_DGFqULhiEe2UuoshngsjNA" association="_Dem4AbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db2e87hiEe2UuoshngsjNA" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db3GAbhiEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db3tELhiEe2UuoshngsjNA" name="gv" visibility="package" type="_DGWJALhiEe2UuoshngsjNA" association="_DeoGILhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdUen7hiEe2UuoshngsjNA" name="GraphViz" specification="_DYLf4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdUeoLhiEe2UuoshngsjNA" name="wfm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdUeobhiEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdUeorhiEe2UuoshngsjNA" type="_DGWJALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFoLhiEe2UuoshngsjNA" name="GraphViz" specification="_DYLf5rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVFobhiEe2UuoshngsjNA" name="wfm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdVForhiEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdVFo7hiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdVFpLhiEe2UuoshngsjNA" type="_DGWJALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFpbhiEe2UuoshngsjNA" name="visualization" specification="_DGXXILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVFprhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFp7hiEe2UuoshngsjNA" name="initializeGraphVizContent" specification="_DGX-MrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVFqLhiEe2UuoshngsjNA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFqbhiEe2UuoshngsjNA" name="finalizeGraphVizContent" specification="_DGX-NLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFqrhiEe2UuoshngsjNA" name="getGraphVizContent" specification="_DGYlQLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVFq7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFrLhiEe2UuoshngsjNA" name="createGraphVizContent" specification="_DGYlQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVFrbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFrrhiEe2UuoshngsjNA" name="addFlowToGraphViz" specification="_DGYlRLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVFr7hiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFsLhiEe2UuoshngsjNA" name="addSrcNodeToGraphViz" specification="_DGZMULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVFsbhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFsrhiEe2UuoshngsjNA" name="addSnkNodeToGraphViz" specification="_DGZMUrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVFs7hiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFtLhiEe2UuoshngsjNA" name="finalizeCurrentFlowInGraphViz" specification="_DGZMVLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVFtbhiEe2UuoshngsjNA" name="addNodeName" specification="_DGZzYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVFtrhiEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdVFt7hiEe2UuoshngsjNA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGXXILhiEe2UuoshngsjNA" name="visualization" method="_DdVFpbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYMG9bhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGX-MrhiEe2UuoshngsjNA" name="initializeGraphVizContent" method="_DdVFp7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGX-M7hiEe2UuoshngsjNA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGX-NLhiEe2UuoshngsjNA" name="finalizeGraphVizContent" method="_DdVFqbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DGYlQLhiEe2UuoshngsjNA" name="getGraphVizContent" method="_DdVFqrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeC3XrhiEe2UuoshngsjNA">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGYlQbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGYlQrhiEe2UuoshngsjNA" name="createGraphVizContent" method="_DdVFrLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGYlQ7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGYlRLhiEe2UuoshngsjNA" name="addFlowToGraphViz" method="_DdVFrrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGYlRbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGZMULhiEe2UuoshngsjNA" name="addSrcNodeToGraphViz" method="_DdVFsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGZMUbhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGZMUrhiEe2UuoshngsjNA" name="addSnkNodeToGraphViz" method="_DdVFsrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGZMU7hiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGZMVLhiEe2UuoshngsjNA" name="finalizeCurrentFlowInGraphViz" method="_DdVFtLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DGZzYLhiEe2UuoshngsjNA" name="addNodeName" visibility="private" method="_DdVFtbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGZzYbhiEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGZzYrhiEe2UuoshngsjNA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DYLf4LhiEe2UuoshngsjNA" name="GraphViz" visibility="package" method="_DdUen7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYLf47hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYLf5LhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYLf4bhiEe2UuoshngsjNA" name="wfm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYLf4rhiEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYLf5bhiEe2UuoshngsjNA" type="_DGWJALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYLf5rhiEe2UuoshngsjNA" name="GraphViz" visibility="package" method="_DdVFoLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYMG8rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYMG87hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYLf57hiEe2UuoshngsjNA" name="wfm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYMG8LhiEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYMG8bhiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYMG9LhiEe2UuoshngsjNA" type="_DGWJALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGbokLhiEe2UuoshngsjNA" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_DeC3X7hiEe2UuoshngsjNA">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_Dai3YLhiEe2UuoshngsjNA" general="_DYN8JbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db4UILhiEe2UuoshngsjNA" name="gv" visibility="package" type="_DGWJALhiEe2UuoshngsjNA" association="_DeoGI7hiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVssLhiEe2UuoshngsjNA" name="GraphVizListener" specification="_DYPKQbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVssbhiEe2UuoshngsjNA" name="gv" type="_DGWJALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdVssrhiEe2UuoshngsjNA" type="_DGbokLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVss7hiEe2UuoshngsjNA" name="buildGraphViz" specification="_DYPKRrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVstLhiEe2UuoshngsjNA" name="gv" type="_DGWJALhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVstbhiEe2UuoshngsjNA" name="enterWarpName" specification="_DYPxUrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVstrhiEe2UuoshngsjNA" name="ctx" type="_DYPxULhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdVst7hiEe2UuoshngsjNA" name="exitWarp" specification="_DYRmgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdVsuLhiEe2UuoshngsjNA" name="ctx" type="_DYQYY7hiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdWTwLhiEe2UuoshngsjNA" name="enterFlowName" specification="_DYSNkrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdWTwbhiEe2UuoshngsjNA" name="ctx" type="_DYSNkLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdW60LhiEe2UuoshngsjNA" name="exitSrcNode" specification="_DYTbsbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdW60bhiEe2UuoshngsjNA" name="ctx" type="_DYS0o7hiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdW60rhiEe2UuoshngsjNA" name="exitSnkNode" specification="_DYUp0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdW607hiEe2UuoshngsjNA" name="ctx" type="_DYUCwrhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdW61LhiEe2UuoshngsjNA" name="exitFlow" specification="_DYVQ4bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdW61bhiEe2UuoshngsjNA" name="ctx" type="_DYUp1bhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DYPKQbhiEe2UuoshngsjNA" name="GraphVizListener" visibility="private" method="_DdVssLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYPKQ7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYPKRLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYPKQrhiEe2UuoshngsjNA" name="gv" type="_DGWJALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYPKRbhiEe2UuoshngsjNA" type="_DGbokLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYPKRrhiEe2UuoshngsjNA" name="buildGraphViz" isStatic="true" method="_DdVss7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYPKR7hiEe2UuoshngsjNA" name="gv" type="_DGWJALhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYPxUrhiEe2UuoshngsjNA" name="enterWarpName" method="_DdVstbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYPxU7hiEe2UuoshngsjNA" name="ctx" type="_DYPxULhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYRmgLhiEe2UuoshngsjNA" name="exitWarp" method="_DdVst7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYRmgbhiEe2UuoshngsjNA" name="ctx" type="_DYQYY7hiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYSNkrhiEe2UuoshngsjNA" name="enterFlowName" method="_DdWTwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYSNk7hiEe2UuoshngsjNA" name="ctx" type="_DYSNkLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYTbsbhiEe2UuoshngsjNA" name="exitSrcNode" method="_DdW60LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYTbsrhiEe2UuoshngsjNA" name="ctx" type="_DYS0o7hiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYUp0LhiEe2UuoshngsjNA" name="exitSnkNode" method="_DdW60rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYUp0bhiEe2UuoshngsjNA" name="ctx" type="_DYUCwrhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYVQ4bhiEe2UuoshngsjNA" name="exitFlow" method="_DdW61LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYVQ4rhiEe2UuoshngsjNA" name="ctx" type="_DYUp1bhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGfS8LhiEe2UuoshngsjNA" name="GuiVisualization">
              <ownedComment xmi:id="_DeC3YLhiEe2UuoshngsjNA">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Db47MLhiEe2UuoshngsjNA" name="frame" visibility="package" type="_DYWfArhiEe2UuoshngsjNA" association="_DeotMbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db47MrhiEe2UuoshngsjNA" name="jtable" visibility="package" type="_DYXtIbhiEe2UuoshngsjNA" association="_DepUQLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdW61rhiEe2UuoshngsjNA" name="GuiVisualization" specification="_DGf6ALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdW617hiEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdW62LhiEe2UuoshngsjNA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdW62bhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdW62rhiEe2UuoshngsjNA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdW627hiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdW63LhiEe2UuoshngsjNA" type="_DGfS8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdW63bhiEe2UuoshngsjNA" name="setVisible" specification="_DGghE7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdXh4LhiEe2UuoshngsjNA" name="resizeColumnWidth" specification="_DajecLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdXh4bhiEe2UuoshngsjNA" name="table" type="_DYXtIbhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGf6ALhiEe2UuoshngsjNA" name="GuiVisualization" method="_DdW61rhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGf6BLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGf6BbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeDeYLhiEe2UuoshngsjNA">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGf6AbhiEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGf6ArhiEe2UuoshngsjNA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DGghELhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGf6A7hiEe2UuoshngsjNA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DGghEbhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGf6BrhiEe2UuoshngsjNA" type="_DGfS8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGghE7hiEe2UuoshngsjNA" name="setVisible" method="_DdW63bhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeDeYbhiEe2UuoshngsjNA">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DajecLhiEe2UuoshngsjNA" name="resizeColumnWidth" visibility="private" method="_DdXh4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DajecbhiEe2UuoshngsjNA" name="table" type="_DYXtIbhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGhvMLhiEe2UuoshngsjNA" name="InputGraphFile">
              <ownedComment xmi:id="_DeDeYrhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Db5iQbhiEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db5iQrhiEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db5iQ7hiEe2UuoshngsjNA" name="wfm" visibility="private" type="_DGFqULhiEe2UuoshngsjNA" association="_DepUQ7hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db6JUbhiEe2UuoshngsjNA" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db7XcLhiEe2UuoshngsjNA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db7XcrhiEe2UuoshngsjNA" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db7-gLhiEe2UuoshngsjNA" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdXh4rhiEe2UuoshngsjNA" name="InputGraphFile" specification="_DYawcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdXh47hiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdXh5LhiEe2UuoshngsjNA" type="_DGhvMLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdXh5bhiEe2UuoshngsjNA" name="InputGraphFile" specification="_DYbXgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdXh5rhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdXh57hiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdXh6LhiEe2UuoshngsjNA" type="_DGhvMLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdXh6bhiEe2UuoshngsjNA" name="setGraphFileName" specification="_DGi9ULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdXh6rhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdXh67hiEe2UuoshngsjNA" name="verifyGraphFileName" specification="_DGi9UrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdXh7LhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdXh7bhiEe2UuoshngsjNA" name="readGraphFile" specification="_DGjkYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdXh7rhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdXh77hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdXh8LhiEe2UuoshngsjNA" name="getInputGraphFileName" specification="_DGjkY7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdXh8bhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdXh8rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdXh87hiEe2UuoshngsjNA" name="readGraphFileContents" specification="_DGkLcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdXh9LhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdXh9bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdYI8LhiEe2UuoshngsjNA" name="printVerboseMessage" specification="_DGkLc7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdYI8bhiEe2UuoshngsjNA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdYI8rhiEe2UuoshngsjNA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdYI87hiEe2UuoshngsjNA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGi9ULhiEe2UuoshngsjNA" name="setGraphFileName" visibility="private" method="_DdXh6bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGi9UbhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGi9UrhiEe2UuoshngsjNA" name="verifyGraphFileName" visibility="private" method="_DdXh67hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGi9U7hiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGjkYLhiEe2UuoshngsjNA" name="readGraphFile" method="_DdXh7bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGjkYbhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGjkYrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGjkY7hiEe2UuoshngsjNA" name="getInputGraphFileName" visibility="private" method="_DdXh8LhiEe2UuoshngsjNA" raisedException="_DakFgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGjkZLhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGjkZbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGkLcLhiEe2UuoshngsjNA" name="readGraphFileContents" visibility="private" method="_DdXh87hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGkLcbhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGkLcrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGkLc7hiEe2UuoshngsjNA" name="printVerboseMessage" visibility="private" method="_DdYI8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGkLdLhiEe2UuoshngsjNA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGkygLhiEe2UuoshngsjNA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGkygbhiEe2UuoshngsjNA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DYawcLhiEe2UuoshngsjNA" name="InputGraphFile" method="_DdXh4rhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYawcrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYawc7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYawcbhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYawdLhiEe2UuoshngsjNA" type="_DGhvMLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYbXgLhiEe2UuoshngsjNA" name="InputGraphFile" method="_DdXh5bhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYbXg7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYbXhLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYbXgbhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYbXgrhiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYbXhbhiEe2UuoshngsjNA" type="_DGhvMLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGmAoLhiEe2UuoshngsjNA" name="InstructionTimeSlot">
              <generalization xmi:id="_DYcloLhiEe2UuoshngsjNA" general="_DHzhkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db8lkLhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db8lkbhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdYI9LhiEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_DGmnsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdYI9bhiEe2UuoshngsjNA" type="_DGmAoLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdYI9rhiEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_DGnOwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdYI97hiEe2UuoshngsjNA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdYI-LhiEe2UuoshngsjNA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdYI-bhiEe2UuoshngsjNA" type="_DGmAoLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdYI-rhiEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_DGn10LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdYI-7hiEe2UuoshngsjNA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdYI_LhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdYI_bhiEe2UuoshngsjNA" type="_DGmAoLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGmnsLhiEe2UuoshngsjNA" name="InstructionTimeSlot" method="_DdYI9LhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGmnsbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGmnsrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGmns7hiEe2UuoshngsjNA" type="_DGmAoLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGnOwLhiEe2UuoshngsjNA" name="InstructionTimeSlot" visibility="package" method="_DdYI9rhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGnOw7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGnOxLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGnOwbhiEe2UuoshngsjNA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGnOwrhiEe2UuoshngsjNA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGnOxbhiEe2UuoshngsjNA" type="_DGmAoLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGn10LhiEe2UuoshngsjNA" name="InstructionTimeSlot" visibility="package" method="_DdYI-rhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGn10rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGn107hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGn10bhiEe2UuoshngsjNA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DGoc4LhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGn11LhiEe2UuoshngsjNA" type="_DGmAoLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGpD8LhiEe2UuoshngsjNA" name="LatencyAnalysis">
              <ownedComment xmi:id="_DeDeY7hiEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Db8lkrhiEe2UuoshngsjNA" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db8lk7hiEe2UuoshngsjNA" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db9MobhiEe2UuoshngsjNA" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db9Mo7hiEe2UuoshngsjNA" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db9zsLhiEe2UuoshngsjNA" name="latencyReport" visibility="private" type="_DF75ULhiEe2UuoshngsjNA" association="_Dep7UbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db9zsrhiEe2UuoshngsjNA" name="program" visibility="private" type="_DHKBUbhiEe2UuoshngsjNA" association="_DeqiYLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db-awLhiEe2UuoshngsjNA" name="workload" visibility="private" type="_DJdHYLhiEe2UuoshngsjNA" association="_DeqiY7hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db-awrhiEe2UuoshngsjNA" name="programTable" visibility="private" type="_DHeKYLhiEe2UuoshngsjNA" association="_DerJcbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db_B0LhiEe2UuoshngsjNA" name="nodeIndex" visibility="private" type="_DXuM4LhiEe2UuoshngsjNA" association="_DerJdLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdYwALhiEe2UuoshngsjNA" name="LatencyAnalysis" specification="_DYdzwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdYwAbhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdYwArhiEe2UuoshngsjNA" type="_DGpD8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdYwA7hiEe2UuoshngsjNA" name="LatencyAnalysis" specification="_DYea0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdYwBLhiEe2UuoshngsjNA" name="program" type="_DHKBUbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdYwBbhiEe2UuoshngsjNA" type="_DGpD8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdYwBrhiEe2UuoshngsjNA" name="latencyReport" specification="_DGprALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdYwB7hiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdYwCLhiEe2UuoshngsjNA" name="numMatchingTx" specification="_DGqSELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdYwCbhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdYwCrhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdYwC7hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdYwDLhiEe2UuoshngsjNA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdYwDbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGprALhiEe2UuoshngsjNA" name="latencyReport" method="_DdYwBrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYea1bhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGqSELhiEe2UuoshngsjNA" name="numMatchingTx" method="_DdYwCLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGqSEbhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGqSErhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGqSE7hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGqSFLhiEe2UuoshngsjNA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGqSFbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DYdzwLhiEe2UuoshngsjNA" name="LatencyAnalysis" visibility="package" method="_DdYwALhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYdzwrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYdzw7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYdzwbhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYdzxLhiEe2UuoshngsjNA" type="_DGpD8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYea0LhiEe2UuoshngsjNA" name="LatencyAnalysis" visibility="package" method="_DdYwA7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYea0rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYea07hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYea0bhiEe2UuoshngsjNA" name="program" type="_DHKBUbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYea1LhiEe2UuoshngsjNA" type="_DGpD8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGsHQLhiEe2UuoshngsjNA" name="LatencyVisualization">
              <ownedComment xmi:id="_DeDeZLhiEe2UuoshngsjNA">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DYfo9bhiEe2UuoshngsjNA" general="_DIuHkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Db_o4bhiEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Db_o4rhiEe2UuoshngsjNA" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Db_o47hiEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcAP8LhiEe2UuoshngsjNA" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcAP8bhiEe2UuoshngsjNA" name="warp" visibility="private" type="_DJFT8LhiEe2UuoshngsjNA" association="_DerwgbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcAP87hiEe2UuoshngsjNA" name="la" visibility="private" type="_DGpD8LhiEe2UuoshngsjNA" association="_DerwhLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdYwDrhiEe2UuoshngsjNA" name="LatencyVisualization" specification="_DYfo8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdYwD7hiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdYwELhiEe2UuoshngsjNA" type="_DGsHQLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DYfo8LhiEe2UuoshngsjNA" name="LatencyVisualization" visibility="package" method="_DdYwDrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYfo8rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYfo87hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYfo8bhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYfo9LhiEe2UuoshngsjNA" type="_DGsHQLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGt8cLhiEe2UuoshngsjNA" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_Dal6sLhiEe2UuoshngsjNA" client="_DGt8cLhiEe2UuoshngsjNA" supplier="_DYBH0LhiEe2UuoshngsjNA" contract="_DYBH0LhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdZXELhiEe2UuoshngsjNA" name="compare" specification="_DamhwbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdZXEbhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdZXErhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdZXE7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DamhwbhiEe2UuoshngsjNA" name="compare" method="_DdZXELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DamhwrhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DanI0LhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DanI0bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGvKkLhiEe2UuoshngsjNA" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_Danv4LhiEe2UuoshngsjNA" client="_DGvKkLhiEe2UuoshngsjNA" supplier="_DYBH0LhiEe2UuoshngsjNA" contract="_DYBH0LhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdZXFLhiEe2UuoshngsjNA" name="compare" specification="_DaoW8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdZXFbhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdZXFrhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdZXF7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DaoW8LhiEe2UuoshngsjNA" name="compare" method="_DdZXFLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DaoW8bhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DaoW8rhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DaoW87hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGwYsLhiEe2UuoshngsjNA" name="Node">
              <generalization xmi:id="_DYisQLhiEe2UuoshngsjNA" general="_DH190LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcA3ALhiEe2UuoshngsjNA" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcA3AbhiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcA3ArhiEe2UuoshngsjNA" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcA3A7hiEe2UuoshngsjNA" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcBeELhiEe2UuoshngsjNA" name="edges" type="_DXvbALhiEe2UuoshngsjNA" isReadOnly="true" association="_DesXkbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcBeErhiEe2UuoshngsjNA" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DcBeE7hiEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Dao-ArhiEe2UuoshngsjNA" client="_DGwYsLhiEe2UuoshngsjNA" supplier="_DaLD8rhiEe2UuoshngsjNA" contract="_DaLD8rhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdZXGLhiEe2UuoshngsjNA" name="Node" specification="_DGxm0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdZXGbhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdZXGrhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdZXG7hiEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdZXHLhiEe2UuoshngsjNA" type="_DGwYsLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdZXHbhiEe2UuoshngsjNA" name="compareTo" specification="_DYheILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdZXHrhiEe2UuoshngsjNA" name="node" type="_DGwYsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdZXH7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdZXILhiEe2UuoshngsjNA" name="toString" specification="_DGyN4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdZXIbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdZ-ILhiEe2UuoshngsjNA" name="addEdge" specification="_DYiFM7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdZ-IbhiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdZ-IrhiEe2UuoshngsjNA" name="addConflict" specification="_DGzcALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdZ-I7hiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdalMLhiEe2UuoshngsjNA" name="numEdges" specification="_DGzcArhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdalMbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdalMrhiEe2UuoshngsjNA" name="print" specification="_DG0DELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdalM7hiEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdalNLhiEe2UuoshngsjNA" name="print" specification="_DG0DFbhiEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGxm0LhiEe2UuoshngsjNA" name="Node" visibility="package" method="_DdZXGLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DGxm1LhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGxm1bhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGxm0bhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGxm0rhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGxm07hiEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGxm1rhiEe2UuoshngsjNA" type="_DGwYsLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGyN4LhiEe2UuoshngsjNA" name="toString" method="_DdZXILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGy08LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGzcALhiEe2UuoshngsjNA" name="addConflict" method="_DdZ-IrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGzcAbhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGzcArhiEe2UuoshngsjNA" name="numEdges" method="_DdalMLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DGzcA7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DG0DELhiEe2UuoshngsjNA" name="print" method="_DdalMrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DG0DEbhiEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DG0DFbhiEe2UuoshngsjNA" name="print" method="_DdalNLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DYheILhiEe2UuoshngsjNA" name="compareTo" method="_DdZXHbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYheIbhiEe2UuoshngsjNA" name="node" type="_DGwYsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYheIrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DYiFM7hiEe2UuoshngsjNA" name="addEdge" method="_DdZ-ILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYiFNLhiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DG14QLhiEe2UuoshngsjNA" name="NodeMap">
              <ownedComment xmi:id="_DeDeZbhiEe2UuoshngsjNA">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DYjTULhiEe2UuoshngsjNA" general="_DFQj4LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcCFILhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcCFIbhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DG2fULhiEe2UuoshngsjNA" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_DeDeZrhiEe2UuoshngsjNA">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DYkhdLhiEe2UuoshngsjNA" general="_DIKt8LhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdalNbhiEe2UuoshngsjNA" name="NonPreemptiveSchedule" specification="_DYj6YbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdalNrhiEe2UuoshngsjNA" name="poset" type="_DG6wwLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdalN7hiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdalOLhiEe2UuoshngsjNA" type="_DG2fULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DYj6YbhiEe2UuoshngsjNA" name="NonPreemptiveSchedule" visibility="package" method="_DdalNbhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYkhcbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYkhcrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYj6YrhiEe2UuoshngsjNA" name="poset" type="_DG6wwLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYkhcLhiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYkhc7hiEe2UuoshngsjNA" type="_DG2fULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DG3GYLhiEe2UuoshngsjNA" name="NotImplentedVisualization">
              <generalization xmi:id="_DYlIgbhiEe2UuoshngsjNA" general="_DIuHkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcCsMLhiEe2UuoshngsjNA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcCsMbhiEe2UuoshngsjNA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcCsMrhiEe2UuoshngsjNA" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcCsM7hiEe2UuoshngsjNA" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcCsNLhiEe2UuoshngsjNA" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcCsNbhiEe2UuoshngsjNA" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdalObhiEe2UuoshngsjNA" name="NotImplentedVisualization" specification="_DG3tcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdalOrhiEe2UuoshngsjNA" type="_DG3GYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdalO7hiEe2UuoshngsjNA" name="NotImplentedVisualization" specification="_DG4UgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdalPLhiEe2UuoshngsjNA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdalPbhiEe2UuoshngsjNA" type="_DG3GYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbMQLhiEe2UuoshngsjNA" name="visualization" specification="_DG4UhbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbMQbhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DG3tcLhiEe2UuoshngsjNA" name="NotImplentedVisualization" visibility="package" method="_DdalObhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DG3tcbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DG3tcrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DG3tc7hiEe2UuoshngsjNA" type="_DG3GYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DG4UgLhiEe2UuoshngsjNA" name="NotImplentedVisualization" visibility="package" method="_DdalO7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DG4UgrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DG4Ug7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DG4UgbhiEe2UuoshngsjNA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DG4UhLhiEe2UuoshngsjNA" type="_DG3GYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DG4UhbhiEe2UuoshngsjNA" name="visualization" method="_DdbMQLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYlIgLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DG5ioLhiEe2UuoshngsjNA" name="PeriodComparator">
              <interfaceRealization xmi:id="_DaqzMLhiEe2UuoshngsjNA" client="_DG5ioLhiEe2UuoshngsjNA" supplier="_DYBH0LhiEe2UuoshngsjNA" contract="_DYBH0LhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbMQrhiEe2UuoshngsjNA" name="compare" specification="_DaraQbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbMQ7hiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdbMRLhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdbMRbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DaraQbhiEe2UuoshngsjNA" name="compare" method="_DdbMQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DasBULhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DasBUbhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DasBUrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DG6wwLhiEe2UuoshngsjNA" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_DeDeZ7hiEe2UuoshngsjNA">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DcDTQLhiEe2UuoshngsjNA" name="activations" visibility="private" type="_DFfNYLhiEe2UuoshngsjNA" association="_DesXlLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcDTQrhiEe2UuoshngsjNA" name="workload" visibility="private" type="_DJdHYLhiEe2UuoshngsjNA" association="_Des-obhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcD6ULhiEe2UuoshngsjNA" name="flows" visibility="protected" type="_DGKi0LhiEe2UuoshngsjNA" association="_Des-pLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DcD6UrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DcD6U7hiEe2UuoshngsjNA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DcD6UbhiEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcD6VbhiEe2UuoshngsjNA" name="nodes" visibility="private" type="_DGwYsLhiEe2UuoshngsjNA" association="_DetlsbhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DcEhYbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DcEhYrhiEe2UuoshngsjNA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DcEhYLhiEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcFIcbhiEe2UuoshngsjNA" name="nodeMap" visibility="private" type="_DG14QLhiEe2UuoshngsjNA" association="_DetltLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcFvgLhiEe2UuoshngsjNA" name="priorityQueue" visibility="private" type="_DHnUU7hiEe2UuoshngsjNA" association="_DeuMwbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcGWkbhiEe2UuoshngsjNA" name="nodeConnectivityMap" visibility="protected" type="_DXuM4LhiEe2UuoshngsjNA" association="_DeuMxLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcG9orhiEe2UuoshngsjNA" name="activationMap" visibility="package" type="_DGVh8LhiEe2UuoshngsjNA" association="_Deuz0bhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbMRrhiEe2UuoshngsjNA" name="Poset" specification="_DYnkwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbMR7hiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdbMSLhiEe2UuoshngsjNA" type="_DG6wwLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbMSbhiEe2UuoshngsjNA" name="getNodeConnectivity" specification="_DG7-4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbMSrhiEe2UuoshngsjNA" type="_DXuM4LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbMS7hiEe2UuoshngsjNA" name="getNodeNames" specification="_DG8l8bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbMTLhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbMTbhiEe2UuoshngsjNA" name="getNodesNamesOrderedAlphabetically" specification="_DG90ELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbMTrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdbMT7hiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbMULhiEe2UuoshngsjNA" name="buildPosetOfActivations" specification="_DG-bILhiEe2UuoshngsjNA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbMUbhiEe2UuoshngsjNA" name="createEdgeLists" specification="_DG-bIbhiEe2UuoshngsjNA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzULhiEe2UuoshngsjNA" name="createConflictLists" specification="_DG-bIrhiEe2UuoshngsjNA">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzUbhiEe2UuoshngsjNA" name="createGlobalConflictLists" specification="_DG-bI7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzUrhiEe2UuoshngsjNA" name="createLocalConflictLists" specification="_DG-bJLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzU7hiEe2UuoshngsjNA" name="findCoordinator" specification="_DatPcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbzVLhiEe2UuoshngsjNA" name="nodesInFlow" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdbzVbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzVrhiEe2UuoshngsjNA" name="buildTxArray" specification="_Dat2gLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbzV7hiEe2UuoshngsjNA" name="nodesInFlow" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdbzWLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdbzWbhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzWrhiEe2UuoshngsjNA" name="createInitialActivations" specification="_DG_CMLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzW7hiEe2UuoshngsjNA" name="getMaxTx" specification="_DYoL0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbzXLhiEe2UuoshngsjNA" name="node" type="_DGwYsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdbzXbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzXrhiEe2UuoshngsjNA" name="getActivation" specification="_DYoy4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbzX7hiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdbzYLhiEe2UuoshngsjNA" name="node" type="_DGwYsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdbzYbhiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzYrhiEe2UuoshngsjNA" name="getHyperPeriod" specification="_DG_pQLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbzY7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzZLhiEe2UuoshngsjNA" name="getMaxPhase" specification="_DG_pQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdbzZbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdbzZrhiEe2UuoshngsjNA" name="orderActivations" specification="_DG_pRLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdcaYLhiEe2UuoshngsjNA" name="getNextActivation" specification="_DHAQULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdcaYbhiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdcaYrhiEe2UuoshngsjNA" name="addActivation" specification="_DYoy5bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdcaY7hiEe2UuoshngsjNA" name="activation" type="_DFSZErhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdcaZLhiEe2UuoshngsjNA" name="findBaseStation" specification="_DHAQUbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdcaZbhiEe2UuoshngsjNA" type="_DGwYsLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DG7-4LhiEe2UuoshngsjNA" name="getNodeConnectivity" visibility="private" method="_DdbMSbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DasoYLhiEe2UuoshngsjNA" type="_DXuM4LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DG8l8bhiEe2UuoshngsjNA" name="getNodeNames" method="_DdbMS7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DasoYbhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DG90ELhiEe2UuoshngsjNA" name="getNodesNamesOrderedAlphabetically" method="_DdbMTbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DG90EbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DG90ErhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DG-bILhiEe2UuoshngsjNA" name="buildPosetOfActivations" method="_DdbMULhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DG-bIbhiEe2UuoshngsjNA" name="createEdgeLists" visibility="private" method="_DdbMUbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DG-bIrhiEe2UuoshngsjNA" name="createConflictLists" visibility="private" method="_DdbzULhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DG-bI7hiEe2UuoshngsjNA" name="createGlobalConflictLists" visibility="private" method="_DdbzUbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DG-bJLhiEe2UuoshngsjNA" name="createLocalConflictLists" visibility="private" method="_DdbzUrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DG_CMLhiEe2UuoshngsjNA" name="createInitialActivations" visibility="private" method="_DdbzWrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DG_pQLhiEe2UuoshngsjNA" name="getHyperPeriod" method="_DdbzYrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DG_pQbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DG_pQrhiEe2UuoshngsjNA" name="getMaxPhase" method="_DdbzZLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DG_pQ7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DG_pRLhiEe2UuoshngsjNA" name="orderActivations" method="_DdbzZrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DHAQULhiEe2UuoshngsjNA" name="getNextActivation" method="_DdcaYLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeEFcLhiEe2UuoshngsjNA">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_DYoy5LhiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHAQUbhiEe2UuoshngsjNA" name="findBaseStation" visibility="protected" method="_DdcaZLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeEFcrhiEe2UuoshngsjNA">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_DYpZ8LhiEe2UuoshngsjNA" type="_DGwYsLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYnkwLhiEe2UuoshngsjNA" name="Poset" visibility="package" method="_DdbMRrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYnkwrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYnkw7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeDeaLhiEe2UuoshngsjNA">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_DYnkwbhiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYnkxLhiEe2UuoshngsjNA" type="_DG6wwLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYoL0LhiEe2UuoshngsjNA" name="getMaxTx" visibility="private" method="_DdbzW7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYoL0bhiEe2UuoshngsjNA" name="node" type="_DGwYsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYoL0rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DYoy4LhiEe2UuoshngsjNA" name="getActivation" visibility="private" method="_DdbzXrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYoy4bhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYoy4rhiEe2UuoshngsjNA" name="node" type="_DGwYsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYoy47hiEe2UuoshngsjNA" type="_DFSZErhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYoy5bhiEe2UuoshngsjNA" name="addActivation" method="_DdcaYrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeEFcbhiEe2UuoshngsjNA">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_DYoy5rhiEe2UuoshngsjNA" name="activation" type="_DFSZErhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DatPcLhiEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_DdbzU7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeDeabhiEe2UuoshngsjNA">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DatPcbhiEe2UuoshngsjNA" name="nodesInFlow" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DatPcrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dat2gLhiEe2UuoshngsjNA" name="buildTxArray" visibility="private" method="_DdbzVrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dat2gbhiEe2UuoshngsjNA" name="nodesInFlow" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DaudkLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DaudkbhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHFI0LhiEe2UuoshngsjNA" name="PreemptiveSchedule">
              <ownedComment xmi:id="_DeEFc7hiEe2UuoshngsjNA">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DYu5grhiEe2UuoshngsjNA" general="_DIKt8LhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdcaZrhiEe2UuoshngsjNA" name="PreemptiveSchedule" specification="_DYqoELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdcaZ7hiEe2UuoshngsjNA" name="poset" type="_DG6wwLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdcaaLhiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdcaabhiEe2UuoshngsjNA" type="_DHFI0LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdcaarhiEe2UuoshngsjNA" name="continueSearch" specification="_DYrPILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddcaa7hiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdcabLhiEe2UuoshngsjNA" name="activation" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdcabbhiEe2UuoshngsjNA" type="_DavrsLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdcabrhiEe2UuoshngsjNA" name="toProgram" specification="_DHFv4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddcab7hiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DddBcLhiEe2UuoshngsjNA" name="findPreeptiveChannelAndTime" specification="_DYr2MrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddBcbhiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBcrhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddBc7hiEe2UuoshngsjNA" type="_DavrsLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DddBdLhiEe2UuoshngsjNA" name="findAdditionalTime" specification="_DYsdQLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddBdbhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBdrhiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBd7hiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddBeLhiEe2UuoshngsjNA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBebhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DddBerhiEe2UuoshngsjNA" name="findMaxTimeAvailable" specification="_DYtEULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddBe7hiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBfLhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddBfbhiEe2UuoshngsjNA" type="_DavrsLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DddBfrhiEe2UuoshngsjNA" name="availableTime" specification="_DYtrYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddBf7hiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddBgLhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBgbhiEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBgrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DddBg7hiEe2UuoshngsjNA" name="addToSchedule" specification="_DYtrZbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddBhLhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddBhbhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBhrhiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBh7hiEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddBiLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DddBibhiEe2UuoshngsjNA" name="addToSchedule" specification="_DYuScbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddBirhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddBi7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHFv4LhiEe2UuoshngsjNA" name="toProgram" method="_DdcabrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYr2MbhiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYqoELhiEe2UuoshngsjNA" name="PreemptiveSchedule" visibility="package" method="_DdcaZrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DYqoE7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DYqoFLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DYqoEbhiEe2UuoshngsjNA" name="poset" type="_DG6wwLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYqoErhiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYqoFbhiEe2UuoshngsjNA" type="_DHFI0LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYrPILhiEe2UuoshngsjNA" name="continueSearch" visibility="protected" method="_DdcaarhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYrPIbhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYrPIrhiEe2UuoshngsjNA" name="activation" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DavrsrhiEe2UuoshngsjNA" type="_DavrsLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYr2MrhiEe2UuoshngsjNA" name="findPreeptiveChannelAndTime" visibility="private" method="_DddBcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYr2M7hiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYr2NLhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DawSwLhiEe2UuoshngsjNA" type="_DavrsLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYsdQLhiEe2UuoshngsjNA" name="findAdditionalTime" visibility="private" method="_DddBdLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYsdQbhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYsdQrhiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYsdQ7hiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYsdRLhiEe2UuoshngsjNA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DawSwbhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYtEULhiEe2UuoshngsjNA" name="findMaxTimeAvailable" visibility="private" method="_DddBerhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYtEUbhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYtEUrhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DawSwrhiEe2UuoshngsjNA" type="_DavrsLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYtrYLhiEe2UuoshngsjNA" name="availableTime" visibility="private" method="_DddBfrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYtrYbhiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYtrYrhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYtrY7hiEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYtrZLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DYtrZbhiEe2UuoshngsjNA" name="addToSchedule" visibility="private" method="_DddBg7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYtrZrhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYtrZ7hiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYtraLhiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYtrabhiEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYuScLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DYuScbhiEe2UuoshngsjNA" name="addToSchedule" visibility="protected" method="_DddBibhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYuScrhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYuSc7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHJaQLhiEe2UuoshngsjNA" name="PriorityComparator">
              <interfaceRealization xmi:id="_DawSw7hiEe2UuoshngsjNA" client="_DHJaQLhiEe2UuoshngsjNA" supplier="_DYBH0LhiEe2UuoshngsjNA" contract="_DYBH0LhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DddogLhiEe2UuoshngsjNA" name="compare" specification="_Daw50bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddogbhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddogrhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dddog7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Daw50bhiEe2UuoshngsjNA" name="compare" method="_DddogLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Daw50rhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Daxg4LhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Daxg4bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHKBUbhiEe2UuoshngsjNA" name="Program">
              <ownedComment xmi:id="_DeEFdLhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DcHksLhiEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcILwLhiEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcILwbhiEe2UuoshngsjNA" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcILwrhiEe2UuoshngsjNA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcILw7hiEe2UuoshngsjNA" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcILxLhiEe2UuoshngsjNA" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcILxbhiEe2UuoshngsjNA" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcILxrhiEe2UuoshngsjNA" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcIy0LhiEe2UuoshngsjNA" name="workLoad" visibility="package" type="_DJdHYLhiEe2UuoshngsjNA" association="_Deuz1LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcIy0rhiEe2UuoshngsjNA" name="scheduleBuilt" visibility="package" type="_DHeKYLhiEe2UuoshngsjNA" association="_Deva4rhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcJZ4bhiEe2UuoshngsjNA" name="SchedulerSelected" visibility="package" type="_DayH8LhiEe2UuoshngsjNA" association="_DewB8bhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcJZ47hiEe2UuoshngsjNA" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcKA8LhiEe2UuoshngsjNA" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcKA8rhiEe2UuoshngsjNA" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcKoAbhiEe2UuoshngsjNA" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcKoA7hiEe2UuoshngsjNA" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcLPELhiEe2UuoshngsjNA" name="channelsAvailable" visibility="package" type="_DFks8LhiEe2UuoshngsjNA" association="_DewB9LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcLPErhiEe2UuoshngsjNA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcL2ILhiEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcL2IrhiEe2UuoshngsjNA" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcMdMLhiEe2UuoshngsjNA" name="deadlineMisses" visibility="private" type="_DF75ULhiEe2UuoshngsjNA" association="_DewpAbhiEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_DYxVwbhiEe2UuoshngsjNA" client="_DHKBUbhiEe2UuoshngsjNA" supplier="_DIbzsLhiEe2UuoshngsjNA" contract="_DIbzsLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DddohLhiEe2UuoshngsjNA" name="Program" specification="_DayvALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddohbhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddohrhiEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dddoh7hiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddoiLhiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddoibhiEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddoirhiEe2UuoshngsjNA" type="_DHKBUbhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dddoi7hiEe2UuoshngsjNA" name="Program" specification="_Daz9IrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddojLhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddojbhiEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddojrhiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dddoj7hiEe2UuoshngsjNA" type="_DHKBUbhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DddokLhiEe2UuoshngsjNA" name="setDefaultParameters" specification="_DYyj4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DddokbhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DddokrhiEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dddok7hiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DddolLhiEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdePkLhiEe2UuoshngsjNA" name="toWorkLoad" specification="_DHMdkLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdePkbhiEe2UuoshngsjNA" type="_DJdHYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdePkrhiEe2UuoshngsjNA" name="buildProgram" specification="_Da0kM7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdePk7hiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdePlLhiEe2UuoshngsjNA" name="buildOriginalProgram" specification="_DHNEoLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdePlbhiEe2UuoshngsjNA" name="waitInstruction" specification="_DHNEobhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdePlrhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdePl7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdePmLhiEe2UuoshngsjNA" name="elseWaitInstruction" specification="_DHNrsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdePmbhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdePmrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dde2oLhiEe2UuoshngsjNA" name="elsePullClause" specification="_DHNrs7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dde2obhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2orhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2o7hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2pLhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2pbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dde2prhiEe2UuoshngsjNA" name="hasPushInstruction" specification="_DHOSwrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dde2p7hiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2qLhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2qbhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2qrhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2q7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dde2rLhiEe2UuoshngsjNA" name="pushInstruction" specification="_DHOSyLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dde2rbhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2rrhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2r7hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2sLhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2sbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dde2srhiEe2UuoshngsjNA" name="getFirstChannelInInstruction" specification="_DHO50rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dde2s7hiEe2UuoshngsjNA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dde2tLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdfdsLhiEe2UuoshngsjNA" name="findNextAvailableInstructionTimeSlot" specification="_DYzK87hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdfdsbhiEe2UuoshngsjNA" name="schedule" type="_DHeKYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdfdsrhiEe2UuoshngsjNA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddfds7hiEe2UuoshngsjNA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdtLhiEe2UuoshngsjNA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdtbhiEe2UuoshngsjNA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdtrhiEe2UuoshngsjNA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ddfdt7hiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfduLhiEe2UuoshngsjNA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdfdubhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdurhiEe2UuoshngsjNA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddfdu7hiEe2UuoshngsjNA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdvLhiEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdvbhiEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdvrhiEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddfdv7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdfdwLhiEe2UuoshngsjNA" name="slotIsAvailable" specification="_DY0ZEbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdfdwbhiEe2UuoshngsjNA" name="currentInstructionTimeSlot" type="_DGmAoLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdfdwrhiEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddfdw7hiEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdxLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdfdxbhiEe2UuoshngsjNA" name="findNextAvailableChannel" specification="_DY1AILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdfdxrhiEe2UuoshngsjNA" name="schedule" type="_DHeKYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddfdx7hiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdyLhiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdybhiEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdfdyrhiEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddfdy7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdgEwLhiEe2UuoshngsjNA" name="selectPriority" specification="_DHQH8LhiEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdgEwbhiEe2UuoshngsjNA" name="selectRM" specification="_DHQvALhiEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdgEwrhiEe2UuoshngsjNA" name="selectDM" specification="_DHQvAbhiEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdgEw7hiEe2UuoshngsjNA" name="selectRtHART" specification="_DHQvArhiEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddgr0LhiEe2UuoshngsjNA" name="setScheduleSelected" specification="_Da1LQLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddgr0bhiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddgr0rhiEe2UuoshngsjNA" name="setSchedule" specification="_DY1nMLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddgr07hiEe2UuoshngsjNA" name="schedule" type="_DHeKYLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdhS4LhiEe2UuoshngsjNA" name="getSchedule" specification="_DHQvA7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdhS4bhiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdhS4rhiEe2UuoshngsjNA" name="getSchedulerName" specification="_DHRWELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdhS47hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdhS5LhiEe2UuoshngsjNA" name="getSchChoice" specification="_DHR9ILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdhS5bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdhS5rhiEe2UuoshngsjNA" name="getNumChannels" specification="_DHR9IrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdhS57hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdhS6LhiEe2UuoshngsjNA" name="getNumTransmissions" specification="_DHTLQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdhS6bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdhS6rhiEe2UuoshngsjNA" name="getRealTimeHartFlag" specification="_DHTLR7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdhS67hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddh58LhiEe2UuoshngsjNA" name="setRealTimeHartFlag" specification="_DHTyUbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddh58bhiEe2UuoshngsjNA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddh58rhiEe2UuoshngsjNA" name="getMinPacketReceptionRate" specification="_DHTyU7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddh587hiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddh59LhiEe2UuoshngsjNA" name="getE2e" specification="_DHUZYrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddh59bhiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddh59rhiEe2UuoshngsjNA" name="getName" specification="_DHUZZrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddh597hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddh5-LhiEe2UuoshngsjNA" name="getOptimizationFlag" specification="_DHVnhLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddh5-bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddh5-rhiEe2UuoshngsjNA" name="deadlineMisses" specification="_DHWOk7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddh5-7hiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdihALhiEe2UuoshngsjNA" name="getNumFaults" specification="_DHWOlLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdihAbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdihArhiEe2UuoshngsjNA" name="getNodeMapIndex" specification="_DHW1pLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdihA7hiEe2UuoshngsjNA" type="_DXuM4LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// create an array of node names sorted alphabetically&#xD;
 var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); &#xD;
 &#xD;
 // create a new mapping from node names to index in schedule table&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>();&#xD;
 &#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHMdkLhiEe2UuoshngsjNA" name="toWorkLoad" method="_DdePkLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeEFdbhiEe2UuoshngsjNA">
                  <body>@return the WorkLoad object containing all flows and nodes within the graph.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DYzK8rhiEe2UuoshngsjNA" type="_DJdHYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHNEoLhiEe2UuoshngsjNA" name="buildOriginalProgram" method="_DdePlLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DHNEobhiEe2UuoshngsjNA" name="waitInstruction" visibility="private" method="_DdePlbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHNEorhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHNEo7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHNrsLhiEe2UuoshngsjNA" name="elseWaitInstruction" visibility="private" method="_DdePmLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHNrsbhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHNrsrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHNrs7hiEe2UuoshngsjNA" name="elsePullClause" visibility="private" method="_Dde2oLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHNrtLhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHNrtbhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHNrtrhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHOSwLhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHOSwbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHOSwrhiEe2UuoshngsjNA" name="hasPushInstruction" visibility="private" method="_Dde2prhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHOSw7hiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHOSxLhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHOSxbhiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHOSxrhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHOSx7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHOSyLhiEe2UuoshngsjNA" name="pushInstruction" visibility="private" method="_Dde2rLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHOSybhiEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHOSyrhiEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHOSy7hiEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHO50LhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHO50bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHO50rhiEe2UuoshngsjNA" name="getFirstChannelInInstruction" visibility="private" method="_Dde2srhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHO507hiEe2UuoshngsjNA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHO51LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHQH8LhiEe2UuoshngsjNA" name="selectPriority" method="_DdgEwLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DHQvALhiEe2UuoshngsjNA" name="selectRM" method="_DdgEwbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DHQvAbhiEe2UuoshngsjNA" name="selectDM" method="_DdgEwrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DHQvArhiEe2UuoshngsjNA" name="selectRtHART" method="_DdgEw7hiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DHQvA7hiEe2UuoshngsjNA" name="getSchedule" method="_DdhS4LhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeEFdrhiEe2UuoshngsjNA">
                  <body>@return the completed schedule for the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_DY1nMrhiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHRWELhiEe2UuoshngsjNA" name="getSchedulerName" method="_DdhS4rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHRWEbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHR9ILhiEe2UuoshngsjNA" name="getSchChoice" method="_DdhS5LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHR9IbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHR9IrhiEe2UuoshngsjNA" name="getNumChannels" method="_DdhS5rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHR9I7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHTLQrhiEe2UuoshngsjNA" name="getNumTransmissions" method="_DdhS6LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHTLQ7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHTLR7hiEe2UuoshngsjNA" name="getRealTimeHartFlag" visibility="private" method="_DdhS6rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHTyULhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHTyUbhiEe2UuoshngsjNA" name="setRealTimeHartFlag" visibility="private" method="_Ddh58LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHTyUrhiEe2UuoshngsjNA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHTyU7hiEe2UuoshngsjNA" name="getMinPacketReceptionRate" method="_Ddh58rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Da2ZYLhiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHUZYrhiEe2UuoshngsjNA" name="getE2e" method="_Ddh59LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Da2ZYbhiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHUZZrhiEe2UuoshngsjNA" name="getName" method="_Ddh59rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHVngLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHVnhLhiEe2UuoshngsjNA" name="getOptimizationFlag" method="_Ddh5-LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHVnhbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHWOk7hiEe2UuoshngsjNA" name="deadlineMisses" method="_Ddh5-rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DY1nM7hiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHWOlLhiEe2UuoshngsjNA" name="getNumFaults" method="_DdihALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHW1oLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHW1pLhiEe2UuoshngsjNA" name="getNodeMapIndex" method="_DdihArhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeEFd7hiEe2UuoshngsjNA">
                  <body>@return a HashMap mapping each node to its index when sorted by alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_Da2ZYrhiEe2UuoshngsjNA" type="_DXuM4LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DYyj4LhiEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_DddokLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYyj4bhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYyj4rhiEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzK8LhiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzK8bhiEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DYzK87hiEe2UuoshngsjNA" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_DdfdsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DYzK9LhiEe2UuoshngsjNA" name="schedule" type="_DHeKYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DYzK9bhiEe2UuoshngsjNA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyALhiEe2UuoshngsjNA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyAbhiEe2UuoshngsjNA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyArhiEe2UuoshngsjNA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyA7hiEe2UuoshngsjNA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DYzyC7hiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyBLhiEe2UuoshngsjNA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DY0ZELhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyBbhiEe2UuoshngsjNA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyBrhiEe2UuoshngsjNA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyB7hiEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyCLhiEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyCbhiEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DYzyCrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DY0ZEbhiEe2UuoshngsjNA" name="slotIsAvailable" visibility="private" method="_DdfdwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DY0ZErhiEe2UuoshngsjNA" name="currentInstructionTimeSlot" type="_DGmAoLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DY0ZE7hiEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DY0ZFLhiEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DY0ZFbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DY1AILhiEe2UuoshngsjNA" name="findNextAvailableChannel" visibility="private" method="_DdfdxbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DY1AIbhiEe2UuoshngsjNA" name="schedule" type="_DHeKYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DY1AIrhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DY1AI7hiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DY1AJLhiEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DY1AJbhiEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DY1AJrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DY1nMLhiEe2UuoshngsjNA" name="setSchedule" visibility="private" method="_Ddgr0rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DY1nMbhiEe2UuoshngsjNA" name="schedule" type="_DHeKYLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DayvALhiEe2UuoshngsjNA" name="Program" visibility="package" method="_DddohLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DazWFbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Daz9ILhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DazWELhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DazWEbhiEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DazWErhiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DazWE7hiEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DazWFLhiEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Daz9IbhiEe2UuoshngsjNA" type="_DHKBUbhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Daz9IrhiEe2UuoshngsjNA" name="Program" visibility="package" method="_Dddoi7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Da0kMLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Da0kMbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Daz9I7hiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Daz9JLhiEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Daz9JbhiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Da0kMrhiEe2UuoshngsjNA" type="_DHKBUbhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Da0kM7hiEe2UuoshngsjNA" name="buildProgram" method="_DdePkrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Da0kNLhiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Da1LQLhiEe2UuoshngsjNA" name="setScheduleSelected" visibility="private" method="_Ddgr0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Da1LQbhiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHeKYLhiEe2UuoshngsjNA" name="ProgramSchedule">
              <generalization xmi:id="_DY4DcLhiEe2UuoshngsjNA" general="_DIfeELhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcNrULhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcNrUbhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdjIELhiEe2UuoshngsjNA" name="ProgramSchedule" specification="_DHeKYbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdjIEbhiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdjIErhiEe2UuoshngsjNA" name="ProgramSchedule" specification="_DHfYgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdjIE7hiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdjIFLhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdjIFbhiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHeKYbhiEe2UuoshngsjNA" name="ProgramSchedule" method="_DdjIELhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DHexcLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DHexcbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DHexcrhiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHfYgLhiEe2UuoshngsjNA" name="ProgramSchedule" visibility="package" method="_DdjIErhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DHfYg7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DHfYhLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DHfYgbhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHfYgrhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHfYhbhiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHfYhrhiEe2UuoshngsjNA" name="ProgramVisualization">
              <ownedComment xmi:id="_DeEsgLhiEe2UuoshngsjNA">
                <body>Develops a visualization of a Warp graph schedule formatted as a table&#xD;
using arrays. Each column of the table is a time slot, and the rows &#xD;
contain the schedule's instructions. The visualization can be displayed&#xD;
as a GuiVisualization with the displayVisualization() method. A header&#xD;
and footer can also be added with additional information about the Warp&#xD;
graph.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DY54oLhiEe2UuoshngsjNA" general="_DIuHkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcNrUrhiEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcNrU7hiEe2UuoshngsjNA" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcOSYLhiEe2UuoshngsjNA" name="sourceCode" visibility="private" type="_DHeKYLhiEe2UuoshngsjNA" association="_DexQELhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcOSYrhiEe2UuoshngsjNA" name="program" visibility="private" type="_DHKBUbhiEe2UuoshngsjNA" association="_Dex3ILhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcO5cLhiEe2UuoshngsjNA" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdjIFrhiEe2UuoshngsjNA" name="ProgramVisualization" specification="_DY4qgbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdjIF7hiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdjIGLhiEe2UuoshngsjNA" type="_DHfYhrhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdjIGbhiEe2UuoshngsjNA" name="displayVisualization" specification="_DHf_kLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdjIGrhiEe2UuoshngsjNA" type="_DGfS8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdjIG7hiEe2UuoshngsjNA" name="createHeader" specification="_DHgmo7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdjIHLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdjvILhiEe2UuoshngsjNA" name="createFooter" specification="_DHhNs7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdjvIbhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdjvIrhiEe2UuoshngsjNA" name="createColumnHeader" specification="_DHh0wrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdjvI7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdjvJLhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdjvJbhiEe2UuoshngsjNA" name="createVisualizationData" specification="_DHjC4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdjvJrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdjvJ7hiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdkWMLhiEe2UuoshngsjNA" name="createTitle" specification="_DHjC57hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdkWMbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHf_kLhiEe2UuoshngsjNA" name="displayVisualization" method="_DdjIGbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DY5Rk7hiEe2UuoshngsjNA" type="_DGfS8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHgmo7hiEe2UuoshngsjNA" name="createHeader" visibility="protected" method="_DdjIG7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DY5RlLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHhNs7hiEe2UuoshngsjNA" name="createFooter" visibility="protected" method="_DdjvILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DY5RlbhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHh0wrhiEe2UuoshngsjNA" name="createColumnHeader" visibility="protected" method="_DdjvIrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHh0w7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHh0xLhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHjC4LhiEe2UuoshngsjNA" name="createVisualizationData" visibility="protected" method="_DdjvJbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHjC4bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHjC4rhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHjC57hiEe2UuoshngsjNA" name="createTitle" visibility="private" method="_DdkWMLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeEsgrhiEe2UuoshngsjNA">
                  <body>@return the title for the visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_DHjC6LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DY4qgbhiEe2UuoshngsjNA" name="ProgramVisualization" visibility="package" method="_DdjIFrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DY5RkLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DY5RkbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeEsgbhiEe2UuoshngsjNA">
                  <body>Creates and initializes a new visualization.&#xD;
   * &#xD;
   * @param warp object</body>
                </ownedComment>
                <ownedParameter xmi:id="_DY4qgrhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DY5RkrhiEe2UuoshngsjNA" type="_DHfYhrhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHk4ELhiEe2UuoshngsjNA" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_Da41oLhiEe2UuoshngsjNA" client="_DHk4ELhiEe2UuoshngsjNA" supplier="_DYBH0LhiEe2UuoshngsjNA" contract="_DYBH0LhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdkWMrhiEe2UuoshngsjNA" name="compare" specification="_Da5csLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdkWM7hiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdkWNLhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdkWNbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Da5csLhiEe2UuoshngsjNA" name="compare" method="_DdkWMrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Da5csbhiEe2UuoshngsjNA" name="obj1" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Da5csrhiEe2UuoshngsjNA" name="obj2" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Da6DwLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHmGMLhiEe2UuoshngsjNA" name="ReleaseTimeQueue">
              <generalization xmi:id="_DHn7YbhiEe2UuoshngsjNA" general="_DHnUU7hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcPggLhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcPggbhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdkWNrhiEe2UuoshngsjNA" name="ReleaseTimeQueue" specification="_DHmtQbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdkWN7hiEe2UuoshngsjNA" type="_DHmGMLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdkWOLhiEe2UuoshngsjNA" name="ReleaseTimeQueue" specification="_DY7GwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdkWObhiEe2UuoshngsjNA" name="schedulableObjects" type="_DYmWoLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdkWOrhiEe2UuoshngsjNA" type="_DHmGMLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHmtQbhiEe2UuoshngsjNA" name="ReleaseTimeQueue" visibility="package" method="_DdkWNrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DHnUULhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DHnUUbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DHnUUrhiEe2UuoshngsjNA" type="_DHmGMLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DY7GwLhiEe2UuoshngsjNA" name="ReleaseTimeQueue" visibility="package" method="_DdkWOLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DY7GwrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DY7Gw7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DY7GwbhiEe2UuoshngsjNA" name="schedulableObjects" type="_DYmWoLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DY7GxLhiEe2UuoshngsjNA" type="_DHmGMLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHpJgLhiEe2UuoshngsjNA" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_DeEsg7hiEe2UuoshngsjNA">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdkWO7hiEe2UuoshngsjNA" name="ReliabilityAnalysis" specification="_DY7t0rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdkWPLhiEe2UuoshngsjNA" name="program" type="_DHKBUbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdkWPbhiEe2UuoshngsjNA" type="_DHpJgLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdkWPrhiEe2UuoshngsjNA" name="verifyReliabilities" specification="_DHpwkbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdkWP7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHpwkLhiEe2UuoshngsjNA" name="getReliabilities">
                <ownedParameter xmi:id="_DY7t0bhiEe2UuoshngsjNA" type="_DHta8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHpwkbhiEe2UuoshngsjNA" name="verifyReliabilities" method="_DdkWPrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DHpwkrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DY7t0rhiEe2UuoshngsjNA" name="ReliabilityAnalysis" method="_DdkWO7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DY8U4LhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DY8U4bhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DY7t07hiEe2UuoshngsjNA" name="program" type="_DHKBUbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DY8U4rhiEe2UuoshngsjNA" type="_DHpJgLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DHqXoLhiEe2UuoshngsjNA" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_DeEshLhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DHqXobhiEe2UuoshngsjNA" name="minPacketReceptionRate" type="_Da1yULhiEe2UuoshngsjNA" isReadOnly="true"/>
              <ownedAttribute xmi:id="_DHq-sLhiEe2UuoshngsjNA" name="e2e" type="_Da1yULhiEe2UuoshngsjNA" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHrlwLhiEe2UuoshngsjNA" name="ReliabilityRow">
              <generalization xmi:id="_DY8U47hiEe2UuoshngsjNA" general="_DHzhkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcQHkLhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcQHkbhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdkWQLhiEe2UuoshngsjNA" name="ReliabilityRow" specification="_DHsM0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdkWQbhiEe2UuoshngsjNA" type="_DHrlwLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddk9QLhiEe2UuoshngsjNA" name="ReliabilityRow" specification="_Da6q0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddk9QbhiEe2UuoshngsjNA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddk9QrhiEe2UuoshngsjNA" name="element" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddk9Q7hiEe2UuoshngsjNA" type="_DHrlwLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddk9RLhiEe2UuoshngsjNA" name="ReliabilityRow" specification="_Da7R5bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddk9RbhiEe2UuoshngsjNA" name="rowArray" type="_Da1yULhiEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ddk9RrhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddk9R7hiEe2UuoshngsjNA" type="_DHrlwLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHsM0LhiEe2UuoshngsjNA" name="ReliabilityRow" method="_DdkWQLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DHsM0bhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DHsM0rhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DHsM07hiEe2UuoshngsjNA" type="_DHrlwLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Da6q0LhiEe2UuoshngsjNA" name="ReliabilityRow" visibility="package" method="_Ddk9QLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Da7R4rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Da7R47hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Da7R4LhiEe2UuoshngsjNA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Da7R4bhiEe2UuoshngsjNA" name="element" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Da7R5LhiEe2UuoshngsjNA" type="_DHrlwLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Da7R5bhiEe2UuoshngsjNA" name="ReliabilityRow" visibility="package" method="_Ddk9RLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Da7R57hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Da7R6LhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Da7R5rhiEe2UuoshngsjNA" name="rowArray" type="_Da1yULhiEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Da748LhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Da7R6bhiEe2UuoshngsjNA" type="_DHrlwLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHta8LhiEe2UuoshngsjNA" name="ReliabilityTable">
              <generalization xmi:id="_DY9jALhiEe2UuoshngsjNA" general="_DIfeELhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcQHkrhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcQHk7hiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddk9SLhiEe2UuoshngsjNA" name="ReliabilityTable" specification="_DHta8bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddk9SbhiEe2UuoshngsjNA" type="_DHta8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddk9SrhiEe2UuoshngsjNA" name="ReliabilityTable" specification="_DHuCAbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddk9S7hiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddk9TLhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddk9TbhiEe2UuoshngsjNA" type="_DHta8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHta8bhiEe2UuoshngsjNA" name="ReliabilityTable" method="_Ddk9SLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DHta8rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DHta87hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DHuCALhiEe2UuoshngsjNA" type="_DHta8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHuCAbhiEe2UuoshngsjNA" name="ReliabilityTable" visibility="package" method="_Ddk9SrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DHuCBLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DHupELhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DHuCArhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHuCA7hiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHupEbhiEe2UuoshngsjNA" type="_DHta8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHvQILhiEe2UuoshngsjNA" name="ReliabilityVisualization">
              <ownedComment xmi:id="_DeEshbhiEe2UuoshngsjNA">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DY-KE7hiEe2UuoshngsjNA" general="_DIuHkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcQuoLhiEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcQuobhiEe2UuoshngsjNA" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcQuorhiEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcQuo7hiEe2UuoshngsjNA" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcQupLhiEe2UuoshngsjNA" name="warp" visibility="private" type="_DJFT8LhiEe2UuoshngsjNA" association="_DeyeMbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcRVsbhiEe2UuoshngsjNA" name="ra" visibility="private" type="_DHpJgLhiEe2UuoshngsjNA" association="_DezFQLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddk9TrhiEe2UuoshngsjNA" name="ReliabilityVisualization" specification="_DY9jArhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddk9T7hiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddk9ULhiEe2UuoshngsjNA" type="_DHvQILhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DY9jArhiEe2UuoshngsjNA" name="ReliabilityVisualization" visibility="package" method="_Ddk9TrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DY-KELhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DY-KEbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DY9jA7hiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DY-KErhiEe2UuoshngsjNA" type="_DHvQILhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHxFULhiEe2UuoshngsjNA" name="ReportVisualization">
              <generalization xmi:id="_DY-xKLhiEe2UuoshngsjNA" general="_DIuHkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcRVs7hiEe2UuoshngsjNA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcRVtLhiEe2UuoshngsjNA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcR8wLhiEe2UuoshngsjNA" name="content" visibility="private" type="_DF75ULhiEe2UuoshngsjNA" association="_DezFQ7hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcR8wrhiEe2UuoshngsjNA" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddk9UbhiEe2UuoshngsjNA" name="ReportVisualization" specification="_DY-KFLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddk9UrhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddk9U7hiEe2UuoshngsjNA" name="warp" type="_DIbzsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddk9VLhiEe2UuoshngsjNA" name="content" type="_DF75ULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddk9VbhiEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddk9VrhiEe2UuoshngsjNA" type="_DHxFULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdlkULhiEe2UuoshngsjNA" name="visualization" specification="_DHxsYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdlkUbhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdlkUrhiEe2UuoshngsjNA" name="createReport" specification="_DHyTc7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdlkU7hiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHxsYLhiEe2UuoshngsjNA" name="visualization" method="_DdlkULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DY-xJrhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHyTc7hiEe2UuoshngsjNA" name="createReport" visibility="private" method="_DdlkUrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DY-xJ7hiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DY-KFLhiEe2UuoshngsjNA" name="ReportVisualization" visibility="package" method="_Ddk9UbhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DY-xI7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DY-xJLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DY-KFbhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DY-xILhiEe2UuoshngsjNA" name="warp" type="_DIbzsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DY-xIbhiEe2UuoshngsjNA" name="content" type="_DF75ULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DY-xIrhiEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DY-xJbhiEe2UuoshngsjNA" type="_DHxFULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHzhkLhiEe2UuoshngsjNA" name="Row">
              <generalization xmi:id="_Da9HFbhiEe2UuoshngsjNA" general="_DXvbALhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcSj0LhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcSj0bhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdlkVLhiEe2UuoshngsjNA" name="Row" specification="_DH0IobhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdlkVbhiEe2UuoshngsjNA" type="_DHzhkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdlkVrhiEe2UuoshngsjNA" name="Row" specification="_Da748bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdlkV7hiEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdlkWLhiEe2UuoshngsjNA" name="element" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdlkWbhiEe2UuoshngsjNA" type="_DHzhkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdlkWrhiEe2UuoshngsjNA" name="Row" specification="_Da8gBbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdlkW7hiEe2UuoshngsjNA" name="rowArray" type="_DaZtcLhiEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdlkXLhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdlkXbhiEe2UuoshngsjNA" type="_DHzhkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdlkXrhiEe2UuoshngsjNA" name="Row" specification="_DH0vsrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdlkX7hiEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdlkYLhiEe2UuoshngsjNA" type="_DHzhkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DH0IobhiEe2UuoshngsjNA" name="Row" method="_DdlkVLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DH0IorhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DH0vsLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DH0vsbhiEe2UuoshngsjNA" type="_DHzhkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DH0vsrhiEe2UuoshngsjNA" name="Row" visibility="package" method="_DdlkXrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DH1WwLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DH1WwbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DH0vs7hiEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH1WwrhiEe2UuoshngsjNA" type="_DHzhkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Da748bhiEe2UuoshngsjNA" name="Row" visibility="package" method="_DdlkVrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Da8gArhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Da8gA7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Da8gALhiEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Da8gAbhiEe2UuoshngsjNA" name="element" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Da8gBLhiEe2UuoshngsjNA" type="_DHzhkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Da8gBbhiEe2UuoshngsjNA" name="Row" visibility="package" method="_DdlkWrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Da9HEbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Da9HErhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Da9HELhiEe2UuoshngsjNA" name="rowArray" type="_DaZtcLhiEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Da9HFLhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Da9HE7hiEe2UuoshngsjNA" type="_DHzhkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DH190LhiEe2UuoshngsjNA" name="SchedulableObject" isAbstract="true">
              <eAnnotations xmi:id="_Qo09kOtaEe2AXuuM87VQiQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_Qo09ketaEe2AXuuM87VQiQ" source="codegen">
                  <details xmi:id="_Qo09kutaEe2AXuuM87VQiQ" key="codegenDirectory" value="/cs2820-spring23/src"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_DcSj0rhiEe2UuoshngsjNA" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcTK4LhiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcTK4bhiEe2UuoshngsjNA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcTK4rhiEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcTK47hiEe2UuoshngsjNA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcTK5LhiEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcTK5bhiEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcTx8LhiEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcTx8bhiEe2UuoshngsjNA" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcTx8rhiEe2UuoshngsjNA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcTx87hiEe2UuoshngsjNA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcUZALhiEe2UuoshngsjNA" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcUZAbhiEe2UuoshngsjNA" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcUZArhiEe2UuoshngsjNA" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcUZA7hiEe2UuoshngsjNA" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcVAEbhiEe2UuoshngsjNA" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcVAE7hiEe2UuoshngsjNA" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcVnIbhiEe2UuoshngsjNA" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcVnIrhiEe2UuoshngsjNA" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcVnI7hiEe2UuoshngsjNA" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcWOMLhiEe2UuoshngsjNA" name="predecessor" type="_DH190LhiEe2UuoshngsjNA" association="_DeEshrhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcWOMbhiEe2UuoshngsjNA" name="endTimes" visibility="private" type="_DHnUU7hiEe2UuoshngsjNA" association="_DezsUbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcW1QbhiEe2UuoshngsjNA" name="subObjects" type="_DY__QbhiEe2UuoshngsjNA" isReadOnly="true" association="_De0TYLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdlkYbhiEe2UuoshngsjNA" name="SchedulableObject" specification="_DH3L8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdlkYrhiEe2UuoshngsjNA" type="_DH190LhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLYLhiEe2UuoshngsjNA" name="SchedulableObject" specification="_DZAmULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmLYbhiEe2UuoshngsjNA" name="obj" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdmLYrhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLY7hiEe2UuoshngsjNA" type="_DH190LhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLZLhiEe2UuoshngsjNA" name="SchedulableObject" specification="_DH3zA7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmLZbhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLZrhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLZ7hiEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLaLhiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLabhiEe2UuoshngsjNA" type="_DH190LhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLarhiEe2UuoshngsjNA" name="SchedulableObject" specification="_DH4aFrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmLa7hiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLbLhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLbbhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLbrhiEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLb7hiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdmLcLhiEe2UuoshngsjNA" type="_DH190LhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLcbhiEe2UuoshngsjNA" name="setDefaultParameters" specification="_DH5oMLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLcrhiEe2UuoshngsjNA" name="getAllEndTimes" specification="_DH6PQLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmLc7hiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLdLhiEe2UuoshngsjNA" name="addToEndTimes" specification="_DH6PQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmLdbhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLdrhiEe2UuoshngsjNA" name="peekEndTimes" specification="_DH62ULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmLd7hiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLeLhiEe2UuoshngsjNA" name="pollEndTimes" specification="_DH62UrhiEe2UuoshngsjNA">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLebhiEe2UuoshngsjNA" name="addSubObject" specification="_DZB0c7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmLerhiEe2UuoshngsjNA" name="obj" type="_DH190LhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLe7hiEe2UuoshngsjNA" name="getName" specification="_DH62U7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmLfLhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmLfbhiEe2UuoshngsjNA" name="setName" specification="_DH7dYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmLfrhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmycLhiEe2UuoshngsjNA" name="getReleaseTime" specification="_DH7dYrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmycbhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmycrhiEe2UuoshngsjNA" name="getPhase" specification="_DH7dZLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddmyc7hiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmydLhiEe2UuoshngsjNA" name="getStartTime" specification="_DH7dZrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmydbhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmydrhiEe2UuoshngsjNA" name="setEndTime" specification="_DH8EcbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddmyd7hiEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmyeLhiEe2UuoshngsjNA" name="setStartTime" specification="_DH8Ec7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmyebhiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmyerhiEe2UuoshngsjNA" name="setReleaseTime" specification="_DH8rgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddmye7hiEe2UuoshngsjNA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmyfLhiEe2UuoshngsjNA" name="setPeriod" specification="_DH9SkLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmyfbhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmyfrhiEe2UuoshngsjNA" name="setPhase" specification="_DH9SkrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddmyf7hiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdmygLhiEe2UuoshngsjNA" name="setNextReleaseTime" specification="_DH95oLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdmygbhiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdnZgLhiEe2UuoshngsjNA" name="maxPhaseComparison" specification="_DZB0dbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdnZgbhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdnZgrhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdnZg7hiEe2UuoshngsjNA" name="maxPhaseComparison" specification="_DZCbgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdnZhLhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdnZhbhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdnZhrhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdnZh7hiEe2UuoshngsjNA" name="deadlineComparison" specification="_DZCbhLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdnZiLhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdnZibhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdnZirhiEe2UuoshngsjNA" name="deadlineComparison" specification="_DZCbh7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdnZi7hiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdnZjLhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdnZjbhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdnZjrhiEe2UuoshngsjNA" name="periodComparison" specification="_DZDCkLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdnZj7hiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdnZkLhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdoAkLhiEe2UuoshngsjNA" name="periodComparison" specification="_DZDCk7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdoAkbhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAkrhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAk7hiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdoAlLhiEe2UuoshngsjNA" name="priorityComparison" specification="_DZDCl7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdoAlbhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAlrhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdoAl7hiEe2UuoshngsjNA" name="priorityComparison" specification="_DZEQsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdoAmLhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAmbhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAmrhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdoAm7hiEe2UuoshngsjNA" name="releaseTimeComparison" specification="_DZEQtLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdoAnLhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAnbhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdoAnrhiEe2UuoshngsjNA" name="releaseTimeComparison" specification="_DZE3wbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdoAn7hiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAoLhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAobhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdoAorhiEe2UuoshngsjNA" name="LatestReleaseTimeComparison" specification="_DZE3xbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdoAo7hiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoApLhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdoApbhiEe2UuoshngsjNA" name="LatestReleaseTimeComparison" specification="_DZE3yLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdoAprhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAp7hiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdoAqLhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdoAqbhiEe2UuoshngsjNA" name="compareAscendingOrder" specification="_DH_u0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdoAqrhiEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdoAq7hiEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdoArLhiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdonoLhiEe2UuoshngsjNA" name="compareDescendingOrder" specification="_DIAV47hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdonobhiEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdonorhiEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddono7hiEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdonpLhiEe2UuoshngsjNA" name="print" specification="_DIA88bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdonpbhiEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdonprhiEe2UuoshngsjNA" name="print" specification="_DIA887hiEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DH3L8LhiEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_DdlkYbhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DH3zALhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DH3zAbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DH3zArhiEe2UuoshngsjNA" type="_DH190LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DH3zA7hiEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_DdmLZLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DH4aE7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DH4aFLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DH3zBLhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH4aELhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH4aEbhiEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH4aErhiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH4aFbhiEe2UuoshngsjNA" type="_DH190LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DH4aFrhiEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_DdmLarhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DH5BJLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DH5BJbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DH4aF7hiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH5BILhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH5BIbhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH5BIrhiEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH5BI7hiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH5BJrhiEe2UuoshngsjNA" type="_DH190LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DH5oMLhiEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_DdmLcbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DH6PQLhiEe2UuoshngsjNA" name="getAllEndTimes" method="_DdmLcrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIgetaEe2AXuuM87VQiQ">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZB0crhiEe2UuoshngsjNA" type="_DHnUU7hiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DH6PQrhiEe2UuoshngsjNA" name="addToEndTimes" method="_DdmLdLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DH6PQ7hiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH62ULhiEe2UuoshngsjNA" name="peekEndTimes" method="_DdmLdrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DH62UbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH62UrhiEe2UuoshngsjNA" name="pollEndTimes" method="_DdmLeLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DH62U7hiEe2UuoshngsjNA" name="getName" method="_DdmLe7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIgutaEe2AXuuM87VQiQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH62VLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH7dYLhiEe2UuoshngsjNA" name="setName" method="_DdmLfbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIg-taEe2AXuuM87VQiQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH7dYbhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH7dYrhiEe2UuoshngsjNA" name="getReleaseTime" method="_DdmycLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIhOtaEe2AXuuM87VQiQ">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH7dY7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH7dZLhiEe2UuoshngsjNA" name="getPhase" method="_DdmycrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIhetaEe2AXuuM87VQiQ">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH7dZbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH7dZrhiEe2UuoshngsjNA" name="getStartTime" method="_DdmydLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIhutaEe2AXuuM87VQiQ">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH8EcLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH8EcbhiEe2UuoshngsjNA" name="setEndTime" method="_DdmydrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIh-taEe2AXuuM87VQiQ">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH8EcrhiEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH8Ec7hiEe2UuoshngsjNA" name="setStartTime" method="_DdmyeLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIiOtaEe2AXuuM87VQiQ">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH8EdLhiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH8rgLhiEe2UuoshngsjNA" name="setReleaseTime" method="_DdmyerhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIietaEe2AXuuM87VQiQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH8rgbhiEe2UuoshngsjNA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH9SkLhiEe2UuoshngsjNA" name="setPeriod" method="_DdmyfLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBIiutaEe2AXuuM87VQiQ">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH9SkbhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH9SkrhiEe2UuoshngsjNA" name="setPhase" method="_DdmyfrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBvkOtaEe2AXuuM87VQiQ">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH9Sk7hiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH95oLhiEe2UuoshngsjNA" name="setNextReleaseTime" method="_DdmygLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_rFBvketaEe2AXuuM87VQiQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DH95obhiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH_u0LhiEe2UuoshngsjNA" name="compareAscendingOrder" method="_DdoAqbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIAV4LhiEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIAV4bhiEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIAV4rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIAV47hiEe2UuoshngsjNA" name="compareDescendingOrder" method="_DdonoLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIAV5LhiEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIAV5bhiEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIA88LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIA88bhiEe2UuoshngsjNA" name="print" method="_DdonpLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIA88rhiEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIA887hiEe2UuoshngsjNA" name="print" method="_DdonprhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DZAmULhiEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_DdmLYLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DZBNYLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DZB0cLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rFBIgOtaEe2AXuuM87VQiQ">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZAmUbhiEe2UuoshngsjNA" name="obj" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZAmUrhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZB0cbhiEe2UuoshngsjNA" type="_DH190LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZB0c7hiEe2UuoshngsjNA" name="addSubObject" method="_DdmLebhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZB0dLhiEe2UuoshngsjNA" name="obj" type="_DH190LhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZB0dbhiEe2UuoshngsjNA" name="maxPhaseComparison" method="_DdnZgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZB0drhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZB0d7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZCbgLhiEe2UuoshngsjNA" name="maxPhaseComparison" method="_DdnZg7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZCbgbhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZCbgrhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZCbg7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZCbhLhiEe2UuoshngsjNA" name="deadlineComparison" method="_DdnZh7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZCbhbhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZCbhrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZCbh7hiEe2UuoshngsjNA" name="deadlineComparison" method="_DdnZirhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZCbiLhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZCbibhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZCbirhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZDCkLhiEe2UuoshngsjNA" name="periodComparison" method="_DdnZjrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZDCkbhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZDCkrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZDCk7hiEe2UuoshngsjNA" name="periodComparison" method="_DdoAkLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZDClLhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZDClbhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZDClrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZDCl7hiEe2UuoshngsjNA" name="priorityComparison" method="_DdoAlLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZDCmLhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZDCmbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZEQsLhiEe2UuoshngsjNA" name="priorityComparison" method="_DdoAl7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZEQsbhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZEQsrhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZEQs7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZEQtLhiEe2UuoshngsjNA" name="releaseTimeComparison" method="_DdoAm7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZEQtbhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZE3wLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZE3wbhiEe2UuoshngsjNA" name="releaseTimeComparison" method="_DdoAnrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZE3wrhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZE3w7hiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZE3xLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZE3xbhiEe2UuoshngsjNA" name="LatestReleaseTimeComparison" method="_DdoAorhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZE3xrhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZE3x7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZE3yLhiEe2UuoshngsjNA" name="LatestReleaseTimeComparison" method="_DdoApbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZE3ybhiEe2UuoshngsjNA" name="obj1" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZE3yrhiEe2UuoshngsjNA" name="obj2" type="_DH190LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZE3y7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIIRsLhiEe2UuoshngsjNA" name="SchedulableObjectQueue">
              <generalization xmi:id="_DIJf0LhiEe2UuoshngsjNA" general="_DHnUU7hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcYDYLhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcYqcLhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddonp7hiEe2UuoshngsjNA" name="SchedulableObjectQueue" specification="_DbAxcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdonqLhiEe2UuoshngsjNA" name="comparitor" type="_DYBH0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdonqbhiEe2UuoshngsjNA" type="_DIIRsLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdpOsLhiEe2UuoshngsjNA" name="SchedulableObjectQueue" specification="_DbBYgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdpOsbhiEe2UuoshngsjNA" name="comparitor" type="_DYBH0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdpOsrhiEe2UuoshngsjNA" name="schedulableObjects" type="_DYmWoLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdpOs7hiEe2UuoshngsjNA" type="_DIIRsLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DbAxcLhiEe2UuoshngsjNA" name="SchedulableObjectQueue" visibility="package" method="_Ddonp7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DbAxcrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DbAxc7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DbAxcbhiEe2UuoshngsjNA" name="comparitor" type="_DYBH0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbAxdLhiEe2UuoshngsjNA" type="_DIIRsLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbBYgLhiEe2UuoshngsjNA" name="SchedulableObjectQueue" visibility="package" method="_DdpOsLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DbBYg7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DbBYhLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DbBYgbhiEe2UuoshngsjNA" name="comparitor" type="_DYBH0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbBYgrhiEe2UuoshngsjNA" name="schedulableObjects" type="_DYmWoLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbBYhbhiEe2UuoshngsjNA" type="_DIIRsLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIKt8LhiEe2UuoshngsjNA" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_DeF6oLhiEe2UuoshngsjNA">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DccU0LhiEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dcc74LhiEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dcc74bhiEe2UuoshngsjNA" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcexEbhiEe2UuoshngsjNA" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcfYIbhiEe2UuoshngsjNA" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcfYIrhiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dcf_MbhiEe2UuoshngsjNA" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dcf_M7hiEe2UuoshngsjNA" name="schedule" visibility="protected" type="_DIVGALhiEe2UuoshngsjNA" association="_De0TY7hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcgmQLhiEe2UuoshngsjNA" name="poset" visibility="protected" type="_DG6wwLhiEe2UuoshngsjNA" association="_De06cbhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdpOtLhiEe2UuoshngsjNA" name="Schedule" specification="_DZH7ELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdpOtbhiEe2UuoshngsjNA" name="poset" type="_DG6wwLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdpOtrhiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdpOt7hiEe2UuoshngsjNA" type="_DIKt8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdpOwrhiEe2UuoshngsjNA" name="getSchedule" specification="_DINxQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdpOw7hiEe2UuoshngsjNA" type="_DIVGALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddp1wLhiEe2UuoshngsjNA" name="buildSchedule" specification="_DIOYULhiEe2UuoshngsjNA">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddp1wbhiEe2UuoshngsjNA" name="toProgram" specification="_DIOYUbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddp1wrhiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddp1w7hiEe2UuoshngsjNA" name="replaceNullWithSleep" specification="_DZIiJrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddp1xLhiEe2UuoshngsjNA" name="program" type="_DHeKYLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddp1xbhiEe2UuoshngsjNA" name="fakeSchedulingToTestRest" specification="_DZIiKLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddp1xrhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddp1x7hiEe2UuoshngsjNA" name="getChannelAndSetStartTime" specification="_DZJJMLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddp1yLhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddp1ybhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddp1yrhiEe2UuoshngsjNA" name="findChannelAndTime" specification="_DZJJM7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddp1y7hiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddp1zLhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddp1zbhiEe2UuoshngsjNA" type="_DILVALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddp1zrhiEe2UuoshngsjNA" name="continueSearch" specification="_DZJJN7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddp1z7hiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddp10LhiEe2UuoshngsjNA" name="activation" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddp10bhiEe2UuoshngsjNA" type="_DILVALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddqc0LhiEe2UuoshngsjNA" name="noOtherChannelConflicts" specification="_DZJwQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddqc0bhiEe2UuoshngsjNA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddqc0rhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddqc07hiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddqc1LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdrD4LhiEe2UuoshngsjNA" name="conflictsExist" specification="_DZJwR7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdrD4bhiEe2UuoshngsjNA" name="obj" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdrD4rhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD47hiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD5LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdrD5bhiEe2UuoshngsjNA" name="freeOfCoordinatorConflicts" specification="_DZKXULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdrD5rhiEe2UuoshngsjNA" name="obj" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdrD57hiEe2UuoshngsjNA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD6LhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD6bhiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD6rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdrD67hiEe2UuoshngsjNA" name="isAvailable" specification="_DZKXVrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdrD7LhiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdrD7bhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD7rhiEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD77hiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD8LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdrD8bhiEe2UuoshngsjNA" name="isAvailable" specification="_DZK-YLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdrD8rhiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdrD87hiEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD9LhiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD9bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdrD9rhiEe2UuoshngsjNA" name="timeRemaining" specification="_DIQNgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdrD97hiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD-LhiEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD-bhiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdrD-rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddrq8LhiEe2UuoshngsjNA" name="canCombineEntriesInPlace" specification="_DZK-ZbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddrq8bhiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddrq8rhiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddrq87hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddrq9LhiEe2UuoshngsjNA" name="combinedEntriesInPlace" specification="_DZLlcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddrq9bhiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddrq9rhiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddrq97hiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddrq-LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddrq-bhiEe2UuoshngsjNA" name="addToSchedule" specification="_DZLldbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddrq-rhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddrq-7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddrq_LhiEe2UuoshngsjNA" name="reportNotSchedulable" specification="_DZMzkLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddrq_bhiEe2UuoshngsjNA" name="object" type="_DFSZErhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddrq_rhiEe2UuoshngsjNA" name="printVerbose" specification="_DIRboLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddrq_7hiEe2UuoshngsjNA" name="print" specification="_DIRbobhiEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DINxQrhiEe2UuoshngsjNA" name="getSchedule" method="_DdpOwrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeF6o7hiEe2UuoshngsjNA">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZIiJLhiEe2UuoshngsjNA" type="_DIVGALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIOYULhiEe2UuoshngsjNA" name="buildSchedule" visibility="private" method="_Ddp1wLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DIOYUbhiEe2UuoshngsjNA" name="toProgram" method="_Ddp1wbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZIiJbhiEe2UuoshngsjNA" type="_DHeKYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIQNgLhiEe2UuoshngsjNA" name="timeRemaining" visibility="protected" method="_DdrD9rhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeF6qbhiEe2UuoshngsjNA">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_DIQ0kLhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIQ0kbhiEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIQ0krhiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIQ0k7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIRboLhiEe2UuoshngsjNA" name="printVerbose" method="_Ddrq_rhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DIRbobhiEe2UuoshngsjNA" name="print" method="_Ddrq_7hiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DZH7ELhiEe2UuoshngsjNA" name="Schedule" visibility="package" method="_DdpOtLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DZIiIbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DZIiIrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DZH7EbhiEe2UuoshngsjNA" name="poset" type="_DG6wwLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZIiILhiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZIiI7hiEe2UuoshngsjNA" type="_DIKt8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZIiJrhiEe2UuoshngsjNA" name="replaceNullWithSleep" visibility="private" method="_Ddp1w7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeF6pLhiEe2UuoshngsjNA">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZIiJ7hiEe2UuoshngsjNA" name="program" type="_DHeKYLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZIiKLhiEe2UuoshngsjNA" name="fakeSchedulingToTestRest" visibility="private" method="_Ddp1xbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZIiKbhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZJJMLhiEe2UuoshngsjNA" name="getChannelAndSetStartTime" visibility="protected" method="_Ddp1x7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeF6pbhiEe2UuoshngsjNA">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZJJMbhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZJJMrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZJJM7hiEe2UuoshngsjNA" name="findChannelAndTime" visibility="protected" method="_Ddp1yrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZJJNLhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZJJNbhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZJJNrhiEe2UuoshngsjNA" type="_DILVALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZJJN7hiEe2UuoshngsjNA" name="continueSearch" visibility="protected" method="_Ddp1zrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeF6prhiEe2UuoshngsjNA">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZJJOLhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZJwQLhiEe2UuoshngsjNA" name="activation" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZJwQbhiEe2UuoshngsjNA" type="_DILVALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZJwQrhiEe2UuoshngsjNA" name="noOtherChannelConflicts" visibility="protected" method="_Ddqc0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZJwQ7hiEe2UuoshngsjNA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZJwRLhiEe2UuoshngsjNA" name="schedulableObject" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZJwRbhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZJwRrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZJwR7hiEe2UuoshngsjNA" name="conflictsExist" visibility="protected" method="_DdrD4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZJwSLhiEe2UuoshngsjNA" name="obj" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZJwSbhiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZJwSrhiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZJwS7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZKXULhiEe2UuoshngsjNA" name="freeOfCoordinatorConflicts" visibility="protected" method="_DdrD5bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZKXUbhiEe2UuoshngsjNA" name="obj" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZKXUrhiEe2UuoshngsjNA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZKXU7hiEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZKXVLhiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZKXVbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZKXVrhiEe2UuoshngsjNA" name="isAvailable" visibility="protected" method="_DdrD67hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeF6p7hiEe2UuoshngsjNA">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZKXV7hiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZKXWLhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZKXWbhiEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZKXWrhiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZKXW7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZK-YLhiEe2UuoshngsjNA" name="isAvailable" visibility="protected" method="_DdrD8bhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeF6qLhiEe2UuoshngsjNA">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZK-YbhiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZK-YrhiEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZK-Y7hiEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZK-ZLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZK-ZbhiEe2UuoshngsjNA" name="canCombineEntriesInPlace" visibility="private" method="_Ddrq8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZK-ZrhiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZK-Z7hiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZK-aLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZLlcLhiEe2UuoshngsjNA" name="combinedEntriesInPlace" visibility="private" method="_Ddrq9LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZLlcbhiEe2UuoshngsjNA" name="a1" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZLlcrhiEe2UuoshngsjNA" name="a2" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZLlc7hiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZLldLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZLldbhiEe2UuoshngsjNA" name="addToSchedule" visibility="protected" method="_Ddrq-bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZLldrhiEe2UuoshngsjNA" name="next" type="_DFSZErhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZMMgLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZMzkLhiEe2UuoshngsjNA" name="reportNotSchedulable" visibility="private" method="_Ddrq_LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZMzkbhiEe2UuoshngsjNA" name="object" type="_DFSZErhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_DILVALhiEe2UuoshngsjNA" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_DcgmQrhiEe2UuoshngsjNA" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DcgmRLhiEe2UuoshngsjNA" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdpOuLhiEe2UuoshngsjNA" name="ScheduleLocation" specification="_DIL8ELhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdpOubhiEe2UuoshngsjNA" type="_DILVALhiEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdpOurhiEe2UuoshngsjNA" name="ScheduleLocation" specification="_DIL8FLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdpOu7hiEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DdpOvLhiEe2UuoshngsjNA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DdpOvbhiEe2UuoshngsjNA" type="_DILVALhiEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdpOvrhiEe2UuoshngsjNA" name="getChannel" specification="_DINKMLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdpOv7hiEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdpOwLhiEe2UuoshngsjNA" name="getTime" specification="_DINxQLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdpOwbhiEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DIL8ELhiEe2UuoshngsjNA" name="ScheduleLocation" visibility="package" method="_DdpOuLhiEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_DIL8EbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DIL8ErhiEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DIL8E7hiEe2UuoshngsjNA" type="_DILVALhiEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DIL8FLhiEe2UuoshngsjNA" name="ScheduleLocation" visibility="package" method="_DdpOurhiEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_DIMjIrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DIMjI7hiEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DIMjILhiEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DIMjIbhiEe2UuoshngsjNA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DIMjJLhiEe2UuoshngsjNA" type="_DILVALhiEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DINKMLhiEe2UuoshngsjNA" name="getChannel" visibility="protected" method="_DdpOvrhiEe2UuoshngsjNA">
                  <ownedComment xmi:id="_DeF6obhiEe2UuoshngsjNA">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DINKMbhiEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DINxQLhiEe2UuoshngsjNA" name="getTime" visibility="protected" method="_DdpOwLhiEe2UuoshngsjNA">
                  <ownedComment xmi:id="_DeF6orhiEe2UuoshngsjNA">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DINxQbhiEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIVGALhiEe2UuoshngsjNA" name="ScheduleTable">
              <generalization xmi:id="_DZNaoLhiEe2UuoshngsjNA" general="_DIfeELhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dch0YLhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcibcLhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdrrALhiEe2UuoshngsjNA" name="ScheduleTable" specification="_DIVGAbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdrrAbhiEe2UuoshngsjNA" type="_DIVGALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdsSALhiEe2UuoshngsjNA" name="ScheduleTable" specification="_DIVtELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdsSAbhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdsSArhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdsSA7hiEe2UuoshngsjNA" type="_DIVGALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIVGAbhiEe2UuoshngsjNA" name="ScheduleTable" visibility="package" method="_DdrrALhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DIVGArhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIVGA7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DIVGBLhiEe2UuoshngsjNA" type="_DIVGALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIVtELhiEe2UuoshngsjNA" name="ScheduleTable" visibility="package" method="_DdsSALhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DIWUIbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIWUIrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DIVtEbhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIWUILhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIWUI7hiEe2UuoshngsjNA" type="_DIVGALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIWUJLhiEe2UuoshngsjNA" name="ScheduleTime">
              <ownedAttribute xmi:id="_DcibcbhiEe2UuoshngsjNA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcibcrhiEe2UuoshngsjNA" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdsSBLhiEe2UuoshngsjNA" name="ScheduleTime" specification="_DIW7MLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdsSBbhiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdsSBrhiEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdsSB7hiEe2UuoshngsjNA" type="_DIWUJLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIW7MLhiEe2UuoshngsjNA" name="ScheduleTime" visibility="package" method="_DdsSBLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DIW7M7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIW7NLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DIW7MbhiEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIW7MrhiEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIXiQLhiEe2UuoshngsjNA" type="_DIWUJLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIYwYLhiEe2UuoshngsjNA" name="SimulatorInput">
              <ownedComment xmi:id="_DeGhsLhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIZXcLhiEe2UuoshngsjNA" name="SortedPeriodQueue">
              <generalization xmi:id="_DIalk7hiEe2UuoshngsjNA" general="_DHnUU7hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcjCgLhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcjCgbhiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdsSCLhiEe2UuoshngsjNA" name="SortedPeriodQueue" specification="_DIZ-gbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdsSCbhiEe2UuoshngsjNA" type="_DIZXcLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdsSCrhiEe2UuoshngsjNA" name="SortedPeriodQueue" specification="_DZOBsbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdsSC7hiEe2UuoshngsjNA" name="schedulableObjects" type="_DYmWoLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdsSDLhiEe2UuoshngsjNA" type="_DIZXcLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIZ-gbhiEe2UuoshngsjNA" name="SortedPeriodQueue" visibility="package" method="_DdsSCLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DIalkLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIalkbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DIalkrhiEe2UuoshngsjNA" type="_DIZXcLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZOBsbhiEe2UuoshngsjNA" name="SortedPeriodQueue" visibility="package" method="_DdsSCrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DZOBs7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DZOowLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DZOBsrhiEe2UuoshngsjNA" name="schedulableObjects" type="_DYmWoLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZOowbhiEe2UuoshngsjNA" type="_DIZXcLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DIbzsLhiEe2UuoshngsjNA" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_DZPP0LhiEe2UuoshngsjNA" general="_DHqXoLhiEe2UuoshngsjNA"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_DIcawLhiEe2UuoshngsjNA" name="ScheduleChoices">
                <ownedLiteral xmi:id="_DIcawrhiEe2UuoshngsjNA" name="PRIORITY"/>
                <ownedLiteral xmi:id="_DIcaw7hiEe2UuoshngsjNA" name="RM"/>
                <ownedLiteral xmi:id="_DIcaxLhiEe2UuoshngsjNA" name="DM"/>
                <ownedLiteral xmi:id="_DIdB0LhiEe2UuoshngsjNA" name="RTHART"/>
                <ownedLiteral xmi:id="_DIdB0bhiEe2UuoshngsjNA" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_DIdB0rhiEe2UuoshngsjNA" name="POSET_RM"/>
                <ownedLiteral xmi:id="_DIdB07hiEe2UuoshngsjNA" name="POSET_DM"/>
                <ownedLiteral xmi:id="_DIdB1LhiEe2UuoshngsjNA" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_DIdo4LhiEe2UuoshngsjNA" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_DIdo4bhiEe2UuoshngsjNA" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_DIdo4rhiEe2UuoshngsjNA" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_DIdo47hiEe2UuoshngsjNA" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_DIdo5LhiEe2UuoshngsjNA" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_DIdo5bhiEe2UuoshngsjNA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DIdo5rhiEe2UuoshngsjNA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DIeP8LhiEe2UuoshngsjNA" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DIeP8bhiEe2UuoshngsjNA" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DIeP8rhiEe2UuoshngsjNA" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DIeP87hiEe2UuoshngsjNA" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIe3ALhiEe2UuoshngsjNA" name="SystemFactory">
              <ownedComment xmi:id="_DeGhsbhiEe2UuoshngsjNA">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdsSDbhiEe2UuoshngsjNA" name="create" specification="_DZP24LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdsSDrhiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdsSD7hiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdsSELhiEe2UuoshngsjNA" name="choice" type="_DIcawLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdsSEbhiEe2UuoshngsjNA" type="_DJFT8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DZP24LhiEe2UuoshngsjNA" name="create" isStatic="true" method="_DdsSDbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZQd8LhiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZQd8bhiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZQd8rhiEe2UuoshngsjNA" name="choice" type="_DIcawLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZQd87hiEe2UuoshngsjNA" type="_DJFT8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIfeELhiEe2UuoshngsjNA" name="Table">
              <generalization xmi:id="_DbD0w7hiEe2UuoshngsjNA" general="_DXvbALhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcjCgrhiEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcjCg7hiEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdsSErhiEe2UuoshngsjNA" name="Table" specification="_DIgsMLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdsSE7hiEe2UuoshngsjNA" type="_DIfeELhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dds5ELhiEe2UuoshngsjNA" name="Table" specification="_DIgsNLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dds5EbhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dds5ErhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dds5E7hiEe2UuoshngsjNA" type="_DIfeELhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dds5FLhiEe2UuoshngsjNA" name="getNumRows" specification="_DIhTQbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dds5FbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dds5FrhiEe2UuoshngsjNA" name="getNumColumns" specification="_DIh6ULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dds5F7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dds5GLhiEe2UuoshngsjNA" name="set" specification="_DbDNsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dds5GbhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dds5GrhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dds5G7hiEe2UuoshngsjNA" name="element" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dds5HLhiEe2UuoshngsjNA" name="get" specification="_DIihYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dds5HbhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dds5HrhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dds5H7hiEe2UuoshngsjNA" type="_DaZtcLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIgsMLhiEe2UuoshngsjNA" name="Table" method="_DdsSErhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DIgsMbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIgsMrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DIgsM7hiEe2UuoshngsjNA" type="_DIfeELhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIgsNLhiEe2UuoshngsjNA" name="Table" method="_Dds5ELhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DIgsN7hiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIgsOLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DIgsNbhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIgsNrhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIhTQLhiEe2UuoshngsjNA" type="_DIfeELhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIhTQbhiEe2UuoshngsjNA" name="getNumRows" method="_Dds5FLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIhTQrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIh6ULhiEe2UuoshngsjNA" name="getNumColumns" method="_Dds5FrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIh6UbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIihYLhiEe2UuoshngsjNA" name="get" method="_Dds5HLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIihYbhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIihYrhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbD0wrhiEe2UuoshngsjNA" type="_DaZtcLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbDNsLhiEe2UuoshngsjNA" name="set" method="_Dds5GLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DbDNsbhiEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbD0wLhiEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbD0wbhiEe2UuoshngsjNA" name="element" type="_DaZtcLhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DIjvgLhiEe2UuoshngsjNA" name="Visualization">
              <ownedComment xmi:id="_DeGhsrhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_DIjvgbhiEe2UuoshngsjNA" name="SystemChoices">
                <ownedLiteral xmi:id="_DIkWkbhiEe2UuoshngsjNA" name="SOURCE"/>
                <ownedLiteral xmi:id="_DIkWkrhiEe2UuoshngsjNA" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_DIk9oLhiEe2UuoshngsjNA" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_DIk9obhiEe2UuoshngsjNA" name="LATENCY"/>
                <ownedLiteral xmi:id="_DIk9orhiEe2UuoshngsjNA" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_DIk9o7hiEe2UuoshngsjNA" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_DIk9pLhiEe2UuoshngsjNA" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_DIk9pbhiEe2UuoshngsjNA" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_DIlksbhiEe2UuoshngsjNA" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_DIlksrhiEe2UuoshngsjNA" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_DIlks7hiEe2UuoshngsjNA" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_DIlktLhiEe2UuoshngsjNA" name="toDisplay"/>
              <ownedOperation xmi:id="_DIlktbhiEe2UuoshngsjNA" name="toFile"/>
              <ownedOperation xmi:id="_DIlktrhiEe2UuoshngsjNA" name="toString">
                <ownedParameter xmi:id="_DIlkt7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DImLwLhiEe2UuoshngsjNA" name="VisualizationFactory">
              <ownedComment xmi:id="_DeGhs7hiEe2UuoshngsjNA">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdtgILhiEe2UuoshngsjNA" name="createProgramVisualization" specification="_DZRsErhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdtgIbhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdtgIrhiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdtgI7hiEe2UuoshngsjNA" name="choice" type="_DIjvgbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdtgJLhiEe2UuoshngsjNA" type="_DIjvgLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdtgJbhiEe2UuoshngsjNA" name="createWorkLoadVisualization" specification="_DZSTIbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdtgJrhiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdtgJ7hiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdtgKLhiEe2UuoshngsjNA" name="choice" type="_DIk9pbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdtgKbhiEe2UuoshngsjNA" type="_DIjvgLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DZRsErhiEe2UuoshngsjNA" name="createProgramVisualization" isStatic="true" method="_DdtgILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZRsE7hiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZRsFLhiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZRsFbhiEe2UuoshngsjNA" name="choice" type="_DIjvgbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZSTILhiEe2UuoshngsjNA" type="_DIjvgLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZSTIbhiEe2UuoshngsjNA" name="createWorkLoadVisualization" isStatic="true" method="_DdtgJbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZSTIrhiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZSTI7hiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZSTJLhiEe2UuoshngsjNA" name="choice" type="_DIk9pbhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZSTJbhiEe2UuoshngsjNA" type="_DIjvgLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DInZ4LhiEe2UuoshngsjNA" name="VisualizationImplementation">
              <ownedComment xmi:id="_DeGhtLhiEe2UuoshngsjNA">
                <body>VisualizationImplementation class implements the Visualization file,&#xD;
helping create visualizations for the WARP project based on&#xD;
the requested information/parameters. &#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DcjChLhiEe2UuoshngsjNA" name="visualization" visibility="private" type="_DF75ULhiEe2UuoshngsjNA" association="_De06dLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcjpkbhiEe2UuoshngsjNA" name="fileContent" visibility="private" type="_DF75ULhiEe2UuoshngsjNA" association="_De1hgbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DckQobhiEe2UuoshngsjNA" name="window" visibility="private" type="_DGfS8LhiEe2UuoshngsjNA" association="_De1hhLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DckQo7hiEe2UuoshngsjNA" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dck3sbhiEe2UuoshngsjNA" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dck3s7hiEe2UuoshngsjNA" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcmF0bhiEe2UuoshngsjNA" name="fm" visibility="private" type="_DGFqULhiEe2UuoshngsjNA" association="_De2IkbhiEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcmF0rhiEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcmF1LhiEe2UuoshngsjNA" name="warp" visibility="private" type="_DJFT8LhiEe2UuoshngsjNA" association="_De2voLhiEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcmF1bhiEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcmF17hiEe2UuoshngsjNA" name="workLoad" visibility="private" type="_DJdHYLhiEe2UuoshngsjNA" association="_De2vo7hiEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcmF2LhiEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dcms4LhiEe2UuoshngsjNA" name="visualizationObject" visibility="private" type="_DIuHkLhiEe2UuoshngsjNA" association="_De2vprhiEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_DZSTJrhiEe2UuoshngsjNA" client="_DInZ4LhiEe2UuoshngsjNA" supplier="_DIjvgLhiEe2UuoshngsjNA" contract="_DIjvgLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdtgKrhiEe2UuoshngsjNA" name="VisualizationImplementation" specification="_DbFp8bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdtgK7hiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdtgLLhiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdtgLbhiEe2UuoshngsjNA" name="choice" type="_DbFC4LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdtgLrhiEe2UuoshngsjNA" type="_DInZ4LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduHMLhiEe2UuoshngsjNA" name="VisualizationImplementation" specification="_DbG4ELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduHMbhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduHMrhiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduHM7hiEe2UuoshngsjNA" name="choice" type="_DbGRALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduHNLhiEe2UuoshngsjNA" type="_DInZ4LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduHNbhiEe2UuoshngsjNA" name="toDisplay" specification="_DIooALhiEe2UuoshngsjNA">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduHNrhiEe2UuoshngsjNA" name="toFile" specification="_DIpPE7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduHN7hiEe2UuoshngsjNA" name="toString" specification="_DIp2I7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduHOLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduHObhiEe2UuoshngsjNA" name="createVisualization" specification="_DbG4F7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduHOrhiEe2UuoshngsjNA" name="choice" type="_DbFC4LhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduHO7hiEe2UuoshngsjNA" name="createVisualization" specification="_DbHfILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduHPLhiEe2UuoshngsjNA" name="choice" type="_DbGRALhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduHPbhiEe2UuoshngsjNA" name="createVisualization" specification="_DbIGMLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduHPrhiEe2UuoshngsjNA" name="obj" type="_DaZtcLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduHP7hiEe2UuoshngsjNA" name="createFileNameTemplate" specification="_DIqdMrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduHQLhiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduHQbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIooALhiEe2UuoshngsjNA" name="toDisplay" method="_DduHNbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DIpPE7hiEe2UuoshngsjNA" name="toFile" method="_DduHNrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DIp2I7hiEe2UuoshngsjNA" name="toString" method="_DduHN7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIp2JLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIqdMrhiEe2UuoshngsjNA" name="createFileNameTemplate" visibility="private" method="_DduHP7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIw7hiEe2UuoshngsjNA">
                  <body>@return the file name template created from the output path and input string.&#xD;
@param outputDirectory directory where output visualization goes</body>
                </ownedComment>
                <ownedParameter xmi:id="_DIrEQLhiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIrEQbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DbFp8bhiEe2UuoshngsjNA" name="VisualizationImplementation" method="_DdtgKrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DbFp9bhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DbFp9rhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeGhtbhiEe2UuoshngsjNA">
                  <body>Constructor that initializes objects, and makes a call to &#xD;
   * VisualizationObject. This creates a visualization for warp.&#xD;
@param warp any object implementing the Warp interface.&#xD;
@param outputDirectory directory where output visualization goes&#xD;
@param choice the requested visualization for system.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbFp8rhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbFp87hiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbFp9LhiEe2UuoshngsjNA" name="choice" type="_DbFC4LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbFp97hiEe2UuoshngsjNA" type="_DInZ4LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbG4ELhiEe2UuoshngsjNA" name="VisualizationImplementation" method="_DduHMLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DbG4FLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DbG4FbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeHIwLhiEe2UuoshngsjNA">
                  <body>Constructor that initializes objects, and makes a call to &#xD;
   * VisualizationObject. This creates a visualization for work load.&#xD;
@param workLoad Workload that will be visualized&#xD;
@param outputDirectory directory where output visualization goes&#xD;
@param choice the requested visualization for work load.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbG4EbhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbG4ErhiEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbG4E7hiEe2UuoshngsjNA" name="choice" type="_DbGRALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbG4FrhiEe2UuoshngsjNA" type="_DInZ4LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbG4F7hiEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_DduHObhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIwbhiEe2UuoshngsjNA">
                  <body>Depending on the system choice, implement a visualization accordingly.&#xD;
   * These include source, reliability analysis, simulator input, latency analysis,&#xD;
   * chanel analysis, latency report, and deadline report.&#xD;
@param choice the requested visualization for system.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbG4GLhiEe2UuoshngsjNA" name="choice" type="_DbFC4LhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbHfILhiEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_DduHO7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIwrhiEe2UuoshngsjNA">
                  <body>Depending on the workload choice, implement a visualization accordingly.&#xD;
   * These include communication graph, graphViz, and input graph.&#xD;
@param choice the requested visualization for work load.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbHfIbhiEe2UuoshngsjNA" name="choice" type="_DbGRALhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbIGMLhiEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_DduHPbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DbIGMbhiEe2UuoshngsjNA" name="obj" type="_DaZtcLhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIuHkLhiEe2UuoshngsjNA" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_DeHIxLhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dcn7ALhiEe2UuoshngsjNA" name="fm" visibility="private" type="_DGFqULhiEe2UuoshngsjNA" association="_De3WsbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dcn7ArhiEe2UuoshngsjNA" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcoiELhiEe2UuoshngsjNA" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcoiErhiEe2UuoshngsjNA" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcoiE7hiEe2UuoshngsjNA" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcoiFLhiEe2UuoshngsjNA" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DcoiFbhiEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduHQrhiEe2UuoshngsjNA" name="VisualizationObject" specification="_DZUvYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduHQ7hiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduHRLhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduHRbhiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduHRrhiEe2UuoshngsjNA" type="_DIuHkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduuQLhiEe2UuoshngsjNA" name="VisualizationObject" specification="_DZUvZ7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduuQbhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduuQrhiEe2UuoshngsjNA" name="warp" type="_DIbzsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduuQ7hiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduuRLhiEe2UuoshngsjNA" type="_DIuHkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduuRbhiEe2UuoshngsjNA" name="VisualizationObject" specification="_DZVWdbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduuRrhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduuR7hiEe2UuoshngsjNA" name="warp" type="_DIbzsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduuSLhiEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduuSbhiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduuSrhiEe2UuoshngsjNA" type="_DIuHkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduuS7hiEe2UuoshngsjNA" name="VisualizationObject" specification="_DZV9gLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduuTLhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduuTbhiEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduuTrhiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduuT7hiEe2UuoshngsjNA" type="_DIuHkLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduuULhiEe2UuoshngsjNA" name="nameExtension" specification="_DbJUULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduuUbhiEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduuUrhiEe2UuoshngsjNA" name="m" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DduuU7hiEe2UuoshngsjNA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduuVLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduuVbhiEe2UuoshngsjNA" name="nameExtension" specification="_DIv8wLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduuVrhiEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduuV7hiEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DduuWLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduuWbhiEe2UuoshngsjNA" name="getFileManager" specification="_DIv8xLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduuWrhiEe2UuoshngsjNA" type="_DGFqULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DduuW7hiEe2UuoshngsjNA" name="visualization" specification="_DIwj0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DduuXLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdvVULhiEe2UuoshngsjNA" name="createFile" specification="_DIwj0bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdvVUbhiEe2UuoshngsjNA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdvVUrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdvVU7hiEe2UuoshngsjNA" name="fileVisualization" specification="_DIwj1LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdvVVLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdvVVbhiEe2UuoshngsjNA" name="displayVisualization" specification="_DIxK4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdvVVrhiEe2UuoshngsjNA" type="_DGfS8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdvVV7hiEe2UuoshngsjNA" name="createHeader" specification="_DIxK4bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdvVWLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdvVWbhiEe2UuoshngsjNA" name="createFooter" specification="_DIxK4rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdvVWrhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdvVW7hiEe2UuoshngsjNA" name="createColumnHeader" specification="_DIxx8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdvVXLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdvVXbhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdvVXrhiEe2UuoshngsjNA" name="createVisualizationData" specification="_DIxx9LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdvVX7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DdvVYLhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIv8wLhiEe2UuoshngsjNA" name="nameExtension" visibility="private" method="_DduuVbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIv8wbhiEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIv8wrhiEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIv8w7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIv8xLhiEe2UuoshngsjNA" name="getFileManager" method="_DduuWbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIxbhiEe2UuoshngsjNA">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZV9h7hiEe2UuoshngsjNA" type="_DGFqULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIwj0LhiEe2UuoshngsjNA" name="visualization" method="_DduuW7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZV9iLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIwj0bhiEe2UuoshngsjNA" name="createFile" method="_DdvVULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIwj0rhiEe2UuoshngsjNA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIwj07hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIwj1LhiEe2UuoshngsjNA" name="fileVisualization" method="_DdvVU7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZV9ibhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIxK4LhiEe2UuoshngsjNA" name="displayVisualization" method="_DdvVVbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZV9irhiEe2UuoshngsjNA" type="_DGfS8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIxK4bhiEe2UuoshngsjNA" name="createHeader" visibility="protected" method="_DdvVV7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZV9i7hiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIxK4rhiEe2UuoshngsjNA" name="createFooter" visibility="protected" method="_DdvVWbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZWkkLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIxx8LhiEe2UuoshngsjNA" name="createColumnHeader" visibility="protected" method="_DdvVW7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIxx8bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DIxx8rhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIxx9LhiEe2UuoshngsjNA" name="createVisualizationData" visibility="protected" method="_DdvVXrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DIxx9bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DIxx9rhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZUvYLhiEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_DduHQrhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DZUvZLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DZUvZbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DZUvYbhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZUvYrhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZUvY7hiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZUvZrhiEe2UuoshngsjNA" type="_DIuHkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZUvZ7hiEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_DduuQLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DZVWcrhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DZVWc7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DZUvaLhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZVWcLhiEe2UuoshngsjNA" name="warp" type="_DIbzsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZVWcbhiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZVWdLhiEe2UuoshngsjNA" type="_DIuHkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZVWdbhiEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_DduuRbhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DZVWerhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DZVWe7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DZVWdrhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZVWd7hiEe2UuoshngsjNA" name="warp" type="_DIbzsLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZVWeLhiEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZVWebhiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZVWfLhiEe2UuoshngsjNA" type="_DIuHkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZV9gLhiEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_DduuS7hiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DZV9hLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DZV9hbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DZV9gbhiEe2UuoshngsjNA" name="fm" type="_DGFqULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZV9grhiEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZV9g7hiEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZV9hrhiEe2UuoshngsjNA" type="_DIuHkLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbJUULhiEe2UuoshngsjNA" name="nameExtension" visibility="private" method="_DduuULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DbJUUbhiEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbJ7YLhiEe2UuoshngsjNA" name="m" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbJ7YbhiEe2UuoshngsjNA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbJ7YrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DI0OMLhiEe2UuoshngsjNA" name="Warp">
              <ownedComment xmi:id="_DeHIxrhiEe2UuoshngsjNA">
                <body>Main file for the entire WARP interface. &#xD;
WARP: On-the-fly Program Synthesis for Agile, Real-time, and Reliable Wireless Networks. This&#xD;
system generates node communication programs WARP uses programs to specify a network’s behavior&#xD;
and includes a synthesis procedure to automatically generate such programs from a high-level&#xD;
specification of the system’s workload and topology. WARP has three unique features: &lt;br>&#xD;
(1) WARP uses a domain-specific language to specify stateful programs that include conditional&#xD;
statements to control when a flow’s packets are transmitted. The execution paths of programs&#xD;
depend on the pattern of packet losses observed at run-time, thereby enabling WARP to readily&#xD;
adapt to packet losses due to short-term variations in link quality. &lt;br>&#xD;
(2) Our synthesis technique uses heuristics to improve network performance by considering&#xD;
multiple packet loss patterns and associated execution paths when determining the transmissions&#xD;
performed by nodes. Furthermore, the generated programs ensure that the likelihood of a flow&#xD;
delivering its packets by its deadline exceeds a user-specified threshold. &lt;br>&#xD;
(3) WARP can adapt to workload and topology changes without explicitly reconstructing a network’s&#xD;
program based on the observation that nodes can independently synthesize the same program when&#xD;
they share the same workload and topology information. Simulations show that WARP improves&#xD;
network throughput for data collection, dissemination, and mixed workloads on two realistic&#xD;
topologies. Testbed experiments show that WARP reduces the time to add new flows by 5 times over&#xD;
a state-of-the-art centralized control plane and guarantees the real-time and reliability of all&#xD;
flows.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DcpwMLhiEe2UuoshngsjNA" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcpwMbhiEe2UuoshngsjNA" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcpwMrhiEe2UuoshngsjNA" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_Da1yULhiEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcpwM7hiEe2UuoshngsjNA" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcpwNLhiEe2UuoshngsjNA" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_Da1yULhiEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcpwNbhiEe2UuoshngsjNA" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcpwNrhiEe2UuoshngsjNA" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcpwN7hiEe2UuoshngsjNA" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcqXQLhiEe2UuoshngsjNA" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_DIcawLhiEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcqXQbhiEe2UuoshngsjNA" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcqXQrhiEe2UuoshngsjNA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcqXQ7hiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcqXRLhiEe2UuoshngsjNA" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcqXRrhiEe2UuoshngsjNA" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dcq-UbhiEe2UuoshngsjNA" name="minLQ" visibility="private" isStatic="true" type="_Da1yULhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dcq-U7hiEe2UuoshngsjNA" name="e2e" visibility="private" isStatic="true" type="_Da1yULhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DcrlYbhiEe2UuoshngsjNA" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcrlY7hiEe2UuoshngsjNA" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcszgbhiEe2UuoshngsjNA" name="gvRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dcszg7hiEe2UuoshngsjNA" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcszhbhiEe2UuoshngsjNA" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcuBoLhiEe2UuoshngsjNA" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcuosLhiEe2UuoshngsjNA" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcuosrhiEe2UuoshngsjNA" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcuotLhiEe2UuoshngsjNA" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcvPwbhiEe2UuoshngsjNA" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcvPw7hiEe2UuoshngsjNA" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcvPxLhiEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dcv20bhiEe2UuoshngsjNA" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dcv207hiEe2UuoshngsjNA" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dcwd4LhiEe2UuoshngsjNA" name="schedulerSelected" visibility="private" isStatic="true" type="_DIcawLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddv8YLhiEe2UuoshngsjNA" name="main" specification="_DI2DYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddv8YbhiEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ddv8YrhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddv8Y7hiEe2UuoshngsjNA" name="visualize" specification="_DZZn4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddv8ZLhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddv8ZbhiEe2UuoshngsjNA" name="choice" type="_DIk9pbhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddv8ZrhiEe2UuoshngsjNA" name="visualize" specification="_DZaO8bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddv8Z7hiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddv8aLhiEe2UuoshngsjNA" name="choice" type="_DIjvgbhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddv8abhiEe2UuoshngsjNA" name="verifyPerformanceRequirements" specification="_DZa2ALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddv8arhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddv8a7hiEe2UuoshngsjNA" name="verifyReliabilities" specification="_DZbdELhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddv8bLhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddv8bbhiEe2UuoshngsjNA" name="verifyDeadlines" specification="_DZbdErhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddv8brhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddv8b7hiEe2UuoshngsjNA" name="verifyNoChannelConflicts" specification="_DZbdFLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddv8cLhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddv8cbhiEe2UuoshngsjNA" name="setWarpParameters" specification="_DI3RgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddv8crhiEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ddv8c7hiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdwjcLhiEe2UuoshngsjNA" name="printWarpParameters" specification="_DI34krhiEe2UuoshngsjNA">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DI2DYLhiEe2UuoshngsjNA" name="main" isStatic="true" method="_Ddv8YLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIx7hiEe2UuoshngsjNA">
                  <body>Main method for WARP program. Makes a call to WARP system parameters and prints accordingly.&#xD;
   * It also initializes Workload with number of faults tolerated per edge, minimum link &#xD;
   * quality in each system, e2e, and the input file from which the graph workload is read.&#xD;
   * If there is an all out files requested flag, the parameters are visualized according to &#xD;
   * configurations.&#xD;
   * &#xD;
   * @param args Command line option</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI2qcLhiEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DI2qcbhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI3RgLhiEe2UuoshngsjNA" name="setWarpParameters" visibility="private" isStatic="true" method="_Ddv8cbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIzrhiEe2UuoshngsjNA">
                  <body>Sets the parameters configurations for WARP.&#xD;
   * Arguments that aren't passed through the command line are set to default.&#xD;
@param args Command line arguments.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI3RgbhiEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DI34kLhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI34krhiEe2UuoshngsjNA" name="printWarpParameters" visibility="private" isStatic="true" method="_DdwjcLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIz7hiEe2UuoshngsjNA">
                  <body>Prints all system configuration parameters.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DZZn4LhiEe2UuoshngsjNA" name="visualize" visibility="private" isStatic="true" method="_Ddv8Y7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIyLhiEe2UuoshngsjNA">
                  <body>When the workload visualization is not null and there is a verbose mode flag &#xD;
   * it prints a string, else it is output to a file.&#xD;
   * If the Gui Visualization is selected, then it displays the visualization.&#xD;
@param workLoad the WorkLoad object &#xD;
@param choice keep track of choices for work load to create a visualization of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZZn4bhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZaO8LhiEe2UuoshngsjNA" name="choice" type="_DIk9pbhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZaO8bhiEe2UuoshngsjNA" name="visualize" visibility="private" isStatic="true" method="_Ddv8ZrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIybhiEe2UuoshngsjNA">
                  <body>Creates visualization based on the choice. If var pointer is not null, then the visualization file is created.&#xD;
   * The var pointer is displayed if Gui visualization and specific scheduler has been requested.&#xD;
@param warp Refers to the main WARP interface.&#xD;
@param choice keep track of choices for the system to create a visualization of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZaO8rhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZaO87hiEe2UuoshngsjNA" name="choice" type="_DIjvgbhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZa2ALhiEe2UuoshngsjNA" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_Ddv8abhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIyrhiEe2UuoshngsjNA">
                  <body>Checks if performance-based requirements are met. This includes &#xD;
   * deadlines, reliabilities, and verifying that there are no channel conflicts.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZa2AbhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZbdELhiEe2UuoshngsjNA" name="verifyReliabilities" visibility="private" isStatic="true" method="_Ddv8a7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIy7hiEe2UuoshngsjNA">
                  <body>Checks for the flow reliabilities. An error is printed if flows don't&#xD;
   * meet the reliability target.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZbdEbhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZbdErhiEe2UuoshngsjNA" name="verifyDeadlines" visibility="private" isStatic="true" method="_Ddv8bbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIzLhiEe2UuoshngsjNA">
                  <body>Checks for the flow deadlines. An error is printed if flows don't&#xD;
   * meet the deadline target.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZbdE7hiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZbdFLhiEe2UuoshngsjNA" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_Ddv8b7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHIzbhiEe2UuoshngsjNA">
                  <body>Checks for the flow channel conflicts. An error is printed if flows &#xD;
   * contain a conflict.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZbdFbhiEe2UuoshngsjNA" name="warp" type="_DJFT8LhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DI8KALhiEe2UuoshngsjNA" name="WarpDSL">
              <ownedComment xmi:id="_DeHv0LhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DcxE8LhiEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcxE8bhiEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcxE8rhiEe2UuoshngsjNA" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcxE87hiEe2UuoshngsjNA" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DcxE9LhiEe2UuoshngsjNA" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcxE9bhiEe2UuoshngsjNA" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKjLhiEe2UuoshngsjNA" name="getInstructionParameters" specification="_DI_NULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdxKjbhiEe2UuoshngsjNA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdxKjrhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DI_NULhiEe2UuoshngsjNA" name="getInstructionParameters" method="_DdxKjLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DI_0YLhiEe2UuoshngsjNA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbMXoLhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_DI8KAbhiEe2UuoshngsjNA" name="InstructionParameters">
                <ownedAttribute xmi:id="_DcxsALhiEe2UuoshngsjNA" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcxsAbhiEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DcxsArhiEe2UuoshngsjNA" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcxsA7hiEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DcxsBLhiEe2UuoshngsjNA" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcxsBbhiEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DcxsBrhiEe2UuoshngsjNA" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcxsB7hiEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DcyTELhiEe2UuoshngsjNA" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcyTEbhiEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DcyTErhiEe2UuoshngsjNA" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DcyTE7hiEe2UuoshngsjNA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Dcy6ILhiEe2UuoshngsjNA" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dcy6IbhiEe2UuoshngsjNA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdwjcbhiEe2UuoshngsjNA" name="getCoordinator" specification="_DI8xELhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdwjcrhiEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddwjc7hiEe2UuoshngsjNA" name="setCoordinator" specification="_DI9YIbhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdwjdLhiEe2UuoshngsjNA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKgLhiEe2UuoshngsjNA" name="setName" specification="_DI9YI7hiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxKgbhiEe2UuoshngsjNA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKgrhiEe2UuoshngsjNA" name="setFlow" specification="_DI9_MLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxKg7hiEe2UuoshngsjNA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKhLhiEe2UuoshngsjNA" name="setSrc" specification="_DI9_MrhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxKhbhiEe2UuoshngsjNA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKhrhiEe2UuoshngsjNA" name="setSnk" specification="_DI-mQLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxKh7hiEe2UuoshngsjNA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKiLhiEe2UuoshngsjNA" name="setChannel" specification="_DI-mQrhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxKibhiEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKirhiEe2UuoshngsjNA" name="unused" specification="_DI-mRLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxKi7hiEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DI8xELhiEe2UuoshngsjNA" name="getCoordinator" method="_DdwjcbhiEe2UuoshngsjNA">
                  <ownedComment xmi:id="_DeHv0bhiEe2UuoshngsjNA">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DI9YILhiEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DI9YIbhiEe2UuoshngsjNA" name="setCoordinator" method="_Ddwjc7hiEe2UuoshngsjNA">
                  <ownedComment xmi:id="_DeHv0rhiEe2UuoshngsjNA">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DI9YIrhiEe2UuoshngsjNA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DI9YI7hiEe2UuoshngsjNA" name="setName" visibility="private" method="_DdxKgLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DI9YJLhiEe2UuoshngsjNA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DI9_MLhiEe2UuoshngsjNA" name="setFlow" visibility="private" method="_DdxKgrhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DI9_MbhiEe2UuoshngsjNA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DI9_MrhiEe2UuoshngsjNA" name="setSrc" visibility="private" method="_DdxKhLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DI9_M7hiEe2UuoshngsjNA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DI-mQLhiEe2UuoshngsjNA" name="setSnk" visibility="private" method="_DdxKhrhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DI-mQbhiEe2UuoshngsjNA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DI-mQrhiEe2UuoshngsjNA" name="setChannel" visibility="private" method="_DdxKiLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DI-mQ7hiEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DI-mRLhiEe2UuoshngsjNA" name="unused" method="_DdxKirhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DI-mRbhiEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_DJAbcLhiEe2UuoshngsjNA" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_DbM-srhiEe2UuoshngsjNA" general="_DbMXobhiEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_Dcy6IrhiEe2UuoshngsjNA" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DczhMLhiEe2UuoshngsjNA" name="instructionParametersArrayList" visibility="package" type="_DXvbALhiEe2UuoshngsjNA" association="_De39wLhiEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_Dc0IQLhiEe2UuoshngsjNA" name="instructionParameters" visibility="package" type="_DI8KAbhiEe2UuoshngsjNA" association="_De39w7hiEe2UuoshngsjNA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKj7hiEe2UuoshngsjNA" name="ListenerDsl" specification="_DJBCgLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxKkLhiEe2UuoshngsjNA" type="_DJAbcLhiEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKkbhiEe2UuoshngsjNA" name="getInstructionParameters" specification="_DJBpkLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxKkrhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxKk7hiEe2UuoshngsjNA" name="enterAction" specification="_DZegYrhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxKlLhiEe2UuoshngsjNA" name="ctx" type="_DZegYLhiEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxxkLhiEe2UuoshngsjNA" name="exitAction" specification="_DZfHc7hiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxxkbhiEe2UuoshngsjNA" name="ctx" type="_DZegYLhiEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxxkrhiEe2UuoshngsjNA" name="exitFlowName" specification="_DZfuhbhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_Ddxxk7hiEe2UuoshngsjNA" name="ctx" type="_DZfug7hiEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxxlLhiEe2UuoshngsjNA" name="exitCmd" specification="_DZhjsLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxxlbhiEe2UuoshngsjNA" name="ctx" type="_DZgVlLhiEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxxlrhiEe2UuoshngsjNA" name="exitSrcNode" specification="_DZix0bhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_Ddxxl7hiEe2UuoshngsjNA" name="ctx" type="_DZiKwLhiEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxxmLhiEe2UuoshngsjNA" name="exitSnkNode" specification="_DZj_8LhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DdxxmbhiEe2UuoshngsjNA" name="ctx" type="_DZjY4rhiEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdxxmrhiEe2UuoshngsjNA" name="exitChannel" specification="_DZlOELhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_Ddxxm7hiEe2UuoshngsjNA" name="ctx" type="_DZknALhiEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DJBCgLhiEe2UuoshngsjNA" name="ListenerDsl" visibility="package" method="_DdxKj7hiEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_DJBCgbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DJBCgrhiEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DJBCg7hiEe2UuoshngsjNA" type="_DJAbcLhiEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DJBpkLhiEe2UuoshngsjNA" name="getInstructionParameters" method="_DdxKkbhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DbM-sbhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DZegYrhiEe2UuoshngsjNA" name="enterAction" method="_DdxKk7hiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DZegY7hiEe2UuoshngsjNA" name="ctx" type="_DZegYLhiEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DZfHc7hiEe2UuoshngsjNA" name="exitAction" method="_DdxxkLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DZfHdLhiEe2UuoshngsjNA" name="ctx" type="_DZegYLhiEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DZfuhbhiEe2UuoshngsjNA" name="exitFlowName" method="_DdxxkrhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DZgVkLhiEe2UuoshngsjNA" name="ctx" type="_DZfug7hiEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DZhjsLhiEe2UuoshngsjNA" name="exitCmd" method="_DdxxlLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DZhjsbhiEe2UuoshngsjNA" name="ctx" type="_DZgVlLhiEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DZix0bhiEe2UuoshngsjNA" name="exitSrcNode" method="_DdxxlrhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DZix0rhiEe2UuoshngsjNA" name="ctx" type="_DZiKwLhiEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DZj_8LhiEe2UuoshngsjNA" name="exitSnkNode" method="_DdxxmLhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DZj_8bhiEe2UuoshngsjNA" name="ctx" type="_DZjY4rhiEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DZlOELhiEe2UuoshngsjNA" name="exitChannel" method="_DdxxmrhiEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_DZlOEbhiEe2UuoshngsjNA" name="ctx" type="_DZknALhiEe2UuoshngsjNA"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DJFT8LhiEe2UuoshngsjNA" name="WarpInterface">
              <ownedComment xmi:id="_DeHv07hiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_DZmcMLhiEe2UuoshngsjNA" general="_DIbzsLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJF7ALhiEe2UuoshngsjNA" name="toWorkload">
                <ownedParameter xmi:id="_DZnDQLhiEe2UuoshngsjNA" type="_DJdHYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJF7AbhiEe2UuoshngsjNA" name="toProgram">
                <ownedParameter xmi:id="_DZnDQbhiEe2UuoshngsjNA" type="_DHKBUbhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJF7ArhiEe2UuoshngsjNA" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_DZnDQrhiEe2UuoshngsjNA" type="_DHpJgLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJGiELhiEe2UuoshngsjNA" name="toSimulator">
                <ownedParameter xmi:id="_DZnDQ7hiEe2UuoshngsjNA" type="_DIYwYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJGiEbhiEe2UuoshngsjNA" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_DZnDRLhiEe2UuoshngsjNA" type="_DGpD8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJGiErhiEe2UuoshngsjNA" name="toChannelAnalysis">
                <ownedParameter xmi:id="_DZnDRbhiEe2UuoshngsjNA" type="_DFhpoLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJGiE7hiEe2UuoshngsjNA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_DJGiFLhiEe2UuoshngsjNA" name="reliabilitiesMet">
                <ownedParameter xmi:id="_DJGiFbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJHJILhiEe2UuoshngsjNA" name="deadlinesMet">
                <ownedParameter xmi:id="_DJHJIbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DJHwMLhiEe2UuoshngsjNA" name="WarpPoset">
              <ownedComment xmi:id="_DeHv1LhiEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_DZnqU7hiEe2UuoshngsjNA" general="_DG6wwLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdyYoLhiEe2UuoshngsjNA" name="WarpPoset" specification="_DZnDRrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdyYobhiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdyYorhiEe2UuoshngsjNA" type="_DJHwMLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdyYo7hiEe2UuoshngsjNA" name="findCoordinator" specification="_DbOM0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdyYpLhiEe2UuoshngsjNA" name="nodesInFlow" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdyYpbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DZnDRrhiEe2UuoshngsjNA" name="WarpPoset" visibility="package" method="_DdyYoLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DZnqULhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DZnqUbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DZnDR7hiEe2UuoshngsjNA" name="workload" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZnqUrhiEe2UuoshngsjNA" type="_DJHwMLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbOM0LhiEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_DdyYo7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DbOM0bhiEe2UuoshngsjNA" name="nodesInFlow" type="_DXvbALhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbOz4LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DJI-ULhiEe2UuoshngsjNA" name="WarpSystem">
              <ownedComment xmi:id="_DeHv1bhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dc1WYLhiEe2UuoshngsjNA" name="program" visibility="private" type="_DHKBUbhiEe2UuoshngsjNA" association="_De4k0LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc1WYrhiEe2UuoshngsjNA" name="workLoad" visibility="private" type="_DJdHYLhiEe2UuoshngsjNA" association="_De4k07hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc19cLhiEe2UuoshngsjNA" name="ra" visibility="private" type="_DHpJgLhiEe2UuoshngsjNA" association="_De5L4bhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc19crhiEe2UuoshngsjNA" name="la" visibility="private" type="_DGpD8LhiEe2UuoshngsjNA" association="_De5y8LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc2kgLhiEe2UuoshngsjNA" name="ca" visibility="private" type="_DFhpoLhiEe2UuoshngsjNA" association="_De5y87hiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc2kgrhiEe2UuoshngsjNA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc3yoLhiEe2UuoshngsjNA" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc3yobhiEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc4ZsbhiEe2UuoshngsjNA" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc4ZsrhiEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DZnqVLhiEe2UuoshngsjNA" client="_DJI-ULhiEe2UuoshngsjNA" supplier="_DJFT8LhiEe2UuoshngsjNA" contract="_DJFT8LhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdyYqLhiEe2UuoshngsjNA" name="WarpSystem" specification="_DbPa8rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdyYqbhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdyYqrhiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DdyYq7hiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DdyYrLhiEe2UuoshngsjNA" type="_DJI-ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddy_sLhiEe2UuoshngsjNA" name="toWorkload" specification="_DJKMcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddy_sbhiEe2UuoshngsjNA" type="_DJdHYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddy_srhiEe2UuoshngsjNA" name="toProgram" specification="_DJLakrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddy_s7hiEe2UuoshngsjNA" type="_DHKBUbhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddy_tLhiEe2UuoshngsjNA" name="toReliabilityAnalysis" specification="_DJMBo7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddy_tbhiEe2UuoshngsjNA" type="_DHpJgLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddy_trhiEe2UuoshngsjNA" name="toSimulator" specification="_DJMosrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddy_t7hiEe2UuoshngsjNA" type="_DIYwYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddy_uLhiEe2UuoshngsjNA" name="toLatencyAnalysis" specification="_DJNPwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddy_ubhiEe2UuoshngsjNA" type="_DGpD8LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddy_urhiEe2UuoshngsjNA" name="toChannelAnalysis" specification="_DJN20bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddy_u7hiEe2UuoshngsjNA" type="_DFhpoLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddy_vLhiEe2UuoshngsjNA" name="reliabilitiesMet" specification="_DJOd4bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddy_vbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddy_vrhiEe2UuoshngsjNA" name="deadlinesMet" specification="_DJPE8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddy_v7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ddy_wLhiEe2UuoshngsjNA" name="createProgram" specification="_DbQCBbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddy_wbhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Ddy_wrhiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ddy_w7hiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdzmwLhiEe2UuoshngsjNA" name="getNumFaults" specification="_DJPsALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdzmwbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdzmwrhiEe2UuoshngsjNA" name="getMinPacketReceptionRate" specification="_DJQTE7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddzmw7hiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdzmxLhiEe2UuoshngsjNA" name="getE2e" specification="_DJQ6I7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdzmxbhiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdzmxrhiEe2UuoshngsjNA" name="getName" specification="_DJRhM7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddzmx7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdzmyLhiEe2UuoshngsjNA" name="getSchedulerName" specification="_DJSIRLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdzmybhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdzmyrhiEe2UuoshngsjNA" name="getNumTransmissions" specification="_DJSvU7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ddzmy7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DdzmzLhiEe2UuoshngsjNA" name="getOptimizationFlag" specification="_DJTWYrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DdzmzbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DJKMcLhiEe2UuoshngsjNA" name="toWorkload" method="_Ddy_sLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZoRYLhiEe2UuoshngsjNA" type="_DJdHYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJLakrhiEe2UuoshngsjNA" name="toProgram" method="_Ddy_srhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZo4cLhiEe2UuoshngsjNA" type="_DHKBUbhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJMBo7hiEe2UuoshngsjNA" name="toReliabilityAnalysis" method="_Ddy_tLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZo4cbhiEe2UuoshngsjNA" type="_DHpJgLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJMosrhiEe2UuoshngsjNA" name="toSimulator" method="_Ddy_trhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZpfgLhiEe2UuoshngsjNA" type="_DIYwYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJNPwLhiEe2UuoshngsjNA" name="toLatencyAnalysis" method="_Ddy_uLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZpfgbhiEe2UuoshngsjNA" type="_DGpD8LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJN20bhiEe2UuoshngsjNA" name="toChannelAnalysis" method="_Ddy_urhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZpfgrhiEe2UuoshngsjNA" type="_DFhpoLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJOd4bhiEe2UuoshngsjNA" name="reliabilitiesMet" method="_Ddy_vLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJOd4rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJPE8LhiEe2UuoshngsjNA" name="deadlinesMet" method="_Ddy_vrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJPE8bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJPsALhiEe2UuoshngsjNA" name="getNumFaults" method="_DdzmwLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJPsAbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJQTE7hiEe2UuoshngsjNA" name="getMinPacketReceptionRate" method="_DdzmwrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DbQpEbhiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJQ6I7hiEe2UuoshngsjNA" name="getE2e" method="_DdzmxLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DbQpErhiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJRhM7hiEe2UuoshngsjNA" name="getName" method="_DdzmxrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJSIQLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJSIRLhiEe2UuoshngsjNA" name="getSchedulerName" method="_DdzmyLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJSIRbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJSvU7hiEe2UuoshngsjNA" name="getNumTransmissions" method="_DdzmyrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJSvVLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJTWYrhiEe2UuoshngsjNA" name="getOptimizationFlag" method="_DdzmzLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJTWY7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJT9crhiEe2UuoshngsjNA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_DbPa8rhiEe2UuoshngsjNA" name="WarpSystem" method="_DdyYqLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DbQCArhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DbQCA7hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DbPa87hiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbQCALhiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbQCAbhiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbQCBLhiEe2UuoshngsjNA" type="_DJI-ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbQCBbhiEe2UuoshngsjNA" name="createProgram" visibility="private" method="_Ddy_wLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DbQCBrhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbQCB7hiEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbQpELhiEe2UuoshngsjNA" name="choice" type="_DayH8LhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DJYO4LhiEe2UuoshngsjNA" name="WorkLoadDescription">
              <ownedComment xmi:id="_DeHv1rhiEe2UuoshngsjNA">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_DZr7wbhiEe2UuoshngsjNA" general="_DIuHkLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc5n0LhiEe2UuoshngsjNA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc5n0bhiEe2UuoshngsjNA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc5n0rhiEe2UuoshngsjNA" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc5n07hiEe2UuoshngsjNA" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc5n1LhiEe2UuoshngsjNA" name="description" visibility="private" type="_DF75ULhiEe2UuoshngsjNA" association="_De6aAbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc6O4LhiEe2UuoshngsjNA" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc6O4rhiEe2UuoshngsjNA" name="fm" visibility="private" type="_DGFqULhiEe2UuoshngsjNA" association="_De6aBLhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc618LhiEe2UuoshngsjNA" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd0N0LhiEe2UuoshngsjNA" name="WorkLoadDescription" specification="_DJY18LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd0N0bhiEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd0N0rhiEe2UuoshngsjNA" type="_DJYO4LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd0N07hiEe2UuoshngsjNA" name="visualization" specification="_DJY19bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd0N1LhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd004LhiEe2UuoshngsjNA" name="fileVisualization" specification="_DJaEErhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd004bhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd004rhiEe2UuoshngsjNA" name="toString" specification="_DJarIrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd0047hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd005LhiEe2UuoshngsjNA" name="initialize" specification="_DJbSM7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd005bhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd005rhiEe2UuoshngsjNA" name="main" specification="_DJb5QLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd0057hiEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dd006LhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Get file contents&#xD;
	  String file = &quot;StressTest.txt&quot;;&#xD;
	  WorkLoadDescription stressTest = new WorkLoadDescription(file);&#xD;
	  Description toBeAlphabetized = stressTest.visualization();&#xD;
	  &#xD;
	  //Parse file name&#xD;
	  String firstLine = toBeAlphabetized.remove(0);&#xD;
	  String fileName = firstLine.substring(0, firstLine.indexOf(' '));&#xD;
	  &#xD;
	  //Trim and Sort toBeAlphabetized to only contain flows&#xD;
	  toBeAlphabetized.remove(toBeAlphabetized.size()-1);&#xD;
	  Collections.sort(toBeAlphabetized);&#xD;
	  &#xD;
	  //Print the file in the proper format&#xD;
	  System.out.println(fileName);&#xD;
	  for(int i = 0; i &lt; toBeAlphabetized.size(); i++) {&#xD;
		  System.out.print(&quot;Flow &quot; + (i+1) + &quot;: &quot; + toBeAlphabetized.get(i));&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DJY18LhiEe2UuoshngsjNA" name="WorkLoadDescription" visibility="package" method="_Dd0N0LhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DJY18rhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DJY187hiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DJY18bhiEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJY19LhiEe2UuoshngsjNA" type="_DJYO4LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJY19bhiEe2UuoshngsjNA" name="visualization" method="_Dd0N07hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZrUsLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJaEErhiEe2UuoshngsjNA" name="fileVisualization" method="_Dd004LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZr7wLhiEe2UuoshngsjNA" type="_DF75ULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJarIrhiEe2UuoshngsjNA" name="toString" method="_Dd004rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJarI7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJbSM7hiEe2UuoshngsjNA" name="initialize" visibility="private" method="_Dd005LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJbSNLhiEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJb5QLhiEe2UuoshngsjNA" name="main" isStatic="true" method="_Dd005rhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeHv17hiEe2UuoshngsjNA">
                  <body>Returns Flows alphabetically.&#xD;
	 *&#xD;
	 * @param args instantiates WorkLoadDescription, prints StressTest.txt alphabetically</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJb5QbhiEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DJb5QrhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DJdHYLhiEe2UuoshngsjNA" name="WorkLoad">
              <ownedComment xmi:id="_DeHv2LhiEe2UuoshngsjNA">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
Can be used for viewing, editing, and adding flows and nodes in the graph as well as calculating&#xD;
the per node and total transmission attempts.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DZw0QLhiEe2UuoshngsjNA" general="_DJYO4LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc618bhiEe2UuoshngsjNA" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc618rhiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc7dALhiEe2UuoshngsjNA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc7dAbhiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc7dArhiEe2UuoshngsjNA" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc7dA7hiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc7dBLhiEe2UuoshngsjNA" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc7dBbhiEe2UuoshngsjNA" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc7dBrhiEe2UuoshngsjNA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc7dB7hiEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc8EELhiEe2UuoshngsjNA" name="minPacketReceptionRate" type="_Da1yULhiEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc8EEbhiEe2UuoshngsjNA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc8EErhiEe2UuoshngsjNA" name="e2e" visibility="private" type="_Da1yULhiEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc8EE7hiEe2UuoshngsjNA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc8rILhiEe2UuoshngsjNA" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc8rIbhiEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc8rIrhiEe2UuoshngsjNA" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc8rI7hiEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc9SMLhiEe2UuoshngsjNA" name="flows" type="_DGU64LhiEe2UuoshngsjNA" association="_DeIW4LhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc9SMbhiEe2UuoshngsjNA" name="nodes" type="_DG14QLhiEe2UuoshngsjNA" association="_DeIW4rhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_Dc9SMrhiEe2UuoshngsjNA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc95QbhiEe2UuoshngsjNA" name="flowNamesInOriginalOrder" type="_DXvbALhiEe2UuoshngsjNA" association="_De7BEbhiEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc-gULhiEe2UuoshngsjNA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dc-gUbhiEe2UuoshngsjNA" name="flowNamesInPriorityOrder" type="_DXvbALhiEe2UuoshngsjNA" association="_De7BFLhiEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dc_HYbhiEe2UuoshngsjNA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DZtw8rhiEe2UuoshngsjNA" client="_DJdHYLhiEe2UuoshngsjNA" supplier="_DHqXoLhiEe2UuoshngsjNA" contract="_DHqXoLhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd1b8LhiEe2UuoshngsjNA" name="WorkLoad" specification="_DbTFULhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd1b8bhiEe2UuoshngsjNA" name="m" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dd1b8rhiEe2UuoshngsjNA" name="e2e" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dd1b87hiEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd1b9LhiEe2UuoshngsjNA" type="_DJdHYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2DALhiEe2UuoshngsjNA" name="WorkLoad" specification="_DbTsYLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2DAbhiEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd2DArhiEe2UuoshngsjNA" name="m" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dd2DA7hiEe2UuoshngsjNA" name="e2e" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dd2DBLhiEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd2DBbhiEe2UuoshngsjNA" type="_DJdHYLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2DBrhiEe2UuoshngsjNA" name="setDefaultParameters" specification="_DJe8kLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2DB7hiEe2UuoshngsjNA" name="getE2e" specification="_DJfjoLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2DCLhiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2DCbhiEe2UuoshngsjNA" name="getIntForFlowNames" specification="_DJfjobhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2DCrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2DC7hiEe2UuoshngsjNA" name="getName" specification="_DJgKsLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2DDLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2DDbhiEe2UuoshngsjNA" name="setMinPacketReceptionRate" specification="_DbUTcbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2DDrhiEe2UuoshngsjNA" name="minPacketReceptionRate" type="_Da1yULhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2DD7hiEe2UuoshngsjNA" name="getMaxPhase" specification="_DJgKsrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2DELhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2DEbhiEe2UuoshngsjNA" name="getMinPeriod" specification="_DJgKtLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2DErhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2DE7hiEe2UuoshngsjNA" name="setE2e" specification="_DbU6gLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2DFLhiEe2UuoshngsjNA" name="e2e" type="_Da1yULhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2qELhiEe2UuoshngsjNA" name="setIntForFlowNames" specification="_DJgxwbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2qEbhiEe2UuoshngsjNA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2qErhiEe2UuoshngsjNA" name="setName" specification="_DJhY0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2qE7hiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2qFLhiEe2UuoshngsjNA" name="setNodeChannel" specification="_DJhY0rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2qFbhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd2qFrhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2qF7hiEe2UuoshngsjNA" name="getNodeChannel" specification="_DJh_4LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2qGLhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd2qGbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2qGrhiEe2UuoshngsjNA" name="addFlow" specification="_DJh_47hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2qG7hiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2qHLhiEe2UuoshngsjNA" name="isIntForNodeNames" specification="_DJim8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2qHbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2qHrhiEe2UuoshngsjNA" name="isIntForFlowNames" specification="_DJim8rhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2qH7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2qILhiEe2UuoshngsjNA" name="addNodeToFlow" specification="_DJim9LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2qIbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd2qIrhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd2qI7hiEe2UuoshngsjNA" name="getFlowPriority" specification="_DJjOAbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd2qJLhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd2qJbhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd2qJrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd3RILhiEe2UuoshngsjNA" name="setFlowPriority" specification="_DJjOBbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd3RIbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd3RIrhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd3RI7hiEe2UuoshngsjNA" name="setFlowPeriod" specification="_DJj1ErhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd3RJLhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd3RJbhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd3RJrhiEe2UuoshngsjNA" name="setFlowDeadline" specification="_DJj1FbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd3RJ7hiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd3RKLhiEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd3RKbhiEe2UuoshngsjNA" name="setFlowPhase" specification="_DJkcIrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd3RKrhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd3RK7hiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd3RLLhiEe2UuoshngsjNA" name="getFlowIndex" specification="_DJlDMLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd3RLbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd3RLrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd3RL7hiEe2UuoshngsjNA" name="getFlowPriority" specification="_DJlDM7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd3RMLhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd3RMbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd3RMrhiEe2UuoshngsjNA" name="getFlowPeriod" specification="_DJlDNrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd3RM7hiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd3RNLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd3RNbhiEe2UuoshngsjNA" name="getFlowDeadline" specification="_DJlqQrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd3RNrhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd3RN7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd3ROLhiEe2UuoshngsjNA" name="getFlowPhase" specification="_DJlqRbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd3RObhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd3ROrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34MLhiEe2UuoshngsjNA" name="getFlowTxAttemptsPerLink" specification="_DJmRUbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd34MbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd34MrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34M7hiEe2UuoshngsjNA" name="setFlowsInPriorityOrder" specification="_DJmRVLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34NLhiEe2UuoshngsjNA" name="setFlowsInDMorder" specification="_DJm4YLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34NbhiEe2UuoshngsjNA" name="setFlowsInRMorder" specification="_DJm4YbhiEe2UuoshngsjNA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34NrhiEe2UuoshngsjNA" name="setFlowsInRealTimeHARTorder" specification="_DJm4YrhiEe2UuoshngsjNA">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34N7hiEe2UuoshngsjNA" name="finalizeCurrentFlow" specification="_DJm4Y7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd34OLhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34ObhiEe2UuoshngsjNA" name="nextReleaseTime" specification="_DJnfcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd34OrhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd34O7hiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd34PLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34PbhiEe2UuoshngsjNA" name="nextAbsoluteDeadline" specification="_DJnfdLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd34PrhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd34P7hiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd34QLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34QbhiEe2UuoshngsjNA" name="finalizeFlowWithE2eParameters" specification="_DJoGgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd34QrhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34Q7hiEe2UuoshngsjNA" name="finalizeFlowWithFixedFaultTolerance" specification="_DJoGgrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd34RLhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd34RbhiEe2UuoshngsjNA" name="getFixedTxPerLinkAndTotalTxCost" specification="_DZvmILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd34RrhiEe2UuoshngsjNA" name="flow" type="_DGKi0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dd34R7hiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd4fQLhiEe2UuoshngsjNA" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_DbVhkbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd4fQbhiEe2UuoshngsjNA" name="flow" type="_DGKi0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dd4fQrhiEe2UuoshngsjNA" name="e2e" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dd4fQ7hiEe2UuoshngsjNA" name="M" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dd4fRLhiEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd4fRbhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); &#xD;
 // use max to handle rounding error when e2e == 1.0&#xD;
 &#xD;
 &#xD;
 /* Now compute reliability of packet reaching each node in the given time slot:&#xD;
  *Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
  *each row is a time slot, stating at time 0&#xD;
  *each column represents the reliability of the packet reaching that node at the&#xD;
  *current time slot (i.e., the row it is in)&#xD;
  *will add rows as we compute reliabilities until the final reliability is reached&#xD;
  *for all nodes. */&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, which is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; &#xD;
 // the analysis will end when the e2e reliability metric is met, initially the&#xD;
 // state is not met and will be 0 with this statement&#xD;
 &#xD;
 &#xD;
 var timeSlot = 0; // start time at 0&#xD;
 var prevReliabilityRow = currentReliabilityRow;&#xD;
 while (e2eReliabilityState &lt; e2e) {&#xD;
   prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); &#xD;
   // would be reliabilityWindow[timeSlot] if working through a schedule&#xD;
   &#xD;
   &#xD;
   // Now use each flow:source->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { &#xD;
 	  // loop through each node in the flow and update the states for&#xD;
 	  // each link (i.e., sink->src pair)&#xD;
 	  &#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     &#xD;
     // do a push until PrevSnk state > e2e to ensure next node reaches target E2E BUT&#xD;
     // skip if no chance of success (i.e., source doesn't have packet)&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { &#xD;
     	&#xD;
     	// need to continue attempting to Tx, so update current state&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); &#xD;
       &#xD;
    // increment the number of pushes for for this node to snk node&#xD;
       nPushes[nodeIndex] += 1; &#xD;
     } else {&#xD;
     	// snkNode has met its reliability. Thus move on to the&#xD;
         // next node and record the reliability met&#xD;
     	nextSnkState = prevSnkNodeState;&#xD;
     }&#xD;
&#xD;
     // probabilities are non-decreasing so update if we were higher by carrying old&#xD;
     // value forward&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { &#xD;
     	&#xD;
     	// carry forward the previous state for the src node, which may get over written&#xD;
         // later by another instruction in this slot&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex];&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd4fRrhiEe2UuoshngsjNA" name="getNodeNamesOrderedAlphabetically" specification="_DJotkLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd4fR7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dd4fSLhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd4fSbhiEe2UuoshngsjNA" name="getFlow" specification="_DJp7sLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd4fSrhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd4fS7hiEe2UuoshngsjNA" type="_DGKi0LhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it.\n&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd4fTLhiEe2UuoshngsjNA" name="getFlowNames" specification="_DJp7srhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd4fTbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dd4fTrhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd4fT7hiEe2UuoshngsjNA" name="getNodeIndex" specification="_DJqiwbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd4fULhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd4fUbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd4fUrhiEe2UuoshngsjNA" name="getNodesInFlow" specification="_DJrJ0LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd4fU7hiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd4fVLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dd4fVbhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd4fVrhiEe2UuoshngsjNA" name="getHyperPeriod" specification="_DJrJ1bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd4fV7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
     // Find LCM of hyperPeriod so far and the current period, then update the&#xD;
     // hyperPeriod with that value&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); &#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd4fWLhiEe2UuoshngsjNA" name="getTotalTxAttemptsInFlow" specification="_DJrw4bhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd4fWbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd4fWrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd5GULhiEe2UuoshngsjNA" name="getNumTxAttemptsPerLink" specification="_DJsX8LhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd5GUbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd5GUrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dd5GU7hiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd5GVLhiEe2UuoshngsjNA" name="addEdge" specification="_DZwNMbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd5GVbhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dd5GVrhiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd5GV7hiEe2UuoshngsjNA" name="maxFlowLength" specification="_DJs_ALhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd5GWLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DJe8kLhiEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_Dd2DBrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJfjoLhiEe2UuoshngsjNA" name="getE2e" method="_Dd2DB7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeI98bhiEe2UuoshngsjNA">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbUTcLhiEe2UuoshngsjNA" type="_Da1yULhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJfjobhiEe2UuoshngsjNA" name="getIntForFlowNames" method="_Dd2DCbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeI98rhiEe2UuoshngsjNA">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJfjorhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJgKsLhiEe2UuoshngsjNA" name="getName" method="_Dd2DC7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeI987hiEe2UuoshngsjNA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJgKsbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJgKsrhiEe2UuoshngsjNA" name="getMaxPhase" method="_Dd2DD7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlALhiEe2UuoshngsjNA">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJgKs7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJgKtLhiEe2UuoshngsjNA" name="getMinPeriod" method="_Dd2DEbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlAbhiEe2UuoshngsjNA">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJgxwLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJgxwbhiEe2UuoshngsjNA" name="setIntForFlowNames" method="_Dd2qELhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlA7hiEe2UuoshngsjNA">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJgxwrhiEe2UuoshngsjNA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJhY0LhiEe2UuoshngsjNA" name="setName" method="_Dd2qErhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlBLhiEe2UuoshngsjNA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJhY0bhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJhY0rhiEe2UuoshngsjNA" name="setNodeChannel" method="_Dd2qFLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlBbhiEe2UuoshngsjNA">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJhY07hiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJhY1LhiEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJh_4LhiEe2UuoshngsjNA" name="getNodeChannel" method="_Dd2qF7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlBrhiEe2UuoshngsjNA">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJh_4bhiEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJh_4rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJh_47hiEe2UuoshngsjNA" name="addFlow" method="_Dd2qGrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlB7hiEe2UuoshngsjNA">
                  <body>Adds a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
   * the default values. Priority is set to the number of flows already added (index), 0 for first&#xD;
   * flow. This will create a default priority equal to the order listed in the input graph file.&#xD;
   * Index is set to the same value to preserve that order as a secondary sort key.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJh_5LhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJim8LhiEe2UuoshngsjNA" name="isIntForNodeNames" method="_Dd2qHLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJim8bhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJim8rhiEe2UuoshngsjNA" name="isIntForFlowNames" method="_Dd2qHrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJim87hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJim9LhiEe2UuoshngsjNA" name="addNodeToFlow" method="_Dd2qILhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlCLhiEe2UuoshngsjNA">
                  <body>Adds the given node to the flow. Creates a new node with default priority if there is not&#xD;
   * already an existing node with the given name. Updates the flow's transmission cost after &#xD;
   * the node has been added.&#xD;
   * &#xD;
   * @param flowName the flow to add the node to&#xD;
   * @param nodeName the name of the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJim9bhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJjOALhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJjOAbhiEe2UuoshngsjNA" name="getFlowPriority" method="_Dd2qI7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlCbhiEe2UuoshngsjNA">
                  <body>Finds the priority of the given node within the given flow.&#xD;
   * &#xD;
   * @param flowName the flow the node belongs to&#xD;
   * @param nodeName the node to find the priority of&#xD;
   * @return the priority of the given node, 0 if node does not exist</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJjOArhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJjOA7hiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJjOBLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJjOBbhiEe2UuoshngsjNA" name="setFlowPriority" method="_Dd3RILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJj1ELhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJj1EbhiEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJj1ErhiEe2UuoshngsjNA" name="setFlowPeriod" method="_Dd3RI7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJj1E7hiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJj1FLhiEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJj1FbhiEe2UuoshngsjNA" name="setFlowDeadline" method="_Dd3RJrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJkcILhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJkcIbhiEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJkcIrhiEe2UuoshngsjNA" name="setFlowPhase" method="_Dd3RKbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJkcI7hiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJkcJLhiEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJlDMLhiEe2UuoshngsjNA" name="getFlowIndex" method="_Dd3RLLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJlDMbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJlDMrhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJlDM7hiEe2UuoshngsjNA" name="getFlowPriority" method="_Dd3RL7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlCrhiEe2UuoshngsjNA">
                  <body>@param flowName the flow to get the priority from&#xD;
   * @return the priority of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJlDNLhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJlDNbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJlDNrhiEe2UuoshngsjNA" name="getFlowPeriod" method="_Dd3RMrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlC7hiEe2UuoshngsjNA">
                  <body>@param flowName the flow to get the period from&#xD;
   * @return the period of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJlqQLhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJlqQbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJlqQrhiEe2UuoshngsjNA" name="getFlowDeadline" method="_Dd3RNbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlDLhiEe2UuoshngsjNA">
                  <body>@param flowName the flow to get the deadline from&#xD;
   * @return the deadline of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJlqQ7hiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJlqRLhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJlqRbhiEe2UuoshngsjNA" name="getFlowPhase" method="_Dd3ROLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlDbhiEe2UuoshngsjNA">
                  <body>@param flowName the flow to get the phase from&#xD;
   * @return the phase of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJlqRrhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJmRULhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJmRUbhiEe2UuoshngsjNA" name="getFlowTxAttemptsPerLink" method="_Dd34MLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlDrhiEe2UuoshngsjNA">
                  <body>@param flowName the flow to retrieve transmission attempts from&#xD;
   * @return the number of transmission attempts for any one link in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJmRUrhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJmRU7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJmRVLhiEe2UuoshngsjNA" name="setFlowsInPriorityOrder" method="_Dd34M7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlD7hiEe2UuoshngsjNA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by priority, and then by&#xD;
   * index.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DJm4YLhiEe2UuoshngsjNA" name="setFlowsInDMorder" method="_Dd34NLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlELhiEe2UuoshngsjNA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by deadline, and then by&#xD;
   * priority.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DJm4YbhiEe2UuoshngsjNA" name="setFlowsInRMorder" method="_Dd34NbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlEbhiEe2UuoshngsjNA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by period, and then by&#xD;
   * priority.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DJm4YrhiEe2UuoshngsjNA" name="setFlowsInRealTimeHARTorder" method="_Dd34NrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJm4Y7hiEe2UuoshngsjNA" name="finalizeCurrentFlow" method="_Dd34N7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJm4ZLhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJnfcLhiEe2UuoshngsjNA" name="nextReleaseTime" method="_Dd34ObhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJnfcbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJnfcrhiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJnfc7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJnfdLhiEe2UuoshngsjNA" name="nextAbsoluteDeadline" method="_Dd34PbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJnfdbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJnfdrhiEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJnfd7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJoGgLhiEe2UuoshngsjNA" name="finalizeFlowWithE2eParameters" visibility="private" method="_Dd34QbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJoGgbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJoGgrhiEe2UuoshngsjNA" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_Dd34Q7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJoGg7hiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJotkLhiEe2UuoshngsjNA" name="getNodeNamesOrderedAlphabetically" method="_Dd4fRrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlFLhiEe2UuoshngsjNA">
                  <body>@return a String array of all node names in alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJotkbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DJpUoLhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJp7sLhiEe2UuoshngsjNA" name="getFlow" visibility="private" method="_Dd4fSbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJp7sbhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZwNMLhiEe2UuoshngsjNA" type="_DGKi0LhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJp7srhiEe2UuoshngsjNA" name="getFlowNames" method="_Dd4fTLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeKMELhiEe2UuoshngsjNA">
                  <body>@return a String array with the flow names in their original order from the graph file</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJp7s7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DJp7tLhiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJqiwbhiEe2UuoshngsjNA" name="getNodeIndex" method="_Dd4fT7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeKMEbhiEe2UuoshngsjNA">
                  <body>@param nodeName the node to find the index of&#xD;
   * @return the index of the given node</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJqiwrhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJqiw7hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJrJ0LhiEe2UuoshngsjNA" name="getNodesInFlow" method="_Dd4fUrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeKMErhiEe2UuoshngsjNA">
                  <body>@param flowName the flow to get node names from&#xD;
   * @return an empty array if the flow given doesn't exists, otherwise&#xD;
   * returns an array of the names of the nodes in the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJrJ0bhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJrJ0rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DJrJ07hiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJrJ1bhiEe2UuoshngsjNA" name="getHyperPeriod" method="_Dd4fVrhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeKME7hiEe2UuoshngsjNA">
                  <body>Calculates the hyperPeriod, which is the smallest time period required to wait&#xD;
   * until all flows can be repeated.&#xD;
   * &#xD;
   * @return the hyperPeriod of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJrw4LhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJrw4bhiEe2UuoshngsjNA" name="getTotalTxAttemptsInFlow" method="_Dd4fWLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeKMFLhiEe2UuoshngsjNA">
                  <body>@param flowName the name of the flow being analyzed&#xD;
   * @return the total number of transmission attempts in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJrw4rhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJrw47hiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJsX8LhiEe2UuoshngsjNA" name="getNumTxAttemptsPerLink" method="_Dd5GULhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeKMFbhiEe2UuoshngsjNA">
                  <body>Calculates the number of transmission attempts for each link in a given flow.&#xD;
   * &#xD;
   * @param flowName the name of the flow being analyzed&#xD;
   * @return an array of the number of transmissions needed for each&#xD;
   * edge to meet E2E target</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJsX8bhiEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJsX8rhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DJsX87hiEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJs_ALhiEe2UuoshngsjNA" name="maxFlowLength" method="_Dd5GV7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeKMF7hiEe2UuoshngsjNA">
                  <body>@return the length of the longest flow in the WorkLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJs_AbhiEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZvmILhiEe2UuoshngsjNA" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_Dd34RbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlErhiEe2UuoshngsjNA">
                  <body>Calculates the fixed number of transmissions per link based on the number of faults per edge&#xD;
   * and the total number of transmissions for the flow.&#xD;
   * &#xD;
   * @param flow the flow being analyzed&#xD;
   * @return an ArrayList containing the number of transmissions for each node with the total&#xD;
   * number of transmissions at the end of the list</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZvmIbhiEe2UuoshngsjNA" name="flow" type="_DGKi0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbVhkLhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZwNMbhiEe2UuoshngsjNA" name="addEdge" method="_Dd5GVLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeKMFrhiEe2UuoshngsjNA">
                  <body>Adds an edge to an existing node's list of connected edges.&#xD;
   * &#xD;
   * @param nodeName the node the edge is being added to&#xD;
   * @param edge the edge to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_DZwNMrhiEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DZwNM7hiEe2UuoshngsjNA" name="edge" type="_DF-VkLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbTFULhiEe2UuoshngsjNA" name="WorkLoad" visibility="package" method="_Dd1b8LhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DbTFVLhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DbTFVbhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeIW5LhiEe2UuoshngsjNA">
                  <body>Creates a new WorkLoad based on the provided file, packet reception rate, and end to end&#xD;
   * reliability. In addition to initializing the WorkLoad attributes, it will read the input&#xD;
   * file, built the AST of the graph, and build the node and flow data objects. This constructor&#xD;
   * sets the number of faults equal to 0.&#xD;
   * &#xD;
   * @param m the minimum packet reception rate to use for the Workload, between 0.0 and 1.0&#xD;
   * @param e2e the end to end communication reliability for the Workload, between 0.0 and 1.0&#xD;
   * @param inputFileName the file to develop the graph from</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbTFUbhiEe2UuoshngsjNA" name="m" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbTFUrhiEe2UuoshngsjNA" name="e2e" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbTFU7hiEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbTFVrhiEe2UuoshngsjNA" type="_DJdHYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbTsYLhiEe2UuoshngsjNA" name="WorkLoad" visibility="package" method="_Dd2DALhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DbTsZbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DbTsZrhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DeI98LhiEe2UuoshngsjNA">
                  <body>Creates a new WorkLoad based on the provided file, packet reception rate, and end to end&#xD;
   * reliability. In addition to initializing the WorkLoad attributes, it will read the input&#xD;
   * file, built the AST of the graph, and build the node and flow data objects.&#xD;
   * &#xD;
   * @param numFaults the number of faults per edge to use for the Workload, integer >= 0&#xD;
   * @param m the minimum packet reception rate to use for the Workload, between 0.0 and 1.0&#xD;
   * @param e2e the end to end communication reliability for the Workload, between 0.0 and 1.0&#xD;
   * @param inputFileName the file to develop the graph from</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbTsYbhiEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbTsYrhiEe2UuoshngsjNA" name="m" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbTsY7hiEe2UuoshngsjNA" name="e2e" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbTsZLhiEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbTsZ7hiEe2UuoshngsjNA" type="_DJdHYLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbUTcbhiEe2UuoshngsjNA" name="setMinPacketReceptionRate" method="_Dd2DDbhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeI99LhiEe2UuoshngsjNA">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbUTcrhiEe2UuoshngsjNA" name="minPacketReceptionRate" type="_Da1yULhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbU6gLhiEe2UuoshngsjNA" name="setE2e" method="_Dd2DE7hiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlArhiEe2UuoshngsjNA">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbU6gbhiEe2UuoshngsjNA" name="e2e" type="_Da1yULhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DbVhkbhiEe2UuoshngsjNA" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_Dd4fQLhiEe2UuoshngsjNA">
                <ownedComment xmi:id="_DeJlE7hiEe2UuoshngsjNA">
                  <body>Calculates number of transmissions needed per link and total transmissions required&#xD;
   * for the given flow&#xD;
   * &#xD;
   * @param flow the flow being analyzed&#xD;
   * @param e2e end to end reliability&#xD;
   * @param M minimum packet reception rate&#xD;
   * @param optimizationRequested Unused, needs to be refactored&#xD;
   * @return an ArrayList containing the number of transmissions per link and the total worst case&#xD;
   * cost of transmitting end to end at the end of the List.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DbWIoLhiEe2UuoshngsjNA" name="flow" type="_DGKi0LhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbWIobhiEe2UuoshngsjNA" name="e2e" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbWIorhiEe2UuoshngsjNA" name="M" type="_Da1yULhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DbWIo7hiEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DbWIpbhiEe2UuoshngsjNA" type="_DXvbALhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DJx3gLhiEe2UuoshngsjNA" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_DeKMGLhiEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DbX90LhiEe2UuoshngsjNA" general="_DYN8JbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DdA8kLhiEe2UuoshngsjNA" name="workLoad" visibility="package" type="_DJdHYLhiEe2UuoshngsjNA" association="_De7oIbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DdA8krhiEe2UuoshngsjNA" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd5tYLhiEe2UuoshngsjNA" name="WorkLoadListener" specification="_DZ0eoLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd5tYbhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_Dd5tYrhiEe2UuoshngsjNA" type="_DJx3gLhiEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UcLhiEe2UuoshngsjNA" name="buildNodesAndFlows" specification="_DZ1FsrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6UcbhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then build the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UcrhiEe2UuoshngsjNA" name="testPrintStdOut" specification="_DJyekLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6Uc7hiEe2UuoshngsjNA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UdLhiEe2UuoshngsjNA" name="enterWarpName" specification="_DZ1FtLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6UdbhiEe2UuoshngsjNA" name="ctx" type="_DYPxULhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UdrhiEe2UuoshngsjNA" name="enterFlowName" specification="_DZ1swLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6Ud7hiEe2UuoshngsjNA" name="ctx" type="_DYSNkLhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UeLhiEe2UuoshngsjNA" name="exitPriority" specification="_DZ2647hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6UebhiEe2UuoshngsjNA" name="ctx" type="_DZ264bhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UerhiEe2UuoshngsjNA" name="exitPeriod" specification="_DZ4JAbhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6Ue7hiEe2UuoshngsjNA" name="ctx" type="_DZ3h87hiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UfLhiEe2UuoshngsjNA" name="exitDeadline" specification="_DZ5XILhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6UfbhiEe2UuoshngsjNA" name="ctx" type="_DZ4wELhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UfrhiEe2UuoshngsjNA" name="exitPhase" specification="_DZ5-NLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6Uf7hiEe2UuoshngsjNA" name="ctx" type="_DZ5-MrhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UgLhiEe2UuoshngsjNA" name="exitSrcNode" specification="_DZ6lQ7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6UgbhiEe2UuoshngsjNA" name="ctx" type="_DYS0o7hiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd6UgrhiEe2UuoshngsjNA" name="exitSnkNode" specification="_DZ7MU7hiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd6Ug7hiEe2UuoshngsjNA" name="ctx" type="_DYUCwrhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67gLhiEe2UuoshngsjNA" name="exitFlow" specification="_DZ8acrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Dd67gbhiEe2UuoshngsjNA" name="ctx" type="_DYUp1bhiEe2UuoshngsjNA"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DJyekLhiEe2UuoshngsjNA" name="testPrintStdOut" method="_Dd6UcrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DJyekbhiEe2UuoshngsjNA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ0eoLhiEe2UuoshngsjNA" name="WorkLoadListener" visibility="private" method="_Dd5tYLhiEe2UuoshngsjNA">
                <eAnnotations xmi:id="_DZ0eorhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DZ1FsLhiEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DZ0eobhiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_DZ1FsbhiEe2UuoshngsjNA" type="_DJx3gLhiEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ1FsrhiEe2UuoshngsjNA" name="buildNodesAndFlows" isStatic="true" method="_Dd6UcLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ1Fs7hiEe2UuoshngsjNA" name="workLoad" type="_DJdHYLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ1FtLhiEe2UuoshngsjNA" name="enterWarpName" method="_Dd6UdLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ1FtbhiEe2UuoshngsjNA" name="ctx" type="_DYPxULhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ1swLhiEe2UuoshngsjNA" name="enterFlowName" method="_Dd6UdrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ1swbhiEe2UuoshngsjNA" name="ctx" type="_DYSNkLhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ2647hiEe2UuoshngsjNA" name="exitPriority" method="_Dd6UeLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ265LhiEe2UuoshngsjNA" name="ctx" type="_DZ264bhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ4JAbhiEe2UuoshngsjNA" name="exitPeriod" method="_Dd6UerhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ4JArhiEe2UuoshngsjNA" name="ctx" type="_DZ3h87hiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ5XILhiEe2UuoshngsjNA" name="exitDeadline" method="_Dd6UfLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ5XIbhiEe2UuoshngsjNA" name="ctx" type="_DZ4wELhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ5-NLhiEe2UuoshngsjNA" name="exitPhase" method="_Dd6UfrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ5-NbhiEe2UuoshngsjNA" name="ctx" type="_DZ5-MrhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ6lQ7hiEe2UuoshngsjNA" name="exitSrcNode" method="_Dd6UgLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ6lRLhiEe2UuoshngsjNA" name="ctx" type="_DYS0o7hiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ7MU7hiEe2UuoshngsjNA" name="exitSnkNode" method="_Dd6UgrhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ7MVLhiEe2UuoshngsjNA" name="ctx" type="_DYUCwrhiEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DZ8acrhiEe2UuoshngsjNA" name="exitFlow" method="_Dd67gLhiEe2UuoshngsjNA">
                <ownedParameter xmi:id="_DZ8ac7hiEe2UuoshngsjNA" name="ctx" type="_DYUp1bhiEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DJ1h4LhiEe2UuoshngsjNA" name="WorkLoadTest" visibility="package">
              <ownedAttribute xmi:id="_DdCKsLhiEe2UuoshngsjNA" name="stressTestWorkLoad" visibility="private" type="_DJdHYLhiEe2UuoshngsjNA" association="_De8PMbhiEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_DdCKsrhiEe2UuoshngsjNA" name="exampleThreeWorkLoad" visibility="private" type="_DJdHYLhiEe2UuoshngsjNA" association="_De82QbhiEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67grhiEe2UuoshngsjNA" name="setUp" specification="_DJ2I8LhiEe2UuoshngsjNA">
                <language>java</language>
                <body>String stressTest = &quot;StressTest.txt&quot;;&#xD;
		stressTestWorkLoad = new WorkLoad(0.9, 0.99, stressTest);&#xD;
		&#xD;
		String exampleThree = &quot;Example3.txt&quot;;&#xD;
		exampleThreeWorkLoad = new WorkLoad(0.9, 0.99, exampleThree);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67g7hiEe2UuoshngsjNA" name="testAddFlow" specification="_DJ2I9LhiEe2UuoshngsjNA">
                <language>java</language>
                <body>Flow originalFlow = new Flow(&quot;Test flow to be added&quot;, 0, 0);&#xD;
		stressTestWorkLoad.addFlow(originalFlow.getName());&#xD;
		FlowMap allFlowsInstressTestWorkLoad = stressTestWorkLoad.getFlows();&#xD;
		Flow addedFlow = allFlowsInstressTestWorkLoad.get(originalFlow.getName());&#xD;
		assertEquals(originalFlow.getName(), addedFlow.getName());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67hLhiEe2UuoshngsjNA" name="testAddNodeToFlow" specification="_DJ2wA7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>var initial = stressTestWorkLoad.getNodesInFlow(&quot;F5&quot;);&#xD;
		stressTestWorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;F&quot;);&#xD;
		var updated = stressTestWorkLoad.getNodesInFlow(&quot;F5&quot;);&#xD;
	&#xD;
		assertEquals(&quot;F&quot;, updated[updated.length-1]);&#xD;
		assertNotEquals(initial, updated);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67hbhiEe2UuoshngsjNA" name="testGetFlowPriority" specification="_DJ3XE7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>Flow originalFlow = new Flow(&quot;Test flow to be added&quot;, 0, 0);&#xD;
		&#xD;
		//Using the stress test file&#xD;
		stressTestWorkLoad.addFlow(originalFlow.getName());&#xD;
		int expectedPriority = 15;&#xD;
		int actualPriority = stressTestWorkLoad.getFlowPriority(originalFlow.getName());&#xD;
		assertEquals(expectedPriority, actualPriority);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67hrhiEe2UuoshngsjNA" name="testSetFlowPriority" specification="_DJ3-IrhiEe2UuoshngsjNA">
                <language>java</language>
                <body>int setThreeFP = exampleThreeWorkLoad.getFlowPriority(&quot;F3&quot;);&#xD;
		exampleThreeWorkLoad.setFlowPriority(&quot;F3&quot;, 30);&#xD;
		int actualThreeFP = exampleThreeWorkLoad.getFlowPriority(&quot;F3&quot;);&#xD;
		assertEquals(30, actualThreeFP);&#xD;
		assertNotEquals(setThreeFP, actualThreeFP);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67h7hiEe2UuoshngsjNA" name="testSetFlowDeadline" specification="_DJ3-JrhiEe2UuoshngsjNA">
                <language>java</language>
                <body>int setFD = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		stressTestWorkLoad.setFlowDeadline(&quot;F3&quot;, 100);&#xD;
		int actualFD = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		assertEquals(100, actualFD);&#xD;
		assertNotEquals(setFD, actualFD);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67iLhiEe2UuoshngsjNA" name="testGetFlowDeadlineStressTest" specification="_DJ4lM7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 50;&#xD;
		Integer actual = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		assertEquals(expected, actual);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67ibhiEe2UuoshngsjNA" name="testGetFlowDeadlineDefault" specification="_DJ5MQ7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 100;&#xD;
		Integer actual = exampleThreeWorkLoad.getFlowDeadline(&quot;F0&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67irhiEe2UuoshngsjNA" name="testGetFlowTxAttemptsPerLink" specification="_DJ5zULhiEe2UuoshngsjNA">
                <language>java</language>
                <body>int expected = 3;&#xD;
		int actual = exampleThreeWorkLoad.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		assertEquals(expected, actual);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd67i7hiEe2UuoshngsjNA" name="testSetFlowsInRMorderStressTest" specification="_DJ5zVLhiEe2UuoshngsjNA">
                <language>java</language>
                <body>stressTestWorkLoad.setFlowsInRMorder();&#xD;
		String expected = &quot;[F1, AF1, F2, AF2, F3, F4, AF4, F5, AF5, F6, F7, F8, F9, F10, AF10]&quot;;&#xD;
		String actual = stressTestWorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7ikLhiEe2UuoshngsjNA" name="testSetFlowsInRMOrderExampleThree" specification="_DJ6aY7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>exampleThreeWorkLoad.setFlowsInRMorder();&#xD;
		String expected = &quot;[F0, F1, F2, F3, F4, F5]&quot;;&#xD;
		String actual = exampleThreeWorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7ikbhiEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_StressTest" specification="_DJ7Bc7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&#xD;
				&quot;J&quot;,&quot;K&quot;,&quot;L&quot;,&quot;M&quot;,&quot;N&quot;,&quot;O&quot;,&quot;P&quot;,&quot;Q&quot;,&quot;R&quot;,&quot;S&quot;,&quot;T&quot;,&quot;U&quot;,&quot;V&quot;,&quot;W&quot;,&quot;Y&quot;};&#xD;
		String[] actual = stressTestWorkLoad.getNodeNamesOrderedAlphabetically();&#xD;
		for (int i = 0; i &lt; expected.length; i++) {&#xD;
			assertEquals(expected[i], actual[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7ikrhiEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_Example3" specification="_DJ7og7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] expectedThree = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;F&quot;,&quot;G&quot;,&quot;I&quot;,&#xD;
				&quot;P&quot;,&quot;R&quot;,&quot;V&quot;,&quot;X&quot;};&#xD;
		String[] actualThree = exampleThreeWorkLoad.getNodeNamesOrderedAlphabetically();&#xD;
		for (int i = 0; i &lt; expectedThree.length; i++) {&#xD;
			assertEquals(expectedThree[i], actualThree[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7ik7hiEe2UuoshngsjNA" name="testGetFlowNamesStressTest" specification="_DJ8Pk7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[F1, F5, F2, F4, F3, F6, F7, F8, F9, F10, AF1, AF5, AF2, AF4, AF10]&quot;;&#xD;
		String[] actual = stressTestWorkLoad.getFlowNames();&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7ilLhiEe2UuoshngsjNA" name="testGetFlowNamesExampleThree" specification="_DJ82o7hiEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[F0, F1, F2, F3, F4, F5]&quot;;&#xD;
		String[] actual = exampleThreeWorkLoad.getFlowNames();&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7ilbhiEe2UuoshngsjNA" name="testGetNodeIndex" specification="_DJ9dsrhiEe2UuoshngsjNA">
                <language>java</language>
                <body>var expectedL = 11;&#xD;
		var actualL = stressTestWorkLoad.getNodeIndex(&quot;L&quot;);&#xD;
		assertEquals(expectedL,actualL);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7ilrhiEe2UuoshngsjNA" name="testGetNodesInFlow" specification="_DJ-EwrhiEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] actual = stressTestWorkLoad.getNodesInFlow(&quot;F9&quot;);&#xD;
		String expected = &quot;[A, B, C, D, E, J, K, L]&quot;;&#xD;
		assertEquals(expected, (Arrays.toString(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7il7hiEe2UuoshngsjNA" name="testGetHyperPeriodStressTest" specification="_DJ-r0rhiEe2UuoshngsjNA">
                <language>java</language>
                <body>var expected = 300;&#xD;
		var actual = stressTestWorkLoad.getHyperPeriod();&#xD;
		assertEquals(expected,actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7imLhiEe2UuoshngsjNA" name="testGetHyperPeriodDefault" specification="_DJ_S4LhiEe2UuoshngsjNA">
                <language>java</language>
                <body>var expected = 100;&#xD;
		var actual = exampleThreeWorkLoad.getHyperPeriod();&#xD;
		assertEquals(expected,actual);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7imbhiEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowStressTest" specification="_DJ_S5LhiEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 11;&#xD;
		Integer actual = stressTestWorkLoad.getTotalTxAttemptsInFlow(&quot;F9&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7imrhiEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowDefault" specification="_DJ_587hiEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 4;&#xD;
		Integer actual = exampleThreeWorkLoad.getTotalTxAttemptsInFlow(&quot;F0&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7im7hiEe2UuoshngsjNA" name="testGetNumTxAttemptsPerLink" specification="_DKAhArhiEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[3, 4, 5, 6, 6, 6, 5, 0]&quot;;&#xD;
		Integer[] actual = stressTestWorkLoad.getNumTxAttemptsPerLink(&quot;F9&quot;);&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dd7inLhiEe2UuoshngsjNA" name="testMaxFlowLength" specification="_DKBIELhiEe2UuoshngsjNA">
                <language>java</language>
                <body>var maxFL = 8;&#xD;
		int actualFL = stressTestWorkLoad.maxFlowLength();&#xD;
		assertEquals(maxFL, actualFL);	&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DJ2I8LhiEe2UuoshngsjNA" name="setUp" method="_Dd67grhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ2I9LhiEe2UuoshngsjNA" name="testAddFlow" visibility="package" method="_Dd67g7hiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ2wA7hiEe2UuoshngsjNA" name="testAddNodeToFlow" visibility="package" method="_Dd67hLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ3XE7hiEe2UuoshngsjNA" name="testGetFlowPriority" visibility="package" method="_Dd67hbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ3-IrhiEe2UuoshngsjNA" name="testSetFlowPriority" visibility="package" method="_Dd67hrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ3-JrhiEe2UuoshngsjNA" name="testSetFlowDeadline" visibility="package" method="_Dd67h7hiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ4lM7hiEe2UuoshngsjNA" name="testGetFlowDeadlineStressTest" visibility="package" method="_Dd67iLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ5MQ7hiEe2UuoshngsjNA" name="testGetFlowDeadlineDefault" visibility="package" method="_Dd67ibhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ5zULhiEe2UuoshngsjNA" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_Dd67irhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ5zVLhiEe2UuoshngsjNA" name="testSetFlowsInRMorderStressTest" visibility="package" method="_Dd67i7hiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ6aY7hiEe2UuoshngsjNA" name="testSetFlowsInRMOrderExampleThree" visibility="package" method="_Dd7ikLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ7Bc7hiEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_StressTest" visibility="package" method="_Dd7ikbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ7og7hiEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_Example3" visibility="package" method="_Dd7ikrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ8Pk7hiEe2UuoshngsjNA" name="testGetFlowNamesStressTest" visibility="package" method="_Dd7ik7hiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ82o7hiEe2UuoshngsjNA" name="testGetFlowNamesExampleThree" visibility="package" method="_Dd7ilLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ9dsrhiEe2UuoshngsjNA" name="testGetNodeIndex" visibility="package" method="_Dd7ilbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ-EwrhiEe2UuoshngsjNA" name="testGetNodesInFlow" visibility="package" method="_Dd7ilrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ-r0rhiEe2UuoshngsjNA" name="testGetHyperPeriodStressTest" visibility="package" method="_Dd7il7hiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ_S4LhiEe2UuoshngsjNA" name="testGetHyperPeriodDefault" visibility="package" method="_Dd7imLhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ_S5LhiEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowStressTest" visibility="package" method="_Dd7imbhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DJ_587hiEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowDefault" visibility="package" method="_Dd7imrhiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DKAhArhiEe2UuoshngsjNA" name="testGetNumTxAttemptsPerLink" visibility="package" method="_Dd7im7hiEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_DKBIELhiEe2UuoshngsjNA" name="testMaxFlowLength" visibility="package" method="_Dd7inLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DaZtcLhiEe2UuoshngsjNA" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DavrsLhiEe2UuoshngsjNA" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DayH8LhiEe2UuoshngsjNA" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DbFC4LhiEe2UuoshngsjNA" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DbGRALhiEe2UuoshngsjNA" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeBpMLhiEe2UuoshngsjNA" name="" memberEnd="_DbujIrhiEe2UuoshngsjNA _DeBpMbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeBpMbhiEe2UuoshngsjNA" name="" type="_DF-VkLhiEe2UuoshngsjNA" association="_DeBpMLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeEshrhiEe2UuoshngsjNA" name="" memberEnd="_DcWOMLhiEe2UuoshngsjNA _DeEsh7hiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeEsh7hiEe2UuoshngsjNA" name="" type="_DH190LhiEe2UuoshngsjNA" association="_DeEshrhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeIW4LhiEe2UuoshngsjNA" name="" memberEnd="_Dc9SMLhiEe2UuoshngsjNA _DeIW4bhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeIW4bhiEe2UuoshngsjNA" name="" type="_DJdHYLhiEe2UuoshngsjNA" association="_DeIW4LhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeIW4rhiEe2UuoshngsjNA" name="" memberEnd="_Dc9SMbhiEe2UuoshngsjNA _DeIW47hiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeIW47hiEe2UuoshngsjNA" name="" type="_DJdHYLhiEe2UuoshngsjNA" association="_DeIW4rhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeeVILhiEe2UuoshngsjNA" name="" memberEnd="_DeeVIbhiEe2UuoshngsjNA _Dbhu0bhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeeVIbhiEe2UuoshngsjNA" name="" type="_DFSZErhiEe2UuoshngsjNA" association="_DeeVILhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Dee8MbhiEe2UuoshngsjNA" name="" memberEnd="_Dee8MrhiEe2UuoshngsjNA _DbiV4bhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Dee8MrhiEe2UuoshngsjNA" name="" type="_DFSZErhiEe2UuoshngsjNA" association="_Dee8MbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DefjQbhiEe2UuoshngsjNA" name="" memberEnd="_DefjQrhiEe2UuoshngsjNA _Dbi88bhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DefjQrhiEe2UuoshngsjNA" name="" type="_DFSZErhiEe2UuoshngsjNA" association="_DefjQbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DegKUbhiEe2UuoshngsjNA" name="" memberEnd="_DegKUrhiEe2UuoshngsjNA _DbkLErhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DegKUrhiEe2UuoshngsjNA" name="" type="_DFhpoLhiEe2UuoshngsjNA" association="_DegKUbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DegxYbhiEe2UuoshngsjNA" name="" memberEnd="_DegxYrhiEe2UuoshngsjNA _DbkyIbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DegxYrhiEe2UuoshngsjNA" name="" type="_DFhpoLhiEe2UuoshngsjNA" association="_DegxYbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DehYcLhiEe2UuoshngsjNA" name="" memberEnd="_DehYcbhiEe2UuoshngsjNA _DbmAQLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DehYcbhiEe2UuoshngsjNA" name="" type="_DFje0LhiEe2UuoshngsjNA" association="_DehYcLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DehYc7hiEe2UuoshngsjNA" name="" memberEnd="_DehYdLhiEe2UuoshngsjNA _DbmnULhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DehYdLhiEe2UuoshngsjNA" name="" type="_DFje0LhiEe2UuoshngsjNA" association="_DehYc7hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Deh_gbhiEe2UuoshngsjNA" name="" memberEnd="_Deh_grhiEe2UuoshngsjNA _DbocgbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Deh_grhiEe2UuoshngsjNA" name="" type="_DFks8LhiEe2UuoshngsjNA" association="_Deh_gbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeimkbhiEe2UuoshngsjNA" name="" memberEnd="_DeimkrhiEe2UuoshngsjNA _DbpqorhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeimkrhiEe2UuoshngsjNA" name="" type="_DFqMgLhiEe2UuoshngsjNA" association="_DeimkbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DejNobhiEe2UuoshngsjNA" name="" memberEnd="_DejNorhiEe2UuoshngsjNA _DbqRs7hiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DejNorhiEe2UuoshngsjNA" name="" type="_DFqMgLhiEe2UuoshngsjNA" association="_DejNobhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DejNpLhiEe2UuoshngsjNA" name="" memberEnd="_DejNpbhiEe2UuoshngsjNA _DbsG4LhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DejNpbhiEe2UuoshngsjNA" name="" type="_DFz9gLhiEe2UuoshngsjNA" association="_DejNpLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Dej0sbhiEe2UuoshngsjNA" name="" memberEnd="_Dej0srhiEe2UuoshngsjNA _DbtVALhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Dej0srhiEe2UuoshngsjNA" name="" type="_DFz9gLhiEe2UuoshngsjNA" association="_Dej0sbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DekbwbhiEe2UuoshngsjNA" name="" memberEnd="_DekbwrhiEe2UuoshngsjNA _DbyNgrhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DekbwrhiEe2UuoshngsjNA" name="" type="_DGKi0LhiEe2UuoshngsjNA" association="_DekbwbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DelC0bhiEe2UuoshngsjNA" name="" memberEnd="_DelC0rhiEe2UuoshngsjNA _Dby0kbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DelC0rhiEe2UuoshngsjNA" name="" type="_DGKi0LhiEe2UuoshngsjNA" association="_DelC0bhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Delp4LhiEe2UuoshngsjNA" name="" memberEnd="_Delp4bhiEe2UuoshngsjNA _DbzbobhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Delp4bhiEe2UuoshngsjNA" name="" type="_DGKi0LhiEe2UuoshngsjNA" association="_Delp4LhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Delp47hiEe2UuoshngsjNA" name="" memberEnd="_Delp5LhiEe2UuoshngsjNA _Db0CsbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Delp5LhiEe2UuoshngsjNA" name="" type="_DGKi0LhiEe2UuoshngsjNA" association="_Delp47hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DemQ8bhiEe2UuoshngsjNA" name="" memberEnd="_DemQ8rhiEe2UuoshngsjNA _Db0Cs7hiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DemQ8rhiEe2UuoshngsjNA" name="" type="_DGKi0LhiEe2UuoshngsjNA" association="_DemQ8bhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Dem4AbhiEe2UuoshngsjNA" name="" memberEnd="_Dem4ArhiEe2UuoshngsjNA _Db2e8bhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Dem4ArhiEe2UuoshngsjNA" name="" type="_DGWJALhiEe2UuoshngsjNA" association="_Dem4AbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeoGILhiEe2UuoshngsjNA" name="" memberEnd="_DeoGIbhiEe2UuoshngsjNA _Db3tELhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeoGIbhiEe2UuoshngsjNA" name="" type="_DGWJALhiEe2UuoshngsjNA" association="_DeoGILhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeoGI7hiEe2UuoshngsjNA" name="" memberEnd="_DeoGJLhiEe2UuoshngsjNA _Db4UILhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeoGJLhiEe2UuoshngsjNA" name="" type="_DGbokLhiEe2UuoshngsjNA" association="_DeoGI7hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeotMbhiEe2UuoshngsjNA" name="" memberEnd="_DeotMrhiEe2UuoshngsjNA _Db47MLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeotMrhiEe2UuoshngsjNA" name="" type="_DGfS8LhiEe2UuoshngsjNA" association="_DeotMbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DepUQLhiEe2UuoshngsjNA" name="" memberEnd="_DepUQbhiEe2UuoshngsjNA _Db47MrhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DepUQbhiEe2UuoshngsjNA" name="" type="_DGfS8LhiEe2UuoshngsjNA" association="_DepUQLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DepUQ7hiEe2UuoshngsjNA" name="" memberEnd="_DepURLhiEe2UuoshngsjNA _Db5iQ7hiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DepURLhiEe2UuoshngsjNA" name="" type="_DGhvMLhiEe2UuoshngsjNA" association="_DepUQ7hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Dep7UbhiEe2UuoshngsjNA" name="" memberEnd="_Dep7UrhiEe2UuoshngsjNA _Db9zsLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Dep7UrhiEe2UuoshngsjNA" name="" type="_DGpD8LhiEe2UuoshngsjNA" association="_Dep7UbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeqiYLhiEe2UuoshngsjNA" name="" memberEnd="_DeqiYbhiEe2UuoshngsjNA _Db9zsrhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeqiYbhiEe2UuoshngsjNA" name="" type="_DGpD8LhiEe2UuoshngsjNA" association="_DeqiYLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeqiY7hiEe2UuoshngsjNA" name="" memberEnd="_DeqiZLhiEe2UuoshngsjNA _Db-awLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeqiZLhiEe2UuoshngsjNA" name="" type="_DGpD8LhiEe2UuoshngsjNA" association="_DeqiY7hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DerJcbhiEe2UuoshngsjNA" name="" memberEnd="_DerJcrhiEe2UuoshngsjNA _Db-awrhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DerJcrhiEe2UuoshngsjNA" name="" type="_DGpD8LhiEe2UuoshngsjNA" association="_DerJcbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DerJdLhiEe2UuoshngsjNA" name="" memberEnd="_DerJdbhiEe2UuoshngsjNA _Db_B0LhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DerJdbhiEe2UuoshngsjNA" name="" type="_DGpD8LhiEe2UuoshngsjNA" association="_DerJdLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DerwgbhiEe2UuoshngsjNA" name="" memberEnd="_DerwgrhiEe2UuoshngsjNA _DcAP8bhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DerwgrhiEe2UuoshngsjNA" name="" type="_DGsHQLhiEe2UuoshngsjNA" association="_DerwgbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DerwhLhiEe2UuoshngsjNA" name="" memberEnd="_DerwhbhiEe2UuoshngsjNA _DcAP87hiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DerwhbhiEe2UuoshngsjNA" name="" type="_DGsHQLhiEe2UuoshngsjNA" association="_DerwhLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DesXkbhiEe2UuoshngsjNA" name="" memberEnd="_DesXkrhiEe2UuoshngsjNA _DcBeELhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DesXkrhiEe2UuoshngsjNA" name="" type="_DGwYsLhiEe2UuoshngsjNA" association="_DesXkbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DesXlLhiEe2UuoshngsjNA" name="" memberEnd="_DesXlbhiEe2UuoshngsjNA _DcDTQLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DesXlbhiEe2UuoshngsjNA" name="" type="_DG6wwLhiEe2UuoshngsjNA" association="_DesXlLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Des-obhiEe2UuoshngsjNA" name="" memberEnd="_Des-orhiEe2UuoshngsjNA _DcDTQrhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Des-orhiEe2UuoshngsjNA" name="" type="_DG6wwLhiEe2UuoshngsjNA" association="_Des-obhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Des-pLhiEe2UuoshngsjNA" name="" memberEnd="_Des-pbhiEe2UuoshngsjNA _DcD6ULhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Des-pbhiEe2UuoshngsjNA" name="" type="_DG6wwLhiEe2UuoshngsjNA" association="_Des-pLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DetlsbhiEe2UuoshngsjNA" name="" memberEnd="_DetlsrhiEe2UuoshngsjNA _DcD6VbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DetlsrhiEe2UuoshngsjNA" name="" type="_DG6wwLhiEe2UuoshngsjNA" association="_DetlsbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DetltLhiEe2UuoshngsjNA" name="" memberEnd="_DetltbhiEe2UuoshngsjNA _DcFIcbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DetltbhiEe2UuoshngsjNA" name="" type="_DG6wwLhiEe2UuoshngsjNA" association="_DetltLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeuMwbhiEe2UuoshngsjNA" name="" memberEnd="_DeuMwrhiEe2UuoshngsjNA _DcFvgLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeuMwrhiEe2UuoshngsjNA" name="" type="_DG6wwLhiEe2UuoshngsjNA" association="_DeuMwbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeuMxLhiEe2UuoshngsjNA" name="" memberEnd="_DeuMxbhiEe2UuoshngsjNA _DcGWkbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeuMxbhiEe2UuoshngsjNA" name="" type="_DG6wwLhiEe2UuoshngsjNA" association="_DeuMxLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Deuz0bhiEe2UuoshngsjNA" name="" memberEnd="_Deuz0rhiEe2UuoshngsjNA _DcG9orhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Deuz0rhiEe2UuoshngsjNA" name="" type="_DG6wwLhiEe2UuoshngsjNA" association="_Deuz0bhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Deuz1LhiEe2UuoshngsjNA" name="" memberEnd="_Deva4LhiEe2UuoshngsjNA _DcIy0LhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Deva4LhiEe2UuoshngsjNA" name="" type="_DHKBUbhiEe2UuoshngsjNA" association="_Deuz1LhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Deva4rhiEe2UuoshngsjNA" name="" memberEnd="_Deva47hiEe2UuoshngsjNA _DcIy0rhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Deva47hiEe2UuoshngsjNA" name="" type="_DHKBUbhiEe2UuoshngsjNA" association="_Deva4rhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DewB8bhiEe2UuoshngsjNA" name="" memberEnd="_DewB8rhiEe2UuoshngsjNA _DcJZ4bhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DewB8rhiEe2UuoshngsjNA" name="" type="_DHKBUbhiEe2UuoshngsjNA" association="_DewB8bhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DewB9LhiEe2UuoshngsjNA" name="" memberEnd="_DewB9bhiEe2UuoshngsjNA _DcLPELhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DewB9bhiEe2UuoshngsjNA" name="" type="_DHKBUbhiEe2UuoshngsjNA" association="_DewB9LhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DewpAbhiEe2UuoshngsjNA" name="" memberEnd="_DewpArhiEe2UuoshngsjNA _DcMdMLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DewpArhiEe2UuoshngsjNA" name="" type="_DHKBUbhiEe2UuoshngsjNA" association="_DewpAbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DexQELhiEe2UuoshngsjNA" name="" memberEnd="_DexQEbhiEe2UuoshngsjNA _DcOSYLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DexQEbhiEe2UuoshngsjNA" name="" type="_DHfYhrhiEe2UuoshngsjNA" association="_DexQELhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Dex3ILhiEe2UuoshngsjNA" name="" memberEnd="_Dex3IbhiEe2UuoshngsjNA _DcOSYrhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_Dex3IbhiEe2UuoshngsjNA" name="" type="_DHfYhrhiEe2UuoshngsjNA" association="_Dex3ILhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DeyeMbhiEe2UuoshngsjNA" name="" memberEnd="_DeyeMrhiEe2UuoshngsjNA _DcQupLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DeyeMrhiEe2UuoshngsjNA" name="" type="_DHvQILhiEe2UuoshngsjNA" association="_DeyeMbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DezFQLhiEe2UuoshngsjNA" name="" memberEnd="_DezFQbhiEe2UuoshngsjNA _DcRVsbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DezFQbhiEe2UuoshngsjNA" name="" type="_DHvQILhiEe2UuoshngsjNA" association="_DezFQLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DezFQ7hiEe2UuoshngsjNA" name="" memberEnd="_DezFRLhiEe2UuoshngsjNA _DcR8wLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DezFRLhiEe2UuoshngsjNA" name="" type="_DHxFULhiEe2UuoshngsjNA" association="_DezFQ7hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DezsUbhiEe2UuoshngsjNA" name="" memberEnd="_DezsUrhiEe2UuoshngsjNA _DcWOMbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_DezsUrhiEe2UuoshngsjNA" name="" type="_DH190LhiEe2UuoshngsjNA" association="_DezsUbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De0TYLhiEe2UuoshngsjNA" name="" memberEnd="_De0TYbhiEe2UuoshngsjNA _DcW1QbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De0TYbhiEe2UuoshngsjNA" name="" type="_DH190LhiEe2UuoshngsjNA" association="_De0TYLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De0TY7hiEe2UuoshngsjNA" name="" memberEnd="_De0TZLhiEe2UuoshngsjNA _Dcf_M7hiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De0TZLhiEe2UuoshngsjNA" name="" type="_DIKt8LhiEe2UuoshngsjNA" association="_De0TY7hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De06cbhiEe2UuoshngsjNA" name="" memberEnd="_De06crhiEe2UuoshngsjNA _DcgmQLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De06crhiEe2UuoshngsjNA" name="" type="_DIKt8LhiEe2UuoshngsjNA" association="_De06cbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De06dLhiEe2UuoshngsjNA" name="" memberEnd="_De06dbhiEe2UuoshngsjNA _DcjChLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De06dbhiEe2UuoshngsjNA" name="" type="_DInZ4LhiEe2UuoshngsjNA" association="_De06dLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De1hgbhiEe2UuoshngsjNA" name="" memberEnd="_De1hgrhiEe2UuoshngsjNA _DcjpkbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De1hgrhiEe2UuoshngsjNA" name="" type="_DInZ4LhiEe2UuoshngsjNA" association="_De1hgbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De1hhLhiEe2UuoshngsjNA" name="" memberEnd="_De1hhbhiEe2UuoshngsjNA _DckQobhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De1hhbhiEe2UuoshngsjNA" name="" type="_DInZ4LhiEe2UuoshngsjNA" association="_De1hhLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De2IkbhiEe2UuoshngsjNA" name="" memberEnd="_De2IkrhiEe2UuoshngsjNA _DcmF0bhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De2IkrhiEe2UuoshngsjNA" name="" type="_DInZ4LhiEe2UuoshngsjNA" association="_De2IkbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De2voLhiEe2UuoshngsjNA" name="" memberEnd="_De2vobhiEe2UuoshngsjNA _DcmF1LhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De2vobhiEe2UuoshngsjNA" name="" type="_DInZ4LhiEe2UuoshngsjNA" association="_De2voLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De2vo7hiEe2UuoshngsjNA" name="" memberEnd="_De2vpLhiEe2UuoshngsjNA _DcmF17hiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De2vpLhiEe2UuoshngsjNA" name="" type="_DInZ4LhiEe2UuoshngsjNA" association="_De2vo7hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De2vprhiEe2UuoshngsjNA" name="" memberEnd="_De2vp7hiEe2UuoshngsjNA _Dcms4LhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De2vp7hiEe2UuoshngsjNA" name="" type="_DInZ4LhiEe2UuoshngsjNA" association="_De2vprhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De3WsbhiEe2UuoshngsjNA" name="" memberEnd="_De3WsrhiEe2UuoshngsjNA _Dcn7ALhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De3WsrhiEe2UuoshngsjNA" name="" type="_DIuHkLhiEe2UuoshngsjNA" association="_De3WsbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De39wLhiEe2UuoshngsjNA" name="" memberEnd="_De39wbhiEe2UuoshngsjNA _DczhMLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De39wbhiEe2UuoshngsjNA" name="" type="_DJAbcLhiEe2UuoshngsjNA" association="_De39wLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De39w7hiEe2UuoshngsjNA" name="" memberEnd="_De39xLhiEe2UuoshngsjNA _Dc0IQLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De39xLhiEe2UuoshngsjNA" name="" type="_DJAbcLhiEe2UuoshngsjNA" association="_De39w7hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De4k0LhiEe2UuoshngsjNA" name="" memberEnd="_De4k0bhiEe2UuoshngsjNA _Dc1WYLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De4k0bhiEe2UuoshngsjNA" name="" type="_DJI-ULhiEe2UuoshngsjNA" association="_De4k0LhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De4k07hiEe2UuoshngsjNA" name="" memberEnd="_De4k1LhiEe2UuoshngsjNA _Dc1WYrhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De4k1LhiEe2UuoshngsjNA" name="" type="_DJI-ULhiEe2UuoshngsjNA" association="_De4k07hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De5L4bhiEe2UuoshngsjNA" name="" memberEnd="_De5L4rhiEe2UuoshngsjNA _Dc19cLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De5L4rhiEe2UuoshngsjNA" name="" type="_DJI-ULhiEe2UuoshngsjNA" association="_De5L4bhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De5y8LhiEe2UuoshngsjNA" name="" memberEnd="_De5y8bhiEe2UuoshngsjNA _Dc19crhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De5y8bhiEe2UuoshngsjNA" name="" type="_DJI-ULhiEe2UuoshngsjNA" association="_De5y8LhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De5y87hiEe2UuoshngsjNA" name="" memberEnd="_De5y9LhiEe2UuoshngsjNA _Dc2kgLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De5y9LhiEe2UuoshngsjNA" name="" type="_DJI-ULhiEe2UuoshngsjNA" association="_De5y87hiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De6aAbhiEe2UuoshngsjNA" name="" memberEnd="_De6aArhiEe2UuoshngsjNA _Dc5n1LhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De6aArhiEe2UuoshngsjNA" name="" type="_DJYO4LhiEe2UuoshngsjNA" association="_De6aAbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De6aBLhiEe2UuoshngsjNA" name="" memberEnd="_De6aBbhiEe2UuoshngsjNA _Dc6O4rhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De6aBbhiEe2UuoshngsjNA" name="" type="_DJYO4LhiEe2UuoshngsjNA" association="_De6aBLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De7BEbhiEe2UuoshngsjNA" name="" memberEnd="_De7BErhiEe2UuoshngsjNA _Dc95QbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De7BErhiEe2UuoshngsjNA" name="" type="_DJdHYLhiEe2UuoshngsjNA" association="_De7BEbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De7BFLhiEe2UuoshngsjNA" name="" memberEnd="_De7BFbhiEe2UuoshngsjNA _Dc-gUbhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De7BFbhiEe2UuoshngsjNA" name="" type="_DJdHYLhiEe2UuoshngsjNA" association="_De7BFLhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De7oIbhiEe2UuoshngsjNA" name="" memberEnd="_De7oIrhiEe2UuoshngsjNA _DdA8kLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De7oIrhiEe2UuoshngsjNA" name="" type="_DJx3gLhiEe2UuoshngsjNA" association="_De7oIbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De8PMbhiEe2UuoshngsjNA" name="" memberEnd="_De8PMrhiEe2UuoshngsjNA _DdCKsLhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De8PMrhiEe2UuoshngsjNA" name="" type="_DJ1h4LhiEe2UuoshngsjNA" association="_De8PMbhiEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_De82QbhiEe2UuoshngsjNA" name="" memberEnd="_De82QrhiEe2UuoshngsjNA _DdCKsrhiEe2UuoshngsjNA">
              <ownedEnd xmi:id="_De82QrhiEe2UuoshngsjNA" name="" type="_DJ1h4LhiEe2UuoshngsjNA" association="_De82QbhiEe2UuoshngsjNA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_DA0IxbhiEe2UuoshngsjNA" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_DYN8JbhiEe2UuoshngsjNA" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DYOjMbhiEe2UuoshngsjNA" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DYOjM7hiEe2UuoshngsjNA" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DbMXobhiEe2UuoshngsjNA" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_DBSp4LhiEe2UuoshngsjNA" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_DYwusLhiEe2UuoshngsjNA" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_C_XXQLhiEe2UuoshngsjNA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_C_XXQbhiEe2UuoshngsjNA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_DAL2oLhiEe2UuoshngsjNA" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_DX7BMLhiEe2UuoshngsjNA" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_DCu0ULhiEe2UuoshngsjNA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_DZtw8LhiEe2UuoshngsjNA" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_DHnUU7hiEe2UuoshngsjNA" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DXuM4LhiEe2UuoshngsjNA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DXvbALhiEe2UuoshngsjNA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DXwCELhiEe2UuoshngsjNA" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DXwpILhiEe2UuoshngsjNA" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DXwpIrhiEe2UuoshngsjNA" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DYBH0LhiEe2UuoshngsjNA" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DYmWoLhiEe2UuoshngsjNA" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DYwusrhiEe2UuoshngsjNA" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DY_YMLhiEe2UuoshngsjNA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DY__QbhiEe2UuoshngsjNA" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DZqGkLhiEe2UuoshngsjNA" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DZqtobhiEe2UuoshngsjNA" name="Scanner"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DZsi0LhiEe2UuoshngsjNA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DZtJ4bhiEe2UuoshngsjNA" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DAjqEbhiEe2UuoshngsjNA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_DYELIbhiEe2UuoshngsjNA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DYELI7hiEe2UuoshngsjNA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DYZiULhiEe2UuoshngsjNA" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DYaJYbhiEe2UuoshngsjNA" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DAjqErhiEe2UuoshngsjNA" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_DAjqE7hiEe2UuoshngsjNA" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_DYEyMbhiEe2UuoshngsjNA" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_DYFZQLhiEe2UuoshngsjNA" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_DYFZQrhiEe2UuoshngsjNA" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DA5BQLhiEe2UuoshngsjNA" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_DYWfALhiEe2UuoshngsjNA" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DaLD8bhiEe2UuoshngsjNA" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_DaLD8rhiEe2UuoshngsjNA" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DakFgLhiEe2UuoshngsjNA" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_Da1yULhiEe2UuoshngsjNA" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DAjDALhiEe2UuoshngsjNA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_DAjDAbhiEe2UuoshngsjNA" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_DAjqELhiEe2UuoshngsjNA" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_DYDkELhiEe2UuoshngsjNA" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DAjqFLhiEe2UuoshngsjNA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_DAjqFbhiEe2UuoshngsjNA" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_DA5BQbhiEe2UuoshngsjNA" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_DYYUMLhiEe2UuoshngsjNA" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_DYYUMrhiEe2UuoshngsjNA" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_DYFZRLhiEe2UuoshngsjNA" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DYWfArhiEe2UuoshngsjNA" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DYXGEbhiEe2UuoshngsjNA" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DYXtIbhiEe2UuoshngsjNA" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DA0IwLhiEe2UuoshngsjNA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_DA0IwbhiEe2UuoshngsjNA" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_DA0IwrhiEe2UuoshngsjNA" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_DA0Iw7hiEe2UuoshngsjNA" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_DA0IxLhiEe2UuoshngsjNA" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_DYN8IbhiEe2UuoshngsjNA" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_DYN8I7hiEe2UuoshngsjNA" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DYMuALhiEe2UuoshngsjNA" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DYNVEbhiEe2UuoshngsjNA" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DYNVE7hiEe2UuoshngsjNA" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DDFZoLhiEe2UuoshngsjNA" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_DDFZobhiEe2UuoshngsjNA" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_DDFZorhiEe2UuoshngsjNA" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_DZ9BgLhiEe2UuoshngsjNA" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DZ9okLhiEe2UuoshngsjNA" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DZ9okrhiEe2UuoshngsjNA" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DA1W4LhiEe2UuoshngsjNA" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_DYPxULhiEe2UuoshngsjNA" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DYQYY7hiEe2UuoshngsjNA" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DYSNkLhiEe2UuoshngsjNA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DYS0o7hiEe2UuoshngsjNA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DYUCwrhiEe2UuoshngsjNA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DYUp1bhiEe2UuoshngsjNA" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZ264bhiEe2UuoshngsjNA" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZ3h87hiEe2UuoshngsjNA" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZ4wELhiEe2UuoshngsjNA" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZ5-MrhiEe2UuoshngsjNA" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DCT9kLhiEe2UuoshngsjNA" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_DZXLoLhiEe2UuoshngsjNA" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZXLorhiEe2UuoshngsjNA" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZYZwbhiEe2UuoshngsjNA" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZYZw7hiEe2UuoshngsjNA" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZZA0bhiEe2UuoshngsjNA" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DCcgcLhiEe2UuoshngsjNA" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_DZegYLhiEe2UuoshngsjNA" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZfug7hiEe2UuoshngsjNA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZgVlLhiEe2UuoshngsjNA" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZiKwLhiEe2UuoshngsjNA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZjY4rhiEe2UuoshngsjNA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DZknALhiEe2UuoshngsjNA" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_B2lxULhiEe2UuoshngsjNA">
      <eAnnotations xmi:id="_B2lxUbhiEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_B2lxUrhiEe2UuoshngsjNA" base_Package="_BvuUULhiEe2UuoshngsjNA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_DFRK8LhiEe2UuoshngsjNA" genericsValue="T,E" base_Element="_DFQj4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFUOQbhiEe2UuoshngsjNA" base_Element="_DFUOQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DFUOQrhiEe2UuoshngsjNA" base_Element="_DFUOQLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DFUOQ7hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DFU1UbhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DFU1ULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DFVcYbhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DFVcYLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DFWDcbhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DFWDcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DFXRkLhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DFWqgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DFX4oLhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DFXRkbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DFnwQLhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DFnJNbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DFsowbhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DFsowLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DF1ysLhiEe2UuoshngsjNA" base_Element="_DF1LoLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DF1ysbhiEe2UuoshngsjNA" base_Element="_DF1LoLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DF1ysrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DF2ZwbhiEe2UuoshngsjNA" base_Element="_DF2ZwLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DF3A0LhiEe2UuoshngsjNA" base_Element="_DF2ZwLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DF3A0bhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DF3A07hiEe2UuoshngsjNA" base_Element="_DF3A0rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DF3A1LhiEe2UuoshngsjNA" base_Element="_DF3A0rhiEe2UuoshngsjNA">
    <annotations xmi:id="_DF3A1bhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DF6rMbhiEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_DF6rMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DF9ugbhiEe2UuoshngsjNA" base_Element="_DF9HdbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DF9ugrhiEe2UuoshngsjNA" base_Element="_DF9HdbhiEe2UuoshngsjNA">
    <annotations xmi:id="_DF9ug7hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGAKwbhiEe2UuoshngsjNA" base_Element="_DGAKwLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGCnAbhiEe2UuoshngsjNA" base_Element="_DGB_87hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DGCnArhiEe2UuoshngsjNA" base_Element="_DGB_87hiEe2UuoshngsjNA">
    <annotations xmi:id="_DGCnA7hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGDOErhiEe2UuoshngsjNA" base_Element="_DGDOELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DGDOE7hiEe2UuoshngsjNA" base_Element="_DGDOELhiEe2UuoshngsjNA">
    <annotations xmi:id="_DGDOFLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGD1IbhiEe2UuoshngsjNA" base_Element="_DGD1ILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DGD1IrhiEe2UuoshngsjNA" base_Element="_DGD1ILhiEe2UuoshngsjNA">
    <annotations xmi:id="_DGEcMLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DGONMLhiEe2UuoshngsjNA" genericsValue="Node" base_Element="_DGNmI7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DGO0QLhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DGONMbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DGPbULhiEe2UuoshngsjNA" genericsValue="Integer" base_Element="_DGO0QbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGQpcrhiEe2UuoshngsjNA" base_Element="_DGQpcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DGRQgLhiEe2UuoshngsjNA" base_Element="_DGQpcLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DGRQgbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGXXIbhiEe2UuoshngsjNA" base_Element="_DGXXILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DGX-MLhiEe2UuoshngsjNA" base_Element="_DGXXILhiEe2UuoshngsjNA">
    <annotations xmi:id="_DGX-MbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DGghErhiEe2UuoshngsjNA" dimensions="2" base_Element="_DGf6A7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DGt8cbhiEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_DGt8cLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DGvxoLhiEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_DGvKkLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGy08bhiEe2UuoshngsjNA" base_Element="_DGyN4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DGy08rhiEe2UuoshngsjNA" base_Element="_DGyN4LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DGy087hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG0DErhiEe2UuoshngsjNA" base_Element="_DG0DELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DG0DE7hiEe2UuoshngsjNA" base_Element="_DG0DELhiEe2UuoshngsjNA">
    <annotations xmi:id="_DG0DFLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG0qILhiEe2UuoshngsjNA" base_Element="_DG0DFbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DG0qIbhiEe2UuoshngsjNA" base_Element="_DG0DFbhiEe2UuoshngsjNA">
    <annotations xmi:id="_DG0qIrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG47kLhiEe2UuoshngsjNA" base_Element="_DG4UhbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DG47kbhiEe2UuoshngsjNA" base_Element="_DG4UhbhiEe2UuoshngsjNA">
    <annotations xmi:id="_DG47krhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DG6JsLhiEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_DG5ioLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DG8l8LhiEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_DG7-4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DG9NALhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DG8l8bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_DG90E7hiEe2UuoshngsjNA" base_Element="_DG90ELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHGW8LhiEe2UuoshngsjNA" base_Element="_DHFv4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHGW8bhiEe2UuoshngsjNA" base_Element="_DHFv4LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHG-ALhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DHKBULhiEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_DHJaQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHRWErhiEe2UuoshngsjNA" base_Element="_DHRWELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHRWE7hiEe2UuoshngsjNA" base_Element="_DHRWELhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHRWFLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHR9JLhiEe2UuoshngsjNA" base_Element="_DHR9IrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHTLQLhiEe2UuoshngsjNA" base_Element="_DHR9IrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHTLQbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHTLRLhiEe2UuoshngsjNA" base_Element="_DHTLQrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHTLRbhiEe2UuoshngsjNA" base_Element="_DHTLQrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHTLRrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHTyVLhiEe2UuoshngsjNA" base_Element="_DHTyU7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHUZYLhiEe2UuoshngsjNA" base_Element="_DHTyU7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DHUZYbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHUZY7hiEe2UuoshngsjNA" base_Element="_DHUZYrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHUZZLhiEe2UuoshngsjNA" base_Element="_DHUZYrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHUZZbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHVngbhiEe2UuoshngsjNA" base_Element="_DHUZZrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHVngrhiEe2UuoshngsjNA" base_Element="_DHUZZrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHVng7hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHWOkLhiEe2UuoshngsjNA" base_Element="_DHVnhLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHWOkbhiEe2UuoshngsjNA" base_Element="_DHVnhLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHWOkrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHW1obhiEe2UuoshngsjNA" base_Element="_DHWOlLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHW1orhiEe2UuoshngsjNA" base_Element="_DHWOlLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHW1o7hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DHW1pbhiEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_DHW1pLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHgmoLhiEe2UuoshngsjNA" base_Element="_DHf_kLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHgmobhiEe2UuoshngsjNA" base_Element="_DHf_kLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHgmorhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHhNsLhiEe2UuoshngsjNA" base_Element="_DHgmo7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHhNsbhiEe2UuoshngsjNA" base_Element="_DHgmo7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DHhNsrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHhNtLhiEe2UuoshngsjNA" base_Element="_DHhNs7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHh0wLhiEe2UuoshngsjNA" base_Element="_DHhNs7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DHh0wbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DHh0xbhiEe2UuoshngsjNA" dimensions="1" base_Element="_DHh0wrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHh0xrhiEe2UuoshngsjNA" base_Element="_DHh0wrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHib0LhiEe2UuoshngsjNA" base_Element="_DHh0wrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHib0bhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DHjC47hiEe2UuoshngsjNA" dimensions="2" base_Element="_DHjC4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHjC5LhiEe2UuoshngsjNA" base_Element="_DHjC4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHjC5bhiEe2UuoshngsjNA" base_Element="_DHjC4LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHjC5rhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DHlfILhiEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_DHk4ELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DHmtQLhiEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_DHmGMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DHn7YLhiEe2UuoshngsjNA" base_Element="_DHnUU7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DHoicLhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DHn7YbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHyTcLhiEe2UuoshngsjNA" base_Element="_DHxsYLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DHyTcbhiEe2UuoshngsjNA" base_Element="_DHxsYLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DHyTcrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DH0IoLhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DHzhkLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DH6PQbhiEe2UuoshngsjNA" genericsValue="Integer" base_Element="_DH6PQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DII4wLhiEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_DIIRsLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DIJf0bhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DIJf0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DIZ-gLhiEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_DIZXcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DIbMoLhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DIalk7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DIcawbhiEe2UuoshngsjNA" base_Element="_DIcawLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DIgFILhiEe2UuoshngsjNA" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_DIfeELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DIkWkLhiEe2UuoshngsjNA" base_Element="_DIjvgbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DIlksLhiEe2UuoshngsjNA" base_Element="_DIk9pbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DIpPELhiEe2UuoshngsjNA" base_Element="_DIooALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DIpPEbhiEe2UuoshngsjNA" base_Element="_DIooALhiEe2UuoshngsjNA">
    <annotations xmi:id="_DIpPErhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DIp2ILhiEe2UuoshngsjNA" base_Element="_DIpPE7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DIp2IbhiEe2UuoshngsjNA" base_Element="_DIpPE7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DIp2IrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DIp2JbhiEe2UuoshngsjNA" base_Element="_DIp2I7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DIqdMLhiEe2UuoshngsjNA" base_Element="_DIp2I7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DIqdMbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DIxx87hiEe2UuoshngsjNA" base_Element="_DIxx8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_DIyZALhiEe2UuoshngsjNA" dimensions="2" base_Element="_DIxx9LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_DI2qcrhiEe2UuoshngsjNA" base_Element="_DI2qcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_DI34kbhiEe2UuoshngsjNA" dimensions="1" base_Element="_DI3RgbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DI_0YbhiEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_DI_NULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DJBpkbhiEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_DJBpkLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJKzgLhiEe2UuoshngsjNA" base_Element="_DJKMcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJLakLhiEe2UuoshngsjNA" base_Element="_DJKMcLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJLakbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJMBoLhiEe2UuoshngsjNA" base_Element="_DJLakrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJMBobhiEe2UuoshngsjNA" base_Element="_DJLakrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJMBorhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJMBpLhiEe2UuoshngsjNA" base_Element="_DJMBo7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJMosLhiEe2UuoshngsjNA" base_Element="_DJMBo7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJMosbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJMos7hiEe2UuoshngsjNA" base_Element="_DJMosrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJMotLhiEe2UuoshngsjNA" base_Element="_DJMosrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJMotbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJNPwbhiEe2UuoshngsjNA" base_Element="_DJNPwLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJNPwrhiEe2UuoshngsjNA" base_Element="_DJNPwLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJN20LhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJN20rhiEe2UuoshngsjNA" base_Element="_DJN20bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJN207hiEe2UuoshngsjNA" base_Element="_DJN20bhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJOd4LhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJOd47hiEe2UuoshngsjNA" base_Element="_DJOd4bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJOd5LhiEe2UuoshngsjNA" base_Element="_DJOd4bhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJOd5bhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJPE8rhiEe2UuoshngsjNA" base_Element="_DJPE8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJPE87hiEe2UuoshngsjNA" base_Element="_DJPE8LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJPE9LhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJQTELhiEe2UuoshngsjNA" base_Element="_DJPsALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJQTEbhiEe2UuoshngsjNA" base_Element="_DJPsALhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJQTErhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJQ6ILhiEe2UuoshngsjNA" base_Element="_DJQTE7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJQ6IbhiEe2UuoshngsjNA" base_Element="_DJQTE7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJQ6IrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJRhMLhiEe2UuoshngsjNA" base_Element="_DJQ6I7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJRhMbhiEe2UuoshngsjNA" base_Element="_DJQ6I7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJRhMrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJSIQbhiEe2UuoshngsjNA" base_Element="_DJRhM7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJSIQrhiEe2UuoshngsjNA" base_Element="_DJRhM7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJSIQ7hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJSvULhiEe2UuoshngsjNA" base_Element="_DJSIRLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJSvUbhiEe2UuoshngsjNA" base_Element="_DJSIRLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJSvUrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJSvVbhiEe2UuoshngsjNA" base_Element="_DJSvU7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJTWYLhiEe2UuoshngsjNA" base_Element="_DJSvU7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJTWYbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJTWZLhiEe2UuoshngsjNA" base_Element="_DJTWYrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJT9cLhiEe2UuoshngsjNA" base_Element="_DJTWYrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJT9cbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJT9c7hiEe2UuoshngsjNA" base_Element="_DJT9crhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJVLkLhiEe2UuoshngsjNA" base_Element="_DJT9crhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJVLkbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJZdALhiEe2UuoshngsjNA" base_Element="_DJY19bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJaEELhiEe2UuoshngsjNA" base_Element="_DJY19bhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJaEEbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJaEE7hiEe2UuoshngsjNA" base_Element="_DJaEErhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJarILhiEe2UuoshngsjNA" base_Element="_DJaEErhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJarIbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJbSMLhiEe2UuoshngsjNA" base_Element="_DJarIrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJbSMbhiEe2UuoshngsjNA" base_Element="_DJarIrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJbSMrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DJpUobhiEe2UuoshngsjNA" base_Element="_DJotkLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_DJqiwLhiEe2UuoshngsjNA" dimensions="1" base_Element="_DJp7srhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_DJrJ1LhiEe2UuoshngsjNA" dimensions="1" base_Element="_DJrJ0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_DJsX9LhiEe2UuoshngsjNA" base_Element="_DJsX8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ2I8bhiEe2UuoshngsjNA" base_Element="_DJ2I8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ2I8rhiEe2UuoshngsjNA" base_Element="_DJ2I8LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ2I87hiEe2UuoshngsjNA" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ2wALhiEe2UuoshngsjNA" base_Element="_DJ2I9LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ2wAbhiEe2UuoshngsjNA" base_Element="_DJ2I9LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ2wArhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ3XELhiEe2UuoshngsjNA" base_Element="_DJ2wA7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ3XEbhiEe2UuoshngsjNA" base_Element="_DJ2wA7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ3XErhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ3XFLhiEe2UuoshngsjNA" base_Element="_DJ3XE7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ3-ILhiEe2UuoshngsjNA" base_Element="_DJ3XE7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ3-IbhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ3-I7hiEe2UuoshngsjNA" base_Element="_DJ3-IrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ3-JLhiEe2UuoshngsjNA" base_Element="_DJ3-IrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ3-JbhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ4lMLhiEe2UuoshngsjNA" base_Element="_DJ3-JrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ4lMbhiEe2UuoshngsjNA" base_Element="_DJ3-JrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ4lMrhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ5MQLhiEe2UuoshngsjNA" base_Element="_DJ4lM7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ5MQbhiEe2UuoshngsjNA" base_Element="_DJ4lM7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ5MQrhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ5MRLhiEe2UuoshngsjNA" base_Element="_DJ5MQ7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ5MRbhiEe2UuoshngsjNA" base_Element="_DJ5MQ7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ5MRrhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ5zUbhiEe2UuoshngsjNA" base_Element="_DJ5zULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ5zUrhiEe2UuoshngsjNA" base_Element="_DJ5zULhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ5zU7hiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ6aYLhiEe2UuoshngsjNA" base_Element="_DJ5zVLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ6aYbhiEe2UuoshngsjNA" base_Element="_DJ5zVLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ6aYrhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ7BcLhiEe2UuoshngsjNA" base_Element="_DJ6aY7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ7BcbhiEe2UuoshngsjNA" base_Element="_DJ6aY7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ7BcrhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ7ogLhiEe2UuoshngsjNA" base_Element="_DJ7Bc7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ7ogbhiEe2UuoshngsjNA" base_Element="_DJ7Bc7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ7ogrhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ8PkLhiEe2UuoshngsjNA" base_Element="_DJ7og7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ8PkbhiEe2UuoshngsjNA" base_Element="_DJ7og7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ8PkrhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ82oLhiEe2UuoshngsjNA" base_Element="_DJ8Pk7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ82obhiEe2UuoshngsjNA" base_Element="_DJ8Pk7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ82orhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ82pLhiEe2UuoshngsjNA" base_Element="_DJ82o7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ9dsLhiEe2UuoshngsjNA" base_Element="_DJ82o7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ9dsbhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ9ds7hiEe2UuoshngsjNA" base_Element="_DJ9dsrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ-EwLhiEe2UuoshngsjNA" base_Element="_DJ9dsrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ-EwbhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ-Ew7hiEe2UuoshngsjNA" base_Element="_DJ-EwrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ-r0LhiEe2UuoshngsjNA" base_Element="_DJ-EwrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ-r0bhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ-r07hiEe2UuoshngsjNA" base_Element="_DJ-r0rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ-r1LhiEe2UuoshngsjNA" base_Element="_DJ-r0rhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ-r1bhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ_S4bhiEe2UuoshngsjNA" base_Element="_DJ_S4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ_S4rhiEe2UuoshngsjNA" base_Element="_DJ_S4LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ_S47hiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ_58LhiEe2UuoshngsjNA" base_Element="_DJ_S5LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DJ_58bhiEe2UuoshngsjNA" base_Element="_DJ_S5LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DJ_58rhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DJ_59LhiEe2UuoshngsjNA" base_Element="_DJ_587hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DKAhALhiEe2UuoshngsjNA" base_Element="_DJ_587hiEe2UuoshngsjNA">
    <annotations xmi:id="_DKAhAbhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DKAhA7hiEe2UuoshngsjNA" base_Element="_DKAhArhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DKAhBLhiEe2UuoshngsjNA" base_Element="_DKAhArhiEe2UuoshngsjNA">
    <annotations xmi:id="_DKAhBbhiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DKBIEbhiEe2UuoshngsjNA" base_Element="_DKBIELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DKBIErhiEe2UuoshngsjNA" base_Element="_DKBIELhiEe2UuoshngsjNA">
    <annotations xmi:id="_DKBIE7hiEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DXuz8LhiEe2UuoshngsjNA" base_Element="_DXuM4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DXvbAbhiEe2UuoshngsjNA" base_Element="_DXvbALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DXwCEbhiEe2UuoshngsjNA" base_Element="_DXwCELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DXwpIbhiEe2UuoshngsjNA" base_Element="_DXwpILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DXwpI7hiEe2UuoshngsjNA" base_Element="_DXwpIrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DXzsc7hiEe2UuoshngsjNA" base_Element="_DXzscLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DXzsdLhiEe2UuoshngsjNA" base_Element="_DXzscLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DXzsdbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DX1hoLhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DX06lbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DX2IsLhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DX1horhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DX3W0bhiEe2UuoshngsjNA" genericsValue="String, Activation" base_Element="_DX3W0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DX7BMbhiEe2UuoshngsjNA" base_Element="_DX7BMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DX-EhrhiEe2UuoshngsjNA" base_Element="_DX-Eg7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DX-Eh7hiEe2UuoshngsjNA" base_Element="_DX-Eg7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DX-rkLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DYBH0bhiEe2UuoshngsjNA" base_Element="_DYBH0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYCV87hiEe2UuoshngsjNA" base_Element="_DYCV8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYC9ALhiEe2UuoshngsjNA" base_Element="_DYCV8LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYC9AbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DYELILhiEe2UuoshngsjNA" base_Element="_DYDkELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYELIrhiEe2UuoshngsjNA" base_Element="_DYELIbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYEyMLhiEe2UuoshngsjNA" base_Element="_DYELI7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYEyMrhiEe2UuoshngsjNA" base_Element="_DYEyMbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYFZQbhiEe2UuoshngsjNA" base_Element="_DYFZQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYFZQ7hiEe2UuoshngsjNA" base_Element="_DYFZQrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYGAULhiEe2UuoshngsjNA" base_Element="_DYFZRLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYIckbhiEe2UuoshngsjNA" base_Element="_DYH1grhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYIckrhiEe2UuoshngsjNA" base_Element="_DYH1grhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYIck7hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DYKRwbhiEe2UuoshngsjNA" genericsValue="String, Flow" base_Element="_DYKRwLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DYK40bhiEe2UuoshngsjNA" genericsValue="Node, Activation" base_Element="_DYK40LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYNVELhiEe2UuoshngsjNA" base_Element="_DYMuALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYNVErhiEe2UuoshngsjNA" base_Element="_DYNVEbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYN8ILhiEe2UuoshngsjNA" base_Element="_DYNVE7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYN8IrhiEe2UuoshngsjNA" base_Element="_DYN8IbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYN8JLhiEe2UuoshngsjNA" base_Element="_DYN8I7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYOjMLhiEe2UuoshngsjNA" base_Element="_DYN8JbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYOjMrhiEe2UuoshngsjNA" base_Element="_DYOjMbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYPKQLhiEe2UuoshngsjNA" base_Element="_DYOjM7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYPxUbhiEe2UuoshngsjNA" base_Element="_DYPxULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYQYYLhiEe2UuoshngsjNA" base_Element="_DYPxUrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYQYYbhiEe2UuoshngsjNA" base_Element="_DYPxUrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYQYYrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DYQ_cLhiEe2UuoshngsjNA" base_Element="_DYQYY7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYRmgrhiEe2UuoshngsjNA" base_Element="_DYRmgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYRmg7hiEe2UuoshngsjNA" base_Element="_DYRmgLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYRmhLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DYSNkbhiEe2UuoshngsjNA" base_Element="_DYSNkLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYS0oLhiEe2UuoshngsjNA" base_Element="_DYSNkrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYS0obhiEe2UuoshngsjNA" base_Element="_DYSNkrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYS0orhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DYTbsLhiEe2UuoshngsjNA" base_Element="_DYS0o7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYTbs7hiEe2UuoshngsjNA" base_Element="_DYTbsbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYUCwLhiEe2UuoshngsjNA" base_Element="_DYTbsbhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYUCwbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DYUCw7hiEe2UuoshngsjNA" base_Element="_DYUCwrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYUp0rhiEe2UuoshngsjNA" base_Element="_DYUp0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYUp07hiEe2UuoshngsjNA" base_Element="_DYUp0LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYUp1LhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DYVQ4LhiEe2UuoshngsjNA" base_Element="_DYUp1bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYVQ47hiEe2UuoshngsjNA" base_Element="_DYVQ4bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYV38LhiEe2UuoshngsjNA" base_Element="_DYVQ4bhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYV38bhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DYWfAbhiEe2UuoshngsjNA" base_Element="_DYWfALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYXGELhiEe2UuoshngsjNA" base_Element="_DYWfArhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYXtILhiEe2UuoshngsjNA" base_Element="_DYXGEbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYXtIrhiEe2UuoshngsjNA" base_Element="_DYXtIbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYYUMbhiEe2UuoshngsjNA" base_Element="_DYYUMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYY7QLhiEe2UuoshngsjNA" base_Element="_DYYUMrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYaJYLhiEe2UuoshngsjNA" base_Element="_DYZiULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYaJYrhiEe2UuoshngsjNA" base_Element="_DYaJYbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DYdMsLhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DYcloLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYdMsrhiEe2UuoshngsjNA" base_Element="_DYdMsbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYiFMLhiEe2UuoshngsjNA" base_Element="_DYheILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYiFMbhiEe2UuoshngsjNA" base_Element="_DYheILhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYiFMrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DYj6YLhiEe2UuoshngsjNA" genericsValue="String, Node" base_Element="_DYjTULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYm9sLhiEe2UuoshngsjNA" base_Element="_DYmWoLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYrPI7hiEe2UuoshngsjNA" base_Element="_DYrPILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYrPJLhiEe2UuoshngsjNA" base_Element="_DYrPILhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYr2MLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DYsdRbhiEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_DYsdQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DYuSdLhiEe2UuoshngsjNA" base_Element="_DYuScbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DYu5gLhiEe2UuoshngsjNA" base_Element="_DYuScbhiEe2UuoshngsjNA">
    <annotations xmi:id="_DYu5gbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DYwusbhiEe2UuoshngsjNA" base_Element="_DYwusLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DYxVwLhiEe2UuoshngsjNA" base_Element="_DYwusrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DY4qgLhiEe2UuoshngsjNA" genericsValue="String,InstructionTimeSlot" base_Element="_DY4DcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DY7t0LhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DY7GwbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DY8U5LhiEe2UuoshngsjNA" genericsValue="Double" base_Element="_DY8U47hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DY9jAbhiEe2UuoshngsjNA" genericsValue="Double,ReliabilityRow" base_Element="_DY9jALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DY__QLhiEe2UuoshngsjNA" base_Element="_DY_YMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DY__QrhiEe2UuoshngsjNA" base_Element="_DY__QbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DZOBsLhiEe2UuoshngsjNA" genericsValue="Activation,Row&lt;Activation>" base_Element="_DZNaoLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DZOowrhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DZOBsrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZPP0rhiEe2UuoshngsjNA" base_Element="_DZPP0bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZRFALhiEe2UuoshngsjNA" base_Element="_DZQd9LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZRsEbhiEe2UuoshngsjNA" base_Element="_DZRsELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZXLobhiEe2UuoshngsjNA" base_Element="_DZXLoLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZYZwLhiEe2UuoshngsjNA" base_Element="_DZXLorhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZYZwrhiEe2UuoshngsjNA" base_Element="_DZYZwbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZZA0LhiEe2UuoshngsjNA" base_Element="_DZYZw7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZZA0rhiEe2UuoshngsjNA" base_Element="_DZZA0bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZegYbhiEe2UuoshngsjNA" base_Element="_DZegYLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZfHcLhiEe2UuoshngsjNA" base_Element="_DZegYrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZfHcbhiEe2UuoshngsjNA" base_Element="_DZegYrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZfHcrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZfugLhiEe2UuoshngsjNA" base_Element="_DZfHc7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZfugbhiEe2UuoshngsjNA" base_Element="_DZfHc7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DZfugrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZfuhLhiEe2UuoshngsjNA" base_Element="_DZfug7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZgVkbhiEe2UuoshngsjNA" base_Element="_DZfuhbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZgVkrhiEe2UuoshngsjNA" base_Element="_DZfuhbhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZgVk7hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZg8oLhiEe2UuoshngsjNA" base_Element="_DZgVlLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZhjsrhiEe2UuoshngsjNA" base_Element="_DZhjsLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZhjs7hiEe2UuoshngsjNA" base_Element="_DZhjsLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZhjtLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZix0LhiEe2UuoshngsjNA" base_Element="_DZiKwLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZix07hiEe2UuoshngsjNA" base_Element="_DZix0bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZjY4LhiEe2UuoshngsjNA" base_Element="_DZix0bhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZjY4bhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZjY47hiEe2UuoshngsjNA" base_Element="_DZjY4rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZj_8rhiEe2UuoshngsjNA" base_Element="_DZj_8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZj_87hiEe2UuoshngsjNA" base_Element="_DZj_8LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZj_9LhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZknAbhiEe2UuoshngsjNA" base_Element="_DZknALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZlOErhiEe2UuoshngsjNA" base_Element="_DZlOELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZlOE7hiEe2UuoshngsjNA" base_Element="_DZlOELhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZlOFLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZqtoLhiEe2UuoshngsjNA" base_Element="_DZqGkLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZqtorhiEe2UuoshngsjNA" base_Element="_DZqtobhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZtJ4LhiEe2UuoshngsjNA" base_Element="_DZsi0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZtJ4rhiEe2UuoshngsjNA" base_Element="_DZtJ4bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZtw8bhiEe2UuoshngsjNA" base_Element="_DZtw8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DZvmIrhiEe2UuoshngsjNA" genericsValue="Integer" base_Element="_DZvmILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZ1FtrhiEe2UuoshngsjNA" base_Element="_DZ1FtLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZ1Ft7hiEe2UuoshngsjNA" base_Element="_DZ1FtLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZ1FuLhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZ1swrhiEe2UuoshngsjNA" base_Element="_DZ1swLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZ2T0LhiEe2UuoshngsjNA" base_Element="_DZ1swLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZ264LhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZ264rhiEe2UuoshngsjNA" base_Element="_DZ264bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZ3h8LhiEe2UuoshngsjNA" base_Element="_DZ2647hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZ3h8bhiEe2UuoshngsjNA" base_Element="_DZ2647hiEe2UuoshngsjNA">
    <annotations xmi:id="_DZ3h8rhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZ4JALhiEe2UuoshngsjNA" base_Element="_DZ3h87hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZ4JA7hiEe2UuoshngsjNA" base_Element="_DZ4JAbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZ4JBLhiEe2UuoshngsjNA" base_Element="_DZ4JAbhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZ4JBbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZ4wEbhiEe2UuoshngsjNA" base_Element="_DZ4wELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZ5XIrhiEe2UuoshngsjNA" base_Element="_DZ5XILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZ5-MLhiEe2UuoshngsjNA" base_Element="_DZ5XILhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZ5-MbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZ5-M7hiEe2UuoshngsjNA" base_Element="_DZ5-MrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZ6lQLhiEe2UuoshngsjNA" base_Element="_DZ5-NLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZ6lQbhiEe2UuoshngsjNA" base_Element="_DZ5-NLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZ6lQrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZ7MULhiEe2UuoshngsjNA" base_Element="_DZ6lQ7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZ7MUbhiEe2UuoshngsjNA" base_Element="_DZ6lQ7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DZ7MUrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZ7zYLhiEe2UuoshngsjNA" base_Element="_DZ7MU7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZ8acLhiEe2UuoshngsjNA" base_Element="_DZ7MU7hiEe2UuoshngsjNA">
    <annotations xmi:id="_DZ8acbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DZ8adLhiEe2UuoshngsjNA" base_Element="_DZ8acrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DZ8adbhiEe2UuoshngsjNA" base_Element="_DZ8acrhiEe2UuoshngsjNA">
    <annotations xmi:id="_DZ8adrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DZ9BgbhiEe2UuoshngsjNA" base_Element="_DZ9BgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZ9okbhiEe2UuoshngsjNA" base_Element="_DZ9okLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DZ9ok7hiEe2UuoshngsjNA" base_Element="_DZ9okrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaLD8LhiEe2UuoshngsjNA" genericsValue="T, E" base_Element="_DaJ10LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DaLrALhiEe2UuoshngsjNA" base_Element="_DaLD8rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaMSELhiEe2UuoshngsjNA" genericsValue="Activation" base_Element="_DaLrAbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaNgMLhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DaM5IbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaOHQbhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DaOHQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaOuULhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DaOHQ7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaPVYLhiEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_DaOuUrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaRKkLhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DaQjgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaTm0LhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DaS_wLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaTm0bhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DaS_wbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaVcALhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DaUN4rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaWDEbhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DaVcArhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaXRMLhiEe2UuoshngsjNA" genericsValue="Activation" base_Element="_DaWqILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DaYfUrhiEe2UuoshngsjNA" base_Element="_DaX4QLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaYfU7hiEe2UuoshngsjNA" genericsValue="Node" base_Element="_DaYfULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DaZGYLhiEe2UuoshngsjNA" base_Element="_DaX4QLhiEe2UuoshngsjNA">
    <annotations xmi:id="_DaZGYbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DaZGY7hiEe2UuoshngsjNA" genericsValue="T" base_Element="_DaZGYrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DaZtcbhiEe2UuoshngsjNA" base_Element="_DaZtcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DaaUhLhiEe2UuoshngsjNA" base_Element="_DaaUgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Daa7kLhiEe2UuoshngsjNA" base_Element="_DaaUgLhiEe2UuoshngsjNA">
    <annotations xmi:id="_Daa7kbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DabioLhiEe2UuoshngsjNA" genericsValue="String" base_Element="_Daa7krhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DacJsLhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DabiobhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DadX0bhiEe2UuoshngsjNA" genericsValue="Flow" base_Element="_DadX0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Daf0ErhiEe2UuoshngsjNA" genericsValue="Node" base_Element="_Daf0EbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DahCMLhiEe2UuoshngsjNA" genericsValue="Integer" base_Element="_DagbIbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DakskLhiEe2UuoshngsjNA" base_Element="_DakFgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DamhwLhiEe2UuoshngsjNA" genericsValue="T" base_Element="_Dal6sLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DanI0rhiEe2UuoshngsjNA" base_Element="_DamhwbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DanI07hiEe2UuoshngsjNA" base_Element="_DamhwbhiEe2UuoshngsjNA">
    <annotations xmi:id="_DanI1LhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Danv4bhiEe2UuoshngsjNA" genericsValue="T" base_Element="_Danv4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DaoW9LhiEe2UuoshngsjNA" base_Element="_DaoW8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Dao-ALhiEe2UuoshngsjNA" base_Element="_DaoW8LhiEe2UuoshngsjNA">
    <annotations xmi:id="_Dao-AbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DaplELhiEe2UuoshngsjNA" genericsValue="Node" base_Element="_Dao-ArhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DaraQLhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DaqzMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DasBU7hiEe2UuoshngsjNA" base_Element="_DaraQbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DasBVLhiEe2UuoshngsjNA" base_Element="_DaraQbhiEe2UuoshngsjNA">
    <annotations xmi:id="_DasBVbhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DatPc7hiEe2UuoshngsjNA" genericsValue="Node" base_Element="_DatPcbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_DaudkrhiEe2UuoshngsjNA" base_Element="_Dat2gLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Daudk7hiEe2UuoshngsjNA" genericsValue="Node" base_Element="_Dat2gbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DavrsbhiEe2UuoshngsjNA" base_Element="_DavrsLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Daw50LhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DawSw7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Daxg4rhiEe2UuoshngsjNA" base_Element="_Daw50bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Daxg47hiEe2UuoshngsjNA" base_Element="_Daw50bhiEe2UuoshngsjNA">
    <annotations xmi:id="_Daxg5LhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DayH8bhiEe2UuoshngsjNA" base_Element="_DayH8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Da1yUbhiEe2UuoshngsjNA" base_Element="_Da1yULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Da41obhiEe2UuoshngsjNA" genericsValue="T" base_Element="_Da41oLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Da6DwbhiEe2UuoshngsjNA" base_Element="_Da5csLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Da6DwrhiEe2UuoshngsjNA" base_Element="_Da5csLhiEe2UuoshngsjNA">
    <annotations xmi:id="_Da6Dw7hiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Da9uILhiEe2UuoshngsjNA" genericsValue="T" base_Element="_Da9HFbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DbAxdbhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DbAxcbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DbB_kLhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DbBYgbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DbB_kbhiEe2UuoshngsjNA" genericsValue="T" base_Element="_DbBYgrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DbEb0LhiEe2UuoshngsjNA" genericsValue="E" base_Element="_DbD0w7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DbFp8LhiEe2UuoshngsjNA" base_Element="_DbFC4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DbGRAbhiEe2UuoshngsjNA" base_Element="_DbGRALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_DbIGMrhiEe2UuoshngsjNA" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_DbIGMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbItQLhiEe2UuoshngsjNA" base_Element="_DbIGMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DbM-sLhiEe2UuoshngsjNA" base_Element="_DbMXobhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbOz4bhiEe2UuoshngsjNA" base_Element="_DbOM0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DbOz4rhiEe2UuoshngsjNA" genericsValue="Node" base_Element="_DbOM0bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_DbPa8LhiEe2UuoshngsjNA" base_Element="_DbOM0LhiEe2UuoshngsjNA">
    <annotations xmi:id="_DbPa8bhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DbWIpLhiEe2UuoshngsjNA" genericsValue="Integer" base_Element="_DbVhkbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DbiV4LhiEe2UuoshngsjNA" genericsValue="String" base_Element="_Dbhu0bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Dbi88LhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DbiV4bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Dbi88rhiEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_Dbi88bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbkyILhiEe2UuoshngsjNA" base_Element="_DbkLErhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbkyIrhiEe2UuoshngsjNA" base_Element="_DbkyIbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DblZMLhiEe2UuoshngsjNA" base_Element="_DbkyI7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbmAQbhiEe2UuoshngsjNA" base_Element="_DbmAQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbnOYLhiEe2UuoshngsjNA" base_Element="_DbmnULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dbn1cbhiEe2UuoshngsjNA" base_Element="_Dbn1cLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbocgLhiEe2UuoshngsjNA" base_Element="_Dbn1crhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DbocgrhiEe2UuoshngsjNA" genericsValue="ChannelSet" base_Element="_DbocgbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbpDkLhiEe2UuoshngsjNA" base_Element="_DbocgbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Dbpqo7hiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DbpqorhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbqRsLhiEe2UuoshngsjNA" base_Element="_DbpqorhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbqRsrhiEe2UuoshngsjNA" base_Element="_DbqRsbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Dbq4wLhiEe2UuoshngsjNA" genericsValue="String" base_Element="_DbqRs7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dbq4wbhiEe2UuoshngsjNA" base_Element="_DbqRs7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dbrf0LhiEe2UuoshngsjNA" base_Element="_Dbq4wrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dbrf0rhiEe2UuoshngsjNA" base_Element="_Dbrf0bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbsG4bhiEe2UuoshngsjNA" base_Element="_DbsG4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dbst8bhiEe2UuoshngsjNA" base_Element="_Dbst8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dbst87hiEe2UuoshngsjNA" base_Element="_Dbst8rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbtVAbhiEe2UuoshngsjNA" base_Element="_DbtVALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbvKMrhiEe2UuoshngsjNA" base_Element="_DbvKMbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbxmcrhiEe2UuoshngsjNA" base_Element="_DbxmcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbxmdLhiEe2UuoshngsjNA" base_Element="_Dbxmc7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbyNgbhiEe2UuoshngsjNA" base_Element="_DbyNgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DbyNg7hiEe2UuoshngsjNA" genericsValue="Node" base_Element="_DbyNgrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dby0kLhiEe2UuoshngsjNA" base_Element="_DbyNgrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Dby0krhiEe2UuoshngsjNA" genericsValue="Integer" base_Element="_Dby0kbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DbzboLhiEe2UuoshngsjNA" base_Element="_Dby0kbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DbzborhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DbzbobhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db0CsLhiEe2UuoshngsjNA" base_Element="_DbzbobhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db0CsrhiEe2UuoshngsjNA" base_Element="_Db0CsbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db0pwLhiEe2UuoshngsjNA" base_Element="_Db0Cs7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db135LhiEe2UuoshngsjNA" base_Element="_Db1347hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db2e8LhiEe2UuoshngsjNA" base_Element="_Db135bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db2e8rhiEe2UuoshngsjNA" base_Element="_Db2e8bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db3GALhiEe2UuoshngsjNA" base_Element="_Db2e87hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db3GArhiEe2UuoshngsjNA" base_Element="_Db3GAbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db3tEbhiEe2UuoshngsjNA" base_Element="_Db3tELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db4UIbhiEe2UuoshngsjNA" base_Element="_Db4UILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db47MbhiEe2UuoshngsjNA" base_Element="_Db47MLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db5iQLhiEe2UuoshngsjNA" base_Element="_Db47MrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db6JULhiEe2UuoshngsjNA" base_Element="_Db5iQ7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db7XcbhiEe2UuoshngsjNA" base_Element="_Db7XcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db7-gbhiEe2UuoshngsjNA" base_Element="_Db7XcrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db9MoLhiEe2UuoshngsjNA" base_Element="_Db8lkrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db9MorhiEe2UuoshngsjNA" base_Element="_Db9MobhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db9zsbhiEe2UuoshngsjNA" base_Element="_Db9zsLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db9zs7hiEe2UuoshngsjNA" base_Element="_Db9zsrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db-awbhiEe2UuoshngsjNA" base_Element="_Db-awLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db-aw7hiEe2UuoshngsjNA" base_Element="_Db-awrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Db_B0bhiEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_Db_B0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Db_o4LhiEe2UuoshngsjNA" base_Element="_Db_B0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcAP8rhiEe2UuoshngsjNA" base_Element="_DcAP8bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcAP9LhiEe2UuoshngsjNA" base_Element="_DcAP87hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DcBeEbhiEe2UuoshngsjNA" genericsValue="Edge" base_Element="_DcBeELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcDTQbhiEe2UuoshngsjNA" base_Element="_DcDTQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcDTQ7hiEe2UuoshngsjNA" base_Element="_DcDTQrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcD6VLhiEe2UuoshngsjNA" base_Element="_DcD6ULhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcFIcLhiEe2UuoshngsjNA" base_Element="_DcD6VbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcFIcrhiEe2UuoshngsjNA" base_Element="_DcFIcbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DcFvgbhiEe2UuoshngsjNA" genericsValue="Activation" base_Element="_DcFvgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcGWkLhiEe2UuoshngsjNA" base_Element="_DcFvgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DcG9oLhiEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_DcGWkbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcG9obhiEe2UuoshngsjNA" base_Element="_DcGWkbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcG9o7hiEe2UuoshngsjNA" base_Element="_DcG9orhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcIy0bhiEe2UuoshngsjNA" base_Element="_DcIy0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcJZ4LhiEe2UuoshngsjNA" base_Element="_DcIy0rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcJZ4rhiEe2UuoshngsjNA" base_Element="_DcJZ4bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcJZ5LhiEe2UuoshngsjNA" base_Element="_DcJZ47hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcKA8bhiEe2UuoshngsjNA" base_Element="_DcKA8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcKoALhiEe2UuoshngsjNA" base_Element="_DcKA8rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcKoArhiEe2UuoshngsjNA" base_Element="_DcKoAbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcKoBLhiEe2UuoshngsjNA" base_Element="_DcKoA7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcLPEbhiEe2UuoshngsjNA" base_Element="_DcLPELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcLPE7hiEe2UuoshngsjNA" base_Element="_DcLPErhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcL2IbhiEe2UuoshngsjNA" base_Element="_DcL2ILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcL2I7hiEe2UuoshngsjNA" base_Element="_DcL2IrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcMdMbhiEe2UuoshngsjNA" base_Element="_DcMdMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcOSYbhiEe2UuoshngsjNA" base_Element="_DcOSYLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcOSY7hiEe2UuoshngsjNA" base_Element="_DcOSYrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcO5cbhiEe2UuoshngsjNA" base_Element="_DcO5cLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcRVsLhiEe2UuoshngsjNA" base_Element="_DcQupLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcRVsrhiEe2UuoshngsjNA" base_Element="_DcRVsbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcR8wbhiEe2UuoshngsjNA" base_Element="_DcR8wLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcR8w7hiEe2UuoshngsjNA" base_Element="_DcR8wrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcTx9LhiEe2UuoshngsjNA" base_Element="_DcTx87hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcVAELhiEe2UuoshngsjNA" base_Element="_DcUZA7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcVAErhiEe2UuoshngsjNA" base_Element="_DcVAEbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcVnILhiEe2UuoshngsjNA" base_Element="_DcVAE7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DcWOMrhiEe2UuoshngsjNA" genericsValue="Integer" base_Element="_DcWOMbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcW1QLhiEe2UuoshngsjNA" base_Element="_DcWOMbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DcW1QrhiEe2UuoshngsjNA" genericsValue="SchedulableObject" base_Element="_DcW1QbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcexELhiEe2UuoshngsjNA" base_Element="_Dcc74bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcfYILhiEe2UuoshngsjNA" base_Element="_DcexEbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcf_MLhiEe2UuoshngsjNA" base_Element="_DcfYIbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcf_MrhiEe2UuoshngsjNA" base_Element="_Dcf_MbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcf_NLhiEe2UuoshngsjNA" base_Element="_Dcf_M7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcgmQbhiEe2UuoshngsjNA" base_Element="_DcgmQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcgmQ7hiEe2UuoshngsjNA" base_Element="_DcgmQrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DchNULhiEe2UuoshngsjNA" base_Element="_DcgmRLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcjpkLhiEe2UuoshngsjNA" base_Element="_DcjChLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DckQoLhiEe2UuoshngsjNA" base_Element="_DcjpkbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DckQorhiEe2UuoshngsjNA" base_Element="_DckQobhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dck3sLhiEe2UuoshngsjNA" base_Element="_DckQo7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dck3srhiEe2UuoshngsjNA" base_Element="_Dck3sbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcmF0LhiEe2UuoshngsjNA" base_Element="_Dck3s7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcmF07hiEe2UuoshngsjNA" base_Element="_DcmF0bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcmF1rhiEe2UuoshngsjNA" base_Element="_DcmF1LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcmF2bhiEe2UuoshngsjNA" base_Element="_DcmF17hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcms4bhiEe2UuoshngsjNA" base_Element="_Dcms4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcn7AbhiEe2UuoshngsjNA" base_Element="_Dcn7ALhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcn7A7hiEe2UuoshngsjNA" base_Element="_Dcn7ArhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcoiEbhiEe2UuoshngsjNA" base_Element="_DcoiELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_DcpJILhiEe2UuoshngsjNA" dimensions="2" base_Element="_DcoiFLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcpJIbhiEe2UuoshngsjNA" base_Element="_DcoiFLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcqXRbhiEe2UuoshngsjNA" base_Element="_DcqXRLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcq-ULhiEe2UuoshngsjNA" base_Element="_DcqXRrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcq-UrhiEe2UuoshngsjNA" base_Element="_Dcq-UbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcrlYLhiEe2UuoshngsjNA" base_Element="_Dcq-U7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcrlYrhiEe2UuoshngsjNA" base_Element="_DcrlYbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcszgLhiEe2UuoshngsjNA" base_Element="_DcrlY7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcszgrhiEe2UuoshngsjNA" base_Element="_DcszgbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcszhLhiEe2UuoshngsjNA" base_Element="_Dcszg7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DctakLhiEe2UuoshngsjNA" base_Element="_DcszhbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcuBobhiEe2UuoshngsjNA" base_Element="_DcuBoLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcuosbhiEe2UuoshngsjNA" base_Element="_DcuosLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcuos7hiEe2UuoshngsjNA" base_Element="_DcuosrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcvPwLhiEe2UuoshngsjNA" base_Element="_DcuotLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcvPwrhiEe2UuoshngsjNA" base_Element="_DcvPwbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcv20LhiEe2UuoshngsjNA" base_Element="_DcvPw7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcv20rhiEe2UuoshngsjNA" base_Element="_Dcv20bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcv21LhiEe2UuoshngsjNA" base_Element="_Dcv207hiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcwd4bhiEe2UuoshngsjNA" base_Element="_Dcwd4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DcyTFLhiEe2UuoshngsjNA" base_Element="_DcyTErhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dcy6I7hiEe2UuoshngsjNA" base_Element="_Dcy6IrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_DczhMbhiEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_DczhMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DczhMrhiEe2UuoshngsjNA" base_Element="_DczhMLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc0IQbhiEe2UuoshngsjNA" base_Element="_Dc0IQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc1WYbhiEe2UuoshngsjNA" base_Element="_Dc1WYLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc1WY7hiEe2UuoshngsjNA" base_Element="_Dc1WYrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc19cbhiEe2UuoshngsjNA" base_Element="_Dc19cLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc19c7hiEe2UuoshngsjNA" base_Element="_Dc19crhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc2kgbhiEe2UuoshngsjNA" base_Element="_Dc2kgLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc2kg7hiEe2UuoshngsjNA" base_Element="_Dc2kgrhiEe2UuoshngsjNA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_Dc2khLhiEe2UuoshngsjNA" name="getNumChannels" method="_DdyYprhiEe2UuoshngsjNA">
      <ownedParameter xmi:id="_Dc3LkLhiEe2UuoshngsjNA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_Dc3LkbhiEe2UuoshngsjNA" base_Element="_Dc2khLhiEe2UuoshngsjNA">
    <annotations xmi:id="_Dc3LkrhiEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc4ZsLhiEe2UuoshngsjNA" base_Element="_Dc3yoLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc4Zs7hiEe2UuoshngsjNA" base_Element="_Dc4ZsbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc5n1bhiEe2UuoshngsjNA" base_Element="_Dc5n1LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc6O4bhiEe2UuoshngsjNA" base_Element="_Dc6O4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc6O47hiEe2UuoshngsjNA" base_Element="_Dc6O4rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc8EFLhiEe2UuoshngsjNA" base_Element="_Dc8EErhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc8rJLhiEe2UuoshngsjNA" base_Element="_Dc8rIrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dc95QLhiEe2UuoshngsjNA" base_Element="_Dc9SMrhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Dc95QrhiEe2UuoshngsjNA" genericsValue="String" base_Element="_Dc95QbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Dc_HYLhiEe2UuoshngsjNA" genericsValue="String" base_Element="_Dc-gUbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DdA8kbhiEe2UuoshngsjNA" base_Element="_DdA8kLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DdA8k7hiEe2UuoshngsjNA" base_Element="_DdA8krhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DdCKsbhiEe2UuoshngsjNA" base_Element="_DdCKsLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DdCxwLhiEe2UuoshngsjNA" base_Element="_DdCKsrhiEe2UuoshngsjNA"/>
  <uml:OpaqueBehavior xmi:id="_DdyYprhiEe2UuoshngsjNA" name="getNumChannels" specification="_Dc2khLhiEe2UuoshngsjNA">
    <ownedParameter xmi:id="_DdyYp7hiEe2UuoshngsjNA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_Dee8MLhiEe2UuoshngsjNA" base_Element="_DeeVILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DefjQLhiEe2UuoshngsjNA" base_Element="_Dee8MbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DegKULhiEe2UuoshngsjNA" base_Element="_DefjQbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DegxYLhiEe2UuoshngsjNA" base_Element="_DegKUbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DegxY7hiEe2UuoshngsjNA" base_Element="_DegxYbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DehYcrhiEe2UuoshngsjNA" base_Element="_DehYcLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Deh_gLhiEe2UuoshngsjNA" base_Element="_DehYc7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DeimkLhiEe2UuoshngsjNA" base_Element="_Deh_gbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DejNoLhiEe2UuoshngsjNA" base_Element="_DeimkbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DejNo7hiEe2UuoshngsjNA" base_Element="_DejNobhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Dej0sLhiEe2UuoshngsjNA" base_Element="_DejNpLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DekbwLhiEe2UuoshngsjNA" base_Element="_Dej0sbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DelC0LhiEe2UuoshngsjNA" base_Element="_DekbwbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DelC07hiEe2UuoshngsjNA" base_Element="_DelC0bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Delp4rhiEe2UuoshngsjNA" base_Element="_Delp4LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DemQ8LhiEe2UuoshngsjNA" base_Element="_Delp47hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Dem4ALhiEe2UuoshngsjNA" base_Element="_DemQ8bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DenfELhiEe2UuoshngsjNA" base_Element="_Dem4AbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DeoGIrhiEe2UuoshngsjNA" base_Element="_DeoGILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DeotMLhiEe2UuoshngsjNA" base_Element="_DeoGI7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DeotM7hiEe2UuoshngsjNA" base_Element="_DeotMbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DepUQrhiEe2UuoshngsjNA" base_Element="_DepUQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Dep7ULhiEe2UuoshngsjNA" base_Element="_DepUQ7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Dep7U7hiEe2UuoshngsjNA" base_Element="_Dep7UbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DeqiYrhiEe2UuoshngsjNA" base_Element="_DeqiYLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DerJcLhiEe2UuoshngsjNA" base_Element="_DeqiY7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DerJc7hiEe2UuoshngsjNA" base_Element="_DerJcbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DerwgLhiEe2UuoshngsjNA" base_Element="_DerJdLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Derwg7hiEe2UuoshngsjNA" base_Element="_DerwgbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DesXkLhiEe2UuoshngsjNA" base_Element="_DerwhLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DesXk7hiEe2UuoshngsjNA" base_Element="_DesXkbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Des-oLhiEe2UuoshngsjNA" base_Element="_DesXlLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Des-o7hiEe2UuoshngsjNA" base_Element="_Des-obhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DetlsLhiEe2UuoshngsjNA" base_Element="_Des-pLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Detls7hiEe2UuoshngsjNA" base_Element="_DetlsbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DeuMwLhiEe2UuoshngsjNA" base_Element="_DetltLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DeuMw7hiEe2UuoshngsjNA" base_Element="_DeuMwbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Deuz0LhiEe2UuoshngsjNA" base_Element="_DeuMxLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Deuz07hiEe2UuoshngsjNA" base_Element="_Deuz0bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Deva4bhiEe2UuoshngsjNA" base_Element="_Deuz1LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DewB8LhiEe2UuoshngsjNA" base_Element="_Deva4rhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DewB87hiEe2UuoshngsjNA" base_Element="_DewB8bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DewpALhiEe2UuoshngsjNA" base_Element="_DewB9LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DewpA7hiEe2UuoshngsjNA" base_Element="_DewpAbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DexQErhiEe2UuoshngsjNA" base_Element="_DexQELhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DeyeMLhiEe2UuoshngsjNA" base_Element="_Dex3ILhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DeyeM7hiEe2UuoshngsjNA" base_Element="_DeyeMbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DezFQrhiEe2UuoshngsjNA" base_Element="_DezFQLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DezsULhiEe2UuoshngsjNA" base_Element="_DezFQ7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_DezsU7hiEe2UuoshngsjNA" base_Element="_DezsUbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De0TYrhiEe2UuoshngsjNA" base_Element="_De0TYLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De06cLhiEe2UuoshngsjNA" base_Element="_De0TY7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De06c7hiEe2UuoshngsjNA" base_Element="_De06cbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De1hgLhiEe2UuoshngsjNA" base_Element="_De06dLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De1hg7hiEe2UuoshngsjNA" base_Element="_De1hgbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De2IkLhiEe2UuoshngsjNA" base_Element="_De1hhLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De2Ik7hiEe2UuoshngsjNA" base_Element="_De2IkbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De2vorhiEe2UuoshngsjNA" base_Element="_De2voLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De2vpbhiEe2UuoshngsjNA" base_Element="_De2vo7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De3WsLhiEe2UuoshngsjNA" base_Element="_De2vprhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De3Ws7hiEe2UuoshngsjNA" base_Element="_De3WsbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De39wrhiEe2UuoshngsjNA" base_Element="_De39wLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De39xbhiEe2UuoshngsjNA" base_Element="_De39w7hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De4k0rhiEe2UuoshngsjNA" base_Element="_De4k0LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De5L4LhiEe2UuoshngsjNA" base_Element="_De4k07hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De5L47hiEe2UuoshngsjNA" base_Element="_De5L4bhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De5y8rhiEe2UuoshngsjNA" base_Element="_De5y8LhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De6aALhiEe2UuoshngsjNA" base_Element="_De5y87hiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De6aA7hiEe2UuoshngsjNA" base_Element="_De6aAbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De7BELhiEe2UuoshngsjNA" base_Element="_De6aBLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De7BE7hiEe2UuoshngsjNA" base_Element="_De7BEbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De7oILhiEe2UuoshngsjNA" base_Element="_De7BFLhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De8PMLhiEe2UuoshngsjNA" base_Element="_De7oIbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De82QLhiEe2UuoshngsjNA" base_Element="_De8PMbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_De9dULhiEe2UuoshngsjNA" base_Element="_De82QbhiEe2UuoshngsjNA"/>
  <UMLLabProfile:Patch xmi:id="_KAJ5cLhiEe2UuoshngsjNA" base_Element="_DF-VkLhiEe2UuoshngsjNA" patchText="@@ -367,26 +367,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_KALHkLhiEe2UuoshngsjNA" base_Element="_DGpD8LhiEe2UuoshngsjNA" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_KALHkbhiEe2UuoshngsjNA" base_Element="_DIbzsLhiEe2UuoshngsjNA" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_KALuoLhiEe2UuoshngsjNA" base_Element="_DIjvgLhiEe2UuoshngsjNA" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_KANj0LhiEe2UuoshngsjNA" base_Element="_DI0OMLhiEe2UuoshngsjNA" patchText="@@ -3991,22 +3991,25 @@&#xA; .%0D%0A */%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
</xmi:XMI>
