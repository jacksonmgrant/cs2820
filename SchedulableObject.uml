<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_bUx2MLhSEe2UuoshngsjNA" name="SchedulableObject">
    <eAnnotations xmi:id="_d5E-8LhSEe2UuoshngsjNA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_d5WEsLhSEe2UuoshngsjNA" source="codegen">
        <details xmi:id="_d5WrwLhSEe2UuoshngsjNA" key="codegenDirectory" value="/cs2820/src"/>
        <details xmi:id="_lo1f8LhSEe2UuoshngsjNA" key="AssociatedSourceCode" value="/cs2820/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820/src/edu/uiowa/cs/warp/Edge.java;3274728775/1;/cs2820/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820/src/edu/uiowa/cs/warp/Flow.java;559645871/1;/cs2820/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820/src/edu/uiowa/cs/warp/Program.java;2750337732/1;/cs2820/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820/src/edu/uiowa/cs/warp/ProgramVisualization.java;1316782014/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;2919449855/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2803977720/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820/src/edu/uiowa/cs/warp/Warp.java;1531133216/1;/cs2820/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadDescription.java;3772857374/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadListener.java;3333188147/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadTest.java;2658600754/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoad.java;2978729470/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_gUQn8LhSEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_gURPALhSEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_gURPAbhSEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_gURPArhSEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_gURPA7hSEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_gUR2ELhSEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_gUR2EbhSEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_gUR2ErhSEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_gUTEMLhSEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_gRN7ALhSEe2UuoshngsjNA" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_gROiELhSEe2UuoshngsjNA" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_gROiEbhSEe2UuoshngsjNA" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_gRXsALhSEe2UuoshngsjNA" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_gUqQkLhSEe2UuoshngsjNA" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_hJEJALhSEe2UuoshngsjNA" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_gWeOcLhSEe2UuoshngsjNA" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_hLE7MLhSEe2UuoshngsjNA" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_gWljMLhSEe2UuoshngsjNA" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_hLJMoLhSEe2UuoshngsjNA" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_hLKawbhSEe2UuoshngsjNA" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gbkw4LhSEe2UuoshngsjNA" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_hNbEkLhSEe2UuoshngsjNA" general="_hHFzELhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQGlILhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQHMMLhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTgecLhSEe2UuoshngsjNA" name="AbstractMap" specification="_gbsFoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hThFgLhSEe2UuoshngsjNA" type="_gbkw4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gbsFoLhSEe2UuoshngsjNA" name="AbstractMap" method="_hTgecLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gbvI8LhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gbvI8bhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gbvwALhSEe2UuoshngsjNA" type="_gbkw4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gbyzULhSEe2UuoshngsjNA" name="Activation">
              <generalization xmi:id="_hHajMbhSEe2UuoshngsjNA" general="_gnE2QLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQHzQLhSEe2UuoshngsjNA" name="coordinators" type="_hHI2YLhSEe2UuoshngsjNA" isReadOnly="true" association="_hW-CILhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQJBYLhSEe2UuoshngsjNA" name="edges" type="_hHI2YLhSEe2UuoshngsjNA" isReadOnly="true" association="_hW_3ULhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQKPgLhSEe2UuoshngsjNA" name="additionalScheduleTimes" type="_hHI2YLhSEe2UuoshngsjNA" isReadOnly="true" association="_hXAeYbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQLdoLhSEe2UuoshngsjNA" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hQLdobhSEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_hNdg0bhSEe2UuoshngsjNA" client="_gbyzULhSEe2UuoshngsjNA" supplier="_hNcSsbhSEe2UuoshngsjNA" contract="_hNcSsbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTl-ALhSEe2UuoshngsjNA" name="Activation" specification="_gb1PkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTl-AbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hTl-ArhSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTmlELhSEe2UuoshngsjNA" name="Activation" specification="_hHNH0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTmlEbhSEe2UuoshngsjNA" name="elem" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hTmlErhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hTmlE7hSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTnMILhSEe2UuoshngsjNA" name="clone" specification="_gb3r0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTnzMLhSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hToaQLhSEe2UuoshngsjNA" name="getEdgesByReleaseTime" specification="_gb79QLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hToaQbhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hToaQrhSEe2UuoshngsjNA" name="getEdgesByLatestReleaseTime" specification="_gb-ZgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hToaQ7hSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTpBULhSEe2UuoshngsjNA" name="getEdgesByPeriod" specification="_gcA1wLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTpBUbhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTpoYLhSEe2UuoshngsjNA" name="getEdgesByDeadline" specification="_gcCq8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTpoYbhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTpoYrhSEe2UuoshngsjNA" name="getEdgesByPriority" specification="_gcIKgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTpoY7hSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTqPcLhSEe2UuoshngsjNA" name="addEdges" specification="_hNf9ELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTqPcbhSEe2UuoshngsjNA" name="edges" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTq2gLhSEe2UuoshngsjNA" name="addEdge" specification="_hHQyMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTq2gbhSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTq2grhSEe2UuoshngsjNA" name="increaseEdgePhases" specification="_gcL04LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTq2g7hSEe2UuoshngsjNA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTrdkLhSEe2UuoshngsjNA" name="updatePriorityAndRelease" specification="_gcMb8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTrdkbhSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTrdkrhSEe2UuoshngsjNA" name="addConflict" specification="_gcNqELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTrdk7hSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTsEoLhSEe2UuoshngsjNA" name="addConflicts" specification="_hNiZULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTsEobhSEe2UuoshngsjNA" name="conflicts" type="_hHL5sbhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTsEorhSEe2UuoshngsjNA" name="addCoordinator" specification="_gcR7gLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTsEo7hSEe2UuoshngsjNA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTtSwLhSEe2UuoshngsjNA" name="addCoordinators" specification="_hNjncbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTtSwbhSEe2UuoshngsjNA" name="coordinators" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTtSwrhSEe2UuoshngsjNA" name="addScheduleTimes" specification="_hNlcoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTt50LhSEe2UuoshngsjNA" name="scheduleTime" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTt50bhSEe2UuoshngsjNA" name="getNextScheduleTime" specification="_gcn5wLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTt50rhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hTt507hSEe2UuoshngsjNA" type="_goRJELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTug4LhSEe2UuoshngsjNA" name="getMatchingEndTime" specification="_gcpu8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTug4bhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hTug4rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTvH8LhSEe2UuoshngsjNA" name="getNextStartTime" specification="_gcrkILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTvH8bhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hTvH8rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTvH87hSEe2UuoshngsjNA" name="getNextEndTime" specification="_gcuncLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTvH9LhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hTvH9bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTvvALhSEe2UuoshngsjNA" name="getNumEdges" specification="_gcv1kLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTvvAbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTvvArhSEe2UuoshngsjNA" name="compareTo" specification="_hHSAUbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTvvA7hSEe2UuoshngsjNA" name="obj" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hTvvBLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTwWELhSEe2UuoshngsjNA" name="conflictExists" specification="_hHVDoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTwWEbhSEe2UuoshngsjNA" name="obj" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hTwWErhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTwWE7hSEe2UuoshngsjNA" name="canCombine" specification="_hHVqsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTwWFLhSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hTwWFbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTwWFrhSEe2UuoshngsjNA" name="getDelta" specification="_gcxqwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTwWF7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTw9ILhSEe2UuoshngsjNA" name="getExecutionDuration" specification="_gc0HALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTw9IbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTw9IrhSEe2UuoshngsjNA" name="getCombinedExecutionDuration" specification="_hHWRwbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTw9I7hSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hTw9JLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTxkMLhSEe2UuoshngsjNA" name="printAll" specification="_gc2jQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTxkMbhSEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTxkMrhSEe2UuoshngsjNA" name="printAll" specification="_gc4YcLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTxkM7hSEe2UuoshngsjNA" name="printEdges" specification="_hHXf4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTxkNLhSEe2UuoshngsjNA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hTxkNbhSEe2UuoshngsjNA" name="edges" type="_gmbWALhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTyLQLhSEe2UuoshngsjNA" name="printEdges" specification="_hHYuAbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTyLQbhSEe2UuoshngsjNA" name="edges" type="_gmbWALhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gb1PkLhSEe2UuoshngsjNA" name="Activation" visibility="package" method="_hTl-ALhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gb12obhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gb2dsLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gb12oLhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gb2dsbhSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gb3r0LhSEe2UuoshngsjNA" name="clone" method="_hTnMILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hHOV8LhSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gb79QLhSEe2UuoshngsjNA" name="getEdgesByReleaseTime" method="_hToaQLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_KsLhSEe2UuoshngsjNA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_hHOV8bhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gb-ZgLhSEe2UuoshngsjNA" name="getEdgesByLatestReleaseTime" method="_hToaQrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_KsbhSEe2UuoshngsjNA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_hHO9ALhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gcA1wLhSEe2UuoshngsjNA" name="getEdgesByPeriod" method="_hTpBULhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_KsrhSEe2UuoshngsjNA">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_hHO9AbhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gcCq8LhSEe2UuoshngsjNA" name="getEdgesByDeadline" method="_hTpoYLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xwLhSEe2UuoshngsjNA">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_hHO9ArhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gcIKgLhSEe2UuoshngsjNA" name="getEdgesByPriority" method="_hTpoYrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xwbhSEe2UuoshngsjNA">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_hHQLILhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gcL04LhSEe2UuoshngsjNA" name="increaseEdgePhases" method="_hTq2grhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xwrhSEe2UuoshngsjNA">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_gcL04bhSEe2UuoshngsjNA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gcMb8LhSEe2UuoshngsjNA" name="updatePriorityAndRelease" method="_hTrdkLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xw7hSEe2UuoshngsjNA">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_gcNDALhSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gcNqELhSEe2UuoshngsjNA" name="addConflict" method="_hTrdkrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gcNqEbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gcR7gLhSEe2UuoshngsjNA" name="addCoordinator" method="_hTsEorhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gcR7gbhSEe2UuoshngsjNA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gcn5wLhSEe2UuoshngsjNA" name="getNextScheduleTime" method="_hTt50bhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xxbhSEe2UuoshngsjNA">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_gcn5wbhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hHSAULhSEe2UuoshngsjNA" type="_goRJELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gcpu8LhSEe2UuoshngsjNA" name="getMatchingEndTime" method="_hTug4LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xxrhSEe2UuoshngsjNA">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_gcpu8bhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gcqWALhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gcrkILhSEe2UuoshngsjNA" name="getNextStartTime" method="_hTvH8LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xx7hSEe2UuoshngsjNA">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_gcsyQLhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gctZULhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gcuncLhSEe2UuoshngsjNA" name="getNextEndTime" method="_hTvH87hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xyLhSEe2UuoshngsjNA">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_gcvOgLhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gcvOgbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gcv1kLhSEe2UuoshngsjNA" name="getNumEdges" method="_hTvvALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gcv1kbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gcxqwLhSEe2UuoshngsjNA" name="getDelta" method="_hTwWFrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xybhSEe2UuoshngsjNA">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_gcyR0LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gc0HALhSEe2UuoshngsjNA" name="getExecutionDuration" method="_hTw9ILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gc0uELhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gc2jQLhSEe2UuoshngsjNA" name="printAll" method="_hTxkMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gc2jQbhSEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gc4YcLhSEe2UuoshngsjNA" name="printAll" method="_hTxkMrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_hHNH0LhSEe2UuoshngsjNA" name="Activation" visibility="package" method="_hTmlELhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hHNu4rhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hHNu47hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hHNu4LhSEe2UuoshngsjNA" name="elem" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHNu4bhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hHNu5LhSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hHQyMLhSEe2UuoshngsjNA" name="addEdge" method="_hTq2gLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hHRZQLhSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hHSAUbhSEe2UuoshngsjNA" name="compareTo" method="_hTvvArhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hHSnYLhSEe2UuoshngsjNA" name="obj" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHSnYbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hHVDoLhSEe2UuoshngsjNA" name="conflictExists" method="_hTwWELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hHVDobhSEe2UuoshngsjNA" name="obj" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHVDorhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hHVqsLhSEe2UuoshngsjNA" name="canCombine" method="_hTwWE7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hHVqsbhSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHWRwLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hHWRwbhSEe2UuoshngsjNA" name="getCombinedExecutionDuration" method="_hTw9IrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hHW40LhSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHW40bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hHXf4LhSEe2UuoshngsjNA" name="printEdges" visibility="private" method="_hTxkM7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hHXf4bhSEe2UuoshngsjNA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hHXf4rhSEe2UuoshngsjNA" name="edges" type="_gmbWALhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hHYuAbhSEe2UuoshngsjNA" name="printEdges" visibility="private" method="_hTyLQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hHZVELhSEe2UuoshngsjNA" name="edges" type="_gmbWALhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hNf9ELhSEe2UuoshngsjNA" name="addEdges" method="_hTqPcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hNf9EbhSEe2UuoshngsjNA" name="edges" type="_hHI2YLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hNiZULhSEe2UuoshngsjNA" name="addConflicts" method="_hTsEoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hNiZUbhSEe2UuoshngsjNA" name="conflicts" type="_hHL5sbhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hNjncbhSEe2UuoshngsjNA" name="addCoordinators" method="_hTtSwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hNjncrhSEe2UuoshngsjNA" name="coordinators" type="_hHI2YLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hNlcoLhSEe2UuoshngsjNA" name="addScheduleTimes" method="_hTtSwrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hV_xxLhSEe2UuoshngsjNA">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_hNlcobhSEe2UuoshngsjNA" name="scheduleTime" type="_hHI2YLhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gdXgoLhSEe2UuoshngsjNA" name="Activations">
              <generalization xmi:id="_hHgCwLhSEe2UuoshngsjNA" general="_gbkw4LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQPIALhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQPvELhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gdZV0LhSEe2UuoshngsjNA" name="BasicPoset">
              <ownedComment xmi:id="_hWAY0LhSEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_hHifALhSEe2UuoshngsjNA" general="_gkVrULhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTyyULhSEe2UuoshngsjNA" name="BasicPoset" specification="_hHhQ4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTyyUbhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hTyyUrhSEe2UuoshngsjNA" type="_gdZV0LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hHhQ4LhSEe2UuoshngsjNA" name="BasicPoset" visibility="package" method="_hTyyULhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hHh38bhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hHh38rhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hHh38LhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHh387hSEe2UuoshngsjNA" type="_gdZV0LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gdbyELhSEe2UuoshngsjNA" name="ChannelAnalysis">
              <ownedComment xmi:id="_hWAY0bhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hQPvEbhSEe2UuoshngsjNA" name="program" visibility="private" type="_glHucLhSEe2UuoshngsjNA" association="_hXBsgLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQQ9MLhSEe2UuoshngsjNA" name="programTable" visibility="private" type="_gmC7gLhSEe2UuoshngsjNA" association="_hXCTkbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQRkQbhSEe2UuoshngsjNA" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTzZYLhSEe2UuoshngsjNA" name="ChannelAnalysis" specification="_hHjGELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTzZYbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hTzZYrhSEe2UuoshngsjNA" type="_gdbyELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hTzZY7hSEe2UuoshngsjNA" name="ChannelAnalysis" specification="_hHjtILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hTzZZLhSEe2UuoshngsjNA" name="program" type="_glHucLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hTzZZbhSEe2UuoshngsjNA" type="_gdbyELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT2csLhSEe2UuoshngsjNA" name="isChannelConflict" specification="_gdifwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT2csbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gdifwLhSEe2UuoshngsjNA" name="isChannelConflict" method="_hT2csLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gdjt4LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hHjGELhSEe2UuoshngsjNA" name="ChannelAnalysis" visibility="package" method="_hTzZYLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hHjGErhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hHjGE7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hHjGEbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHjGFLhSEe2UuoshngsjNA" type="_gdbyELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hHjtILhSEe2UuoshngsjNA" name="ChannelAnalysis" visibility="package" method="_hTzZY7hSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hHkUMLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hHkUMbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hHjtIbhSEe2UuoshngsjNA" name="program" type="_glHucLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHkUMrhSEe2UuoshngsjNA" type="_gdbyELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gdn_ULhSEe2UuoshngsjNA" name="ChannelVisualization">
              <ownedComment xmi:id="_hWAY0rhSEe2UuoshngsjNA">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hHmJYLhSEe2UuoshngsjNA" general="_gpHdoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQSyYLhSEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQSyYbhSEe2UuoshngsjNA" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQTZcLhSEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQTZcbhSEe2UuoshngsjNA" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQTZcrhSEe2UuoshngsjNA" name="warp" visibility="private" type="_gp2dcLhSEe2UuoshngsjNA" association="_hXDhsbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQUAgbhSEe2UuoshngsjNA" name="ca" visibility="private" type="_gdbyELhSEe2UuoshngsjNA" association="_hXEv0bhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT5gALhSEe2UuoshngsjNA" name="ChannelVisualization" specification="_hHliULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT5gAbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hT5gArhSEe2UuoshngsjNA" type="_gdn_ULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hHliULhSEe2UuoshngsjNA" name="ChannelVisualization" visibility="package" method="_hT5gALhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hHliUrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hHliU7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hHliUbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHliVLhSEe2UuoshngsjNA" type="_gdn_ULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gduF8LhSEe2UuoshngsjNA" name="Channels">
              <ownedComment xmi:id="_hWAY07hSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hQWcwLhSEe2UuoshngsjNA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQYR8LhSEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQZgELhSEe2UuoshngsjNA" name="channelsAvailable" visibility="package" type="_hHI2YLhSEe2UuoshngsjNA" association="_hXF98LhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT7VMLhSEe2UuoshngsjNA" name="Channels" specification="_gd4eALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT7VMbhSEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT7VMrhSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT7VM7hSEe2UuoshngsjNA" type="_gduF8LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT7VNLhSEe2UuoshngsjNA" name="getChannelSet" specification="_gd6TMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT7VNbhSEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT7VNrhSEe2UuoshngsjNA" type="_hHKEgLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT78QLhSEe2UuoshngsjNA" name="addNewChannelSet" specification="_ge5xsLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT78QbhSEe2UuoshngsjNA" name="isEmpty" specification="_ge7m4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT78QrhSEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT78Q7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT8jULhSEe2UuoshngsjNA" name="removeChannel" specification="_gfCUkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT8jUbhSEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT8jUrhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT8jU7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT8jVLhSEe2UuoshngsjNA" name="addChannel" specification="_gfGmALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT8jVbhSEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT8jVrhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT8jV7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT9KYLhSEe2UuoshngsjNA" name="getNumChannels" specification="_gfK3cLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT9KYbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gd4eALhSEe2UuoshngsjNA" name="Channels" visibility="package" method="_hT7VMLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gd5FErhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gd5FE7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gd5FELhSEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gd5FEbhSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gd5FFLhSEe2UuoshngsjNA" type="_gduF8LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gd6TMLhSEe2UuoshngsjNA" name="getChannelSet" method="_hT7VNLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gd6TMbhSEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hNsKULhSEe2UuoshngsjNA" type="_hHKEgLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ge5xsLhSEe2UuoshngsjNA" name="addNewChannelSet" method="_hT78QLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_ge7m4LhSEe2UuoshngsjNA" name="isEmpty" method="_hT78QbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ge81ALhSEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ge9cELhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfCUkLhSEe2UuoshngsjNA" name="removeChannel" method="_hT8jULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfC7oLhSEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfDisLhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfEJwLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfGmALhSEe2UuoshngsjNA" name="addChannel" method="_hT8jVLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfGmAbhSEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfGmArhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfHNELhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfK3cLhSEe2UuoshngsjNA" name="getNumChannels" method="_hT9KYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfMFkLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_gdwiMLhSEe2UuoshngsjNA" name="ChannelSet" visibility="private">
                <generalization xmi:id="_hNpuELhSEe2UuoshngsjNA" general="_hHKEgLhSEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_hQV1sLhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQV1sbhSEe2UuoshngsjNA" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT6HELhSEe2UuoshngsjNA" name="ChannelSet" specification="_gdxwULhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hT6HEbhSEe2UuoshngsjNA" type="_gdwiMLhSEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT6uILhSEe2UuoshngsjNA" name="ChannelSet" specification="_gdzlgLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hT6uIbhSEe2UuoshngsjNA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_hT6uIrhSEe2UuoshngsjNA" type="_gdwiMLhSEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_gdxwULhSEe2UuoshngsjNA" name="ChannelSet" visibility="private" method="_hT6HELhSEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_gdxwUbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_gdyXYLhSEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_gdyXYbhSEe2UuoshngsjNA" type="_gdwiMLhSEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_gdzlgLhSEe2UuoshngsjNA" name="ChannelSet" visibility="private" method="_hT6uILhSEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_gd0MkbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_gd0MkrhSEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_gd0MkLhSEe2UuoshngsjNA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_gd0Mk7hSEe2UuoshngsjNA" type="_gdwiMLhSEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gfPv8LhSEe2UuoshngsjNA" name="CodeFragment">
              <ownedAttribute xmi:id="_hQbVQLhSEe2UuoshngsjNA" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQb8ULhSEe2UuoshngsjNA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQb8UbhSEe2UuoshngsjNA" name="edges" visibility="package" type="_hHI2YLhSEe2UuoshngsjNA" association="_hXGlAbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQdxgLhSEe2UuoshngsjNA" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQeYkLhSEe2UuoshngsjNA" name="codeFragment" visibility="package" type="_hHI2YLhSEe2UuoshngsjNA" association="_hXHzIbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQgNwbhSEe2UuoshngsjNA" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQiC8LhSEe2UuoshngsjNA" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT9KYrhSEe2UuoshngsjNA" name="CodeFragment" specification="_gfXEsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT9KY7hSEe2UuoshngsjNA" type="_gfPv8LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT-YgLhSEe2UuoshngsjNA" name="CodeFragment" specification="_hNt_gLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT-YgbhSEe2UuoshngsjNA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT-YgrhSEe2UuoshngsjNA" name="edges" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hT-Yg7hSEe2UuoshngsjNA" name="coordinators" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hT-YhLhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT-YhbhSEe2UuoshngsjNA" type="_gfPv8LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT-YhrhSEe2UuoshngsjNA" name="getCoordinator" specification="_gfY54LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT-Yh7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT-_kLhSEe2UuoshngsjNA" name="instructions" specification="_gfZg8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT-_kbhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT-_krhSEe2UuoshngsjNA" name="size" specification="_gfdLULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT-_k7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT_moLhSEe2UuoshngsjNA" name="generateCodeFragment" specification="_gfdyYLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hT_mobhSEe2UuoshngsjNA" name="getBaseInstruction" specification="_gfeZcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hT_morhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT_mo7hSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT_mpLhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hT_mpbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUANsLhSEe2UuoshngsjNA" name="push" specification="_gfg1sLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUANsbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUANsrhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUANs7hSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUANtLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUANtbhSEe2UuoshngsjNA" name="pull" specification="_gfiq4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUANtrhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUANt7hSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUANuLhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUANubhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUCC4LhSEe2UuoshngsjNA" name="ifHas" specification="_gfkgELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUCC4bhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUCC4rhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUCC47hSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUCC5LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUCp8LhSEe2UuoshngsjNA" name="ifNotHas" specification="_gfnjYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUCp8bhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUCp8rhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUCp87hSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUCp9LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUCp9bhSEe2UuoshngsjNA" name="wait" specification="_gfp_oLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUCp9rhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUCp97hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUDRALhSEe2UuoshngsjNA" name="sleep" specification="_gfqmsbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUDRAbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUDRArhSEe2UuoshngsjNA" name="reportIfDifferentCoordinators" specification="_hN4XkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUDRA7hSEe2UuoshngsjNA" name="coordinators" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUDRBLhSEe2UuoshngsjNA" name="multipleCoordinators" specification="_hN6MwbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUDRBbhSEe2UuoshngsjNA" name="coordinators" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUDRBrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gfXEsLhSEe2UuoshngsjNA" name="CodeFragment" visibility="package" method="_hT9KYrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gfXEsbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gfXEsrhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWAY1LhSEe2UuoshngsjNA">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_gfXEs7hSEe2UuoshngsjNA" type="_gfPv8LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gfY54LhSEe2UuoshngsjNA" name="getCoordinator" method="_hT-YhrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWA_4bhSEe2UuoshngsjNA">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_gfY54bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfZg8LhSEe2UuoshngsjNA" name="instructions" method="_hT-_kLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWA_4rhSEe2UuoshngsjNA">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_hN0GILhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gfdLULhSEe2UuoshngsjNA" name="size" method="_hT-_krhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWA_47hSEe2UuoshngsjNA">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_gfdLUbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfdyYLhSEe2UuoshngsjNA" name="generateCodeFragment" visibility="private" method="_hT_moLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gfeZcLhSEe2UuoshngsjNA" name="getBaseInstruction" visibility="private" method="_hT_mobhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfeZcbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gffAgLhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gffAgbhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gffnkLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfg1sLhSEe2UuoshngsjNA" name="push" visibility="private" method="_hUANsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfg1sbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfg1srhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfhcwLhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfhcwbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfiq4LhSEe2UuoshngsjNA" name="pull" visibility="private" method="_hUANtbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfjR8LhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfjR8bhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfjR8rhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfjR87hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfkgELhSEe2UuoshngsjNA" name="ifHas" visibility="private" method="_hUCC4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfluMLhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfmVQLhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfmVQbhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfm8ULhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfnjYLhSEe2UuoshngsjNA" name="ifNotHas" visibility="private" method="_hUCp8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfnjYbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfoKcLhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfoKcbhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfpYkLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfp_oLhSEe2UuoshngsjNA" name="wait" method="_hUCp9bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfp_obhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gfqmsLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gfqmsbhSEe2UuoshngsjNA" name="sleep" isStatic="true" method="_hUDRALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gfrNwLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hNt_gLhSEe2UuoshngsjNA" name="CodeFragment" visibility="package" method="_hT-YgLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hNvNorhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hNvNo7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWA_4LhSEe2UuoshngsjNA">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_hNt_gbhSEe2UuoshngsjNA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hNumkLhSEe2UuoshngsjNA" name="edges" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hNvNoLhSEe2UuoshngsjNA" name="coordinators" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hNvNobhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hNv0sLhSEe2UuoshngsjNA" type="_gfPv8LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hN4XkLhSEe2UuoshngsjNA" name="reportIfDifferentCoordinators" visibility="private" method="_hUDRArhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hN4-oLhSEe2UuoshngsjNA" name="coordinators" type="_hHI2YLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hN6MwbhSEe2UuoshngsjNA" name="multipleCoordinators" visibility="private" method="_hUDRBLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hN6MwrhSEe2UuoshngsjNA" name="coordinators" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hN6z0LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ggCaILhSEe2UuoshngsjNA" name="CombinedActivation">
              <generalization xmi:id="_hHzkwrhSEe2UuoshngsjNA" general="_gbyzULhSEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_hN9QELhSEe2UuoshngsjNA" client="_ggCaILhSEe2UuoshngsjNA" supplier="_hNcSsbhSEe2UuoshngsjNA" contract="_hNcSsbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUD4ELhSEe2UuoshngsjNA" name="CombinedActivation" specification="_ggIgwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUEfILhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUEfIbhSEe2UuoshngsjNA" type="_ggCaILhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUEfIrhSEe2UuoshngsjNA" name="CombinedActivation" specification="_hHvTULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUEfI7hSEe2UuoshngsjNA" name="elem" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUEfJLhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUEfJbhSEe2UuoshngsjNA" type="_ggCaILhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUEfJrhSEe2UuoshngsjNA" name="CombinedActivation" specification="_hHwhcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUEfJ7hSEe2UuoshngsjNA" name="priorEntry" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUEfKLhSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUEfKbhSEe2UuoshngsjNA" type="_ggCaILhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUFGMLhSEe2UuoshngsjNA" name="canCombine" specification="_hHxvkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUFGMbhSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUFGMrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ggIgwLhSEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_hUD4ELhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_ggJH0bhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ggJu4LhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ggJH0LhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ggJu4bhSEe2UuoshngsjNA" type="_ggCaILhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hHvTULhSEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_hUEfIrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hHv6YrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hHv6Y7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hHv6YLhSEe2UuoshngsjNA" name="elem" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHv6YbhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hHv6ZLhSEe2UuoshngsjNA" type="_ggCaILhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hHwhcLhSEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_hUEfJrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hHxIgbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hHxIgrhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hHwhcbhSEe2UuoshngsjNA" name="priorEntry" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHxIgLhSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHxIg7hSEe2UuoshngsjNA" type="_ggCaILhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hHxvkLhSEe2UuoshngsjNA" name="canCombine" method="_hUFGMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hHxvkbhSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hHyWoLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ggXKQLhSEe2UuoshngsjNA" name="CommunicationGraph">
              <ownedComment xmi:id="_hWA_5LhSEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hH3PI7hSEe2UuoshngsjNA" general="_gpHdoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQj4ILhSEe2UuoshngsjNA" name="wfm" visibility="package" type="_ghS-YLhSEe2UuoshngsjNA" association="_hXJBQLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQkfMLhSEe2UuoshngsjNA" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQlGQbhSEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQmUYLhSEe2UuoshngsjNA" name="workLoad" visibility="package" type="_grDXULhSEe2UuoshngsjNA" association="_hXJoUbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUFGM7hSEe2UuoshngsjNA" name="CommunicationGraph" specification="_hH1Z8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUFGNLhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUFGNbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUFGNrhSEe2UuoshngsjNA" type="_ggXKQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUFtQLhSEe2UuoshngsjNA" name="CommunicationGraph" specification="_hH2BALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUFtQbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUFtQrhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUFtQ7hSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUFtRLhSEe2UuoshngsjNA" type="_ggXKQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUFtRbhSEe2UuoshngsjNA" name="createHeader" specification="_ggcp0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUFtRrhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUGUULhSEe2UuoshngsjNA" name="createFooter" specification="_ggefAbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUGUUbhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUGUUrhSEe2UuoshngsjNA" name="visualization" specification="_gggUMrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUGUU7hSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUG7YLhSEe2UuoshngsjNA" name="createWarpFileContent" specification="_ggma0bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUG7YbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ggcp0LhSEe2UuoshngsjNA" name="createHeader" method="_hUFtRbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hH3PILhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ggefAbhSEe2UuoshngsjNA" name="createFooter" method="_hUGUULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hH3PIbhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gggUMrhSEe2UuoshngsjNA" name="visualization" method="_hUGUUrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hH3PIrhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ggma0bhSEe2UuoshngsjNA" name="createWarpFileContent" method="_hUG7YLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ggma0rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hH1Z8LhSEe2UuoshngsjNA" name="CommunicationGraph" method="_hUFGM7hSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hH1Z87hSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hH1Z9LhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hH1Z8bhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hH1Z8rhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hH1Z9bhSEe2UuoshngsjNA" type="_ggXKQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hH2BALhSEe2UuoshngsjNA" name="CommunicationGraph" method="_hUFtQLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hH2oEbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hH2oErhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hH2BAbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hH2BArhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hH2oELhSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hH2oE7hSEe2UuoshngsjNA" type="_ggXKQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ggu9sLhSEe2UuoshngsjNA" name="ConnectivityPoset">
              <ownedComment xmi:id="_hWBm8LhSEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_hH5rYLhSEe2UuoshngsjNA" general="_gkVrULhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUG7YrhSEe2UuoshngsjNA" name="ConnectivityPoset" specification="_hH4dQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUG7Y7hSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUG7ZLhSEe2UuoshngsjNA" type="_ggu9sLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUHicLhSEe2UuoshngsjNA" name="findCoordinator" specification="_hN_sULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUHicbhSEe2UuoshngsjNA" name="nodesInFlow" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUHicrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hH4dQLhSEe2UuoshngsjNA" name="ConnectivityPoset" visibility="package" method="_hUG7YrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hH5EULhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hH5EUbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hH4dQbhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hH5EUrhSEe2UuoshngsjNA" type="_ggu9sLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hN_sULhSEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_hUHicLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hOATYLhSEe2UuoshngsjNA" name="nodesInFlow" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOATYbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gg1rYLhSEe2UuoshngsjNA" name="DeadlineComparator">
              <interfaceRealization xmi:id="_hOCIkLhSEe2UuoshngsjNA" client="_gg1rYLhSEe2UuoshngsjNA" supplier="_hH6ScLhSEe2UuoshngsjNA" contract="_hH6ScLhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUHic7hSEe2UuoshngsjNA" name="compare" specification="_hOEk0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUIJgLhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUIJgbhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUIJgrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hOEk0LhSEe2UuoshngsjNA" name="compare" method="_hUHic7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hOEk0bhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOEk0rhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOFL4LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gg6j4LhSEe2UuoshngsjNA" name="Description">
              <ownedComment xmi:id="_hWBm8bhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hOGaALhSEe2UuoshngsjNA" general="_hHI2YLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQnigLhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQoJkLhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUIwkLhSEe2UuoshngsjNA" name="Description" specification="_gg7K8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUIwkbhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUIwkrhSEe2UuoshngsjNA" name="Description" specification="_gg8ZELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUIwk7hSEe2UuoshngsjNA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUIwlLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUJXoLhSEe2UuoshngsjNA" name="toString" specification="_gg9nMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUJXobhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gg7K8LhSEe2UuoshngsjNA" name="Description" method="_hUIwkLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gg7yALhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gg7yAbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gg7yArhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gg8ZELhSEe2UuoshngsjNA" name="Description" method="_hUIwkrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gg8ZErhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gg8ZE7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gg8ZEbhSEe2UuoshngsjNA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gg9AILhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gg9nMLhSEe2UuoshngsjNA" name="toString" method="_hUJXoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gg9nMbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ghADcLhSEe2UuoshngsjNA" name="Edge">
              <generalization xmi:id="_hH_yALhSEe2UuoshngsjNA" general="_gnE2QLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQowoLhSEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQowobhSEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQpXsLhSEe2UuoshngsjNA" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQpXsbhSEe2UuoshngsjNA" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQp-wLhSEe2UuoshngsjNA" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQql0LhSEe2UuoshngsjNA" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQql0bhSEe2UuoshngsjNA" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQrz8LhSEe2UuoshngsjNA" name="state" type="_ghCfsLhSEe2UuoshngsjNA" association="_hWC1ELhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQsbALhSEe2UuoshngsjNA" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_hOHoILhSEe2UuoshngsjNA" client="_ghADcLhSEe2UuoshngsjNA" supplier="_hNcSsbhSEe2UuoshngsjNA" contract="_hNcSsbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUJXorhSEe2UuoshngsjNA" name="Edge" specification="_ghEU4bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUJXo7hSEe2UuoshngsjNA" type="_ghADcLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUJ-sLhSEe2UuoshngsjNA" name="Edge" specification="_ghGKELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUJ-sbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUJ-srhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUJ-s7hSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUJ-tLhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUJ-tbhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUJ-trhSEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUJ-t7hSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUJ-uLhSEe2UuoshngsjNA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUJ-ubhSEe2UuoshngsjNA" type="_ghADcLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUJ-urhSEe2UuoshngsjNA" name="compareTo" specification="_hH-j4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUJ-u7hSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUJ-vLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUKlwLhSEe2UuoshngsjNA" name="toString" specification="_ghH_QLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUKlwbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUKlwrhSEe2UuoshngsjNA" name="print" specification="_ghKbgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUKlw7hSEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hULM0LhSEe2UuoshngsjNA" name="print" specification="_ghMQsbhSEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ghEU4bhSEe2UuoshngsjNA" name="Edge" visibility="package" method="_hUJXorhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_ghE78LhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ghE78bhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ghE78rhSEe2UuoshngsjNA" type="_ghADcLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ghGKELhSEe2UuoshngsjNA" name="Edge" visibility="package" method="_hUJ-sLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_ghGxI7hSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ghGxJLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ghGKEbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghGKErhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghGKE7hSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghGKFLhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghGKFbhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghGxILhSEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghGxIbhSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghGxIrhSEe2UuoshngsjNA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghGxJbhSEe2UuoshngsjNA" type="_ghADcLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ghH_QLhSEe2UuoshngsjNA" name="toString" method="_hUKlwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ghImULhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ghKbgLhSEe2UuoshngsjNA" name="print" method="_hUKlwrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ghKbgbhSEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ghMQsbhSEe2UuoshngsjNA" name="print" method="_hULM0LhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_hH-j4LhSEe2UuoshngsjNA" name="compareTo" method="_hUJ-urhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hH-j4bhSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hH-j4rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ghCfsLhSEe2UuoshngsjNA" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_ghDt0LhSEe2UuoshngsjNA" name="RELEASED"/>
                <ownedLiteral xmi:id="_ghDt0bhSEe2UuoshngsjNA" name="EXECUTING"/>
                <ownedLiteral xmi:id="_ghEU4LhSEe2UuoshngsjNA" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ghS-YLhSEe2UuoshngsjNA" name="FileManager">
              <ownedComment xmi:id="_hWDcILhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hQtpILhSEe2UuoshngsjNA" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQuQMLhSEe2UuoshngsjNA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hULz4LhSEe2UuoshngsjNA" name="FileManager" specification="_ghkrMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hULz4bhSEe2UuoshngsjNA" type="_ghS-YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUMa8LhSEe2UuoshngsjNA" name="FileManager" specification="_ghmgYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUMa8bhSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUMa8rhSEe2UuoshngsjNA" type="_ghS-YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUMa87hSEe2UuoshngsjNA" name="getDocumentsDirectory" specification="_ghpjsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUNCALhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUNCAbhSEe2UuoshngsjNA" name="getCurrentDirectory" specification="_ghqKwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUNCArhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUNCA7hSEe2UuoshngsjNA" name="createFile" specification="_ghrY4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUNCBLhSEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUNCBbhSEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUNCBrhSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUNCB7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUNpELhSEe2UuoshngsjNA" name="createFile" specification="_ghsnALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUNpEbhSEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUNpErhSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUNpE7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUNpFLhSEe2UuoshngsjNA" name="createDirectory" specification="_ght1ILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUNpFbhSEe2UuoshngsjNA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUNpFrhSEe2UuoshngsjNA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUNpF7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUOQILhSEe2UuoshngsjNA" name="writeFile" specification="_ghvDQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUOQIbhSEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUOQIrhSEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUOQI7hSEe2UuoshngsjNA" name="readFile" specification="_ghwRYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUOQJLhSEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUOQJbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ghkrMLhSEe2UuoshngsjNA" name="FileManager" method="_hULz4LhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_ghkrMbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ghlSQLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWDcIbhSEe2UuoshngsjNA">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_ghlSQbhSEe2UuoshngsjNA" type="_ghS-YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ghmgYLhSEe2UuoshngsjNA" name="FileManager" method="_hUMa8LhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_ghnHcbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ghnHcrhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ghnHcLhSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghnHc7hSEe2UuoshngsjNA" type="_ghS-YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ghpjsLhSEe2UuoshngsjNA" name="getDocumentsDirectory" method="_hUMa87hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ghpjsbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ghqKwLhSEe2UuoshngsjNA" name="getCurrentDirectory" method="_hUNCAbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ghqx0LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ghrY4LhSEe2UuoshngsjNA" name="createFile" method="_hUNCA7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWDcIrhSEe2UuoshngsjNA">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ghrY4bhSEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghrY4rhSEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghr_8LhSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghr_8bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ghsnALhSEe2UuoshngsjNA" name="createFile" method="_hUNpELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ghsnAbhSEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghtOELhSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghtOEbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ght1ILhSEe2UuoshngsjNA" name="createDirectory" method="_hUNpFLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ght1IbhSEe2UuoshngsjNA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ght1IrhSEe2UuoshngsjNA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghucMLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ghvDQLhSEe2UuoshngsjNA" name="writeFile" method="_hUOQILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ghvDQbhSEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghvDQrhSEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ghwRYLhSEe2UuoshngsjNA" name="readFile" method="_hUOQI7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_ghw4cLhSEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ghw4cbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ghz7wLhSEe2UuoshngsjNA" name="Flow">
              <ownedComment xmi:id="_hWEDMLhSEe2UuoshngsjNA">
                <body>The Flow class extends the SchedulableObject file and implements Comparable.&#xD;
It keeps track of the flows used for the WARP project.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hIN0crhSEe2UuoshngsjNA" general="_gnE2QLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQzvwLhSEe2UuoshngsjNA" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQ0W0LhSEe2UuoshngsjNA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQ0W0bhSEe2UuoshngsjNA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQ094LhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQ094bhSEe2UuoshngsjNA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQ1k8LhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQ1k8bhSEe2UuoshngsjNA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQ2MALhSEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQ2MAbhSEe2UuoshngsjNA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQ3aILhSEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQ3aIbhSEe2UuoshngsjNA" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQ4BMLhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQ5PULhSEe2UuoshngsjNA" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hQ52YLhSEe2UuoshngsjNA" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQ52YrhSEe2UuoshngsjNA" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQ6dcbhSEe2UuoshngsjNA" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hQ8SoLhSEe2UuoshngsjNA" name="nodes" visibility="package" type="_hHI2YLhSEe2UuoshngsjNA" association="_hXK2cLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQ9gwbhSEe2UuoshngsjNA" name="linkTxAndTotalCost" visibility="package" type="_hHI2YLhSEe2UuoshngsjNA" association="_hXLdgbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hQ_V8LhSEe2UuoshngsjNA" name="edges" visibility="package" type="_hHI2YLhSEe2UuoshngsjNA" association="_hXMroLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRByMbhSEe2UuoshngsjNA" name="nodePredecessor" visibility="package" type="_gjzf0LhSEe2UuoshngsjNA" association="_hXN5wLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRCZQbhSEe2UuoshngsjNA" name="edgePredecessor" visibility="package" type="_ghADcLhSEe2UuoshngsjNA" association="_hXOg0bhSEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_hOLSgLhSEe2UuoshngsjNA" client="_ghz7wLhSEe2UuoshngsjNA" supplier="_hNcSsbhSEe2UuoshngsjNA" contract="_hNcSsbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUO3MLhSEe2UuoshngsjNA" name="Flow" specification="_gh2_ELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUO3MbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUO3MrhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUO3M7hSEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUO3NLhSEe2UuoshngsjNA" type="_ghz7wLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUO3NbhSEe2UuoshngsjNA" name="Flow" specification="_gh40QLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUO3NrhSEe2UuoshngsjNA" type="_ghz7wLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUPeQLhSEe2UuoshngsjNA" name="getInitialPriority" specification="_gh5bU7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUPeQbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUPeQrhSEe2UuoshngsjNA" name="getIndex" specification="_gh6pcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUPeQ7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUPeRLhSEe2UuoshngsjNA" name="getNumTxPerLink" specification="_gh7QgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUPeRbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUQFULhSEe2UuoshngsjNA" name="getNodes" specification="_gh73kbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUQFUbhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUQFUrhSEe2UuoshngsjNA" name="getEdges" specification="_gh-T0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUQFU7hSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUQFVLhSEe2UuoshngsjNA" name="addEdge" specification="_hILYMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUQFVbhSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUQsYLhSEe2UuoshngsjNA" name="addNode" specification="_hIL_QLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUQsYbhSEe2UuoshngsjNA" name="node" type="_gjzf0LhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUQsYrhSEe2UuoshngsjNA" name="getLinkTxAndTotalCost" specification="_giAwELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUQsY7hSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUQsZLhSEe2UuoshngsjNA" name="setInitialPriority" specification="_giClQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUQsZbhSEe2UuoshngsjNA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hURTcLhSEe2UuoshngsjNA" name="setIndex" specification="_giDzYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hURTcbhSEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hURTcrhSEe2UuoshngsjNA" name="setNumTxPerLink" specification="_giEacLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hURTc7hSEe2UuoshngsjNA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUR6gLhSEe2UuoshngsjNA" name="setNodes" specification="_hOOV0bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUR6gbhSEe2UuoshngsjNA" name="nodes" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUR6grhSEe2UuoshngsjNA" name="setLinkTxAndTotalCost" specification="_hOQLALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUR6g7hSEe2UuoshngsjNA" name="linkTxAndTotalCost" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUShkLhSEe2UuoshngsjNA" name="compareTo" specification="_hIMmULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUShkbhSEe2UuoshngsjNA" name="flow" type="_ghz7wLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUShkrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUShk7hSEe2UuoshngsjNA" name="toString" specification="_giFokLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUShlLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gh2_ELhSEe2UuoshngsjNA" name="Flow" visibility="package" method="_hUO3MLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gh3mI7hSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gh4NMLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWEDMbhSEe2UuoshngsjNA">
                  <body>Constructor that sets name, priority, and index.&#xD;
     * &#xD;
     * @param name the name of the flow&#xD;
     * @param priority the priority of the flow&#xD;
     * @param index the index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_gh3mILhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gh3mIbhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gh3mIrhSEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gh4NMbhSEe2UuoshngsjNA" type="_ghz7wLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gh40QLhSEe2UuoshngsjNA" name="Flow" visibility="package" method="_hUO3NbhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gh5bULhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gh5bUbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWEDMrhSEe2UuoshngsjNA">
                  <body>Constructor that sets the index, numTxPerLink, nodePredecessor, and edgePredecessor.&#xD;
     * It also initializes an ArrayList each for nodes, linkTxAndTotalCost, and edges.</body>
                </ownedComment>
                <ownedParameter xmi:id="_gh5bUrhSEe2UuoshngsjNA" type="_ghz7wLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gh5bU7hSEe2UuoshngsjNA" name="getInitialPriority" method="_hUPeQLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEDM7hSEe2UuoshngsjNA">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_gh6CYLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gh6pcLhSEe2UuoshngsjNA" name="getIndex" method="_hUPeQrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEDNLhSEe2UuoshngsjNA">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_gh6pcbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gh7QgLhSEe2UuoshngsjNA" name="getNumTxPerLink" method="_hUPeRLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEDNbhSEe2UuoshngsjNA">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_gh73kLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gh73kbhSEe2UuoshngsjNA" name="getNodes" method="_hUQFULhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEDNrhSEe2UuoshngsjNA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_hONuwLhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gh-T0LhSEe2UuoshngsjNA" name="getEdges" method="_hUQFUrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEDN7hSEe2UuoshngsjNA">
                  <body>@return the edges</body>
                </ownedComment>
                <ownedParameter xmi:id="_hONuwbhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_giAwELhSEe2UuoshngsjNA" name="getLinkTxAndTotalCost" method="_hUQsYrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEqQLhSEe2UuoshngsjNA">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_hOOV0LhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_giClQLhSEe2UuoshngsjNA" name="setInitialPriority" method="_hUQsZLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEqQbhSEe2UuoshngsjNA">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_giDMULhSEe2UuoshngsjNA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_giDzYLhSEe2UuoshngsjNA" name="setIndex" method="_hURTcLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEqQrhSEe2UuoshngsjNA">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_giDzYbhSEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_giEacLhSEe2UuoshngsjNA" name="setNumTxPerLink" method="_hURTcrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEqQ7hSEe2UuoshngsjNA">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_giEacbhSEe2UuoshngsjNA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_giFokLhSEe2UuoshngsjNA" name="toString" method="_hUShk7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_giGPoLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hILYMLhSEe2UuoshngsjNA" name="addEdge" method="_hUQFVLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEDOLhSEe2UuoshngsjNA">
                  <body>Add an edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hILYMbhSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hIL_QLhSEe2UuoshngsjNA" name="addNode" method="_hUQsYLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEDObhSEe2UuoshngsjNA">
                  <body>Add a node to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hIL_QbhSEe2UuoshngsjNA" name="node" type="_gjzf0LhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hIMmULhSEe2UuoshngsjNA" name="compareTo" method="_hUShkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hIMmUbhSEe2UuoshngsjNA" name="flow" type="_ghz7wLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hINNYLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hOOV0bhSEe2UuoshngsjNA" name="setNodes" method="_hUR6gLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEqRLhSEe2UuoshngsjNA">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_hOOV0rhSEe2UuoshngsjNA" name="nodes" type="_hHI2YLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hOQLALhSEe2UuoshngsjNA" name="setLinkTxAndTotalCost" method="_hUR6grhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWEqRbhSEe2UuoshngsjNA">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_hOQLAbhSEe2UuoshngsjNA" name="linkTxAndTotalCost" type="_hHI2YLhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_giTD8LhSEe2UuoshngsjNA" name="FlowMap">
              <ownedComment xmi:id="_hWEqRrhSEe2UuoshngsjNA">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hISF4LhSEe2UuoshngsjNA" general="_gbkw4LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRDnYLhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hREOcLhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_giUSELhSEe2UuoshngsjNA" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_hWEqR7hSEe2UuoshngsjNA">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hITUAbhSEe2UuoshngsjNA" general="_gbkw4LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hREOcbhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRE1gLhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_giWHQLhSEe2UuoshngsjNA" name="GraphViz">
              <ownedComment xmi:id="_hWEqSLhSEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hIXlcbhSEe2UuoshngsjNA" general="_gpHdoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRE1gbhSEe2UuoshngsjNA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRE1grhSEe2UuoshngsjNA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRFckLhSEe2UuoshngsjNA" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRFckbhSEe2UuoshngsjNA" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRFckrhSEe2UuoshngsjNA" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRGDobhSEe2UuoshngsjNA" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRGqsbhSEe2UuoshngsjNA" name="wfm" visibility="package" type="_ghS-YLhSEe2UuoshngsjNA" association="_hXPu8bhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRHRwbhSEe2UuoshngsjNA" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRH40bhSEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRIf4bhSEe2UuoshngsjNA" name="gv" visibility="package" type="_giWHQLhSEe2UuoshngsjNA" association="_hXQ9ELhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUTIoLhSEe2UuoshngsjNA" name="GraphViz" specification="_hIVJMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUTIobhSEe2UuoshngsjNA" name="wfm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUTIorhSEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUTIo7hSEe2UuoshngsjNA" type="_giWHQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUTvsLhSEe2UuoshngsjNA" name="GraphViz" specification="_hIWXULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUTvsbhSEe2UuoshngsjNA" name="wfm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUTvsrhSEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUTvs7hSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUTvtLhSEe2UuoshngsjNA" type="_giWHQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUTvtbhSEe2UuoshngsjNA" name="visualization" specification="_giZKkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUTvtrhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUUWwLhSEe2UuoshngsjNA" name="initializeGraphVizContent" specification="_gibm0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUUWwbhSEe2UuoshngsjNA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUUWwrhSEe2UuoshngsjNA" name="finalizeGraphVizContent" specification="_gic08LhSEe2UuoshngsjNA">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUUWw7hSEe2UuoshngsjNA" name="getGraphVizContent" specification="_gic08bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUUWxLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUU90LhSEe2UuoshngsjNA" name="createGraphVizContent" specification="_gidcAbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUU90bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUU90rhSEe2UuoshngsjNA" name="addFlowToGraphViz" specification="_gieqILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUU907hSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUWL8LhSEe2UuoshngsjNA" name="addSrcNodeToGraphViz" specification="_gif4QLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUWL8bhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUWzALhSEe2UuoshngsjNA" name="addSnkNodeToGraphViz" specification="_gigfULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUWzAbhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUWzArhSEe2UuoshngsjNA" name="finalizeCurrentFlowInGraphViz" specification="_gihGYLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUXaELhSEe2UuoshngsjNA" name="addNodeName" specification="_gihtcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUXaEbhSEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUXaErhSEe2UuoshngsjNA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_giZKkLhSEe2UuoshngsjNA" name="visualization" method="_hUTvtbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hIXlcLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gibm0LhSEe2UuoshngsjNA" name="initializeGraphVizContent" method="_hUUWwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gicN4LhSEe2UuoshngsjNA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gic08LhSEe2UuoshngsjNA" name="finalizeGraphVizContent" method="_hUUWwrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gic08bhSEe2UuoshngsjNA" name="getGraphVizContent" method="_hUUWw7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWFRULhSEe2UuoshngsjNA">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_gidcALhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gidcAbhSEe2UuoshngsjNA" name="createGraphVizContent" method="_hUU90LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gieDELhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gieqILhSEe2UuoshngsjNA" name="addFlowToGraphViz" method="_hUU90rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gieqIbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gif4QLhSEe2UuoshngsjNA" name="addSrcNodeToGraphViz" method="_hUWL8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gif4QbhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gigfULhSEe2UuoshngsjNA" name="addSnkNodeToGraphViz" method="_hUWzALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gigfUbhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gihGYLhSEe2UuoshngsjNA" name="finalizeCurrentFlowInGraphViz" method="_hUWzArhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gihtcLhSEe2UuoshngsjNA" name="addNodeName" visibility="private" method="_hUXaELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gihtcbhSEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gihtcrhSEe2UuoshngsjNA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hIVJMLhSEe2UuoshngsjNA" name="GraphViz" visibility="package" method="_hUTIoLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hIVwQrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hIVwQ7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hIVwQLhSEe2UuoshngsjNA" name="wfm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hIVwQbhSEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hIVwRLhSEe2UuoshngsjNA" type="_giWHQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hIWXULhSEe2UuoshngsjNA" name="GraphViz" visibility="package" method="_hUTvsLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hIW-YLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hIW-YbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hIWXUbhSEe2UuoshngsjNA" name="wfm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hIWXUrhSEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hIWXU7hSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hIW-YrhSEe2UuoshngsjNA" type="_giWHQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gitToLhSEe2UuoshngsjNA" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_hWFRUbhSEe2UuoshngsjNA">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_hOVDgLhSEe2UuoshngsjNA" general="_hIeTIbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRJuALhSEe2UuoshngsjNA" name="gv" visibility="package" type="_giWHQLhSEe2UuoshngsjNA" association="_hXRkIbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUYBILhSEe2UuoshngsjNA" name="GraphVizListener" specification="_hIhWcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUYBIbhSEe2UuoshngsjNA" name="gv" type="_giWHQLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUYBIrhSEe2UuoshngsjNA" type="_gitToLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUYBI7hSEe2UuoshngsjNA" name="buildGraphViz" specification="_hIikkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUYBJLhSEe2UuoshngsjNA" name="gv" type="_giWHQLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUYBJbhSEe2UuoshngsjNA" name="enterWarpName" specification="_hIjysbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUYBJrhSEe2UuoshngsjNA" name="ctx" type="_hIjLoLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUYoMLhSEe2UuoshngsjNA" name="exitWarp" specification="_hImO8bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUYoMbhSEe2UuoshngsjNA" name="ctx" type="_hIln4LhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUYoMrhSEe2UuoshngsjNA" name="enterFlowName" specification="_hIorMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUYoM7hSEe2UuoshngsjNA" name="ctx" type="_hIndErhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUZPQLhSEe2UuoshngsjNA" name="exitSrcNode" specification="_hIqgYbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUZPQbhSEe2UuoshngsjNA" name="ctx" type="_hIp5ULhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUZPQrhSEe2UuoshngsjNA" name="exitSnkNode" specification="_hItjsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUZPQ7hSEe2UuoshngsjNA" name="ctx" type="_hIsVkLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUZ2ULhSEe2UuoshngsjNA" name="exitFlow" specification="_hIxOEbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUZ2UbhSEe2UuoshngsjNA" name="ctx" type="_hIux0rhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hIhWcLhSEe2UuoshngsjNA" name="GraphVizListener" visibility="private" method="_hUYBILhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hIh9gLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hIh9gbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hIhWcbhSEe2UuoshngsjNA" name="gv" type="_giWHQLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hIh9grhSEe2UuoshngsjNA" type="_gitToLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hIikkLhSEe2UuoshngsjNA" name="buildGraphViz" isStatic="true" method="_hUYBI7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hIikkbhSEe2UuoshngsjNA" name="gv" type="_giWHQLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hIjysbhSEe2UuoshngsjNA" name="enterWarpName" method="_hUYBJbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hIjysrhSEe2UuoshngsjNA" name="ctx" type="_hIjLoLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hImO8bhSEe2UuoshngsjNA" name="exitWarp" method="_hUYoMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hImO8rhSEe2UuoshngsjNA" name="ctx" type="_hIln4LhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hIorMLhSEe2UuoshngsjNA" name="enterFlowName" method="_hUYoMrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hIorMbhSEe2UuoshngsjNA" name="ctx" type="_hIndErhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hIqgYbhSEe2UuoshngsjNA" name="exitSrcNode" method="_hUZPQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hIqgYrhSEe2UuoshngsjNA" name="ctx" type="_hIp5ULhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hItjsLhSEe2UuoshngsjNA" name="exitSnkNode" method="_hUZPQrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hItjsbhSEe2UuoshngsjNA" name="ctx" type="_hIsVkLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hIxOEbhSEe2UuoshngsjNA" name="exitFlow" method="_hUZ2ULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hIxOErhSEe2UuoshngsjNA" name="ctx" type="_hIux0rhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gi450LhSEe2UuoshngsjNA" name="GuiVisualization">
              <ownedComment xmi:id="_hWF4YLhSEe2UuoshngsjNA">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hRK8ILhSEe2UuoshngsjNA" name="frame" visibility="package" type="_hI1fgbhSEe2UuoshngsjNA" association="_hXSyQbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRLjMbhSEe2UuoshngsjNA" name="jtable" visibility="package" type="_hI3UsbhSEe2UuoshngsjNA" association="_hXTZUbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUadYLhSEe2UuoshngsjNA" name="GuiVisualization" specification="_gi6vALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUadYbhSEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUadYrhSEe2UuoshngsjNA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hUadY7hSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUadZLhSEe2UuoshngsjNA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hUadZbhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUadZrhSEe2UuoshngsjNA" type="_gi450LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUbEcLhSEe2UuoshngsjNA" name="setVisible" specification="_gi9yULhSEe2UuoshngsjNA">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUbEcbhSEe2UuoshngsjNA" name="resizeColumnWidth" specification="_hOW4sLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUbEcrhSEe2UuoshngsjNA" name="table" type="_hI3UsbhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gi6vALhSEe2UuoshngsjNA" name="GuiVisualization" method="_hUadYLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gi79ILhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gi79IbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWF4YbhSEe2UuoshngsjNA">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_gi7WELhSEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gi7WEbhSEe2UuoshngsjNA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gi8kMLhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gi7WErhSEe2UuoshngsjNA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gi9LQLhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gi79IrhSEe2UuoshngsjNA" type="_gi450LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gi9yULhSEe2UuoshngsjNA" name="setVisible" method="_hUbEcLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWGfcLhSEe2UuoshngsjNA">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_hOW4sLhSEe2UuoshngsjNA" name="resizeColumnWidth" visibility="private" method="_hUbEcbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hOW4sbhSEe2UuoshngsjNA" name="table" type="_hI3UsbhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gjBcsLhSEe2UuoshngsjNA" name="InputGraphFile">
              <ownedComment xmi:id="_hWGfcbhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hRMxUbhSEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRNYYLhSEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRNYYbhSEe2UuoshngsjNA" name="wfm" visibility="private" type="_ghS-YLhSEe2UuoshngsjNA" association="_hXUncbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRN_cbhSEe2UuoshngsjNA" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRN_crhSEe2UuoshngsjNA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hROmgbhSEe2UuoshngsjNA" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hROmgrhSEe2UuoshngsjNA" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUbEc7hSEe2UuoshngsjNA" name="InputGraphFile" specification="_hI_QgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUbEdLhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUbEdbhSEe2UuoshngsjNA" type="_gjBcsLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUbrgLhSEe2UuoshngsjNA" name="InputGraphFile" specification="_hI_3krhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUbrgbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUbrgrhSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUbrg7hSEe2UuoshngsjNA" type="_gjBcsLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUbrhLhSEe2UuoshngsjNA" name="setGraphFileName" specification="_gjGVMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUbrhbhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUcSkLhSEe2UuoshngsjNA" name="verifyGraphFileName" specification="_gjHjULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUcSkbhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUcSkrhSEe2UuoshngsjNA" name="readGraphFile" specification="_gjIKYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUcSk7hSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUcSlLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUcSlbhSEe2UuoshngsjNA" name="getInputGraphFileName" specification="_gjJYgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUcSlrhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUcSl7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUc5oLhSEe2UuoshngsjNA" name="readGraphFileContents" specification="_gjLNsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUc5obhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUc5orhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUc5o7hSEe2UuoshngsjNA" name="printVerboseMessage" specification="_gjMb0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUc5pLhSEe2UuoshngsjNA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUc5pbhSEe2UuoshngsjNA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUc5prhSEe2UuoshngsjNA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gjGVMLhSEe2UuoshngsjNA" name="setGraphFileName" visibility="private" method="_hUbrhLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gjGVMbhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gjHjULhSEe2UuoshngsjNA" name="verifyGraphFileName" visibility="private" method="_hUcSkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gjHjUbhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gjIKYLhSEe2UuoshngsjNA" name="readGraphFile" method="_hUcSkrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gjIKYbhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjIxcLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gjJYgLhSEe2UuoshngsjNA" name="getInputGraphFileName" visibility="private" method="_hUcSlbhSEe2UuoshngsjNA" raisedException="_hOXfwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gjJYgbhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjJ_kLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gjLNsLhSEe2UuoshngsjNA" name="readGraphFileContents" visibility="private" method="_hUc5oLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gjLNsbhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjL0wLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gjMb0LhSEe2UuoshngsjNA" name="printVerboseMessage" visibility="private" method="_hUc5o7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gjMb0bhSEe2UuoshngsjNA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjMb0rhSEe2UuoshngsjNA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjNC4LhSEe2UuoshngsjNA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hI_QgLhSEe2UuoshngsjNA" name="InputGraphFile" method="_hUbEc7hSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hI_QgrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hI_3kLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hI_QgbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hI_3kbhSEe2UuoshngsjNA" type="_gjBcsLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hI_3krhSEe2UuoshngsjNA" name="InputGraphFile" method="_hUbrgLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hJAeoLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hJAeobhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hI_3k7hSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hI_3lLhSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJAeorhSEe2UuoshngsjNA" type="_gjBcsLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gjR7YLhSEe2UuoshngsjNA" name="InstructionTimeSlot">
              <generalization xmi:id="_hJCT0LhSEe2UuoshngsjNA" general="_gm9hgLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRP0oLhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRQbsLhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUdgsLhSEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_gjTJgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUdgsbhSEe2UuoshngsjNA" type="_gjR7YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUdgsrhSEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_gjTwkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUdgs7hSEe2UuoshngsjNA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUdgtLhSEe2UuoshngsjNA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUdgtbhSEe2UuoshngsjNA" type="_gjR7YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUeHwLhSEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_gjVlwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUeHwbhSEe2UuoshngsjNA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hUeHwrhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUeHw7hSEe2UuoshngsjNA" type="_gjR7YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gjTJgLhSEe2UuoshngsjNA" name="InstructionTimeSlot" method="_hUdgsLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gjTJgbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gjTJgrhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gjTJg7hSEe2UuoshngsjNA" type="_gjR7YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gjTwkLhSEe2UuoshngsjNA" name="InstructionTimeSlot" visibility="package" method="_hUdgsrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gjU-sLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gjU-sbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gjUXoLhSEe2UuoshngsjNA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjUXobhSEe2UuoshngsjNA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjU-srhSEe2UuoshngsjNA" type="_gjR7YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gjVlwLhSEe2UuoshngsjNA" name="InstructionTimeSlot" visibility="package" method="_hUeHwLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gjVlwrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gjVlw7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gjVlwbhSEe2UuoshngsjNA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gjWM0LhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjVlxLhSEe2UuoshngsjNA" type="_gjR7YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gjYCALhSEe2UuoshngsjNA" name="LatencyAnalysis">
              <ownedComment xmi:id="_hWGfcrhSEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hRRCwLhSEe2UuoshngsjNA" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRRCwbhSEe2UuoshngsjNA" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRRp0LhSEe2UuoshngsjNA" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRRp0rhSEe2UuoshngsjNA" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRSQ4LhSEe2UuoshngsjNA" name="latencyReport" visibility="private" type="_gg6j4LhSEe2UuoshngsjNA" association="_hXVOgbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRS38LhSEe2UuoshngsjNA" name="program" visibility="private" type="_glHucLhSEe2UuoshngsjNA" association="_hXWcoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRS38rhSEe2UuoshngsjNA" name="workload" visibility="private" type="_grDXULhSEe2UuoshngsjNA" association="_hXXqwbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRTfAbhSEe2UuoshngsjNA" name="programTable" visibility="private" type="_gmC7gLhSEe2UuoshngsjNA" association="_hXY44LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRUGEbhSEe2UuoshngsjNA" name="nodeIndex" visibility="private" type="_hHFzELhSEe2UuoshngsjNA" association="_hXZf8bhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUeu0LhSEe2UuoshngsjNA" name="LatencyAnalysis" specification="_hJF-MLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUeu0bhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUeu0rhSEe2UuoshngsjNA" type="_gjYCALhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUeu07hSEe2UuoshngsjNA" name="LatencyAnalysis" specification="_hJGlQ7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUeu1LhSEe2UuoshngsjNA" name="program" type="_glHucLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUeu1bhSEe2UuoshngsjNA" type="_gjYCALhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUfV4LhSEe2UuoshngsjNA" name="latencyReport" specification="_gjcTcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUfV4bhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUfV4rhSEe2UuoshngsjNA" name="numMatchingTx" specification="_gjdhkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUfV47hSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUfV5LhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUfV5bhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUfV5rhSEe2UuoshngsjNA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUfV57hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gjcTcLhSEe2UuoshngsjNA" name="latencyReport" method="_hUfV4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJHzYLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gjdhkLhSEe2UuoshngsjNA" name="numMatchingTx" method="_hUfV4rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gjdhkbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjdhkrhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjdhk7hSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjdhlLhSEe2UuoshngsjNA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gjeIoLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hJF-MLhSEe2UuoshngsjNA" name="LatencyAnalysis" visibility="package" method="_hUeu0LhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hJGlQLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hJGlQbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hJF-MbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJGlQrhSEe2UuoshngsjNA" type="_gjYCALhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJGlQ7hSEe2UuoshngsjNA" name="LatencyAnalysis" visibility="package" method="_hUeu07hSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hJHMUbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hJHMUrhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hJHMULhSEe2UuoshngsjNA" name="program" type="_glHucLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJHMU7hSEe2UuoshngsjNA" type="_gjYCALhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gjjoMLhSEe2UuoshngsjNA" name="LatencyVisualization">
              <ownedComment xmi:id="_hWGfc7hSEe2UuoshngsjNA">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hJKPo7hSEe2UuoshngsjNA" general="_gpHdoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRWiULhSEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRWiUbhSEe2UuoshngsjNA" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRWiUrhSEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRXJYLhSEe2UuoshngsjNA" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRXJYbhSEe2UuoshngsjNA" name="warp" visibility="private" type="_gp2dcLhSEe2UuoshngsjNA" association="_hXaHAbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRXwcbhSEe2UuoshngsjNA" name="la" visibility="private" type="_gjYCALhSEe2UuoshngsjNA" association="_hXauEbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUf88LhSEe2UuoshngsjNA" name="LatencyVisualization" specification="_hJJokLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUf88bhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUf88rhSEe2UuoshngsjNA" type="_gjjoMLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hJJokLhSEe2UuoshngsjNA" name="LatencyVisualization" visibility="package" method="_hUf88LhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hJKPoLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hJKPobhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hJJokbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJKPorhSEe2UuoshngsjNA" type="_gjjoMLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gjpHwLhSEe2UuoshngsjNA" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_hObxMLhSEe2UuoshngsjNA" client="_gjpHwLhSEe2UuoshngsjNA" supplier="_hH6ScLhSEe2UuoshngsjNA" contract="_hH6ScLhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUgkALhSEe2UuoshngsjNA" name="compare" specification="_hOc_ULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUgkAbhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUgkArhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUgkA7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hOc_ULhSEe2UuoshngsjNA" name="compare" method="_hUgkALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hOc_UbhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOc_UrhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOdmYLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gjunULhSEe2UuoshngsjNA" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_hOe0gLhSEe2UuoshngsjNA" client="_gjunULhSEe2UuoshngsjNA" supplier="_hH6ScLhSEe2UuoshngsjNA" contract="_hH6ScLhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUgkBLhSEe2UuoshngsjNA" name="compare" specification="_hOgCoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUgkBbhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUgkBrhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUgkB7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hOgCoLhSEe2UuoshngsjNA" name="compare" method="_hUgkBLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hOgCobhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOgpsLhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOgpsbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gjzf0LhSEe2UuoshngsjNA" name="Node">
              <generalization xmi:id="_hJPvMbhSEe2UuoshngsjNA" general="_gnE2QLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRYXgbhSEe2UuoshngsjNA" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRYXgrhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRY-kLhSEe2UuoshngsjNA" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRaMsLhSEe2UuoshngsjNA" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRaMsbhSEe2UuoshngsjNA" name="edges" type="_hHI2YLhSEe2UuoshngsjNA" isReadOnly="true" association="_hXcjQbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRcB4LhSEe2UuoshngsjNA" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hRcB4bhSEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_hOh30LhSEe2UuoshngsjNA" client="_gjzf0LhSEe2UuoshngsjNA" supplier="_hNcSsbhSEe2UuoshngsjNA" contract="_hNcSsbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUhLELhSEe2UuoshngsjNA" name="Node" specification="_gj18ELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUhLEbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUhLErhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUhLE7hSEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUhLFLhSEe2UuoshngsjNA" type="_gjzf0LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUhyILhSEe2UuoshngsjNA" name="compareTo" specification="_hJNS8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUhyIbhSEe2UuoshngsjNA" name="node" type="_gjzf0LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUhyIrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUhyI7hSEe2UuoshngsjNA" name="toString" specification="_gj4YULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUhyJLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUiZMLhSEe2UuoshngsjNA" name="addEdge" specification="_hJPIIrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUiZMbhSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUiZMrhSEe2UuoshngsjNA" name="addConflict" specification="_gj7boLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUiZM7hSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUjAQLhSEe2UuoshngsjNA" name="numEdges" specification="_gj8CsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUjAQbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUjAQrhSEe2UuoshngsjNA" name="print" specification="_gj9Q0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUjAQ7hSEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUjnULhSEe2UuoshngsjNA" name="print" specification="_gj-e8rhSEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gj18ELhSEe2UuoshngsjNA" name="Node" visibility="package" method="_hUhLELhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gj2jIrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gj2jI7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gj18EbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gj2jILhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gj2jIbhSEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gj2jJLhSEe2UuoshngsjNA" type="_gjzf0LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gj4YULhSEe2UuoshngsjNA" name="toString" method="_hUhyI7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gj4_YLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gj7boLhSEe2UuoshngsjNA" name="addConflict" method="_hUiZMrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gj7bobhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gj8CsLhSEe2UuoshngsjNA" name="numEdges" method="_hUjAQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gj8pwLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gj9Q0LhSEe2UuoshngsjNA" name="print" method="_hUjAQrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gj9Q0bhSEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gj-e8rhSEe2UuoshngsjNA" name="print" method="_hUjnULhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_hJNS8LhSEe2UuoshngsjNA" name="compareTo" method="_hUhyILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJN6ALhSEe2UuoshngsjNA" name="node" type="_gjzf0LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJN6AbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hJPIIrhSEe2UuoshngsjNA" name="addEdge" method="_hUiZMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJPvMLhSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gkFzsLhSEe2UuoshngsjNA" name="NodeMap">
              <ownedComment xmi:id="_hWHGgLhSEe2UuoshngsjNA">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hJSLcLhSEe2UuoshngsjNA" general="_gbkw4LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRd3ELhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hReeILhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gkIP8LhSEe2UuoshngsjNA" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_hWHGgbhSEe2UuoshngsjNA">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hJUAo7hSEe2UuoshngsjNA" general="_gnyA4LhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUjnUbhSEe2UuoshngsjNA" name="NonPreemptiveSchedule" specification="_hJTZkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUjnUrhSEe2UuoshngsjNA" name="poset" type="_gkVrULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUjnU7hSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUjnVLhSEe2UuoshngsjNA" type="_gkIP8LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hJTZkLhSEe2UuoshngsjNA" name="NonPreemptiveSchedule" visibility="package" method="_hUjnUbhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hJUAoLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hJUAobhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hJTZkbhSEe2UuoshngsjNA" name="poset" type="_gkVrULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJTZkrhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJUAorhSEe2UuoshngsjNA" type="_gkIP8LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gkKFILhSEe2UuoshngsjNA" name="NotImplentedVisualization">
              <generalization xmi:id="_hJVOwLhSEe2UuoshngsjNA" general="_gpHdoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hReeIbhSEe2UuoshngsjNA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRfFMLhSEe2UuoshngsjNA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRfFMbhSEe2UuoshngsjNA" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRfsQLhSEe2UuoshngsjNA" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRgTULhSEe2UuoshngsjNA" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRgTUbhSEe2UuoshngsjNA" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUkOYLhSEe2UuoshngsjNA" name="NotImplentedVisualization" specification="_gkLTQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUkOYbhSEe2UuoshngsjNA" type="_gkKFILhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUk1cLhSEe2UuoshngsjNA" name="NotImplentedVisualization" specification="_gkNIcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUk1cbhSEe2UuoshngsjNA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUk1crhSEe2UuoshngsjNA" type="_gkKFILhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUk1c7hSEe2UuoshngsjNA" name="visualization" specification="_gkNvgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUk1dLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gkLTQLhSEe2UuoshngsjNA" name="NotImplentedVisualization" visibility="package" method="_hUkOYLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gkL6ULhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gkL6UbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gkL6UrhSEe2UuoshngsjNA" type="_gkKFILhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gkNIcLhSEe2UuoshngsjNA" name="NotImplentedVisualization" visibility="package" method="_hUk1cLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gkNIcrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gkNIc7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gkNIcbhSEe2UuoshngsjNA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gkNIdLhSEe2UuoshngsjNA" type="_gkKFILhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gkNvgLhSEe2UuoshngsjNA" name="visualization" method="_hUk1c7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJUnsLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gkRZ4LhSEe2UuoshngsjNA" name="PeriodComparator">
              <interfaceRealization xmi:id="_hOk7ILhSEe2UuoshngsjNA" client="_gkRZ4LhSEe2UuoshngsjNA" supplier="_hH6ScLhSEe2UuoshngsjNA" contract="_hH6ScLhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUlcgLhSEe2UuoshngsjNA" name="compare" specification="_hOmJQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUlcgbhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUlcgrhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUlcg7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hOmJQLhSEe2UuoshngsjNA" name="compare" method="_hUlcgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hOmJQbhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOmwULhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOmwUbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gkVrULhSEe2UuoshngsjNA" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_hWHGgrhSEe2UuoshngsjNA">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hRg6YLhSEe2UuoshngsjNA" name="activations" visibility="private" type="_gdXgoLhSEe2UuoshngsjNA" association="_hXdKUbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRiIgLhSEe2UuoshngsjNA" name="workload" visibility="private" type="_grDXULhSEe2UuoshngsjNA" association="_hXeYcbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRivkLhSEe2UuoshngsjNA" name="flows" visibility="protected" type="_ghz7wLhSEe2UuoshngsjNA" association="_hXfmkbhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hRivkrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hRivk7hSEe2UuoshngsjNA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hRivkbhSEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRjWobhSEe2UuoshngsjNA" name="nodes" visibility="private" type="_gjzf0LhSEe2UuoshngsjNA" association="_hXgNobhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hRj9sLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hRj9sbhSEe2UuoshngsjNA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hRjWorhSEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRj9s7hSEe2UuoshngsjNA" name="nodeMap" visibility="private" type="_gkFzsLhSEe2UuoshngsjNA" association="_hXiC0LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRkkwbhSEe2UuoshngsjNA" name="priorityQueue" visibility="private" type="_gmeZULhSEe2UuoshngsjNA" association="_hXip4bhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRmZ8bhSEe2UuoshngsjNA" name="nodeConnectivityMap" visibility="protected" type="_hHFzELhSEe2UuoshngsjNA" association="_hXj4AbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRnoEbhSEe2UuoshngsjNA" name="activationMap" visibility="package" type="_giUSELhSEe2UuoshngsjNA" association="_hXkfEbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUlchLhSEe2UuoshngsjNA" name="Poset" specification="_hJZgMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUlchbhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUlchrhSEe2UuoshngsjNA" type="_gkVrULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUmDkLhSEe2UuoshngsjNA" name="getNodeConnectivity" specification="_gkYuoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUmDkbhSEe2UuoshngsjNA" type="_hHFzELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUmDkrhSEe2UuoshngsjNA" name="getNodeNames" specification="_gkaj0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUmDk7hSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUmqoLhSEe2UuoshngsjNA" name="getNodesNamesOrderedAlphabetically" specification="_gkcZALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUmqobhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hUmqorhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUmqo7hSEe2UuoshngsjNA" name="buildPosetOfActivations" specification="_gkeOMLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUmqpLhSEe2UuoshngsjNA" name="createEdgeLists" specification="_gkeOMbhSEe2UuoshngsjNA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUmqpbhSEe2UuoshngsjNA" name="createConflictLists" specification="_gke1QLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUnRsLhSEe2UuoshngsjNA" name="createGlobalConflictLists" specification="_gkfcULhSEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUnRsbhSEe2UuoshngsjNA" name="createLocalConflictLists" specification="_gkfcUbhSEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUnRsrhSEe2UuoshngsjNA" name="findCoordinator" specification="_hOpzobhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUnRs7hSEe2UuoshngsjNA" name="nodesInFlow" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUnRtLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUn4wLhSEe2UuoshngsjNA" name="buildTxArray" specification="_hOro0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUn4wbhSEe2UuoshngsjNA" name="nodesInFlow" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUn4wrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hUn4w7hSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUn4xLhSEe2UuoshngsjNA" name="createInitialActivations" specification="_gkh4kLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUn4xbhSEe2UuoshngsjNA" name="getMaxTx" specification="_hJauULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUn4xrhSEe2UuoshngsjNA" name="node" type="_gjzf0LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUn4x7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUof0LhSEe2UuoshngsjNA" name="getActivation" specification="_hJbVYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUof0bhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUof0rhSEe2UuoshngsjNA" name="node" type="_gjzf0LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUof07hSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUof1LhSEe2UuoshngsjNA" name="getHyperPeriod" specification="_gkifoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUof1bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUpG4LhSEe2UuoshngsjNA" name="getMaxPhase" specification="_gkjGsbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUpG4bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUpG4rhSEe2UuoshngsjNA" name="orderActivations" specification="_gkkU0LhSEe2UuoshngsjNA">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUpG47hSEe2UuoshngsjNA" name="getNextActivation" specification="_gkkU0bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUpG5LhSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUpt8LhSEe2UuoshngsjNA" name="addActivation" specification="_hJcjgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUpt8bhSEe2UuoshngsjNA" name="activation" type="_gbyzULhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUqVALhSEe2UuoshngsjNA" name="findBaseStation" specification="_gkli8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUqVAbhSEe2UuoshngsjNA" type="_gjzf0LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gkYuoLhSEe2UuoshngsjNA" name="getNodeConnectivity" visibility="private" method="_hUmDkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hOpMkLhSEe2UuoshngsjNA" type="_hHFzELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gkaj0LhSEe2UuoshngsjNA" name="getNodeNames" method="_hUmDkrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hOpzoLhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gkcZALhSEe2UuoshngsjNA" name="getNodesNamesOrderedAlphabetically" method="_hUmqoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gkdAELhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gkdAEbhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gkeOMLhSEe2UuoshngsjNA" name="buildPosetOfActivations" method="_hUmqo7hSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gkeOMbhSEe2UuoshngsjNA" name="createEdgeLists" visibility="private" method="_hUmqpLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gke1QLhSEe2UuoshngsjNA" name="createConflictLists" visibility="private" method="_hUmqpbhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gkfcULhSEe2UuoshngsjNA" name="createGlobalConflictLists" visibility="private" method="_hUnRsLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gkfcUbhSEe2UuoshngsjNA" name="createLocalConflictLists" visibility="private" method="_hUnRsbhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gkh4kLhSEe2UuoshngsjNA" name="createInitialActivations" visibility="private" method="_hUn4xLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gkifoLhSEe2UuoshngsjNA" name="getHyperPeriod" method="_hUof1LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gkjGsLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gkjGsbhSEe2UuoshngsjNA" name="getMaxPhase" method="_hUpG4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gkjtwLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gkkU0LhSEe2UuoshngsjNA" name="orderActivations" method="_hUpG4rhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gkkU0bhSEe2UuoshngsjNA" name="getNextActivation" method="_hUpG47hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWHtkbhSEe2UuoshngsjNA">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_hJb8cbhSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gkli8LhSEe2UuoshngsjNA" name="findBaseStation" visibility="protected" method="_hUqVALhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWHtk7hSEe2UuoshngsjNA">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_hJdKkLhSEe2UuoshngsjNA" type="_gjzf0LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJZgMLhSEe2UuoshngsjNA" name="Poset" visibility="package" method="_hUlchLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hJZgMrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hJZgM7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWHGg7hSEe2UuoshngsjNA">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_hJZgMbhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJZgNLhSEe2UuoshngsjNA" type="_gkVrULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJauULhSEe2UuoshngsjNA" name="getMaxTx" visibility="private" method="_hUn4xbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJauUbhSEe2UuoshngsjNA" name="node" type="_gjzf0LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJauUrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hJbVYLhSEe2UuoshngsjNA" name="getActivation" visibility="private" method="_hUof0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJbVYbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJbVYrhSEe2UuoshngsjNA" name="node" type="_gjzf0LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJb8cLhSEe2UuoshngsjNA" type="_gbyzULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJcjgLhSEe2UuoshngsjNA" name="addActivation" method="_hUpt8LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWHtkrhSEe2UuoshngsjNA">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_hJcjgbhSEe2UuoshngsjNA" name="activation" type="_gbyzULhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hOpzobhSEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_hUnRsrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWHtkLhSEe2UuoshngsjNA">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hOpzorhSEe2UuoshngsjNA" name="nodesInFlow" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOqasLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hOro0LhSEe2UuoshngsjNA" name="buildTxArray" visibility="private" method="_hUn4wLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hOro0bhSEe2UuoshngsjNA" name="nodesInFlow" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOro0rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hOsP4LhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gky-ULhSEe2UuoshngsjNA" name="PreemptiveSchedule">
              <ownedComment xmi:id="_hWHtlLhSEe2UuoshngsjNA">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hJql8rhSEe2UuoshngsjNA" general="_gnyA4LhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUq8ELhSEe2UuoshngsjNA" name="PreemptiveSchedule" specification="_hJfm0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUq8EbhSEe2UuoshngsjNA" name="poset" type="_gkVrULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUq8ErhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUq8E7hSEe2UuoshngsjNA" type="_gky-ULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUrjILhSEe2UuoshngsjNA" name="continueSearch" specification="_hJg08LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUrjIbhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUrjIrhSEe2UuoshngsjNA" name="activation" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUrjI7hSEe2UuoshngsjNA" type="_hOvTMLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUrjJLhSEe2UuoshngsjNA" name="toProgram" specification="_gk2osLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUrjJbhSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUsKMLhSEe2UuoshngsjNA" name="findPreeptiveChannelAndTime" specification="_hJjRMbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUsKMbhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsKMrhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUsKM7hSEe2UuoshngsjNA" type="_hOvTMLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUsKNLhSEe2UuoshngsjNA" name="findAdditionalTime" specification="_hJkfULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUsKNbhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsKNrhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsKN7hSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUsKOLhSEe2UuoshngsjNA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsKObhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUsKOrhSEe2UuoshngsjNA" name="findMaxTimeAvailable" specification="_hJmUgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUsKO7hSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsKPLhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUsKPbhSEe2UuoshngsjNA" type="_hOvTMLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUsxQLhSEe2UuoshngsjNA" name="availableTime" specification="_hJnioLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUsxQbhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUsxQrhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsxQ7hSEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsxRLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUsxRbhSEe2UuoshngsjNA" name="addToSchedule" specification="_hJoJsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUsxRrhSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUsxR7hSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsxSLhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsxSbhSEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUsxSrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUtYULhSEe2UuoshngsjNA" name="addToSchedule" specification="_hJpX0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUtYUbhSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUtYUrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gk2osLhSEe2UuoshngsjNA" name="toProgram" method="_hUrjJLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJjRMLhSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJfm0LhSEe2UuoshngsjNA" name="PreemptiveSchedule" visibility="package" method="_hUq8ELhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hJgN4rhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hJgN47hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hJgN4LhSEe2UuoshngsjNA" name="poset" type="_gkVrULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJgN4bhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJgN5LhSEe2UuoshngsjNA" type="_gky-ULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJg08LhSEe2UuoshngsjNA" name="continueSearch" visibility="protected" method="_hUrjILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJg08bhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJhcALhSEe2UuoshngsjNA" name="activation" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOwhUbhSEe2UuoshngsjNA" type="_hOvTMLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJjRMbhSEe2UuoshngsjNA" name="findPreeptiveChannelAndTime" visibility="private" method="_hUsKMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJj4QLhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJj4QbhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOxIYLhSEe2UuoshngsjNA" type="_hOvTMLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJkfULhSEe2UuoshngsjNA" name="findAdditionalTime" visibility="private" method="_hUsKNLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJkfUbhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJkfUrhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJlGYLhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJlGYbhSEe2UuoshngsjNA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hOxvcLhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJmUgLhSEe2UuoshngsjNA" name="findMaxTimeAvailable" visibility="private" method="_hUsKOrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJm7kLhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJm7kbhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hOyWgLhSEe2UuoshngsjNA" type="_hOvTMLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJnioLhSEe2UuoshngsjNA" name="availableTime" visibility="private" method="_hUsxQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJniobhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJniorhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJnio7hSEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJnipLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hJoJsLhSEe2UuoshngsjNA" name="addToSchedule" visibility="private" method="_hUsxRbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJoJsbhSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJoJsrhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJowwLhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJowwbhSEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJowwrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hJpX0LhSEe2UuoshngsjNA" name="addToSchedule" visibility="protected" method="_hUtYULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJpX0bhSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJp-4LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_glBn0LhSEe2UuoshngsjNA" name="PriorityComparator">
              <interfaceRealization xmi:id="_hO0ywLhSEe2UuoshngsjNA" client="_glBn0LhSEe2UuoshngsjNA" supplier="_hH6ScLhSEe2UuoshngsjNA" contract="_hH6ScLhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUtYU7hSEe2UuoshngsjNA" name="compare" specification="_hO2n8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUtYVLhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUtYVbhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUtYVrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hO2n8LhSEe2UuoshngsjNA" name="compare" method="_hUtYU7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hO2n8bhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hO2n8rhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hO2n87hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_glHucLhSEe2UuoshngsjNA" name="Program">
              <ownedComment xmi:id="_hWHtlbhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hRqEULhSEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRqEUbhSEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRqrYLhSEe2UuoshngsjNA" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRqrYbhSEe2UuoshngsjNA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRrScLhSEe2UuoshngsjNA" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRrScbhSEe2UuoshngsjNA" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRrScrhSEe2UuoshngsjNA" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hRrSc7hSEe2UuoshngsjNA" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRr5gLhSEe2UuoshngsjNA" name="workLoad" visibility="package" type="_grDXULhSEe2UuoshngsjNA" association="_hXltMbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRsgkLhSEe2UuoshngsjNA" name="scheduleBuilt" visibility="package" type="_gmC7gLhSEe2UuoshngsjNA" association="_hXm7UbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRtHoLhSEe2UuoshngsjNA" name="SchedulerSelected" visibility="package" type="_hO4dILhSEe2UuoshngsjNA" association="_hXniYbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRtusLhSEe2UuoshngsjNA" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRuVwLhSEe2UuoshngsjNA" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRvj4LhSEe2UuoshngsjNA" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRwK8bhSEe2UuoshngsjNA" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRwyAbhSEe2UuoshngsjNA" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRxZEbhSEe2UuoshngsjNA" name="channelsAvailable" visibility="package" type="_gduF8LhSEe2UuoshngsjNA" association="_hXowgbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hRyAIbhSEe2UuoshngsjNA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRynMbhSEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hRz1UbhSEe2UuoshngsjNA" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hR0cYbhSEe2UuoshngsjNA" name="deadlineMisses" visibility="private" type="_gg6j4LhSEe2UuoshngsjNA" association="_hXpXkbhSEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_hJ6dkLhSEe2UuoshngsjNA" client="_glHucLhSEe2UuoshngsjNA" supplier="_goZr8LhSEe2UuoshngsjNA" contract="_goZr8LhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUt_YLhSEe2UuoshngsjNA" name="Program" specification="_hO5rQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUt_YbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUt_YrhSEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUt_Y7hSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUt_ZLhSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUt_ZbhSEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUt_ZrhSEe2UuoshngsjNA" type="_glHucLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUt_Z7hSEe2UuoshngsjNA" name="Program" specification="_hO7gcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUt_aLhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUt_abhSEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUt_arhSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUt_a7hSEe2UuoshngsjNA" type="_glHucLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUt_bLhSEe2UuoshngsjNA" name="setDefaultParameters" specification="_hJ850LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUt_bbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUt_brhSEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUt_b7hSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUt_cLhSEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUt_cbhSEe2UuoshngsjNA" name="toWorkLoad" specification="_glQ4YLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUt_crhSEe2UuoshngsjNA" type="_grDXULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUumcLhSEe2UuoshngsjNA" name="buildProgram" specification="_hO98sLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUumcbhSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUumcrhSEe2UuoshngsjNA" name="buildOriginalProgram" specification="_glRfcLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUumc7hSEe2UuoshngsjNA" name="waitInstruction" specification="_glStkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUumdLhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUumdbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUumdrhSEe2UuoshngsjNA" name="elseWaitInstruction" specification="_glUiwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUumd7hSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUumeLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUumebhSEe2UuoshngsjNA" name="elsePullClause" specification="_glVw4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUumerhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUume7hSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUumfLhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUumfbhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUumfrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUvNgLhSEe2UuoshngsjNA" name="hasPushInstruction" specification="_glXmELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUvNgbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUvNgrhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUvNg7hSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUvNhLhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUvNhbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUvNhrhSEe2UuoshngsjNA" name="pushInstruction" specification="_glZbQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUvNh7hSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUvNiLhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUvNibhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUvNirhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUvNi7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUvNjLhSEe2UuoshngsjNA" name="getFirstChannelInInstruction" specification="_glbQcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUvNjbhSEe2UuoshngsjNA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUvNjrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUv0kLhSEe2UuoshngsjNA" name="findNextAvailableInstructionTimeSlot" specification="_hJ-H8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUv0kbhSEe2UuoshngsjNA" name="schedule" type="_gmC7gLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUv0krhSEe2UuoshngsjNA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0k7hSEe2UuoshngsjNA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0lLhSEe2UuoshngsjNA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0lbhSEe2UuoshngsjNA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0lrhSEe2UuoshngsjNA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hUv0l7hSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0mLhSEe2UuoshngsjNA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hUv0mbhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0mrhSEe2UuoshngsjNA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0m7hSEe2UuoshngsjNA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0nLhSEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0nbhSEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0nrhSEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0n7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUv0oLhSEe2UuoshngsjNA" name="slotIsAvailable" specification="_hKAkMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUv0obhSEe2UuoshngsjNA" name="currentInstructionTimeSlot" type="_gjR7YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUv0orhSEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0o7hSEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0pLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUv0pbhSEe2UuoshngsjNA" name="findNextAvailableChannel" specification="_hKByULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUv0prhSEe2UuoshngsjNA" name="schedule" type="_gmC7gLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUv0p7hSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0qLhSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0qbhSEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0qrhSEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUv0q7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUv0rLhSEe2UuoshngsjNA" name="selectPriority" specification="_gle60LhSEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUwboLhSEe2UuoshngsjNA" name="selectRM" specification="_gle60bhSEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUwbobhSEe2UuoshngsjNA" name="selectDM" specification="_glfh4LhSEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUwborhSEe2UuoshngsjNA" name="selectRtHART" specification="_glfh4bhSEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUwbo7hSEe2UuoshngsjNA" name="setScheduleSelected" specification="_hO_K0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUwbpLhSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUwbpbhSEe2UuoshngsjNA" name="setSchedule" specification="_hKDAcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUwbprhSEe2UuoshngsjNA" name="schedule" type="_gmC7gLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUwbp7hSEe2UuoshngsjNA" name="getSchedule" specification="_glgI8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUwbqLhSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUwbqbhSEe2UuoshngsjNA" name="getSchedulerName" specification="_glhXELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUwbqrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxCsLhSEe2UuoshngsjNA" name="getSchChoice" specification="_glilMrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxCsbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxCsrhSEe2UuoshngsjNA" name="getNumChannels" specification="_gljMQbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxCs7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxCtLhSEe2UuoshngsjNA" name="getNumTransmissions" specification="_gllBcbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxCtbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxCtrhSEe2UuoshngsjNA" name="getRealTimeHartFlag" specification="_glmPkrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxCt7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxCuLhSEe2UuoshngsjNA" name="setRealTimeHartFlag" specification="_glndsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxCubhSEe2UuoshngsjNA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxCurhSEe2UuoshngsjNA" name="getMinPacketReceptionRate" specification="_gloEwbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxCu7hSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxpwLhSEe2UuoshngsjNA" name="getE2e" specification="_glp58bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxpwbhSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxpwrhSEe2UuoshngsjNA" name="getName" specification="_glrvILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxpw7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxpxLhSEe2UuoshngsjNA" name="getOptimizationFlag" specification="_gls9QrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxpxbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxpxrhSEe2UuoshngsjNA" name="deadlineMisses" specification="_gluLY7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxpx7hSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxpyLhSEe2UuoshngsjNA" name="getNumFaults" specification="_gluycLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxpybhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUxpyrhSEe2UuoshngsjNA" name="getNodeMapIndex" specification="_glwAkrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUxpy7hSEe2UuoshngsjNA" type="_hHFzELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// create an array of node names sorted alphabetically&#xD;
 var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); &#xD;
 &#xD;
 // create a new mapping from node names to index in schedule table&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>();&#xD;
 &#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_glQ4YLhSEe2UuoshngsjNA" name="toWorkLoad" method="_hUt_cbhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWIUoLhSEe2UuoshngsjNA">
                  <body>@return the WorkLoad object containing all flows and nodes within the graph.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hJ9g4LhSEe2UuoshngsjNA" type="_grDXULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_glRfcLhSEe2UuoshngsjNA" name="buildOriginalProgram" method="_hUumcrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_glStkLhSEe2UuoshngsjNA" name="waitInstruction" visibility="private" method="_hUumc7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glStkbhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glTUoLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_glUiwLhSEe2UuoshngsjNA" name="elseWaitInstruction" visibility="private" method="_hUumdrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glUiwbhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glVJ0LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_glVw4LhSEe2UuoshngsjNA" name="elsePullClause" visibility="private" method="_hUumebhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glWX8LhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glWX8bhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glWX8rhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glWX87hSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glWX9LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_glXmELhSEe2UuoshngsjNA" name="hasPushInstruction" visibility="private" method="_hUvNgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glXmEbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glXmErhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glXmE7hSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glYNILhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glYNIbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_glZbQLhSEe2UuoshngsjNA" name="pushInstruction" visibility="private" method="_hUvNhrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glZbQbhSEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glaCULhSEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glaCUbhSEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glaCUrhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glaCU7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_glbQcLhSEe2UuoshngsjNA" name="getFirstChannelInInstruction" visibility="private" method="_hUvNjLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glbQcbhSEe2UuoshngsjNA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_glbQcrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gle60LhSEe2UuoshngsjNA" name="selectPriority" method="_hUv0rLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gle60bhSEe2UuoshngsjNA" name="selectRM" method="_hUwboLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_glfh4LhSEe2UuoshngsjNA" name="selectDM" method="_hUwbobhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_glfh4bhSEe2UuoshngsjNA" name="selectRtHART" method="_hUwborhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_glgI8LhSEe2UuoshngsjNA" name="getSchedule" method="_hUwbp7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWIUobhSEe2UuoshngsjNA">
                  <body>@return the completed schedule for the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_hKDAcrhSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_glhXELhSEe2UuoshngsjNA" name="getSchedulerName" method="_hUwbqbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glh-ILhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_glilMrhSEe2UuoshngsjNA" name="getSchChoice" method="_hUxCsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gljMQLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gljMQbhSEe2UuoshngsjNA" name="getNumChannels" method="_hUxCsrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gljzULhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gllBcbhSEe2UuoshngsjNA" name="getNumTransmissions" method="_hUxCtLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gllogLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_glmPkrhSEe2UuoshngsjNA" name="getRealTimeHartFlag" visibility="private" method="_hUxCtrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glm2oLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_glndsLhSEe2UuoshngsjNA" name="setRealTimeHartFlag" visibility="private" method="_hUxCuLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gloEwLhSEe2UuoshngsjNA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gloEwbhSEe2UuoshngsjNA" name="getMinPacketReceptionRate" method="_hUxCurhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPAY8bhSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_glp58bhSEe2UuoshngsjNA" name="getE2e" method="_hUxpwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPBAALhSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_glrvILhSEe2UuoshngsjNA" name="getName" method="_hUxpwrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glsWMLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gls9QrhSEe2UuoshngsjNA" name="getOptimizationFlag" method="_hUxpxLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gltkULhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gluLY7hSEe2UuoshngsjNA" name="deadlineMisses" method="_hUxpxrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKDngLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gluycLhSEe2UuoshngsjNA" name="getNumFaults" method="_hUxpyLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_glvZgLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_glwAkrhSEe2UuoshngsjNA" name="getNodeMapIndex" method="_hUxpyrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWIUorhSEe2UuoshngsjNA">
                  <body>@return a HashMap mapping each node to its index when sorted by alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_hPBAAbhSEe2UuoshngsjNA" type="_hHFzELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hJ850LhSEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_hUt_bLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJ850bhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJ850rhSEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ8507hSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ851LhSEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hJ-H8LhSEe2UuoshngsjNA" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_hUv0kLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hJ-H8bhSEe2UuoshngsjNA" name="schedule" type="_gmC7gLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hJ-H8rhSEe2UuoshngsjNA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-H87hSEe2UuoshngsjNA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-vALhSEe2UuoshngsjNA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-vAbhSEe2UuoshngsjNA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-vArhSEe2UuoshngsjNA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hJ_WEbhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-vA7hSEe2UuoshngsjNA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hJ_9ILhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-vBLhSEe2UuoshngsjNA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-vBbhSEe2UuoshngsjNA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-vBrhSEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-vB7hSEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ-vCLhSEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hJ_WELhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKAkMLhSEe2UuoshngsjNA" name="slotIsAvailable" visibility="private" method="_hUv0oLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKAkMbhSEe2UuoshngsjNA" name="currentInstructionTimeSlot" type="_gjR7YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKAkMrhSEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKAkM7hSEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKBLQLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKByULhSEe2UuoshngsjNA" name="findNextAvailableChannel" visibility="private" method="_hUv0pbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKByUbhSEe2UuoshngsjNA" name="schedule" type="_gmC7gLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKByUrhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKByU7hSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKByVLhSEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKByVbhSEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKCZYLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKDAcLhSEe2UuoshngsjNA" name="setSchedule" visibility="private" method="_hUwbpbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKDAcbhSEe2UuoshngsjNA" name="schedule" type="_gmC7gLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hO5rQLhSEe2UuoshngsjNA" name="Program" visibility="package" method="_hUt_YLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hO6SU7hSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hO65YLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hO5rQbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hO5rQrhSEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hO6SULhSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hO6SUbhSEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hO6SUrhSEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hO65YbhSEe2UuoshngsjNA" type="_glHucLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hO7gcLhSEe2UuoshngsjNA" name="Program" visibility="package" method="_hUt_Z7hSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hO8ukLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hO9VoLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hO7gcbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hO8HgLhSEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hO8HgbhSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hO9VobhSEe2UuoshngsjNA" type="_glHucLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hO98sLhSEe2UuoshngsjNA" name="buildProgram" method="_hUumcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hO98sbhSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hO_K0LhSEe2UuoshngsjNA" name="setScheduleSelected" visibility="private" method="_hUwbo7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hO_K0bhSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gmC7gLhSEe2UuoshngsjNA" name="ProgramSchedule">
              <generalization xmi:id="_hKJHELhSEe2UuoshngsjNA" general="_gokrELhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR2RkLhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hR24oLhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUyQ0LhSEe2UuoshngsjNA" name="ProgramSchedule" specification="_gmEJoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUyQ0bhSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUyQ0rhSEe2UuoshngsjNA" name="ProgramSchedule" specification="_gmEwsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUyQ07hSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUyQ1LhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hUyQ1bhSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gmEJoLhSEe2UuoshngsjNA" name="ProgramSchedule" method="_hUyQ0LhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gmEJobhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gmEJorhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gmEJo7hSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gmEwsLhSEe2UuoshngsjNA" name="ProgramSchedule" visibility="package" method="_hUyQ0rhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gmFXwrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gmFXw7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gmFXwLhSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gmFXwbhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gmFXxLhSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gmH0ALhSEe2UuoshngsjNA" name="ProgramVisualization">
              <ownedComment xmi:id="_hWIUo7hSEe2UuoshngsjNA">
                <body>Develops a visualization of a Warp graph schedule formatted as a table&#xD;
using arrays. Each column of the table is a time slot, and the rows &#xD;
contain the schedule's instructions. The visualization can be displayed&#xD;
as a GuiVisualization with the displayVisualization() method. A header&#xD;
and footer can also be added with additional information about the Warp&#xD;
graph.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hKMxcbhSEe2UuoshngsjNA" general="_gpHdoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR3fsLhSEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hR3fsbhSEe2UuoshngsjNA" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hR4GwLhSEe2UuoshngsjNA" name="sourceCode" visibility="private" type="_gmC7gLhSEe2UuoshngsjNA" association="_hXqlsbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR4t0LhSEe2UuoshngsjNA" name="program" visibility="private" type="_glHucLhSEe2UuoshngsjNA" association="_hXrz0bhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR4t0rhSEe2UuoshngsjNA" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUy34LhSEe2UuoshngsjNA" name="ProgramVisualization" specification="_hKLjULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUy34bhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUy34rhSEe2UuoshngsjNA" type="_gmH0ALhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUy347hSEe2UuoshngsjNA" name="displayVisualization" specification="_gmJpMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUy35LhSEe2UuoshngsjNA" type="_gi450LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUy35bhSEe2UuoshngsjNA" name="createHeader" specification="_gmLeYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUy35rhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUy357hSEe2UuoshngsjNA" name="createFooter" specification="_gmNTkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUy36LhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUy36bhSEe2UuoshngsjNA" name="createColumnHeader" specification="_gmPIwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUy36rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hUy367hSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUze8LhSEe2UuoshngsjNA" name="createVisualizationData" specification="_gmQ98rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUze8bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hUze8rhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUze87hSEe2UuoshngsjNA" name="createTitle" specification="_gmTaMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUze9LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gmJpMLhSEe2UuoshngsjNA" name="displayVisualization" method="_hUy347hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKMKY7hSEe2UuoshngsjNA" type="_gi450LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gmLeYLhSEe2UuoshngsjNA" name="createHeader" visibility="protected" method="_hUy35bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKMKZLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gmNTkLhSEe2UuoshngsjNA" name="createFooter" visibility="protected" method="_hUy357hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKMxcLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gmPIwLhSEe2UuoshngsjNA" name="createColumnHeader" visibility="protected" method="_hUy36bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gmPIwbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gmPIwrhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gmQ98rhSEe2UuoshngsjNA" name="createVisualizationData" visibility="protected" method="_hUze8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gmRlALhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gmRlAbhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gmTaMLhSEe2UuoshngsjNA" name="createTitle" visibility="private" method="_hUze87hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWI7sLhSEe2UuoshngsjNA">
                  <body>@return the title for the visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_gmTaMbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKLjULhSEe2UuoshngsjNA" name="ProgramVisualization" visibility="package" method="_hUy34LhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hKMKYLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hKMKYbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWIUpLhSEe2UuoshngsjNA">
                  <body>Creates and initializes a new visualization.&#xD;
   * &#xD;
   * @param warp object</body>
                </ownedComment>
                <ownedParameter xmi:id="_hKLjUbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKMKYrhSEe2UuoshngsjNA" type="_gmH0ALhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gmXEkLhSEe2UuoshngsjNA" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_hPDcQLhSEe2UuoshngsjNA" client="_gmXEkLhSEe2UuoshngsjNA" supplier="_hH6ScLhSEe2UuoshngsjNA" contract="_hH6ScLhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hUze9bhSEe2UuoshngsjNA" name="compare" specification="_hPEqYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hUze9rhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUze97hSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hUze-LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hPEqYLhSEe2UuoshngsjNA" name="compare" method="_hUze9bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPEqYbhSEe2UuoshngsjNA" name="obj1" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPEqYrhSEe2UuoshngsjNA" name="obj2" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPEqY7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gmbWALhSEe2UuoshngsjNA" name="ReleaseTimeQueue">
              <generalization xmi:id="_gmfncLhSEe2UuoshngsjNA" general="_gmeZULhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR578LhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hR578bhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU0GALhSEe2UuoshngsjNA" name="ReleaseTimeQueue" specification="_gmdLMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU0GAbhSEe2UuoshngsjNA" type="_gmbWALhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU0GArhSEe2UuoshngsjNA" name="ReleaseTimeQueue" specification="_hKPNsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU0GA7hSEe2UuoshngsjNA" name="schedulableObjects" type="_hJXD8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU0GBLhSEe2UuoshngsjNA" type="_gmbWALhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gmdLMLhSEe2UuoshngsjNA" name="ReleaseTimeQueue" visibility="package" method="_hU0GALhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gmdyQLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gmdyQbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gmdyQrhSEe2UuoshngsjNA" type="_gmbWALhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hKPNsLhSEe2UuoshngsjNA" name="ReleaseTimeQueue" visibility="package" method="_hU0GArhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hKPNsrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hKPNs7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hKPNsbhSEe2UuoshngsjNA" name="schedulableObjects" type="_hJXD8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKPNtLhSEe2UuoshngsjNA" type="_gmbWALhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gmiDsLhSEe2UuoshngsjNA" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_hWI7sbhSEe2UuoshngsjNA">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU0tELhSEe2UuoshngsjNA" name="ReliabilityAnalysis" specification="_hKQb0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU0tEbhSEe2UuoshngsjNA" name="program" type="_glHucLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU0tErhSEe2UuoshngsjNA" type="_gmiDsLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU0tE7hSEe2UuoshngsjNA" name="verifyReliabilities" specification="_gmjR0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU0tFLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gmjR0LhSEe2UuoshngsjNA" name="verifyReliabilities" method="_hU0tE7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gmjR0bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKQb0LhSEe2UuoshngsjNA" name="ReliabilityAnalysis" method="_hU0tELhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hKRC4bhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hKRC4rhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hKRC4LhSEe2UuoshngsjNA" name="program" type="_glHucLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKRC47hSEe2UuoshngsjNA" type="_gmiDsLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_gmlHALhSEe2UuoshngsjNA" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_hWI7srhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_gmluELhSEe2UuoshngsjNA" name="minPacketReceptionRate" type="_hO_x4LhSEe2UuoshngsjNA" isReadOnly="true"/>
              <ownedAttribute xmi:id="_gmm8MLhSEe2UuoshngsjNA" name="e2e" type="_hO_x4LhSEe2UuoshngsjNA" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gmnjQLhSEe2UuoshngsjNA" name="ReliabilityRow">
              <generalization xmi:id="_hKRp8LhSEe2UuoshngsjNA" general="_gm9hgLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR6jALhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hR6jAbhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU1UILhSEe2UuoshngsjNA" name="ReliabilityRow" specification="_gmoxYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU1UIbhSEe2UuoshngsjNA" type="_gmnjQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU1UIrhSEe2UuoshngsjNA" name="ReliabilityRow" specification="_hPHGoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU1UI7hSEe2UuoshngsjNA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU1UJLhSEe2UuoshngsjNA" name="element" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU1UJbhSEe2UuoshngsjNA" type="_gmnjQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU1UJrhSEe2UuoshngsjNA" name="ReliabilityRow" specification="_hPIUwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU1UJ7hSEe2UuoshngsjNA" name="rowArray" type="_hO_x4LhSEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hU1UKLhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU1UKbhSEe2UuoshngsjNA" type="_gmnjQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gmoxYLhSEe2UuoshngsjNA" name="ReliabilityRow" method="_hU1UILhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gmpYcLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gmpYcbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gmpYcrhSEe2UuoshngsjNA" type="_gmnjQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPHGoLhSEe2UuoshngsjNA" name="ReliabilityRow" visibility="package" method="_hU1UIrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPHtsrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPHts7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hPHtsLhSEe2UuoshngsjNA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPHtsbhSEe2UuoshngsjNA" name="element" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPHttLhSEe2UuoshngsjNA" type="_gmnjQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPIUwLhSEe2UuoshngsjNA" name="ReliabilityRow" visibility="package" method="_hU1UJrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPI70LhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPI70bhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hPIUwbhSEe2UuoshngsjNA" name="rowArray" type="_hO_x4LhSEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hPI707hSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPI70rhSEe2UuoshngsjNA" type="_gmnjQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gmr0sLhSEe2UuoshngsjNA" name="ReliabilityTable">
              <generalization xmi:id="_hKTfILhSEe2UuoshngsjNA" general="_gokrELhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR7KELhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hR7KEbhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU17MLhSEe2UuoshngsjNA" name="ReliabilityTable" specification="_gmtC0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU17MbhSEe2UuoshngsjNA" type="_gmr0sLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU17MrhSEe2UuoshngsjNA" name="ReliabilityTable" specification="_gmuQ8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU17M7hSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU17NLhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU17NbhSEe2UuoshngsjNA" type="_gmr0sLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gmtC0LhSEe2UuoshngsjNA" name="ReliabilityTable" method="_hU17MLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gmtC0bhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gmtC0rhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gmtp4LhSEe2UuoshngsjNA" type="_gmr0sLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gmuQ8LhSEe2UuoshngsjNA" name="ReliabilityTable" visibility="package" method="_hU17MrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gmu4AbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gmu4ArhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gmuQ8bhSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gmu4ALhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gmvfELhSEe2UuoshngsjNA" type="_gmr0sLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gmxUQLhSEe2UuoshngsjNA" name="ReliabilityVisualization">
              <ownedComment xmi:id="_hWI7s7hSEe2UuoshngsjNA">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hKWicbhSEe2UuoshngsjNA" general="_gpHdoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR7xILhSEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hR7xIbhSEe2UuoshngsjNA" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hR8YMLhSEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hR8YMbhSEe2UuoshngsjNA" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hR8YMrhSEe2UuoshngsjNA" name="warp" visibility="private" type="_gp2dcLhSEe2UuoshngsjNA" association="_hXtB8bhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR8_QbhSEe2UuoshngsjNA" name="ra" visibility="private" type="_gmiDsLhSEe2UuoshngsjNA" association="_hXtpAbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU2iQLhSEe2UuoshngsjNA" name="ReliabilityVisualization" specification="_hKV7YLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU2iQbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU2iQrhSEe2UuoshngsjNA" type="_gmxUQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hKV7YLhSEe2UuoshngsjNA" name="ReliabilityVisualization" visibility="package" method="_hU2iQLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hKV7YrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hKV7Y7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hKV7YbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKWicLhSEe2UuoshngsjNA" type="_gmxUQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gm2MwLhSEe2UuoshngsjNA" name="ReportVisualization">
              <generalization xmi:id="_hKY-sbhSEe2UuoshngsjNA" general="_gpHdoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR-NYLhSEe2UuoshngsjNA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hR-0cLhSEe2UuoshngsjNA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hR-0cbhSEe2UuoshngsjNA" name="content" visibility="private" type="_gg6j4LhSEe2UuoshngsjNA" association="_hXu3IbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hR_bgbhSEe2UuoshngsjNA" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU2iQ7hSEe2UuoshngsjNA" name="ReportVisualization" specification="_hKXwkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU2iRLhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU2iRbhSEe2UuoshngsjNA" name="warp" type="_goZr8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU2iRrhSEe2UuoshngsjNA" name="content" type="_gg6j4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU2iR7hSEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU2iSLhSEe2UuoshngsjNA" type="_gm2MwLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU3JULhSEe2UuoshngsjNA" name="visualization" specification="_gm4B8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU3JUbhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU3wYLhSEe2UuoshngsjNA" name="createReport" specification="_gm53IrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU3wYbhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gm4B8LhSEe2UuoshngsjNA" name="visualization" method="_hU3JULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKYXo7hSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gm53IrhSEe2UuoshngsjNA" name="createReport" visibility="private" method="_hU3wYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKY-sLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hKXwkLhSEe2UuoshngsjNA" name="ReportVisualization" visibility="package" method="_hU2iQ7hSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hKYXoLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hKYXobhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hKXwkbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKXwkrhSEe2UuoshngsjNA" name="warp" type="_goZr8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKXwk7hSEe2UuoshngsjNA" name="content" type="_gg6j4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKXwlLhSEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKYXorhSEe2UuoshngsjNA" type="_gm2MwLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gm9hgLhSEe2UuoshngsjNA" name="Row">
              <generalization xmi:id="_hPL_ILhSEe2UuoshngsjNA" general="_hHI2YLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSApoLhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSApobhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU3wYrhSEe2UuoshngsjNA" name="Row" specification="_gm_WsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU3wY7hSEe2UuoshngsjNA" type="_gm9hgLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU4XcLhSEe2UuoshngsjNA" name="Row" specification="_hPKJ8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU4XcbhSEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU4XcrhSEe2UuoshngsjNA" name="element" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU4Xc7hSEe2UuoshngsjNA" type="_gm9hgLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU4XdLhSEe2UuoshngsjNA" name="Row" specification="_hPLYELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU4XdbhSEe2UuoshngsjNA" name="rowArray" type="_hODWsbhSEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hU4XdrhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU4Xd7hSEe2UuoshngsjNA" type="_gm9hgLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU4-gLhSEe2UuoshngsjNA" name="Row" specification="_gnBL4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU4-gbhSEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU4-grhSEe2UuoshngsjNA" type="_gm9hgLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gm_WsLhSEe2UuoshngsjNA" name="Row" method="_hU3wYrhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gm_WsbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gm_WsrhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gm_Ws7hSEe2UuoshngsjNA" type="_gm9hgLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gnBL4LhSEe2UuoshngsjNA" name="Row" visibility="package" method="_hU4-gLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gnBy8LhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gnBy8bhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gnBL4bhSEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnBy8rhSEe2UuoshngsjNA" type="_gm9hgLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPKJ8LhSEe2UuoshngsjNA" name="Row" visibility="package" method="_hU4XcLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPKxALhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPKxAbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hPKJ8bhSEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPKJ8rhSEe2UuoshngsjNA" name="element" type="_hODWsbhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPKxArhSEe2UuoshngsjNA" type="_gm9hgLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPLYELhSEe2UuoshngsjNA" name="Row" visibility="package" method="_hU4XdLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPLYErhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPLYE7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hPLYEbhSEe2UuoshngsjNA" name="rowArray" type="_hODWsbhSEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hPLYFbhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPLYFLhSEe2UuoshngsjNA" type="_gm9hgLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gnE2QLhSEe2UuoshngsjNA" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_hSBQsLhSEe2UuoshngsjNA" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSBQsbhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSB3wLhSEe2UuoshngsjNA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSB3wbhSEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSB3wrhSEe2UuoshngsjNA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSB3w7hSEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSCe0LhSEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSCe0bhSEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSCe0rhSEe2UuoshngsjNA" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSCe07hSEe2UuoshngsjNA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSDF4LhSEe2UuoshngsjNA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSDs8LhSEe2UuoshngsjNA" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSDs8bhSEe2UuoshngsjNA" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSEUALhSEe2UuoshngsjNA" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSE7ELhSEe2UuoshngsjNA" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSE7ErhSEe2UuoshngsjNA" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSFiIbhSEe2UuoshngsjNA" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSGJMbhSEe2UuoshngsjNA" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSGwQLhSEe2UuoshngsjNA" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSGwQbhSEe2UuoshngsjNA" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSGwQrhSEe2UuoshngsjNA" name="predecessor" type="_gnE2QLhSEe2UuoshngsjNA" association="_hWJiwLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSHXULhSEe2UuoshngsjNA" name="endTimes" visibility="private" type="_gmeZULhSEe2UuoshngsjNA" association="_hXwFQLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSJMgbhSEe2UuoshngsjNA" name="subObjects" type="_hKcCALhSEe2UuoshngsjNA" isReadOnly="true" association="_hXwsUbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU4-g7hSEe2UuoshngsjNA" name="SchedulableObject" specification="_gnIgoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU4-hLhSEe2UuoshngsjNA" type="_gnE2QLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU5lkLhSEe2UuoshngsjNA" name="SchedulableObject" specification="_hKd3MLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU5lkbhSEe2UuoshngsjNA" name="obj" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU5lkrhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU5lk7hSEe2UuoshngsjNA" type="_gnE2QLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU5llLhSEe2UuoshngsjNA" name="SchedulableObject" specification="_gnJuwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU6MoLhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU6MobhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU6MorhSEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU6Mo7hSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU6MpLhSEe2UuoshngsjNA" type="_gnE2QLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU6MpbhSEe2UuoshngsjNA" name="SchedulableObject" specification="_gnK84LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU6MprhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU6Mp7hSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU6MqLhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU6MqbhSEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU6MqrhSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hU6Mq7hSEe2UuoshngsjNA" type="_gnE2QLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU6zsLhSEe2UuoshngsjNA" name="setDefaultParameters" specification="_gnMLALhSEe2UuoshngsjNA">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU6zsbhSEe2UuoshngsjNA" name="getAllEndTimes" specification="_gnMyELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU6zsrhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU6zs7hSEe2UuoshngsjNA" name="addToEndTimes" specification="_gnPOULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU6ztLhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU7awLhSEe2UuoshngsjNA" name="peekEndTimes" specification="_gnP1YLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU7awbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU7awrhSEe2UuoshngsjNA" name="pollEndTimes" specification="_gnQccLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU7aw7hSEe2UuoshngsjNA" name="addSubObject" specification="_hKgTcbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU7axLhSEe2UuoshngsjNA" name="obj" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU8B0LhSEe2UuoshngsjNA" name="getName" specification="_gnRDgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU8B0bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU8B0rhSEe2UuoshngsjNA" name="setName" specification="_gnRqkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU8B07hSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU8o4LhSEe2UuoshngsjNA" name="getReleaseTime" specification="_gnRqkrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU8o4bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU8o4rhSEe2UuoshngsjNA" name="getPhase" specification="_gnSRobhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU8o47hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU8o5LhSEe2UuoshngsjNA" name="getStartTime" specification="_gnS4sbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU8o5bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU8o5rhSEe2UuoshngsjNA" name="setEndTime" specification="_gnTfwbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU8o57hSEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU9P8LhSEe2UuoshngsjNA" name="setStartTime" specification="_gnUt4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU9P8bhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU9P8rhSEe2UuoshngsjNA" name="setReleaseTime" specification="_gnVU8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU9P87hSEe2UuoshngsjNA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU9P9LhSEe2UuoshngsjNA" name="setPeriod" specification="_gnV8ALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU9P9bhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU93ALhSEe2UuoshngsjNA" name="setPhase" specification="_gnWjELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU93AbhSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU93ArhSEe2UuoshngsjNA" name="setNextReleaseTime" specification="_gnXxMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU93A7hSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU93BLhSEe2UuoshngsjNA" name="maxPhaseComparison" specification="_hKg6gbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU93BbhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU93BrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU-eELhSEe2UuoshngsjNA" name="maxPhaseComparison" specification="_hKhhkrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU-eEbhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU-eErhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU-eE7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU_FILhSEe2UuoshngsjNA" name="deadlineComparison" specification="_hKivsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU_FIbhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU_FIrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU_sMLhSEe2UuoshngsjNA" name="deadlineComparison" specification="_hKivs7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU_sMbhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU_sMrhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU_sM7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hU_sNLhSEe2UuoshngsjNA" name="periodComparison" specification="_hKj90LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hU_sNbhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hU_sNrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVATQLhSEe2UuoshngsjNA" name="periodComparison" specification="_hKkk4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVATQbhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVATQrhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVATQ7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVA6ULhSEe2UuoshngsjNA" name="priorityComparison" specification="_hKlL8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVA6UbhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVA6UrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVA6U7hSEe2UuoshngsjNA" name="priorityComparison" specification="_hKlL87hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVA6VLhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVA6VbhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVA6VrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVA6V7hSEe2UuoshngsjNA" name="releaseTimeComparison" specification="_hKlzA7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVA6WLhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVA6WbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVBhYLhSEe2UuoshngsjNA" name="releaseTimeComparison" specification="_hKmaErhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVBhYbhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVBhYrhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVBhY7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVBhZLhSEe2UuoshngsjNA" name="LatestReleaseTimeComparison" specification="_hKnBIrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVBhZbhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVBhZrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVCIcLhSEe2UuoshngsjNA" name="LatestReleaseTimeComparison" specification="_hKnoMbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVCIcbhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVCIcrhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVCIc7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVCIdLhSEe2UuoshngsjNA" name="compareAscendingOrder" specification="_gnbbkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVCIdbhSEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVCIdrhSEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVCId7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVCIeLhSEe2UuoshngsjNA" name="compareDescendingOrder" specification="_gncpsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVCIebhSEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVCIerhSEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVCIe7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVCvgLhSEe2UuoshngsjNA" name="print" specification="_gndQwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVCvgbhSEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVCvgrhSEe2UuoshngsjNA" name="print" specification="_gnd30LhSEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gnIgoLhSEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_hU4-g7hSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gnJHsLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gnJHsbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gnJHsrhSEe2UuoshngsjNA" type="_gnE2QLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gnJuwLhSEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_hU5llLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gnKV0rhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gnKV07hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gnJuwbhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnJuwrhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnKV0LhSEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnKV0bhSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnKV1LhSEe2UuoshngsjNA" type="_gnE2QLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gnK84LhSEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_hU6MpbhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gnLj9LhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gnLj9bhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gnK84bhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnLj8LhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnLj8bhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnLj8rhSEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnLj87hSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnLj9rhSEe2UuoshngsjNA" type="_gnE2QLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gnMLALhSEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_hU6zsLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gnMyELhSEe2UuoshngsjNA" name="getAllEndTimes" method="_hU6zsbhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ0LhSEe2UuoshngsjNA">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_hKgTcLhSEe2UuoshngsjNA" type="_gmeZULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gnPOULhSEe2UuoshngsjNA" name="addToEndTimes" method="_hU6zs7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gnPOUbhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnP1YLhSEe2UuoshngsjNA" name="peekEndTimes" method="_hU7awLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gnP1YbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnQccLhSEe2UuoshngsjNA" name="pollEndTimes" method="_hU7awrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gnRDgLhSEe2UuoshngsjNA" name="getName" method="_hU8B0LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ0bhSEe2UuoshngsjNA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnRDgbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnRqkLhSEe2UuoshngsjNA" name="setName" method="_hU8B0rhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ0rhSEe2UuoshngsjNA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnRqkbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnRqkrhSEe2UuoshngsjNA" name="getReleaseTime" method="_hU8o4LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ07hSEe2UuoshngsjNA">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnSRoLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnSRobhSEe2UuoshngsjNA" name="getPhase" method="_hU8o4rhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ1LhSEe2UuoshngsjNA">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnS4sLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnS4sbhSEe2UuoshngsjNA" name="getStartTime" method="_hU8o5LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ1bhSEe2UuoshngsjNA">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnTfwLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnTfwbhSEe2UuoshngsjNA" name="setEndTime" method="_hU8o5rhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ1rhSEe2UuoshngsjNA">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnUG0LhSEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnUt4LhSEe2UuoshngsjNA" name="setStartTime" method="_hU9P8LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ17hSEe2UuoshngsjNA">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnUt4bhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnVU8LhSEe2UuoshngsjNA" name="setReleaseTime" method="_hU9P8rhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ2LhSEe2UuoshngsjNA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnVU8bhSEe2UuoshngsjNA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnV8ALhSEe2UuoshngsjNA" name="setPeriod" method="_hU9P9LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKJ2bhSEe2UuoshngsjNA">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnV8AbhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnWjELhSEe2UuoshngsjNA" name="setPhase" method="_hU93ALhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKw4LhSEe2UuoshngsjNA">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnWjEbhSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnXxMLhSEe2UuoshngsjNA" name="setNextReleaseTime" method="_hU93ArhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWKw4bhSEe2UuoshngsjNA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_gnXxMbhSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnbbkLhSEe2UuoshngsjNA" name="compareAscendingOrder" method="_hVCIdLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gnbbkbhSEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gnbbkrhSEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gncCoLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gncpsLhSEe2UuoshngsjNA" name="compareDescendingOrder" method="_hVCIeLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gncpsbhSEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gncpsrhSEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gncps7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gndQwLhSEe2UuoshngsjNA" name="print" method="_hVCvgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gndQwbhSEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gnd30LhSEe2UuoshngsjNA" name="print" method="_hVCvgrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_hKd3MLhSEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_hU5lkLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hKeeQbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hKeeQrhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWJiwrhSEe2UuoshngsjNA">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_hKd3MbhSEe2UuoshngsjNA" name="obj" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKeeQLhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKeeQ7hSEe2UuoshngsjNA" type="_gnE2QLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hKgTcbhSEe2UuoshngsjNA" name="addSubObject" method="_hU7aw7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKg6gLhSEe2UuoshngsjNA" name="obj" type="_gnE2QLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hKg6gbhSEe2UuoshngsjNA" name="maxPhaseComparison" method="_hU93BLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKhhkLhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKhhkbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKhhkrhSEe2UuoshngsjNA" name="maxPhaseComparison" method="_hU-eELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKhhk7hSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKiIoLhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKiIobhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKivsLhSEe2UuoshngsjNA" name="deadlineComparison" method="_hU_FILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKivsbhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKivsrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKivs7hSEe2UuoshngsjNA" name="deadlineComparison" method="_hU_sMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKjWwLhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKjWwbhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKjWwrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKj90LhSEe2UuoshngsjNA" name="periodComparison" method="_hU_sNLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKj90bhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKj90rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKkk4LhSEe2UuoshngsjNA" name="periodComparison" method="_hVATQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKkk4bhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKkk4rhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKkk47hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKlL8LhSEe2UuoshngsjNA" name="priorityComparison" method="_hVA6ULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKlL8bhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKlL8rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKlL87hSEe2UuoshngsjNA" name="priorityComparison" method="_hVA6U7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKlzALhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKlzAbhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKlzArhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKlzA7hSEe2UuoshngsjNA" name="releaseTimeComparison" method="_hVA6V7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKmaELhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKmaEbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKmaErhSEe2UuoshngsjNA" name="releaseTimeComparison" method="_hVBhYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKmaE7hSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKnBILhSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKnBIbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKnBIrhSEe2UuoshngsjNA" name="LatestReleaseTimeComparison" method="_hVBhZLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKnBI7hSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKnoMLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKnoMbhSEe2UuoshngsjNA" name="LatestReleaseTimeComparison" method="_hVCIcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKnoMrhSEe2UuoshngsjNA" name="obj1" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKnoM7hSEe2UuoshngsjNA" name="obj2" type="_gnE2QLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKoPQLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gnrTMLhSEe2UuoshngsjNA" name="SchedulableObjectQueue">
              <generalization xmi:id="_gnu9kLhSEe2UuoshngsjNA" general="_gmeZULhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSLowLhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSLowbhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVD9oLhSEe2UuoshngsjNA" name="SchedulableObjectQueue" specification="_hPPpgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVD9obhSEe2UuoshngsjNA" name="comparitor" type="_hH6ScLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVD9orhSEe2UuoshngsjNA" type="_gnrTMLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVD9o7hSEe2UuoshngsjNA" name="SchedulableObjectQueue" specification="_hPResLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVD9pLhSEe2UuoshngsjNA" name="comparitor" type="_hH6ScLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVD9pbhSEe2UuoshngsjNA" name="schedulableObjects" type="_hJXD8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVD9prhSEe2UuoshngsjNA" type="_gnrTMLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hPPpgLhSEe2UuoshngsjNA" name="SchedulableObjectQueue" visibility="package" method="_hVD9oLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPPpgrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPQQkLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hPPpgbhSEe2UuoshngsjNA" name="comparitor" type="_hH6ScLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPQQkbhSEe2UuoshngsjNA" type="_gnrTMLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPResLhSEe2UuoshngsjNA" name="SchedulableObjectQueue" visibility="package" method="_hVD9o7hSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPRes7hSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPSFwLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hPResbhSEe2UuoshngsjNA" name="comparitor" type="_hH6ScLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPResrhSEe2UuoshngsjNA" name="schedulableObjects" type="_hJXD8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPSFwbhSEe2UuoshngsjNA" type="_gnrTMLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gnyA4LhSEe2UuoshngsjNA" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_hWLX8LhSEe2UuoshngsjNA">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hSMP0LhSEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSMP0bhSEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSM24LhSEe2UuoshngsjNA" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSNd8bhSEe2UuoshngsjNA" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSOFAbhSEe2UuoshngsjNA" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSOsELhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSPTILhSEe2UuoshngsjNA" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSPTIrhSEe2UuoshngsjNA" name="schedule" visibility="protected" type="_goOFwLhSEe2UuoshngsjNA" association="_hXx6cLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSP6MbhSEe2UuoshngsjNA" name="poset" visibility="protected" type="_gkVrULhSEe2UuoshngsjNA" association="_hXyhgbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVEksLhSEe2UuoshngsjNA" name="Schedule" specification="_hKuV4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVEksbhSEe2UuoshngsjNA" name="poset" type="_gkVrULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVEksrhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVEks7hSEe2UuoshngsjNA" type="_gnyA4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVFy0LhSEe2UuoshngsjNA" name="getSchedule" specification="_gn6jwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVFy0bhSEe2UuoshngsjNA" type="_goOFwLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVFy0rhSEe2UuoshngsjNA" name="buildSchedule" specification="_gn7K0LhSEe2UuoshngsjNA">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVFy07hSEe2UuoshngsjNA" name="toProgram" specification="_gn7K0bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVFy1LhSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVGZ4LhSEe2UuoshngsjNA" name="replaceNullWithSleep" specification="_hKwLELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVGZ4bhSEe2UuoshngsjNA" name="program" type="_gmC7gLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVGZ4rhSEe2UuoshngsjNA" name="fakeSchedulingToTestRest" specification="_hKwLErhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVGZ47hSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVGZ5LhSEe2UuoshngsjNA" name="getChannelAndSetStartTime" specification="_hKwyIbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVGZ5bhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVGZ5rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVHA8LhSEe2UuoshngsjNA" name="findChannelAndTime" specification="_hKyAQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVHA8bhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVHA8rhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVHA87hSEe2UuoshngsjNA" type="_gn1EMLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVHA9LhSEe2UuoshngsjNA" name="continueSearch" specification="_hKynUrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVHA9bhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVHA9rhSEe2UuoshngsjNA" name="activation" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVHA97hSEe2UuoshngsjNA" type="_gn1EMLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVHA-LhSEe2UuoshngsjNA" name="noOtherChannelConflicts" specification="_hK0cgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVHA-bhSEe2UuoshngsjNA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVHA-rhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVHA-7hSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVHA_LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVHoALhSEe2UuoshngsjNA" name="conflictsExist" specification="_hK3f0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVHoAbhSEe2UuoshngsjNA" name="obj" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVHoArhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVHoA7hSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVHoBLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVHoBbhSEe2UuoshngsjNA" name="freeOfCoordinatorConflicts" specification="_hK4G4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVHoBrhSEe2UuoshngsjNA" name="obj" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVHoB7hSEe2UuoshngsjNA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVHoCLhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVHoCbhSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVHoCrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVIPELhSEe2UuoshngsjNA" name="isAvailable" specification="_hK5VALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVIPEbhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVIPErhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVIPE7hSEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVIPFLhSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVIPFbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVI2ILhSEe2UuoshngsjNA" name="isAvailable" specification="_hK6jILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVI2IbhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVI2IrhSEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVI2I7hSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVI2JLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVJdMLhSEe2UuoshngsjNA" name="timeRemaining" specification="_gn_cQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVJdMbhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVJdMrhSEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVJdM7hSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVJdNLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVKEQLhSEe2UuoshngsjNA" name="canCombineEntriesInPlace" specification="_hK7xQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVKEQbhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVKEQrhSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVKEQ7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVKERLhSEe2UuoshngsjNA" name="combinedEntriesInPlace" specification="_hK8YULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVKERbhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVKERrhSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVKER7hSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVKESLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVKrULhSEe2UuoshngsjNA" name="addToSchedule" specification="_hK8_YbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVKrUbhSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVKrUrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVKrU7hSEe2UuoshngsjNA" name="reportNotSchedulable" specification="_hK9mcbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVKrVLhSEe2UuoshngsjNA" name="object" type="_gbyzULhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVKrVbhSEe2UuoshngsjNA" name="printVerbose" specification="_goB4gLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVLSYLhSEe2UuoshngsjNA" name="print" specification="_goB4gbhSEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gn6jwLhSEe2UuoshngsjNA" name="getSchedule" method="_hVFy0LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWLX87hSEe2UuoshngsjNA">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_hKvkALhSEe2UuoshngsjNA" type="_goOFwLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gn7K0LhSEe2UuoshngsjNA" name="buildSchedule" visibility="private" method="_hVFy0rhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gn7K0bhSEe2UuoshngsjNA" name="toProgram" method="_hVFy07hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKvkAbhSEe2UuoshngsjNA" type="_gmC7gLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gn_cQLhSEe2UuoshngsjNA" name="timeRemaining" visibility="protected" method="_hVJdMLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWL_ALhSEe2UuoshngsjNA">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_gn_cQbhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gn_cQrhSEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gn_cQ7hSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_goADULhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_goB4gLhSEe2UuoshngsjNA" name="printVerbose" method="_hVKrVbhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_goB4gbhSEe2UuoshngsjNA" name="print" method="_hVLSYLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_hKuV4LhSEe2UuoshngsjNA" name="Schedule" visibility="package" method="_hVEksLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hKu88LhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hKu88bhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hKuV4bhSEe2UuoshngsjNA" name="poset" type="_gkVrULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKuV4rhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKu88rhSEe2UuoshngsjNA" type="_gnyA4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hKwLELhSEe2UuoshngsjNA" name="replaceNullWithSleep" visibility="private" method="_hVGZ4LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWLX9LhSEe2UuoshngsjNA">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_hKwLEbhSEe2UuoshngsjNA" name="program" type="_gmC7gLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hKwLErhSEe2UuoshngsjNA" name="fakeSchedulingToTestRest" visibility="private" method="_hVGZ4rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKwyILhSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hKwyIbhSEe2UuoshngsjNA" name="getChannelAndSetStartTime" visibility="protected" method="_hVGZ5LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWLX9bhSEe2UuoshngsjNA">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_hKwyIrhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKxZMLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hKyAQLhSEe2UuoshngsjNA" name="findChannelAndTime" visibility="protected" method="_hVHA8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hKyAQbhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKynULhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKynUbhSEe2UuoshngsjNA" type="_gn1EMLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hKynUrhSEe2UuoshngsjNA" name="continueSearch" visibility="protected" method="_hVHA9LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWLX9rhSEe2UuoshngsjNA">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_hKzOYLhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hKzOYbhSEe2UuoshngsjNA" name="activation" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hKzOYrhSEe2UuoshngsjNA" type="_gn1EMLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hK0cgLhSEe2UuoshngsjNA" name="noOtherChannelConflicts" visibility="protected" method="_hVHA-LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hK0cgbhSEe2UuoshngsjNA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK0cgrhSEe2UuoshngsjNA" name="schedulableObject" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK0cg7hSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK24wLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hK3f0LhSEe2UuoshngsjNA" name="conflictsExist" visibility="protected" method="_hVHoALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hK3f0bhSEe2UuoshngsjNA" name="obj" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK3f0rhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK3f07hSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK3f1LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hK4G4LhSEe2UuoshngsjNA" name="freeOfCoordinatorConflicts" visibility="protected" method="_hVHoBbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hK4G4bhSEe2UuoshngsjNA" name="obj" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK4G4rhSEe2UuoshngsjNA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK4t8LhSEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK4t8bhSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK4t8rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hK5VALhSEe2UuoshngsjNA" name="isAvailable" visibility="protected" method="_hVIPELhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWLX97hSEe2UuoshngsjNA">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_hK5VAbhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK5VArhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK58ELhSEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK58EbhSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK58ErhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hK6jILhSEe2UuoshngsjNA" name="isAvailable" visibility="protected" method="_hVI2ILhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWLX-LhSEe2UuoshngsjNA">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_hK6jIbhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK7KMLhSEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK7KMbhSEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK7KMrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hK7xQLhSEe2UuoshngsjNA" name="canCombineEntriesInPlace" visibility="private" method="_hVKEQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hK7xQbhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK7xQrhSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK7xQ7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hK8YULhSEe2UuoshngsjNA" name="combinedEntriesInPlace" visibility="private" method="_hVKERLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hK8YUbhSEe2UuoshngsjNA" name="a1" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK8YUrhSEe2UuoshngsjNA" name="a2" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK8YU7hSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hK8_YLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hK8_YbhSEe2UuoshngsjNA" name="addToSchedule" visibility="protected" method="_hVKrULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hK8_YrhSEe2UuoshngsjNA" name="next" type="_gbyzULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hK9mcLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hK9mcbhSEe2UuoshngsjNA" name="reportNotSchedulable" visibility="private" method="_hVKrU7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hK9mcrhSEe2UuoshngsjNA" name="object" type="_gbyzULhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_gn1EMLhSEe2UuoshngsjNA" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_hSQhQbhSEe2UuoshngsjNA" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_hSRvYLhSEe2UuoshngsjNA" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVEktLhSEe2UuoshngsjNA" name="ScheduleLocation" specification="_gn2SULhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVEktbhSEe2UuoshngsjNA" type="_gn1EMLhSEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVFLwLhSEe2UuoshngsjNA" name="ScheduleLocation" specification="_gn3gcLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVFLwbhSEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_hVFLwrhSEe2UuoshngsjNA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_hVFLw7hSEe2UuoshngsjNA" type="_gn1EMLhSEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVFLxLhSEe2UuoshngsjNA" name="getChannel" specification="_gn4ukLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVFLxbhSEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVFLxrhSEe2UuoshngsjNA" name="getTime" specification="_gn5VoLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVFLx7hSEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_gn2SULhSEe2UuoshngsjNA" name="ScheduleLocation" visibility="package" method="_hVEktLhSEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_gn25YLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_gn25YbhSEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_gn25YrhSEe2UuoshngsjNA" type="_gn1EMLhSEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_gn3gcLhSEe2UuoshngsjNA" name="ScheduleLocation" visibility="package" method="_hVFLwLhSEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_gn4HgrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_gn4Hg7hSEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_gn4HgLhSEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_gn4HgbhSEe2UuoshngsjNA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_gn4HhLhSEe2UuoshngsjNA" type="_gn1EMLhSEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_gn4ukLhSEe2UuoshngsjNA" name="getChannel" visibility="protected" method="_hVFLxLhSEe2UuoshngsjNA">
                  <ownedComment xmi:id="_hWLX8bhSEe2UuoshngsjNA">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_gn4ukbhSEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_gn5VoLhSEe2UuoshngsjNA" name="getTime" visibility="protected" method="_hVFLxrhSEe2UuoshngsjNA">
                  <ownedComment xmi:id="_hWLX8rhSEe2UuoshngsjNA">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_gn5VobhSEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_goOFwLhSEe2UuoshngsjNA" name="ScheduleTable">
              <generalization xmi:id="_hLApwLhSEe2UuoshngsjNA" general="_gokrELhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSULoLhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSULobhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVL5cLhSEe2UuoshngsjNA" name="ScheduleTable" specification="_goPT4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVL5cbhSEe2UuoshngsjNA" type="_goOFwLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVL5crhSEe2UuoshngsjNA" name="ScheduleTable" specification="_goP68LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVL5c7hSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVL5dLhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVL5dbhSEe2UuoshngsjNA" type="_goOFwLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_goPT4LhSEe2UuoshngsjNA" name="ScheduleTable" visibility="package" method="_hVL5cLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_goPT4bhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_goPT4rhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_goPT47hSEe2UuoshngsjNA" type="_goOFwLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_goP68LhSEe2UuoshngsjNA" name="ScheduleTable" visibility="package" method="_hVL5crhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_goQiALhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_goQiAbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_goP68bhSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_goP68rhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_goQiArhSEe2UuoshngsjNA" type="_goOFwLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_goRJELhSEe2UuoshngsjNA" name="ScheduleTime">
              <ownedAttribute xmi:id="_hSUysLhSEe2UuoshngsjNA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSVZwLhSEe2UuoshngsjNA" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVMggLhSEe2UuoshngsjNA" name="ScheduleTime" specification="_goSXMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVMggbhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVMggrhSEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVMgg7hSEe2UuoshngsjNA" type="_goRJELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_goSXMLhSEe2UuoshngsjNA" name="ScheduleTime" visibility="package" method="_hVMggLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_goS-QLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_goS-QbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_goSXMbhSEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_goSXMrhSEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_goS-QrhSEe2UuoshngsjNA" type="_goRJELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_goUMYLhSEe2UuoshngsjNA" name="SimulatorInput">
              <ownedComment xmi:id="_hWL_AbhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_goUzcLhSEe2UuoshngsjNA" name="SortedPeriodQueue">
              <generalization xmi:id="_goX2wLhSEe2UuoshngsjNA" general="_gmeZULhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSWA0LhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSWA0bhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVMghLhSEe2UuoshngsjNA" name="SortedPeriodQueue" specification="_goWooLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVMghbhSEe2UuoshngsjNA" type="_goUzcLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVNHkLhSEe2UuoshngsjNA" name="SortedPeriodQueue" specification="_hLCe8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVNHkbhSEe2UuoshngsjNA" name="schedulableObjects" type="_hJXD8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVNHkrhSEe2UuoshngsjNA" type="_goUzcLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_goWooLhSEe2UuoshngsjNA" name="SortedPeriodQueue" visibility="package" method="_hVMghLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_goWoobhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_goWoorhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_goXPsLhSEe2UuoshngsjNA" type="_goUzcLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLCe8LhSEe2UuoshngsjNA" name="SortedPeriodQueue" visibility="package" method="_hVNHkLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hLCe8rhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hLCe87hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hLCe8bhSEe2UuoshngsjNA" name="schedulableObjects" type="_hJXD8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLCe9LhSEe2UuoshngsjNA" type="_goUzcLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_goZr8LhSEe2UuoshngsjNA" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_hLEUILhSEe2UuoshngsjNA" general="_gmlHALhSEe2UuoshngsjNA"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_goa6ELhSEe2UuoshngsjNA" name="ScheduleChoices">
                <ownedLiteral xmi:id="_gobhIbhSEe2UuoshngsjNA" name="PRIORITY"/>
                <ownedLiteral xmi:id="_gobhIrhSEe2UuoshngsjNA" name="RM"/>
                <ownedLiteral xmi:id="_gocIMLhSEe2UuoshngsjNA" name="DM"/>
                <ownedLiteral xmi:id="_gocIMbhSEe2UuoshngsjNA" name="RTHART"/>
                <ownedLiteral xmi:id="_gocIMrhSEe2UuoshngsjNA" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_gocIM7hSEe2UuoshngsjNA" name="POSET_RM"/>
                <ownedLiteral xmi:id="_gocvQLhSEe2UuoshngsjNA" name="POSET_DM"/>
                <ownedLiteral xmi:id="_gocvQbhSEe2UuoshngsjNA" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_gocvQrhSEe2UuoshngsjNA" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_godWULhSEe2UuoshngsjNA" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_godWUbhSEe2UuoshngsjNA" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_godWUrhSEe2UuoshngsjNA" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_god9YLhSEe2UuoshngsjNA" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_gofLgLhSEe2UuoshngsjNA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_gofykLhSEe2UuoshngsjNA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_gogZoLhSEe2UuoshngsjNA" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_gogZobhSEe2UuoshngsjNA" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_gohAsLhSEe2UuoshngsjNA" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_gohnwLhSEe2UuoshngsjNA" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_goi14LhSEe2UuoshngsjNA" name="SystemFactory">
              <ownedComment xmi:id="_hWL_ArhSEe2UuoshngsjNA">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVNHk7hSEe2UuoshngsjNA" name="create" specification="_hLGJULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVNHlLhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVNHlbhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVNHlrhSEe2UuoshngsjNA" name="choice" type="_goa6ELhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVNHl7hSEe2UuoshngsjNA" type="_gp2dcLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hLGJULhSEe2UuoshngsjNA" name="create" isStatic="true" method="_hVNHk7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hLGJUbhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLGJUrhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hLGJU7hSEe2UuoshngsjNA" name="choice" type="_goa6ELhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLGwYLhSEe2UuoshngsjNA" type="_gp2dcLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gokrELhSEe2UuoshngsjNA" name="Table">
              <generalization xmi:id="_hPVwIbhSEe2UuoshngsjNA" general="_hHI2YLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSWn4LhSEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSWn4bhSEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVNuoLhSEe2UuoshngsjNA" name="Table" specification="_gomgQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVNuobhSEe2UuoshngsjNA" type="_gokrELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVNuorhSEe2UuoshngsjNA" name="Table" specification="_gonHULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVNuo7hSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVNupLhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVNupbhSEe2UuoshngsjNA" type="_gokrELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVNuprhSEe2UuoshngsjNA" name="getNumRows" specification="_gooVcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVNup7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVOVsLhSEe2UuoshngsjNA" name="getNumColumns" specification="_gopjkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVOVsbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVOVsrhSEe2UuoshngsjNA" name="set" specification="_hPVJELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVOVs7hSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVOVtLhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVOVtbhSEe2UuoshngsjNA" name="element" type="_hODWsbhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVOVtrhSEe2UuoshngsjNA" name="get" specification="_goqxsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVOVt7hSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVOVuLhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVOVubhSEe2UuoshngsjNA" type="_hODWsbhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gomgQLhSEe2UuoshngsjNA" name="Table" method="_hVNuoLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gomgQbhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gomgQrhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gomgQ7hSEe2UuoshngsjNA" type="_gokrELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gonHULhSEe2UuoshngsjNA" name="Table" method="_hVNuorhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gonuYLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gonuYbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gonHUbhSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gonHUrhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gonuYrhSEe2UuoshngsjNA" type="_gokrELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gooVcLhSEe2UuoshngsjNA" name="getNumRows" method="_hVNuprhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_goo8gLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gopjkLhSEe2UuoshngsjNA" name="getNumColumns" method="_hVOVsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gopjkbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_goqxsLhSEe2UuoshngsjNA" name="get" method="_hVOVtrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_goqxsbhSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_goqxsrhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPVwILhSEe2UuoshngsjNA" type="_hODWsbhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPVJELhSEe2UuoshngsjNA" name="set" method="_hVOVsrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPVJEbhSEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPVJErhSEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPVJE7hSEe2UuoshngsjNA" name="element" type="_hODWsbhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_gotN8LhSEe2UuoshngsjNA" name="Visualization">
              <ownedComment xmi:id="_hWL_A7hSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_goucELhSEe2UuoshngsjNA" name="SystemChoices">
                <ownedLiteral xmi:id="_govDILhSEe2UuoshngsjNA" name="SOURCE"/>
                <ownedLiteral xmi:id="_govDIbhSEe2UuoshngsjNA" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_govqMLhSEe2UuoshngsjNA" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_govqMbhSEe2UuoshngsjNA" name="LATENCY"/>
                <ownedLiteral xmi:id="_govqMrhSEe2UuoshngsjNA" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_gowRQLhSEe2UuoshngsjNA" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_gowRQbhSEe2UuoshngsjNA" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_gow4ULhSEe2UuoshngsjNA" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_goxfYLhSEe2UuoshngsjNA" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_goxfYbhSEe2UuoshngsjNA" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_goxfYrhSEe2UuoshngsjNA" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_goyGcLhSEe2UuoshngsjNA" name="toDisplay"/>
              <ownedOperation xmi:id="_goz7oLhSEe2UuoshngsjNA" name="toFile"/>
              <ownedOperation xmi:id="_goz7obhSEe2UuoshngsjNA" name="toString">
                <ownedParameter xmi:id="_go0isLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_go1JwLhSEe2UuoshngsjNA" name="VisualizationFactory">
              <ownedComment xmi:id="_hWL_BLhSEe2UuoshngsjNA">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVO8wLhSEe2UuoshngsjNA" name="createProgramVisualization" specification="_hLLo4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVO8wbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVO8wrhSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVO8w7hSEe2UuoshngsjNA" name="choice" type="_goucELhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVO8xLhSEe2UuoshngsjNA" type="_gotN8LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVPj0LhSEe2UuoshngsjNA" name="createWorkLoadVisualization" specification="_hLMP8bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVPj0bhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVPj0rhSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVPj07hSEe2UuoshngsjNA" name="choice" type="_gow4ULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVPj1LhSEe2UuoshngsjNA" type="_gotN8LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hLLo4LhSEe2UuoshngsjNA" name="createProgramVisualization" isStatic="true" method="_hVO8wLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hLLo4bhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLLo4rhSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hLLo47hSEe2UuoshngsjNA" name="choice" type="_goucELhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLMP8LhSEe2UuoshngsjNA" type="_gotN8LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLMP8bhSEe2UuoshngsjNA" name="createWorkLoadVisualization" isStatic="true" method="_hVPj0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hLMP8rhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLM3ALhSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hLM3AbhSEe2UuoshngsjNA" name="choice" type="_gow4ULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLM3ArhSEe2UuoshngsjNA" type="_gotN8LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_go4NELhSEe2UuoshngsjNA" name="VisualizationImplementation">
              <ownedComment xmi:id="_hWL_BbhSEe2UuoshngsjNA">
                <body>VisualizationImplementation class implements the Visualization file,&#xD;
helping create visualizations for the WARP project based on&#xD;
the requested information/parameters. &#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hSXO8LhSEe2UuoshngsjNA" name="visualization" visibility="private" type="_gg6j4LhSEe2UuoshngsjNA" association="_hXzIkbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSX2AbhSEe2UuoshngsjNA" name="fileContent" visibility="private" type="_gg6j4LhSEe2UuoshngsjNA" association="_hX0WsbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSYdEbhSEe2UuoshngsjNA" name="window" visibility="private" type="_gi450LhSEe2UuoshngsjNA" association="_hX1k0LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSZEIbhSEe2UuoshngsjNA" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSZrMLhSEe2UuoshngsjNA" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSaSQLhSEe2UuoshngsjNA" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSa5ULhSEe2UuoshngsjNA" name="fm" visibility="private" type="_ghS-YLhSEe2UuoshngsjNA" association="_hX2y8bhSEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSa5UbhSEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSbgYLhSEe2UuoshngsjNA" name="warp" visibility="private" type="_gp2dcLhSEe2UuoshngsjNA" association="_hX4BELhSEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSbgYbhSEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hScHcbhSEe2UuoshngsjNA" name="workLoad" visibility="private" type="_grDXULhSEe2UuoshngsjNA" association="_hX4oIbhSEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hScugLhSEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSdVkLhSEe2UuoshngsjNA" name="visualizationObject" visibility="private" type="_gpHdoLhSEe2UuoshngsjNA" association="_hX52QLhSEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_hLNeELhSEe2UuoshngsjNA" client="_go4NELhSEe2UuoshngsjNA" supplier="_gotN8LhSEe2UuoshngsjNA" contract="_gotN8LhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVPj1bhSEe2UuoshngsjNA" name="VisualizationImplementation" specification="_hPYMYbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVPj1rhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVPj17hSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVPj2LhSEe2UuoshngsjNA" name="choice" type="_hPXlULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVPj2bhSEe2UuoshngsjNA" type="_go4NELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVQK4LhSEe2UuoshngsjNA" name="VisualizationImplementation" specification="_hPZagbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVQK4bhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVQK4rhSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVQK47hSEe2UuoshngsjNA" name="choice" type="_hPYzdrhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVQK5LhSEe2UuoshngsjNA" type="_go4NELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVQK5bhSEe2UuoshngsjNA" name="toDisplay" specification="_go7QYLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVQK5rhSEe2UuoshngsjNA" name="toFile" specification="_go8egLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVQx8LhSEe2UuoshngsjNA" name="toString" specification="_go9sorhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVQx8bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVQx8rhSEe2UuoshngsjNA" name="createVisualization" specification="_hPaooLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVQx87hSEe2UuoshngsjNA" name="choice" type="_hPXlULhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVQx9LhSEe2UuoshngsjNA" name="createVisualization" specification="_hPbPsbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVQx9bhSEe2UuoshngsjNA" name="choice" type="_hPYzdrhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVRZALhSEe2UuoshngsjNA" name="createVisualization" specification="_hPb2wbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVRZAbhSEe2UuoshngsjNA" name="obj" type="_hODWsbhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVRZArhSEe2UuoshngsjNA" name="createFileNameTemplate" specification="_gpAI4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVRZA7hSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVRZBLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_go7QYLhSEe2UuoshngsjNA" name="toDisplay" method="_hVQK5bhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_go8egLhSEe2UuoshngsjNA" name="toFile" method="_hVQK5rhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_go9sorhSEe2UuoshngsjNA" name="toString" method="_hVQx8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_go-TsLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gpAI4LhSEe2UuoshngsjNA" name="createFileNameTemplate" visibility="private" method="_hVRZArhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWMmFLhSEe2UuoshngsjNA">
                  <body>@return the file name template created from the output path and input string.&#xD;
@param outputDirectory directory where output visualization goes</body>
                </ownedComment>
                <ownedParameter xmi:id="_gpAI4bhSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gpAv8LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hPYMYbhSEe2UuoshngsjNA" name="VisualizationImplementation" method="_hVPj1bhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPYzc7hSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPYzdLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWMmELhSEe2UuoshngsjNA">
                  <body>Constructor that initializes objects, and makes a call to &#xD;
   * VisualizationObject. This creates a visualization for warp.&#xD;
@param warp any object implementing the Warp interface.&#xD;
@param outputDirectory directory where output visualization goes&#xD;
@param choice the requested visualization for system.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hPYzcLhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPYzcbhSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPYzcrhSEe2UuoshngsjNA" name="choice" type="_hPXlULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPYzdbhSEe2UuoshngsjNA" type="_go4NELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPZagbhSEe2UuoshngsjNA" name="VisualizationImplementation" method="_hVQK4LhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPaBkrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPaBk7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWMmEbhSEe2UuoshngsjNA">
                  <body>Constructor that initializes objects, and makes a call to &#xD;
   * VisualizationObject. This creates a visualization for work load.&#xD;
@param workLoad Workload that will be visualized&#xD;
@param outputDirectory directory where output visualization goes&#xD;
@param choice the requested visualization for work load.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hPZagrhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPaBkLhSEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPaBkbhSEe2UuoshngsjNA" name="choice" type="_hPYzdrhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPaBlLhSEe2UuoshngsjNA" type="_go4NELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPaooLhSEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_hVQx8rhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWMmErhSEe2UuoshngsjNA">
                  <body>Depending on the system choice, implement a visualization accordingly.&#xD;
   * These include source, reliability analysis, simulator input, latency analysis,&#xD;
   * chanel analysis, latency report, and deadline report.&#xD;
@param choice the requested visualization for system.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hPbPsLhSEe2UuoshngsjNA" name="choice" type="_hPXlULhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPbPsbhSEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_hVQx9LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWMmE7hSEe2UuoshngsjNA">
                  <body>Depending on the workload choice, implement a visualization accordingly.&#xD;
   * These include communication graph, graphViz, and input graph.&#xD;
@param choice the requested visualization for work load.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hPb2wLhSEe2UuoshngsjNA" name="choice" type="_hPYzdrhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPb2wbhSEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_hVRZALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPcd0LhSEe2UuoshngsjNA" name="obj" type="_hODWsbhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gpHdoLhSEe2UuoshngsjNA" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_hWMmFbhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hSejsLhSEe2UuoshngsjNA" name="fm" visibility="private" type="_ghS-YLhSEe2UuoshngsjNA" association="_hX6dUbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSfKwLhSEe2UuoshngsjNA" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSfx0LhSEe2UuoshngsjNA" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSfx0rhSEe2UuoshngsjNA" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSgY4LhSEe2UuoshngsjNA" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSgY4bhSEe2UuoshngsjNA" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hSgY4rhSEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVSAELhSEe2UuoshngsjNA" name="VisualizationObject" specification="_hLS9oLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVSAEbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVSAErhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVSAE7hSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVSAFLhSEe2UuoshngsjNA" type="_gpHdoLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVSnILhSEe2UuoshngsjNA" name="VisualizationObject" specification="_hLULwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVSnIbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVSnIrhSEe2UuoshngsjNA" name="warp" type="_goZr8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVSnI7hSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVSnJLhSEe2UuoshngsjNA" type="_gpHdoLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVTOMLhSEe2UuoshngsjNA" name="VisualizationObject" specification="_hLVZ4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVTOMbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVTOMrhSEe2UuoshngsjNA" name="warp" type="_goZr8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVTOM7hSEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVTONLhSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVTONbhSEe2UuoshngsjNA" type="_gpHdoLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVT1QLhSEe2UuoshngsjNA" name="VisualizationObject" specification="_hLWA87hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVT1QbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVT1QrhSEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVT1Q7hSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVT1RLhSEe2UuoshngsjNA" type="_gpHdoLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVT1RbhSEe2UuoshngsjNA" name="nameExtension" specification="_hPeTALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVT1RrhSEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVT1R7hSEe2UuoshngsjNA" name="m" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVT1SLhSEe2UuoshngsjNA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVT1SbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVUcULhSEe2UuoshngsjNA" name="nameExtension" specification="_gpLIALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVUcUbhSEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVUcUrhSEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVUcU7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVUcVLhSEe2UuoshngsjNA" name="getFileManager" specification="_gpLvELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVUcVbhSEe2UuoshngsjNA" type="_ghS-YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVVDYLhSEe2UuoshngsjNA" name="visualization" specification="_gpLvEbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVVDYbhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVVDYrhSEe2UuoshngsjNA" name="createFile" specification="_gpMWILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVVDY7hSEe2UuoshngsjNA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVVDZLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVVDZbhSEe2UuoshngsjNA" name="fileVisualization" specification="_gpM9MbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVVDZrhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVVqcLhSEe2UuoshngsjNA" name="displayVisualization" specification="_gpNkQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVVqcbhSEe2UuoshngsjNA" type="_gi450LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVVqcrhSEe2UuoshngsjNA" name="createHeader" specification="_gpNkQbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVVqc7hSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVWRgLhSEe2UuoshngsjNA" name="createFooter" specification="_gpOLULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVWRgbhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVWRgrhSEe2UuoshngsjNA" name="createColumnHeader" specification="_gpOyYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVWRg7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hVWRhLhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVWRhbhSEe2UuoshngsjNA" name="createVisualizationData" specification="_gpPZcbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVWRhrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hVWRh7hSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gpLIALhSEe2UuoshngsjNA" name="nameExtension" visibility="private" method="_hVUcULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gpLIAbhSEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gpLIArhSEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gpLIA7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gpLvELhSEe2UuoshngsjNA" name="getFileManager" method="_hVUcVLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWMmFrhSEe2UuoshngsjNA">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_hLXPELhSEe2UuoshngsjNA" type="_ghS-YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gpLvEbhSEe2UuoshngsjNA" name="visualization" method="_hVVDYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hLXPEbhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gpMWILhSEe2UuoshngsjNA" name="createFile" method="_hVVDYrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gpMWIbhSEe2UuoshngsjNA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gpM9MLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gpM9MbhSEe2UuoshngsjNA" name="fileVisualization" method="_hVVDZbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hLX2ILhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gpNkQLhSEe2UuoshngsjNA" name="displayVisualization" method="_hVVqcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hLX2IbhSEe2UuoshngsjNA" type="_gi450LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gpNkQbhSEe2UuoshngsjNA" name="createHeader" visibility="protected" method="_hVVqcrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hLX2IrhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gpOLULhSEe2UuoshngsjNA" name="createFooter" visibility="protected" method="_hVWRgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hLYdMLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gpOyYLhSEe2UuoshngsjNA" name="createColumnHeader" visibility="protected" method="_hVWRgrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gpOyYbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gpOyYrhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gpPZcbhSEe2UuoshngsjNA" name="createVisualizationData" visibility="protected" method="_hVWRhbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gpQAgLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gpQAgbhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hLS9oLhSEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_hVSAELhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hLTksrhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hLTks7hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hLS9obhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLTksLhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLTksbhSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hLTktLhSEe2UuoshngsjNA" type="_gpHdoLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLULwLhSEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_hVSnILhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hLUy0rhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hLUy07hSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hLULwbhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLUy0LhSEe2UuoshngsjNA" name="warp" type="_goZr8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLUy0bhSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hLUy1LhSEe2UuoshngsjNA" type="_gpHdoLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLVZ4LhSEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_hVTOMLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hLWA8LhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hLWA8bhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hLVZ4bhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLVZ4rhSEe2UuoshngsjNA" name="warp" type="_goZr8LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLVZ47hSEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hLVZ5LhSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hLWA8rhSEe2UuoshngsjNA" type="_gpHdoLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLWA87hSEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_hVT1QLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hLWoA7hSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hLWoBLhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hLWoALhSEe2UuoshngsjNA" name="fm" type="_ghS-YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLWoAbhSEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hLWoArhSEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hLWoBbhSEe2UuoshngsjNA" type="_gpHdoLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPeTALhSEe2UuoshngsjNA" name="nameExtension" visibility="private" method="_hVT1RbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPeTAbhSEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPe6ELhSEe2UuoshngsjNA" name="m" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPe6EbhSEe2UuoshngsjNA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPe6ErhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gpVgELhSEe2UuoshngsjNA" name="Warp">
              <ownedComment xmi:id="_hWMmF7hSEe2UuoshngsjNA">
                <body>Main file for the entire WARP interface. &#xD;
WARP: On-the-fly Program Synthesis for Agile, Real-time, and Reliable Wireless Networks. This&#xD;
system generates node communication programs WARP uses programs to specify a network’s behavior&#xD;
and includes a synthesis procedure to automatically generate such programs from a high-level&#xD;
specification of the system’s workload and topology. WARP has three unique features: &lt;br>&#xD;
(1) WARP uses a domain-specific language to specify stateful programs that include conditional&#xD;
statements to control when a flow’s packets are transmitted. The execution paths of programs&#xD;
depend on the pattern of packet losses observed at run-time, thereby enabling WARP to readily&#xD;
adapt to packet losses due to short-term variations in link quality. &lt;br>&#xD;
(2) Our synthesis technique uses heuristics to improve network performance by considering&#xD;
multiple packet loss patterns and associated execution paths when determining the transmissions&#xD;
performed by nodes. Furthermore, the generated programs ensure that the likelihood of a flow&#xD;
delivering its packets by its deadline exceeds a user-specified threshold. &lt;br>&#xD;
(3) WARP can adapt to workload and topology changes without explicitly reconstructing a network’s&#xD;
program based on the observation that nodes can independently synthesize the same program when&#xD;
they share the same workload and topology information. Simulations show that WARP improves&#xD;
network throughput for data collection, dissemination, and mixed workloads on two realistic&#xD;
topologies. Testbed experiments show that WARP reduces the time to add new flows by 5 times over&#xD;
a state-of-the-art centralized control plane and guarantees the real-time and reliability of all&#xD;
flows.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hShnALhSEe2UuoshngsjNA" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSiOELhSEe2UuoshngsjNA" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSiOEbhSEe2UuoshngsjNA" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_hO_x4LhSEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSiOErhSEe2UuoshngsjNA" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSi1ILhSEe2UuoshngsjNA" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_hO_x4LhSEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSi1IbhSEe2UuoshngsjNA" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSi1IrhSEe2UuoshngsjNA" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSi1I7hSEe2UuoshngsjNA" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSjcMLhSEe2UuoshngsjNA" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_goa6ELhSEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSjcMbhSEe2UuoshngsjNA" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSjcMrhSEe2UuoshngsjNA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSjcM7hSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSkDQLhSEe2UuoshngsjNA" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSkDQrhSEe2UuoshngsjNA" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSkqUbhSEe2UuoshngsjNA" name="minLQ" visibility="private" isStatic="true" type="_hO_x4LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSlRYbhSEe2UuoshngsjNA" name="e2e" visibility="private" isStatic="true" type="_hO_x4LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hSmfgLhSEe2UuoshngsjNA" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSntoLhSEe2UuoshngsjNA" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSoUsLhSEe2UuoshngsjNA" name="gvRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSo7wLhSEe2UuoshngsjNA" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSpi0LhSEe2UuoshngsjNA" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSqJ4LhSEe2UuoshngsjNA" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSqJ4rhSEe2UuoshngsjNA" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSrYALhSEe2UuoshngsjNA" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSrYArhSEe2UuoshngsjNA" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSr_EbhSEe2UuoshngsjNA" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSsmIbhSEe2UuoshngsjNA" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSsmIrhSEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hStNMbhSEe2UuoshngsjNA" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSt0QbhSEe2UuoshngsjNA" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSubUbhSEe2UuoshngsjNA" name="schedulerSelected" visibility="private" isStatic="true" type="_goa6ELhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVW4kLhSEe2UuoshngsjNA" name="main" specification="_gpYjYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVW4kbhSEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hVW4krhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVXfoLhSEe2UuoshngsjNA" name="visualize" specification="_hLfx8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVXfobhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVXforhSEe2UuoshngsjNA" name="choice" type="_gow4ULhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVXfo7hSEe2UuoshngsjNA" name="visualize" specification="_hLgZAbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVXfpLhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVXfpbhSEe2UuoshngsjNA" name="choice" type="_goucELhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVYGsLhSEe2UuoshngsjNA" name="verifyPerformanceRequirements" specification="_hLhnILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVYGsbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVYGsrhSEe2UuoshngsjNA" name="verifyReliabilities" specification="_hLhnIrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVYGs7hSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVYGtLhSEe2UuoshngsjNA" name="verifyDeadlines" specification="_hLiOMbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVYGtbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVYtwLhSEe2UuoshngsjNA" name="verifyNoChannelConflicts" specification="_hLi1QLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVYtwbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVZU0LhSEe2UuoshngsjNA" name="setWarpParameters" specification="_gpa_oLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVZU0bhSEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hVZU0rhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVZU07hSEe2UuoshngsjNA" name="printWarpParameters" specification="_gpcNwLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gpYjYLhSEe2UuoshngsjNA" name="main" isStatic="true" method="_hVW4kLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWNNILhSEe2UuoshngsjNA">
                  <body>Main method for WARP program. Makes a call to WARP system parameters and prints accordingly.&#xD;
   * It also initializes Workload with number of faults tolerated per edge, minimum link &#xD;
   * quality in each system, e2e, and the input file from which the graph workload is read.&#xD;
   * If there is an all out files requested flag, the parameters are visualized according to &#xD;
   * configurations.&#xD;
   * &#xD;
   * @param args Command line option</body>
                </ownedComment>
                <ownedParameter xmi:id="_gpYjYbhSEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gpZKcLhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gpa_oLhSEe2UuoshngsjNA" name="setWarpParameters" visibility="private" isStatic="true" method="_hVZU0LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWNNJ7hSEe2UuoshngsjNA">
                  <body>Sets the parameters configurations for WARP.&#xD;
   * Arguments that aren't passed through the command line are set to default.&#xD;
@param args Command line arguments.</body>
                </ownedComment>
                <ownedParameter xmi:id="_gpa_obhSEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gpbmsLhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gpcNwLhSEe2UuoshngsjNA" name="printWarpParameters" visibility="private" isStatic="true" method="_hVZU07hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWNNKLhSEe2UuoshngsjNA">
                  <body>Prints all system configuration parameters.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_hLfx8LhSEe2UuoshngsjNA" name="visualize" visibility="private" isStatic="true" method="_hVXfoLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWNNIbhSEe2UuoshngsjNA">
                  <body>When the workload visualization is not null and there is a verbose mode flag &#xD;
   * it prints a string, else it is output to a file.&#xD;
   * If the Gui Visualization is selected, then it displays the visualization.&#xD;
@param workLoad the WorkLoad object &#xD;
@param choice keep track of choices for work load to create a visualization of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hLfx8bhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLgZALhSEe2UuoshngsjNA" name="choice" type="_gow4ULhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLgZAbhSEe2UuoshngsjNA" name="visualize" visibility="private" isStatic="true" method="_hVXfo7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWNNIrhSEe2UuoshngsjNA">
                  <body>Creates visualization based on the choice. If var pointer is not null, then the visualization file is created.&#xD;
   * The var pointer is displayed if Gui visualization and specific scheduler has been requested.&#xD;
@param warp Refers to the main WARP interface.&#xD;
@param choice keep track of choices for the system to create a visualization of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hLgZArhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hLhAELhSEe2UuoshngsjNA" name="choice" type="_goucELhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLhnILhSEe2UuoshngsjNA" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_hVYGsLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWNNI7hSEe2UuoshngsjNA">
                  <body>Checks if performance-based requirements are met. This includes &#xD;
   * deadlines, reliabilities, and verifying that there are no channel conflicts.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hLhnIbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLhnIrhSEe2UuoshngsjNA" name="verifyReliabilities" visibility="private" isStatic="true" method="_hVYGsrhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWNNJLhSEe2UuoshngsjNA">
                  <body>Checks for the flow reliabilities. An error is printed if flows don't&#xD;
   * meet the reliability target.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hLiOMLhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLiOMbhSEe2UuoshngsjNA" name="verifyDeadlines" visibility="private" isStatic="true" method="_hVYGtLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWNNJbhSEe2UuoshngsjNA">
                  <body>Checks for the flow deadlines. An error is printed if flows don't&#xD;
   * meet the deadline target.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hLiOMrhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hLi1QLhSEe2UuoshngsjNA" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_hVYtwLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWNNJrhSEe2UuoshngsjNA">
                  <body>Checks for the flow channel conflicts. An error is printed if flows &#xD;
   * contain a conflict.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hLi1QbhSEe2UuoshngsjNA" name="warp" type="_gp2dcLhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gpi7cLhSEe2UuoshngsjNA" name="WarpDSL">
              <ownedComment xmi:id="_hWN0MLhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hSvpcLhSEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSvpcbhSEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSwQgLhSEe2UuoshngsjNA" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSwQgbhSEe2UuoshngsjNA" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hSwQgrhSEe2UuoshngsjNA" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSw3kLhSEe2UuoshngsjNA" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVbxELhSEe2UuoshngsjNA" name="getInstructionParameters" specification="_gpq3QLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVbxEbhSEe2UuoshngsjNA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVbxErhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gpq3QLhSEe2UuoshngsjNA" name="getInstructionParameters" method="_hVbxELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gpreULhSEe2UuoshngsjNA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPikcLhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_gpkJkLhSEe2UuoshngsjNA" name="InstructionParameters">
                <ownedAttribute xmi:id="_hSw3kbhSEe2UuoshngsjNA" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSxeoLhSEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_hSxeobhSEe2UuoshngsjNA" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSyFsLhSEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_hSyFsbhSEe2UuoshngsjNA" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSyFsrhSEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_hSyswLhSEe2UuoshngsjNA" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSyswbhSEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_hSzT0LhSEe2UuoshngsjNA" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSzT0bhSEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_hSzT0rhSEe2UuoshngsjNA" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_hSz64LhSEe2UuoshngsjNA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_hS0h8LhSEe2UuoshngsjNA" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_hS0h8bhSEe2UuoshngsjNA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVZ74LhSEe2UuoshngsjNA" name="getCoordinator" specification="_gplXsLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVZ74bhSEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVai8LhSEe2UuoshngsjNA" name="setCoordinator" specification="_gpml0LhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVai8bhSEe2UuoshngsjNA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVai8rhSEe2UuoshngsjNA" name="setName" specification="_gpnM4bhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVai87hSEe2UuoshngsjNA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVai9LhSEe2UuoshngsjNA" name="setFlow" specification="_gpnz8bhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVai9bhSEe2UuoshngsjNA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVbKALhSEe2UuoshngsjNA" name="setSrc" specification="_gpobALhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVbKAbhSEe2UuoshngsjNA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVbKArhSEe2UuoshngsjNA" name="setSnk" specification="_gppCELhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVbKA7hSEe2UuoshngsjNA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVbKBLhSEe2UuoshngsjNA" name="setChannel" specification="_gpppILhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVbKBbhSEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVbKBrhSEe2UuoshngsjNA" name="unused" specification="_gpppIrhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVbKB7hSEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_gplXsLhSEe2UuoshngsjNA" name="getCoordinator" method="_hVZ74LhSEe2UuoshngsjNA">
                  <ownedComment xmi:id="_hWN0MbhSEe2UuoshngsjNA">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_gpl-wLhSEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_gpml0LhSEe2UuoshngsjNA" name="setCoordinator" method="_hVai8LhSEe2UuoshngsjNA">
                  <ownedComment xmi:id="_hWN0MrhSEe2UuoshngsjNA">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_gpnM4LhSEe2UuoshngsjNA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_gpnM4bhSEe2UuoshngsjNA" name="setName" visibility="private" method="_hVai8rhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_gpnz8LhSEe2UuoshngsjNA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_gpnz8bhSEe2UuoshngsjNA" name="setFlow" visibility="private" method="_hVai9LhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_gpnz8rhSEe2UuoshngsjNA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_gpobALhSEe2UuoshngsjNA" name="setSrc" visibility="private" method="_hVbKALhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_gpobAbhSEe2UuoshngsjNA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_gppCELhSEe2UuoshngsjNA" name="setSnk" visibility="private" method="_hVbKArhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_gppCEbhSEe2UuoshngsjNA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_gpppILhSEe2UuoshngsjNA" name="setChannel" visibility="private" method="_hVbKBLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_gpppIbhSEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_gpppIrhSEe2UuoshngsjNA" name="unused" method="_hVbKBrhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_gpqQMLhSEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_gpsscLhSEe2UuoshngsjNA" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_hPlAsLhSEe2UuoshngsjNA" general="_hPjLgLhSEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_hS1JALhSEe2UuoshngsjNA" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_hS1wELhSEe2UuoshngsjNA" name="instructionParametersArrayList" visibility="package" type="_hHI2YLhSEe2UuoshngsjNA" association="_hX7EYbhSEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_hS2-MLhSEe2UuoshngsjNA" name="instructionParameters" visibility="package" type="_gpkJkLhSEe2UuoshngsjNA" association="_hX8SgbhSEe2UuoshngsjNA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVbxE7hSEe2UuoshngsjNA" name="ListenerDsl" specification="_gptTgLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVbxFLhSEe2UuoshngsjNA" type="_gpsscLhSEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVbxFbhSEe2UuoshngsjNA" name="getInstructionParameters" specification="_gpt6k7hSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVbxFrhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVcYILhSEe2UuoshngsjNA" name="enterAction" specification="_hLo74bhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVcYIbhSEe2UuoshngsjNA" name="ctx" type="_hLoU0LhSEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVcYIrhSEe2UuoshngsjNA" name="exitAction" specification="_hLqxErhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVcYI7hSEe2UuoshngsjNA" name="ctx" type="_hLoU0LhSEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVcYJLhSEe2UuoshngsjNA" name="exitFlowName" specification="_hLsmQbhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVcYJbhSEe2UuoshngsjNA" name="ctx" type="_hLr_MbhSEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVc_MLhSEe2UuoshngsjNA" name="exitCmd" specification="_hLvCgbhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVc_MbhSEe2UuoshngsjNA" name="ctx" type="_hLtNUrhSEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVc_MrhSEe2UuoshngsjNA" name="exitSrcNode" specification="_hL1JIbhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVc_M7hSEe2UuoshngsjNA" name="ctx" type="_hLwQoLhSEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVdmQLhSEe2UuoshngsjNA" name="exitSnkNode" specification="_hL2-UbhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVdmQbhSEe2UuoshngsjNA" name="ctx" type="_hL1JJrhSEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVeNULhSEe2UuoshngsjNA" name="exitChannel" specification="_hL4zgbhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hVeNUbhSEe2UuoshngsjNA" name="ctx" type="_hL4McLhSEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_gptTgLhSEe2UuoshngsjNA" name="ListenerDsl" visibility="package" method="_hVbxE7hSEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_gpt6kLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_gpt6kbhSEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_gpt6krhSEe2UuoshngsjNA" type="_gpsscLhSEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_gpt6k7hSEe2UuoshngsjNA" name="getInstructionParameters" method="_hVbxFbhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hPkZoLhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_hLo74bhSEe2UuoshngsjNA" name="enterAction" method="_hVcYILhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hLo74rhSEe2UuoshngsjNA" name="ctx" type="_hLoU0LhSEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_hLqxErhSEe2UuoshngsjNA" name="exitAction" method="_hVcYIrhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hLqxE7hSEe2UuoshngsjNA" name="ctx" type="_hLoU0LhSEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_hLsmQbhSEe2UuoshngsjNA" name="exitFlowName" method="_hVcYJLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hLsmQrhSEe2UuoshngsjNA" name="ctx" type="_hLr_MbhSEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_hLvCgbhSEe2UuoshngsjNA" name="exitCmd" method="_hVc_MLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hLvCgrhSEe2UuoshngsjNA" name="ctx" type="_hLtNUrhSEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_hL1JIbhSEe2UuoshngsjNA" name="exitSrcNode" method="_hVc_MrhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hL1JIrhSEe2UuoshngsjNA" name="ctx" type="_hLwQoLhSEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_hL2-UbhSEe2UuoshngsjNA" name="exitSnkNode" method="_hVdmQLhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hL2-UrhSEe2UuoshngsjNA" name="ctx" type="_hL1JJrhSEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_hL4zgbhSEe2UuoshngsjNA" name="exitChannel" method="_hVeNULhSEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_hL4zgrhSEe2UuoshngsjNA" name="ctx" type="_hL4McLhSEe2UuoshngsjNA"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_gp2dcLhSEe2UuoshngsjNA" name="WarpInterface">
              <ownedComment xmi:id="_hWN0M7hSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_hL9E8LhSEe2UuoshngsjNA" general="_goZr8LhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gp3EgLhSEe2UuoshngsjNA" name="toWorkload">
                <ownedParameter xmi:id="_hL9E8bhSEe2UuoshngsjNA" type="_grDXULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gp3rkLhSEe2UuoshngsjNA" name="toProgram">
                <ownedParameter xmi:id="_hL9sALhSEe2UuoshngsjNA" type="_glHucLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gp4SoLhSEe2UuoshngsjNA" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_hL9sAbhSEe2UuoshngsjNA" type="_gmiDsLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gp4SobhSEe2UuoshngsjNA" name="toSimulator">
                <ownedParameter xmi:id="_hL9sArhSEe2UuoshngsjNA" type="_goUMYLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gp45sLhSEe2UuoshngsjNA" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_hL9sA7hSEe2UuoshngsjNA" type="_gjYCALhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gp5gwLhSEe2UuoshngsjNA" name="toChannelAnalysis">
                <ownedParameter xmi:id="_hL9sBLhSEe2UuoshngsjNA" type="_gdbyELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gp5gwbhSEe2UuoshngsjNA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_gp6H0LhSEe2UuoshngsjNA" name="reliabilitiesMet">
                <ownedParameter xmi:id="_gp6H0bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gp6u4LhSEe2UuoshngsjNA" name="deadlinesMet">
                <ownedParameter xmi:id="_gp6u4bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gp8kELhSEe2UuoshngsjNA" name="WarpPoset">
              <ownedComment xmi:id="_hWN0NLhSEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_hL_hMLhSEe2UuoshngsjNA" general="_gkVrULhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVfbcLhSEe2UuoshngsjNA" name="WarpPoset" specification="_hL-TELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVfbcbhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVfbcrhSEe2UuoshngsjNA" type="_gp8kELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVfbc7hSEe2UuoshngsjNA" name="findCoordinator" specification="_hPnc8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVfbdLhSEe2UuoshngsjNA" name="nodesInFlow" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVfbdbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_hL-TELhSEe2UuoshngsjNA" name="WarpPoset" visibility="package" method="_hVfbcLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hL-6ILhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hL-6IbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hL-TEbhSEe2UuoshngsjNA" name="workload" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hL-6IrhSEe2UuoshngsjNA" type="_gp8kELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPnc8LhSEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_hVfbc7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPnc8bhSEe2UuoshngsjNA" name="nodesInFlow" type="_hHI2YLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPoEALhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gp-ZQLhSEe2UuoshngsjNA" name="WarpSystem">
              <ownedComment xmi:id="_hWObQLhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_hS4MULhSEe2UuoshngsjNA" name="program" visibility="private" type="_glHucLhSEe2UuoshngsjNA" association="_hX85kbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hS4zYbhSEe2UuoshngsjNA" name="workLoad" visibility="private" type="_grDXULhSEe2UuoshngsjNA" association="_hX-HsLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hS5acbhSEe2UuoshngsjNA" name="ra" visibility="private" type="_gmiDsLhSEe2UuoshngsjNA" association="_hX-uwbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hS5ac7hSEe2UuoshngsjNA" name="la" visibility="private" type="_gjYCALhSEe2UuoshngsjNA" association="_hX_84LhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hS6okLhSEe2UuoshngsjNA" name="ca" visibility="private" type="_gdbyELhSEe2UuoshngsjNA" association="_hYBLALhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hS7PobhSEe2UuoshngsjNA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hS9E0rhSEe2UuoshngsjNA" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hS9E07hSEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hS9r4bhSEe2UuoshngsjNA" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hS9r4rhSEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_hMAIQLhSEe2UuoshngsjNA" client="_gp-ZQLhSEe2UuoshngsjNA" supplier="_gp2dcLhSEe2UuoshngsjNA" contract="_gp2dcLhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVgpkLhSEe2UuoshngsjNA" name="WarpSystem" specification="_hPqgQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVgpkbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVgpkrhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVgpk7hSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVgplLhSEe2UuoshngsjNA" type="_gp-ZQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVgplbhSEe2UuoshngsjNA" name="toWorkload" specification="_gqAOcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVgplrhSEe2UuoshngsjNA" type="_grDXULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVhQoLhSEe2UuoshngsjNA" name="toProgram" specification="_gqCDoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVhQobhSEe2UuoshngsjNA" type="_glHucLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVhQorhSEe2UuoshngsjNA" name="toReliabilityAnalysis" specification="_gqCqsrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVhQo7hSEe2UuoshngsjNA" type="_gmiDsLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVhQpLhSEe2UuoshngsjNA" name="toSimulator" specification="_gqEf4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVhQpbhSEe2UuoshngsjNA" type="_goUMYLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVhQprhSEe2UuoshngsjNA" name="toLatencyAnalysis" specification="_gqGVELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVhQp7hSEe2UuoshngsjNA" type="_gjYCALhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVh3sLhSEe2UuoshngsjNA" name="toChannelAnalysis" specification="_gqHjMbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVh3sbhSEe2UuoshngsjNA" type="_gdbyELhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVh3srhSEe2UuoshngsjNA" name="reliabilitiesMet" specification="_gqIxUrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVh3s7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVh3tLhSEe2UuoshngsjNA" name="deadlinesMet" specification="_gqJ_crhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVh3tbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hViewLhSEe2UuoshngsjNA" name="createProgram" specification="_hPrHULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hViewbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hViewrhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hView7hSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hViexLhSEe2UuoshngsjNA" name="getNumFaults" specification="_gqL0oLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hViexbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVjF0LhSEe2UuoshngsjNA" name="getMinPacketReceptionRate" specification="_gqNCwbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVjF0bhSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVjF0rhSEe2UuoshngsjNA" name="getE2e" specification="_gqOQ4rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVjF07hSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVjF1LhSEe2UuoshngsjNA" name="getName" specification="_gqQGELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVjF1bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVjF1rhSEe2UuoshngsjNA" name="getSchedulerName" specification="_gqRUMrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVjF17hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVjs4LhSEe2UuoshngsjNA" name="getNumTransmissions" specification="_gqSiULhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVjs4bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVjs4rhSEe2UuoshngsjNA" name="getOptimizationFlag" specification="_gqTwcbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVjs47hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gqAOcLhSEe2UuoshngsjNA" name="toWorkload" method="_hVgplbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMBWYLhSEe2UuoshngsjNA" type="_grDXULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqCDoLhSEe2UuoshngsjNA" name="toProgram" method="_hVhQoLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMBWYbhSEe2UuoshngsjNA" type="_glHucLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqCqsrhSEe2UuoshngsjNA" name="toReliabilityAnalysis" method="_hVhQorhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMB9cLhSEe2UuoshngsjNA" type="_gmiDsLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqEf4LhSEe2UuoshngsjNA" name="toSimulator" method="_hVhQpLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMB9cbhSEe2UuoshngsjNA" type="_goUMYLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqGVELhSEe2UuoshngsjNA" name="toLatencyAnalysis" method="_hVhQprhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMB9crhSEe2UuoshngsjNA" type="_gjYCALhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqHjMbhSEe2UuoshngsjNA" name="toChannelAnalysis" method="_hVh3sLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMB9c7hSEe2UuoshngsjNA" type="_gdbyELhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqIxUrhSEe2UuoshngsjNA" name="reliabilitiesMet" method="_hVh3srhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqJYYLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gqJ_crhSEe2UuoshngsjNA" name="deadlinesMet" method="_hVh3tLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqKmgLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gqL0oLhSEe2UuoshngsjNA" name="getNumFaults" method="_hViexLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqL0obhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gqNCwbhSEe2UuoshngsjNA" name="getMinPacketReceptionRate" method="_hVjF0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPruYrhSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqOQ4rhSEe2UuoshngsjNA" name="getE2e" method="_hVjF0rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPsVcLhSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqQGELhSEe2UuoshngsjNA" name="getName" method="_hVjF1LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqQGEbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gqRUMrhSEe2UuoshngsjNA" name="getSchedulerName" method="_hVjF1rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqRUM7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gqSiULhSEe2UuoshngsjNA" name="getNumTransmissions" method="_hVjs4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqSiUbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gqTwcbhSEe2UuoshngsjNA" name="getOptimizationFlag" method="_hVjs4rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqTwcrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gqU-kbhSEe2UuoshngsjNA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_hPqgQLhSEe2UuoshngsjNA" name="WarpSystem" method="_hVgpkLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPqgRLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPqgRbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hPqgQbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPqgQrhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPqgQ7hSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPqgRrhSEe2UuoshngsjNA" type="_gp-ZQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPrHULhSEe2UuoshngsjNA" name="createProgram" visibility="private" method="_hViewLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hPrHUbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPruYLhSEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPruYbhSEe2UuoshngsjNA" name="choice" type="_hO4dILhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gqbsQLhSEe2UuoshngsjNA" name="WorkLoadDescription">
              <ownedComment xmi:id="_hWPCULhSEe2UuoshngsjNA">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_hMJSMrhSEe2UuoshngsjNA" general="_gpHdoLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hS-S8LhSEe2UuoshngsjNA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hS-6ALhSEe2UuoshngsjNA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hS-6AbhSEe2UuoshngsjNA" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hS-6ArhSEe2UuoshngsjNA" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hS-6A7hSEe2UuoshngsjNA" name="description" visibility="private" type="_gg6j4LhSEe2UuoshngsjNA" association="_hYByEbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hTAIILhSEe2UuoshngsjNA" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTAIIrhSEe2UuoshngsjNA" name="fm" visibility="private" type="_ghS-YLhSEe2UuoshngsjNA" association="_hYDAMLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hTAvMbhSEe2UuoshngsjNA" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVkT8LhSEe2UuoshngsjNA" name="WorkLoadDescription" specification="_gqc6YLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVkT8bhSEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVkT8rhSEe2UuoshngsjNA" type="_gqbsQLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVkT87hSEe2UuoshngsjNA" name="visualization" specification="_gqdhc7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVkT9LhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVkT9bhSEe2UuoshngsjNA" name="fileVisualization" specification="_gqevkrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVkT9rhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVkT97hSEe2UuoshngsjNA" name="toString" specification="_gqf9srhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVkT-LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVk7ALhSEe2UuoshngsjNA" name="initialize" specification="_gqhy4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVk7AbhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVk7ArhSEe2UuoshngsjNA" name="main" specification="_gqhy4rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVk7A7hSEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hVk7BLhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Get file contents&#xD;
	  String file = &quot;StressTest.txt&quot;;&#xD;
	  WorkLoadDescription stressTest = new WorkLoadDescription(file);&#xD;
	  Description toBeAlphabetized = stressTest.visualization();&#xD;
	  &#xD;
	  //Parse file name&#xD;
	  String firstLine = toBeAlphabetized.remove(0);&#xD;
	  String fileName = firstLine.substring(0, firstLine.indexOf(' '));&#xD;
	  &#xD;
	  //Trim and Sort toBeAlphabetized to only contain flows&#xD;
	  toBeAlphabetized.remove(toBeAlphabetized.size()-1);&#xD;
	  Collections.sort(toBeAlphabetized);&#xD;
	  &#xD;
	  //Print the file in the proper format&#xD;
	  System.out.println(fileName);&#xD;
	  for(int i = 0; i &lt; toBeAlphabetized.size(); i++) {&#xD;
		  System.out.print(&quot;Flow &quot; + (i+1) + &quot;: &quot; + toBeAlphabetized.get(i));&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gqc6YLhSEe2UuoshngsjNA" name="WorkLoadDescription" visibility="package" method="_hVkT8LhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_gqdhcLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_gqdhcbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_gqc6YbhSEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_gqdhcrhSEe2UuoshngsjNA" type="_gqbsQLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqdhc7hSEe2UuoshngsjNA" name="visualization" method="_hVkT87hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMJSMLhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqevkrhSEe2UuoshngsjNA" name="fileVisualization" method="_hVkT9bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMJSMbhSEe2UuoshngsjNA" type="_gg6j4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_gqf9srhSEe2UuoshngsjNA" name="toString" method="_hVkT97hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqgkwLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gqhy4LhSEe2UuoshngsjNA" name="initialize" visibility="private" method="_hVk7ALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqhy4bhSEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gqhy4rhSEe2UuoshngsjNA" name="main" isStatic="true" method="_hVk7ArhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWPCUbhSEe2UuoshngsjNA">
                  <body>Returns Flows alphabetically.&#xD;
	 *&#xD;
	 * @param args instantiates WorkLoadDescription, prints StressTest.txt alphabetically</body>
                </ownedComment>
                <ownedParameter xmi:id="_gqiZ8LhSEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gqiZ8bhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gqmEULhSEe2UuoshngsjNA" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_hWPCUrhSEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hPvYwLhSEe2UuoshngsjNA" general="_hIeTIbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hTBWQLhSEe2UuoshngsjNA" name="workLoad" visibility="package" type="_grDXULhSEe2UuoshngsjNA" association="_hYDnQbhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hTB9UbhSEe2UuoshngsjNA" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVk7BbhSEe2UuoshngsjNA" name="WorkLoadListener" specification="_hMLHYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVliELhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVliEbhSEe2UuoshngsjNA" type="_gqmEULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVliErhSEe2UuoshngsjNA" name="buildNodesAndFlows" specification="_hMMVg7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVliE7hSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then build the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVliFLhSEe2UuoshngsjNA" name="testPrintStdOut" specification="_gqnScLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVliFbhSEe2UuoshngsjNA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVliFrhSEe2UuoshngsjNA" name="enterWarpName" specification="_hMM8kLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVliF7hSEe2UuoshngsjNA" name="ctx" type="_hIjLoLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVmJILhSEe2UuoshngsjNA" name="enterFlowName" specification="_hMOKsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVmJIbhSEe2UuoshngsjNA" name="ctx" type="_hIndErhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVmJIrhSEe2UuoshngsjNA" name="exitPriority" specification="_hMP_4bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVmJI7hSEe2UuoshngsjNA" name="ctx" type="_hMPY0LhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVmJJLhSEe2UuoshngsjNA" name="exitPeriod" specification="_hMScILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVmJJbhSEe2UuoshngsjNA" name="ctx" type="_hMROArhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVmJJrhSEe2UuoshngsjNA" name="exitDeadline" specification="_hMU4YbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVmJJ7hSEe2UuoshngsjNA" name="ctx" type="_hMTqQbhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVmwMLhSEe2UuoshngsjNA" name="exitPhase" specification="_hMX7sbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVmwMbhSEe2UuoshngsjNA" name="ctx" type="_hMXUoLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVmwMrhSEe2UuoshngsjNA" name="exitSrcNode" specification="_hMZw4rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVmwM7hSEe2UuoshngsjNA" name="ctx" type="_hIp5ULhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVnXQLhSEe2UuoshngsjNA" name="exitSnkNode" specification="_hMbmELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVnXQbhSEe2UuoshngsjNA" name="ctx" type="_hIsVkLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVnXQrhSEe2UuoshngsjNA" name="exitFlow" specification="_hMcNIrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVnXQ7hSEe2UuoshngsjNA" name="ctx" type="_hIux0rhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gqnScLhSEe2UuoshngsjNA" name="testPrintStdOut" method="_hVliFLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_gqnScbhSEe2UuoshngsjNA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hMLHYLhSEe2UuoshngsjNA" name="WorkLoadListener" visibility="private" method="_hVk7BbhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hMMVgLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hMMVgbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_hMLHYbhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hMMVgrhSEe2UuoshngsjNA" type="_gqmEULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMMVg7hSEe2UuoshngsjNA" name="buildNodesAndFlows" isStatic="true" method="_hVliErhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMMVhLhSEe2UuoshngsjNA" name="workLoad" type="_grDXULhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMM8kLhSEe2UuoshngsjNA" name="enterWarpName" method="_hVliFrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMM8kbhSEe2UuoshngsjNA" name="ctx" type="_hIjLoLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMOKsLhSEe2UuoshngsjNA" name="enterFlowName" method="_hVmJILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMOKsbhSEe2UuoshngsjNA" name="ctx" type="_hIndErhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMP_4bhSEe2UuoshngsjNA" name="exitPriority" method="_hVmJIrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMP_4rhSEe2UuoshngsjNA" name="ctx" type="_hMPY0LhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMScILhSEe2UuoshngsjNA" name="exitPeriod" method="_hVmJJLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMScIbhSEe2UuoshngsjNA" name="ctx" type="_hMROArhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMU4YbhSEe2UuoshngsjNA" name="exitDeadline" method="_hVmJJrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMVfcLhSEe2UuoshngsjNA" name="ctx" type="_hMTqQbhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMX7sbhSEe2UuoshngsjNA" name="exitPhase" method="_hVmwMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMX7srhSEe2UuoshngsjNA" name="ctx" type="_hMXUoLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMZw4rhSEe2UuoshngsjNA" name="exitSrcNode" method="_hVmwMrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMaX8LhSEe2UuoshngsjNA" name="ctx" type="_hIp5ULhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMbmELhSEe2UuoshngsjNA" name="exitSnkNode" method="_hVnXQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMbmEbhSEe2UuoshngsjNA" name="ctx" type="_hIsVkLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMcNIrhSEe2UuoshngsjNA" name="exitFlow" method="_hVnXQrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hMc0MLhSEe2UuoshngsjNA" name="ctx" type="_hIux0rhSEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_gqq80LhSEe2UuoshngsjNA" name="WorkLoadTest" visibility="package">
              <ownedAttribute xmi:id="_hTDLcLhSEe2UuoshngsjNA" name="stressTestWorkLoad" visibility="private" type="_grDXULhSEe2UuoshngsjNA" association="_hYE1YLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hTEZkbhSEe2UuoshngsjNA" name="exampleThreeWorkLoad" visibility="private" type="_grDXULhSEe2UuoshngsjNA" association="_hYFccbhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVn-ULhSEe2UuoshngsjNA" name="setUp" specification="_gqrj4LhSEe2UuoshngsjNA">
                <language>java</language>
                <body>String stressTest = &quot;StressTest.txt&quot;;&#xD;
		stressTestWorkLoad = new WorkLoad(0.9, 0.99, stressTest);&#xD;
		&#xD;
		String exampleThree = &quot;Example3.txt&quot;;&#xD;
		exampleThreeWorkLoad = new WorkLoad(0.9, 0.99, exampleThree);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVolYLhSEe2UuoshngsjNA" name="testAddFlow" specification="_gqsK87hSEe2UuoshngsjNA">
                <language>java</language>
                <body>Flow originalFlow = new Flow(&quot;Test flow to be added&quot;, 0, 0);&#xD;
		stressTestWorkLoad.addFlow(originalFlow.getName());&#xD;
		FlowMap allFlowsInstressTestWorkLoad = stressTestWorkLoad.getFlows();&#xD;
		Flow addedFlow = allFlowsInstressTestWorkLoad.get(originalFlow.getName());&#xD;
		assertEquals(originalFlow.getName(), addedFlow.getName());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVolYbhSEe2UuoshngsjNA" name="testAddNodeToFlow" specification="_gqunMLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>var initial = stressTestWorkLoad.getNodesInFlow(&quot;F5&quot;);&#xD;
		stressTestWorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;F&quot;);&#xD;
		var updated = stressTestWorkLoad.getNodesInFlow(&quot;F5&quot;);&#xD;
	&#xD;
		assertEquals(&quot;F&quot;, updated[updated.length-1]);&#xD;
		assertNotEquals(initial, updated);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVolYrhSEe2UuoshngsjNA" name="testGetFlowPriority" specification="_gqv1UbhSEe2UuoshngsjNA">
                <language>java</language>
                <body>Flow originalFlow = new Flow(&quot;Test flow to be added&quot;, 0, 0);&#xD;
		&#xD;
		//Using the stress test file&#xD;
		stressTestWorkLoad.addFlow(originalFlow.getName());&#xD;
		int expectedPriority = 15;&#xD;
		int actualPriority = stressTestWorkLoad.getFlowPriority(originalFlow.getName());&#xD;
		assertEquals(expectedPriority, actualPriority);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVolY7hSEe2UuoshngsjNA" name="testSetFlowPriority" specification="_gqxDcbhSEe2UuoshngsjNA">
                <language>java</language>
                <body>int setThreeFP = exampleThreeWorkLoad.getFlowPriority(&quot;F3&quot;);&#xD;
		exampleThreeWorkLoad.setFlowPriority(&quot;F3&quot;, 30);&#xD;
		int actualThreeFP = exampleThreeWorkLoad.getFlowPriority(&quot;F3&quot;);&#xD;
		assertEquals(30, actualThreeFP);&#xD;
		assertNotEquals(setThreeFP, actualThreeFP);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpMcLhSEe2UuoshngsjNA" name="testSetFlowDeadline" specification="_gqxqgrhSEe2UuoshngsjNA">
                <language>java</language>
                <body>int setFD = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		stressTestWorkLoad.setFlowDeadline(&quot;F3&quot;, 100);&#xD;
		int actualFD = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		assertEquals(100, actualFD);&#xD;
		assertNotEquals(setFD, actualFD);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpMcbhSEe2UuoshngsjNA" name="testGetFlowDeadlineStressTest" specification="_gqyRk7hSEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 50;&#xD;
		Integer actual = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		assertEquals(expected, actual);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpMcrhSEe2UuoshngsjNA" name="testGetFlowDeadlineDefault" specification="_gqzfsLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 100;&#xD;
		Integer actual = exampleThreeWorkLoad.getFlowDeadline(&quot;F0&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpMc7hSEe2UuoshngsjNA" name="testGetFlowTxAttemptsPerLink" specification="_gq0GwbhSEe2UuoshngsjNA">
                <language>java</language>
                <body>int expected = 3;&#xD;
		int actual = exampleThreeWorkLoad.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		assertEquals(expected, actual);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpMdLhSEe2UuoshngsjNA" name="testSetFlowsInRMorderStressTest" specification="_gq0t0rhSEe2UuoshngsjNA">
                <language>java</language>
                <body>stressTestWorkLoad.setFlowsInRMorder();&#xD;
		String expected = &quot;[F1, AF1, F2, AF2, F3, F4, AF4, F5, AF5, F6, F7, F8, F9, F10, AF10]&quot;;&#xD;
		String actual = stressTestWorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpMdbhSEe2UuoshngsjNA" name="testSetFlowsInRMOrderExampleThree" specification="_gq1U47hSEe2UuoshngsjNA">
                <language>java</language>
                <body>exampleThreeWorkLoad.setFlowsInRMorder();&#xD;
		String expected = &quot;[F0, F1, F2, F3, F4, F5]&quot;;&#xD;
		String actual = exampleThreeWorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpMdrhSEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_StressTest" specification="_gq1787hSEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&#xD;
				&quot;J&quot;,&quot;K&quot;,&quot;L&quot;,&quot;M&quot;,&quot;N&quot;,&quot;O&quot;,&quot;P&quot;,&quot;Q&quot;,&quot;R&quot;,&quot;S&quot;,&quot;T&quot;,&quot;U&quot;,&quot;V&quot;,&quot;W&quot;,&quot;Y&quot;};&#xD;
		String[] actual = stressTestWorkLoad.getNodeNamesOrderedAlphabetically();&#xD;
		for (int i = 0; i &lt; expected.length; i++) {&#xD;
			assertEquals(expected[i], actual[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpzgLhSEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_Example3" specification="_gq3xIrhSEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] expectedThree = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;F&quot;,&quot;G&quot;,&quot;I&quot;,&#xD;
				&quot;P&quot;,&quot;R&quot;,&quot;V&quot;,&quot;X&quot;};&#xD;
		String[] actualThree = exampleThreeWorkLoad.getNodeNamesOrderedAlphabetically();&#xD;
		for (int i = 0; i &lt; expectedThree.length; i++) {&#xD;
			assertEquals(expectedThree[i], actualThree[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpzgbhSEe2UuoshngsjNA" name="testGetFlowNamesStressTest" specification="_gq4_QrhSEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[F1, F5, F2, F4, F3, F6, F7, F8, F9, F10, AF1, AF5, AF2, AF4, AF10]&quot;;&#xD;
		String[] actual = stressTestWorkLoad.getFlowNames();&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpzgrhSEe2UuoshngsjNA" name="testGetFlowNamesExampleThree" specification="_gq5mUrhSEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[F0, F1, F2, F3, F4, F5]&quot;;&#xD;
		String[] actual = exampleThreeWorkLoad.getFlowNames();&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpzg7hSEe2UuoshngsjNA" name="testGetNodeIndex" specification="_gq6NY7hSEe2UuoshngsjNA">
                <language>java</language>
                <body>var expectedL = 11;&#xD;
		var actualL = stressTestWorkLoad.getNodeIndex(&quot;L&quot;);&#xD;
		assertEquals(expectedL,actualL);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVpzhLhSEe2UuoshngsjNA" name="testGetNodesInFlow" specification="_gq7bgLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] actual = stressTestWorkLoad.getNodesInFlow(&quot;F9&quot;);&#xD;
		String expected = &quot;[A, B, C, D, E, J, K, L]&quot;;&#xD;
		assertEquals(expected, (Arrays.toString(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVqakLhSEe2UuoshngsjNA" name="testGetHyperPeriodStressTest" specification="_gq8CkrhSEe2UuoshngsjNA">
                <language>java</language>
                <body>var expected = 300;&#xD;
		var actual = stressTestWorkLoad.getHyperPeriod();&#xD;
		assertEquals(expected,actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVqakbhSEe2UuoshngsjNA" name="testGetHyperPeriodDefault" specification="_gq8po7hSEe2UuoshngsjNA">
                <language>java</language>
                <body>var expected = 100;&#xD;
		var actual = exampleThreeWorkLoad.getHyperPeriod();&#xD;
		assertEquals(expected,actual);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVqakrhSEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowStressTest" specification="_gq93wLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 11;&#xD;
		Integer actual = stressTestWorkLoad.getTotalTxAttemptsInFlow(&quot;F9&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVqak7hSEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowDefault" specification="_gq-e0rhSEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 4;&#xD;
		Integer actual = exampleThreeWorkLoad.getTotalTxAttemptsInFlow(&quot;F0&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVqalLhSEe2UuoshngsjNA" name="testGetNumTxAttemptsPerLink" specification="_gq_F47hSEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[3, 4, 5, 6, 6, 6, 5, 0]&quot;;&#xD;
		Integer[] actual = stressTestWorkLoad.getNumTxAttemptsPerLink(&quot;F9&quot;);&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVqalbhSEe2UuoshngsjNA" name="testMaxFlowLength" specification="_grAUAbhSEe2UuoshngsjNA">
                <language>java</language>
                <body>var maxFL = 8;&#xD;
		int actualFL = stressTestWorkLoad.maxFlowLength();&#xD;
		assertEquals(maxFL, actualFL);	&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_gqrj4LhSEe2UuoshngsjNA" name="setUp" method="_hVn-ULhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gqsK87hSEe2UuoshngsjNA" name="testAddFlow" visibility="package" method="_hVolYLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gqunMLhSEe2UuoshngsjNA" name="testAddNodeToFlow" visibility="package" method="_hVolYbhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gqv1UbhSEe2UuoshngsjNA" name="testGetFlowPriority" visibility="package" method="_hVolYrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gqxDcbhSEe2UuoshngsjNA" name="testSetFlowPriority" visibility="package" method="_hVolY7hSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gqxqgrhSEe2UuoshngsjNA" name="testSetFlowDeadline" visibility="package" method="_hVpMcLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gqyRk7hSEe2UuoshngsjNA" name="testGetFlowDeadlineStressTest" visibility="package" method="_hVpMcbhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gqzfsLhSEe2UuoshngsjNA" name="testGetFlowDeadlineDefault" visibility="package" method="_hVpMcrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq0GwbhSEe2UuoshngsjNA" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_hVpMc7hSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq0t0rhSEe2UuoshngsjNA" name="testSetFlowsInRMorderStressTest" visibility="package" method="_hVpMdLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq1U47hSEe2UuoshngsjNA" name="testSetFlowsInRMOrderExampleThree" visibility="package" method="_hVpMdbhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq1787hSEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_StressTest" visibility="package" method="_hVpMdrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq3xIrhSEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_Example3" visibility="package" method="_hVpzgLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq4_QrhSEe2UuoshngsjNA" name="testGetFlowNamesStressTest" visibility="package" method="_hVpzgbhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq5mUrhSEe2UuoshngsjNA" name="testGetFlowNamesExampleThree" visibility="package" method="_hVpzgrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq6NY7hSEe2UuoshngsjNA" name="testGetNodeIndex" visibility="package" method="_hVpzg7hSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq7bgLhSEe2UuoshngsjNA" name="testGetNodesInFlow" visibility="package" method="_hVpzhLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq8CkrhSEe2UuoshngsjNA" name="testGetHyperPeriodStressTest" visibility="package" method="_hVqakLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq8po7hSEe2UuoshngsjNA" name="testGetHyperPeriodDefault" visibility="package" method="_hVqakbhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq93wLhSEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowStressTest" visibility="package" method="_hVqakrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq-e0rhSEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowDefault" visibility="package" method="_hVqak7hSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_gq_F47hSEe2UuoshngsjNA" name="testGetNumTxAttemptsPerLink" visibility="package" method="_hVqalLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_grAUAbhSEe2UuoshngsjNA" name="testMaxFlowLength" visibility="package" method="_hVqalbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_grDXULhSEe2UuoshngsjNA" name="WorkLoad">
              <ownedComment xmi:id="_hWPpYLhSEe2UuoshngsjNA">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
Can be used for viewing, editing, and adding flows and nodes in the graph as well as calculating&#xD;
the per node and total transmission attempts.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_hMyLYLhSEe2UuoshngsjNA" general="_gqbsQLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hTGOwLhSEe2UuoshngsjNA" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTGOwbhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTG10LhSEe2UuoshngsjNA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTG10bhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTG10rhSEe2UuoshngsjNA" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTHc4LhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTHc4bhSEe2UuoshngsjNA" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTHc4rhSEe2UuoshngsjNA" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTHc47hSEe2UuoshngsjNA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTID8LhSEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTID8bhSEe2UuoshngsjNA" name="minPacketReceptionRate" type="_hO_x4LhSEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTID8rhSEe2UuoshngsjNA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTIrALhSEe2UuoshngsjNA" name="e2e" visibility="private" type="_hO_x4LhSEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTIrAbhSEe2UuoshngsjNA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTJSELhSEe2UuoshngsjNA" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTJSEbhSEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTJSErhSEe2UuoshngsjNA" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTJSE7hSEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTJ5IbhSEe2UuoshngsjNA" name="flows" type="_giTD8LhSEe2UuoshngsjNA" association="_hWQQcLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hTKgMLhSEe2UuoshngsjNA" name="nodes" type="_gkFzsLhSEe2UuoshngsjNA" association="_hWQ3gLhSEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_hTKgMbhSEe2UuoshngsjNA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTLHQbhSEe2UuoshngsjNA" name="flowNamesInOriginalOrder" type="_hHI2YLhSEe2UuoshngsjNA" association="_hYGqkLhSEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTLuUbhSEe2UuoshngsjNA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_hTMVYLhSEe2UuoshngsjNA" name="flowNamesInPriorityOrder" type="_hHI2YLhSEe2UuoshngsjNA" association="_hYHRobhSEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_hTM8cbhSEe2UuoshngsjNA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_hMoaYbhSEe2UuoshngsjNA" client="_grDXULhSEe2UuoshngsjNA" supplier="_gmlHALhSEe2UuoshngsjNA" contract="_gmlHALhSEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVrosLhSEe2UuoshngsjNA" name="WorkLoad" specification="_hPzDILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVrosbhSEe2UuoshngsjNA" name="m" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVrosrhSEe2UuoshngsjNA" name="e2e" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVros7hSEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVrotLhSEe2UuoshngsjNA" type="_grDXULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVsPwLhSEe2UuoshngsjNA" name="WorkLoad" specification="_hPzqMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVsPwbhSEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVsPwrhSEe2UuoshngsjNA" name="m" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVsPw7hSEe2UuoshngsjNA" name="e2e" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hVsPxLhSEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVsPxbhSEe2UuoshngsjNA" type="_grDXULhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVsPxrhSEe2UuoshngsjNA" name="setDefaultParameters" specification="_grHBsLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVs20LhSEe2UuoshngsjNA" name="getE2e" specification="_grHowLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVs20bhSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVs20rhSEe2UuoshngsjNA" name="getIntForFlowNames" specification="_grIP0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVs207hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVs21LhSEe2UuoshngsjNA" name="getName" specification="_grI24LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVs21bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVtd4LhSEe2UuoshngsjNA" name="setMinPacketReceptionRate" specification="_hP1fYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVtd4bhSEe2UuoshngsjNA" name="minPacketReceptionRate" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVtd4rhSEe2UuoshngsjNA" name="getMaxPhase" specification="_grJd8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVtd47hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVtd5LhSEe2UuoshngsjNA" name="getMinPeriod" specification="_grJd8rhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVtd5bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVtd5rhSEe2UuoshngsjNA" name="setE2e" specification="_hP2GcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVtd57hSEe2UuoshngsjNA" name="e2e" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVuE8LhSEe2UuoshngsjNA" name="setIntForFlowNames" specification="_grKsELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVuE8bhSEe2UuoshngsjNA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVuE8rhSEe2UuoshngsjNA" name="setName" specification="_grLTILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVuE87hSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVuE9LhSEe2UuoshngsjNA" name="setNodeChannel" specification="_grL6MLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVuE9bhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVuE9rhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVusALhSEe2UuoshngsjNA" name="getNodeChannel" specification="_grNvYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVusAbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVusArhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVusA7hSEe2UuoshngsjNA" name="addFlow" specification="_grOWcLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVusBLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVusBbhSEe2UuoshngsjNA" name="isIntForNodeNames" specification="_grO9gLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVusBrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVvTELhSEe2UuoshngsjNA" name="isIntForFlowNames" specification="_grO9grhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVvTEbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVvTErhSEe2UuoshngsjNA" name="addNodeToFlow" specification="_grPkkbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVvTE7hSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVvTFLhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVvTFbhSEe2UuoshngsjNA" name="getFlowPriority" specification="_grQLorhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVvTFrhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVvTF7hSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVvTGLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVv6ILhSEe2UuoshngsjNA" name="setFlowPriority" specification="_grRZwLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVv6IbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVv6IrhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVv6I7hSEe2UuoshngsjNA" name="setFlowPeriod" specification="_grSA0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVv6JLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVv6JbhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVwhMLhSEe2UuoshngsjNA" name="setFlowDeadline" specification="_grSn4LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVwhMbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVwhMrhSEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVwhM7hSEe2UuoshngsjNA" name="setFlowPhase" specification="_grTO8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVwhNLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVwhNbhSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVwhNrhSEe2UuoshngsjNA" name="getFlowIndex" specification="_grT2ALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVwhN7hSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVwhOLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVxIQLhSEe2UuoshngsjNA" name="getFlowPriority" specification="_grUdELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVxIQbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVxIQrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVxIQ7hSEe2UuoshngsjNA" name="getFlowPeriod" specification="_grVEILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVxIRLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVxIRbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVxvULhSEe2UuoshngsjNA" name="getFlowDeadline" specification="_grXgYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVxvUbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVxvUrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVxvU7hSEe2UuoshngsjNA" name="getFlowPhase" specification="_grYugLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVxvVLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVxvVbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVyWYLhSEe2UuoshngsjNA" name="getFlowTxAttemptsPerLink" specification="_grZVkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVyWYbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVyWYrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVyWY7hSEe2UuoshngsjNA" name="setFlowsInPriorityOrder" specification="_grZ8obhSEe2UuoshngsjNA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVyWZLhSEe2UuoshngsjNA" name="setFlowsInDMorder" specification="_grajsLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVyWZbhSEe2UuoshngsjNA" name="setFlowsInRMorder" specification="_grajsbhSEe2UuoshngsjNA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVy9cLhSEe2UuoshngsjNA" name="setFlowsInRealTimeHARTorder" specification="_grbKwLhSEe2UuoshngsjNA">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVy9cbhSEe2UuoshngsjNA" name="finalizeCurrentFlow" specification="_grbKwbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVy9crhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVy9c7hSEe2UuoshngsjNA" name="nextReleaseTime" specification="_grbx0LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVy9dLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVy9dbhSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVy9drhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVzkgLhSEe2UuoshngsjNA" name="nextAbsoluteDeadline" specification="_grcY4bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVzkgbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVzkgrhSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hVzkg7hSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hVzkhLhSEe2UuoshngsjNA" name="finalizeFlowWithE2eParameters" specification="_grdnALhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hVzkhbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV0LkLhSEe2UuoshngsjNA" name="finalizeFlowWithFixedFaultTolerance" specification="_grdnArhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV0LkbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV0yoLhSEe2UuoshngsjNA" name="getFixedTxPerLinkAndTotalTxCost" specification="_hMqPkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV0yobhSEe2UuoshngsjNA" name="flow" type="_ghz7wLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hV0yorhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV0yo7hSEe2UuoshngsjNA" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_hP3UkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV0ypLhSEe2UuoshngsjNA" name="flow" type="_ghz7wLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hV0ypbhSEe2UuoshngsjNA" name="e2e" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hV0yprhSEe2UuoshngsjNA" name="M" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hV0yp7hSEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hV0yqLhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); &#xD;
 // use max to handle rounding error when e2e == 1.0&#xD;
 &#xD;
 &#xD;
 /* Now compute reliability of packet reaching each node in the given time slot:&#xD;
  *Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
  *each row is a time slot, stating at time 0&#xD;
  *each column represents the reliability of the packet reaching that node at the&#xD;
  *current time slot (i.e., the row it is in)&#xD;
  *will add rows as we compute reliabilities until the final reliability is reached&#xD;
  *for all nodes. */&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, which is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; &#xD;
 // the analysis will end when the e2e reliability metric is met, initially the&#xD;
 // state is not met and will be 0 with this statement&#xD;
 &#xD;
 &#xD;
 var timeSlot = 0; // start time at 0&#xD;
 var prevReliabilityRow = currentReliabilityRow;&#xD;
 while (e2eReliabilityState &lt; e2e) {&#xD;
   prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); &#xD;
   // would be reliabilityWindow[timeSlot] if working through a schedule&#xD;
   &#xD;
   &#xD;
   // Now use each flow:source->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { &#xD;
 	  // loop through each node in the flow and update the states for&#xD;
 	  // each link (i.e., sink->src pair)&#xD;
 	  &#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     &#xD;
     // do a push until PrevSnk state > e2e to ensure next node reaches target E2E BUT&#xD;
     // skip if no chance of success (i.e., source doesn't have packet)&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { &#xD;
     	&#xD;
     	// need to continue attempting to Tx, so update current state&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); &#xD;
       &#xD;
    // increment the number of pushes for for this node to snk node&#xD;
       nPushes[nodeIndex] += 1; &#xD;
     } else {&#xD;
     	// snkNode has met its reliability. Thus move on to the&#xD;
         // next node and record the reliability met&#xD;
     	nextSnkState = prevSnkNodeState;&#xD;
     }&#xD;
&#xD;
     // probabilities are non-decreasing so update if we were higher by carrying old&#xD;
     // value forward&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { &#xD;
     	&#xD;
     	// carry forward the previous state for the src node, which may get over written&#xD;
         // later by another instruction in this slot&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex];&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV1ZsLhSEe2UuoshngsjNA" name="getNodeNamesOrderedAlphabetically" specification="_gre1ILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV1ZsbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hV1ZsrhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV1Zs7hSEe2UuoshngsjNA" name="getFlow" specification="_grgDQLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV1ZtLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hV1ZtbhSEe2UuoshngsjNA" type="_ghz7wLhSEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it.\n&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV2AwLhSEe2UuoshngsjNA" name="getFlowNames" specification="_grhRYLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV2AwbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hV2AwrhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV2Aw7hSEe2UuoshngsjNA" name="getNodeIndex" specification="_grifgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV2AxLhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hV2AxbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV2n0LhSEe2UuoshngsjNA" name="getNodesInFlow" specification="_grjGkbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV2n0bhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hV2n0rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hV2n07hSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV2n1LhSEe2UuoshngsjNA" name="getHyperPeriod" specification="_grkUsLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV2n1bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
     // Find LCM of hyperPeriod so far and the current period, then update the&#xD;
     // hyperPeriod with that value&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); &#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV3O4LhSEe2UuoshngsjNA" name="getTotalTxAttemptsInFlow" specification="_grk7wbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV3O4bhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hV3O4rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV3O47hSEe2UuoshngsjNA" name="getNumTxAttemptsPerLink" specification="_grli0bhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV3O5LhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hV3O5bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hV3O5rhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV3O57hSEe2UuoshngsjNA" name="addEdge" specification="_hMw9QLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV3O6LhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hV3O6bhSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hV318LhSEe2UuoshngsjNA" name="maxFlowLength" specification="_grmw8LhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_hV318bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_grHBsLhSEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_hVsPxrhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_grHowLhSEe2UuoshngsjNA" name="getE2e" method="_hVs20LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWRekbhSEe2UuoshngsjNA">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_hP04ULhSEe2UuoshngsjNA" type="_hO_x4LhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_grIP0LhSEe2UuoshngsjNA" name="getIntForFlowNames" method="_hVs20rhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWRekrhSEe2UuoshngsjNA">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_grIP0bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grI24LhSEe2UuoshngsjNA" name="getName" method="_hVs21LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWRek7hSEe2UuoshngsjNA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_grI24bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grJd8LhSEe2UuoshngsjNA" name="getMaxPhase" method="_hVtd4rhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWRelbhSEe2UuoshngsjNA">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_grJd8bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grJd8rhSEe2UuoshngsjNA" name="getMinPeriod" method="_hVtd5LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWRelrhSEe2UuoshngsjNA">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_grKFALhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grKsELhSEe2UuoshngsjNA" name="setIntForFlowNames" method="_hVuE8LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSFoLhSEe2UuoshngsjNA">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_grKsEbhSEe2UuoshngsjNA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grLTILhSEe2UuoshngsjNA" name="setName" method="_hVuE8rhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSFobhSEe2UuoshngsjNA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_grLTIbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grL6MLhSEe2UuoshngsjNA" name="setNodeChannel" method="_hVuE9LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSForhSEe2UuoshngsjNA">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_grMhQLhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grMhQbhSEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grNvYLhSEe2UuoshngsjNA" name="getNodeChannel" method="_hVusALhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSFo7hSEe2UuoshngsjNA">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_grNvYbhSEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grNvYrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grOWcLhSEe2UuoshngsjNA" name="addFlow" method="_hVusA7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSFpLhSEe2UuoshngsjNA">
                  <body>Adds a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
   * the default values. Priority is set to the number of flows already added (index), 0 for first&#xD;
   * flow. This will create a default priority equal to the order listed in the input graph file.&#xD;
   * Index is set to the same value to preserve that order as a secondary sort key.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_grOWcbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grO9gLhSEe2UuoshngsjNA" name="isIntForNodeNames" method="_hVusBbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grO9gbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grO9grhSEe2UuoshngsjNA" name="isIntForFlowNames" method="_hVvTELhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grPkkLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grPkkbhSEe2UuoshngsjNA" name="addNodeToFlow" method="_hVvTErhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSssLhSEe2UuoshngsjNA">
                  <body>Adds the given node to the flow. Creates a new node with default priority if there is not&#xD;
   * already an existing node with the given name. Updates the flow's transmission cost after &#xD;
   * the node has been added.&#xD;
   * &#xD;
   * @param flowName the flow to add the node to&#xD;
   * @param nodeName the name of the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_grQLoLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grQLobhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grQLorhSEe2UuoshngsjNA" name="getFlowPriority" method="_hVvTFbhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSssbhSEe2UuoshngsjNA">
                  <body>Finds the priority of the given node within the given flow.&#xD;
   * &#xD;
   * @param flowName the flow the node belongs to&#xD;
   * @param nodeName the node to find the priority of&#xD;
   * @return the priority of the given node, 0 if node does not exist</body>
                </ownedComment>
                <ownedParameter xmi:id="_grQysLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grQysbhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grQysrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grRZwLhSEe2UuoshngsjNA" name="setFlowPriority" method="_hVv6ILhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grRZwbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grRZwrhSEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grSA0LhSEe2UuoshngsjNA" name="setFlowPeriod" method="_hVv6I7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grSA0bhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grSA0rhSEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grSn4LhSEe2UuoshngsjNA" name="setFlowDeadline" method="_hVwhMLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grSn4bhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grSn4rhSEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grTO8LhSEe2UuoshngsjNA" name="setFlowPhase" method="_hVwhM7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grTO8bhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grTO8rhSEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grT2ALhSEe2UuoshngsjNA" name="getFlowIndex" method="_hVwhNrhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grT2AbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grT2ArhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grUdELhSEe2UuoshngsjNA" name="getFlowPriority" method="_hVxIQLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSssrhSEe2UuoshngsjNA">
                  <body>@param flowName the flow to get the priority from&#xD;
   * @return the priority of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_grUdEbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grUdErhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grVEILhSEe2UuoshngsjNA" name="getFlowPeriod" method="_hVxIQ7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSss7hSEe2UuoshngsjNA">
                  <body>@param flowName the flow to get the period from&#xD;
   * @return the period of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_grVEIbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grWSQLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grXgYLhSEe2UuoshngsjNA" name="getFlowDeadline" method="_hVxvULhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSstLhSEe2UuoshngsjNA">
                  <body>@param flowName the flow to get the deadline from&#xD;
   * @return the deadline of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_grYHcLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grYHcbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grYugLhSEe2UuoshngsjNA" name="getFlowPhase" method="_hVxvU7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSstbhSEe2UuoshngsjNA">
                  <body>@param flowName the flow to get the phase from&#xD;
   * @return the phase of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_grYugbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grYugrhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grZVkLhSEe2UuoshngsjNA" name="getFlowTxAttemptsPerLink" method="_hVyWYLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSstrhSEe2UuoshngsjNA">
                  <body>@param flowName the flow to retrieve transmission attempts from&#xD;
   * @return the number of transmission attempts for any one link in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_grZVkbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grZ8oLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grZ8obhSEe2UuoshngsjNA" name="setFlowsInPriorityOrder" method="_hVyWY7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSst7hSEe2UuoshngsjNA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by priority, and then by&#xD;
   * index.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_grajsLhSEe2UuoshngsjNA" name="setFlowsInDMorder" method="_hVyWZLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSsuLhSEe2UuoshngsjNA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by deadline, and then by&#xD;
   * priority.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_grajsbhSEe2UuoshngsjNA" name="setFlowsInRMorder" method="_hVyWZbhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWSsubhSEe2UuoshngsjNA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by period, and then by&#xD;
   * priority.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_grbKwLhSEe2UuoshngsjNA" name="setFlowsInRealTimeHARTorder" method="_hVy9cLhSEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_grbKwbhSEe2UuoshngsjNA" name="finalizeCurrentFlow" method="_hVy9cbhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grbKwrhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grbx0LhSEe2UuoshngsjNA" name="nextReleaseTime" method="_hVy9c7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grbx0bhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grbx0rhSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grcY4LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grcY4bhSEe2UuoshngsjNA" name="nextAbsoluteDeadline" method="_hVzkgLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grc_8LhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grc_8bhSEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grc_8rhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grdnALhSEe2UuoshngsjNA" name="finalizeFlowWithE2eParameters" visibility="private" method="_hVzkhLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grdnAbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grdnArhSEe2UuoshngsjNA" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_hV0LkLhSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_greOELhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_gre1ILhSEe2UuoshngsjNA" name="getNodeNamesOrderedAlphabetically" method="_hV1ZsLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTwrhSEe2UuoshngsjNA">
                  <body>@return a String array of all node names in alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_gre1IbhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gre1IrhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grgDQLhSEe2UuoshngsjNA" name="getFlow" visibility="private" method="_hV1Zs7hSEe2UuoshngsjNA">
                <ownedParameter xmi:id="_grgDQbhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hMsEwLhSEe2UuoshngsjNA" type="_ghz7wLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_grhRYLhSEe2UuoshngsjNA" name="getFlowNames" method="_hV2AwLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTw7hSEe2UuoshngsjNA">
                  <body>@return a String array with the flow names in their original order from the graph file</body>
                </ownedComment>
                <ownedParameter xmi:id="_grh4cLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_grh4cbhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grifgLhSEe2UuoshngsjNA" name="getNodeIndex" method="_hV2Aw7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTxLhSEe2UuoshngsjNA">
                  <body>@param nodeName the node to find the index of&#xD;
   * @return the index of the given node</body>
                </ownedComment>
                <ownedParameter xmi:id="_grifgbhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grjGkLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grjGkbhSEe2UuoshngsjNA" name="getNodesInFlow" method="_hV2n0LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTxbhSEe2UuoshngsjNA">
                  <body>@param flowName the flow to get node names from&#xD;
   * @return an empty array if the flow given doesn't exists, otherwise&#xD;
   * returns an array of the names of the nodes in the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_grjtoLhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grjtobhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_grjtorhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grkUsLhSEe2UuoshngsjNA" name="getHyperPeriod" method="_hV2n1LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTxrhSEe2UuoshngsjNA">
                  <body>Calculates the hyperPeriod, which is the smallest time period required to wait&#xD;
   * until all flows can be repeated.&#xD;
   * &#xD;
   * @return the hyperPeriod of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_grk7wLhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grk7wbhSEe2UuoshngsjNA" name="getTotalTxAttemptsInFlow" method="_hV3O4LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTx7hSEe2UuoshngsjNA">
                  <body>@param flowName the name of the flow being analyzed&#xD;
   * @return the total number of transmission attempts in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_grk7wrhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grli0LhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grli0bhSEe2UuoshngsjNA" name="getNumTxAttemptsPerLink" method="_hV3O47hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTyLhSEe2UuoshngsjNA">
                  <body>Calculates the number of transmission attempts for each link in a given flow.&#xD;
   * &#xD;
   * @param flowName the name of the flow being analyzed&#xD;
   * @return an array of the number of transmissions needed for each&#xD;
   * edge to meet E2E target</body>
                </ownedComment>
                <ownedParameter xmi:id="_grmJ4LhSEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_grmJ4bhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_grmJ4rhSEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_grmw8LhSEe2UuoshngsjNA" name="maxFlowLength" method="_hV318LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTyrhSEe2UuoshngsjNA">
                  <body>@return the length of the longest flow in the WorkLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_grnYALhSEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_hMqPkLhSEe2UuoshngsjNA" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_hV0yoLhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTwLhSEe2UuoshngsjNA">
                  <body>Calculates the fixed number of transmissions per link based on the number of faults per edge&#xD;
   * and the total number of transmissions for the flow.&#xD;
   * &#xD;
   * @param flow the flow being analyzed&#xD;
   * @return an ArrayList containing the number of transmissions for each node with the total&#xD;
   * number of transmissions at the end of the list</body>
                </ownedComment>
                <ownedParameter xmi:id="_hMq2oLhSEe2UuoshngsjNA" name="flow" type="_ghz7wLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hP2tgLhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hMw9QLhSEe2UuoshngsjNA" name="addEdge" method="_hV3O57hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTybhSEe2UuoshngsjNA">
                  <body>Adds an edge to an existing node's list of connected edges.&#xD;
   * &#xD;
   * @param nodeName the node the edge is being added to&#xD;
   * @param edge the edge to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_hMxkULhSEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hMxkUbhSEe2UuoshngsjNA" name="edge" type="_ghADcLhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPzDILhSEe2UuoshngsjNA" name="WorkLoad" visibility="package" method="_hVrosLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hPzDJLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hPzDJbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWQ3grhSEe2UuoshngsjNA">
                  <body>Creates a new WorkLoad based on the provided file, packet reception rate, and end to end&#xD;
   * reliability. In addition to initializing the WorkLoad attributes, it will read the input&#xD;
   * file, built the AST of the graph, and build the node and flow data objects. This constructor&#xD;
   * sets the number of faults equal to 0.&#xD;
   * &#xD;
   * @param m the minimum packet reception rate to use for the Workload, between 0.0 and 1.0&#xD;
   * @param e2e the end to end communication reliability for the Workload, between 0.0 and 1.0&#xD;
   * @param inputFileName the file to develop the graph from</body>
                </ownedComment>
                <ownedParameter xmi:id="_hPzDIbhSEe2UuoshngsjNA" name="m" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPzDIrhSEe2UuoshngsjNA" name="e2e" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hPzDI7hSEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hPzDJrhSEe2UuoshngsjNA" type="_grDXULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hPzqMLhSEe2UuoshngsjNA" name="WorkLoad" visibility="package" method="_hVsPwLhSEe2UuoshngsjNA">
                <eAnnotations xmi:id="_hP0RRLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hP0RRbhSEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_hWRekLhSEe2UuoshngsjNA">
                  <body>Creates a new WorkLoad based on the provided file, packet reception rate, and end to end&#xD;
   * reliability. In addition to initializing the WorkLoad attributes, it will read the input&#xD;
   * file, built the AST of the graph, and build the node and flow data objects.&#xD;
   * &#xD;
   * @param numFaults the number of faults per edge to use for the Workload, integer >= 0&#xD;
   * @param m the minimum packet reception rate to use for the Workload, between 0.0 and 1.0&#xD;
   * @param e2e the end to end communication reliability for the Workload, between 0.0 and 1.0&#xD;
   * @param inputFileName the file to develop the graph from</body>
                </ownedComment>
                <ownedParameter xmi:id="_hP0RQLhSEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hP0RQbhSEe2UuoshngsjNA" name="m" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hP0RQrhSEe2UuoshngsjNA" name="e2e" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hP0RQ7hSEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hP0RRrhSEe2UuoshngsjNA" type="_grDXULhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hP1fYLhSEe2UuoshngsjNA" name="setMinPacketReceptionRate" method="_hVtd4LhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWRelLhSEe2UuoshngsjNA">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_hP1fYbhSEe2UuoshngsjNA" name="minPacketReceptionRate" type="_hO_x4LhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hP2GcLhSEe2UuoshngsjNA" name="setE2e" method="_hVtd5rhSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWRel7hSEe2UuoshngsjNA">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_hP2GcbhSEe2UuoshngsjNA" name="e2e" type="_hO_x4LhSEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_hP3UkLhSEe2UuoshngsjNA" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_hV0yo7hSEe2UuoshngsjNA">
                <ownedComment xmi:id="_hWTTwbhSEe2UuoshngsjNA">
                  <body>Calculates number of transmissions needed per link and total transmissions required&#xD;
   * for the given flow&#xD;
   * &#xD;
   * @param flow the flow being analyzed&#xD;
   * @param e2e end to end reliability&#xD;
   * @param M minimum packet reception rate&#xD;
   * @param optimizationRequested Unused, needs to be refactored&#xD;
   * @return an ArrayList containing the number of transmissions per link and the total worst case&#xD;
   * cost of transmitting end to end at the end of the List.</body>
                </ownedComment>
                <ownedParameter xmi:id="_hP3UkbhSEe2UuoshngsjNA" name="flow" type="_ghz7wLhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hP3UkrhSEe2UuoshngsjNA" name="e2e" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hP3Uk7hSEe2UuoshngsjNA" name="M" type="_hO_x4LhSEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_hP3UlLhSEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_hP4isbhSEe2UuoshngsjNA" type="_hHI2YLhSEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_hODWsbhSEe2UuoshngsjNA" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_hOvTMLhSEe2UuoshngsjNA" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_hO4dILhSEe2UuoshngsjNA" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_hPXlULhSEe2UuoshngsjNA" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_hPYzdrhSEe2UuoshngsjNA" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_hWC1ELhSEe2UuoshngsjNA" name="" memberEnd="_hQrz8LhSEe2UuoshngsjNA _hWC1EbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hWC1EbhSEe2UuoshngsjNA" name="" type="_ghADcLhSEe2UuoshngsjNA" association="_hWC1ELhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hWJiwLhSEe2UuoshngsjNA" name="" memberEnd="_hSGwQrhSEe2UuoshngsjNA _hWJiwbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hWJiwbhSEe2UuoshngsjNA" name="" type="_gnE2QLhSEe2UuoshngsjNA" association="_hWJiwLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hWQQcLhSEe2UuoshngsjNA" name="" memberEnd="_hTJ5IbhSEe2UuoshngsjNA _hWQQcbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hWQQcbhSEe2UuoshngsjNA" name="" type="_grDXULhSEe2UuoshngsjNA" association="_hWQQcLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hWQ3gLhSEe2UuoshngsjNA" name="" memberEnd="_hTKgMLhSEe2UuoshngsjNA _hWQ3gbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hWQ3gbhSEe2UuoshngsjNA" name="" type="_grDXULhSEe2UuoshngsjNA" association="_hWQ3gLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hW-CILhSEe2UuoshngsjNA" name="" memberEnd="_hW-CIbhSEe2UuoshngsjNA _hQHzQLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hW-CIbhSEe2UuoshngsjNA" name="" type="_gbyzULhSEe2UuoshngsjNA" association="_hW-CILhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hW_3ULhSEe2UuoshngsjNA" name="" memberEnd="_hW_3UbhSEe2UuoshngsjNA _hQJBYLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hW_3UbhSEe2UuoshngsjNA" name="" type="_gbyzULhSEe2UuoshngsjNA" association="_hW_3ULhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXAeYbhSEe2UuoshngsjNA" name="" memberEnd="_hXAeYrhSEe2UuoshngsjNA _hQKPgLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXAeYrhSEe2UuoshngsjNA" name="" type="_gbyzULhSEe2UuoshngsjNA" association="_hXAeYbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXBsgLhSEe2UuoshngsjNA" name="" memberEnd="_hXBsgbhSEe2UuoshngsjNA _hQPvEbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXBsgbhSEe2UuoshngsjNA" name="" type="_gdbyELhSEe2UuoshngsjNA" association="_hXBsgLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXCTkbhSEe2UuoshngsjNA" name="" memberEnd="_hXCTkrhSEe2UuoshngsjNA _hQQ9MLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXCTkrhSEe2UuoshngsjNA" name="" type="_gdbyELhSEe2UuoshngsjNA" association="_hXCTkbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXDhsbhSEe2UuoshngsjNA" name="" memberEnd="_hXDhsrhSEe2UuoshngsjNA _hQTZcrhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXDhsrhSEe2UuoshngsjNA" name="" type="_gdn_ULhSEe2UuoshngsjNA" association="_hXDhsbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXEv0bhSEe2UuoshngsjNA" name="" memberEnd="_hXEv0rhSEe2UuoshngsjNA _hQUAgbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXEv0rhSEe2UuoshngsjNA" name="" type="_gdn_ULhSEe2UuoshngsjNA" association="_hXEv0bhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXF98LhSEe2UuoshngsjNA" name="" memberEnd="_hXF98bhSEe2UuoshngsjNA _hQZgELhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXF98bhSEe2UuoshngsjNA" name="" type="_gduF8LhSEe2UuoshngsjNA" association="_hXF98LhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXGlAbhSEe2UuoshngsjNA" name="" memberEnd="_hXGlArhSEe2UuoshngsjNA _hQb8UbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXGlArhSEe2UuoshngsjNA" name="" type="_gfPv8LhSEe2UuoshngsjNA" association="_hXGlAbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXHzIbhSEe2UuoshngsjNA" name="" memberEnd="_hXHzIrhSEe2UuoshngsjNA _hQeYkLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXHzIrhSEe2UuoshngsjNA" name="" type="_gfPv8LhSEe2UuoshngsjNA" association="_hXHzIbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXJBQLhSEe2UuoshngsjNA" name="" memberEnd="_hXJBQbhSEe2UuoshngsjNA _hQj4ILhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXJBQbhSEe2UuoshngsjNA" name="" type="_ggXKQLhSEe2UuoshngsjNA" association="_hXJBQLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXJoUbhSEe2UuoshngsjNA" name="" memberEnd="_hXJoUrhSEe2UuoshngsjNA _hQmUYLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXJoUrhSEe2UuoshngsjNA" name="" type="_ggXKQLhSEe2UuoshngsjNA" association="_hXJoUbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXK2cLhSEe2UuoshngsjNA" name="" memberEnd="_hXK2cbhSEe2UuoshngsjNA _hQ8SoLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXK2cbhSEe2UuoshngsjNA" name="" type="_ghz7wLhSEe2UuoshngsjNA" association="_hXK2cLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXLdgbhSEe2UuoshngsjNA" name="" memberEnd="_hXLdgrhSEe2UuoshngsjNA _hQ9gwbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXLdgrhSEe2UuoshngsjNA" name="" type="_ghz7wLhSEe2UuoshngsjNA" association="_hXLdgbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXMroLhSEe2UuoshngsjNA" name="" memberEnd="_hXMrobhSEe2UuoshngsjNA _hQ_V8LhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXMrobhSEe2UuoshngsjNA" name="" type="_ghz7wLhSEe2UuoshngsjNA" association="_hXMroLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXN5wLhSEe2UuoshngsjNA" name="" memberEnd="_hXN5wbhSEe2UuoshngsjNA _hRByMbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXN5wbhSEe2UuoshngsjNA" name="" type="_ghz7wLhSEe2UuoshngsjNA" association="_hXN5wLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXOg0bhSEe2UuoshngsjNA" name="" memberEnd="_hXOg0rhSEe2UuoshngsjNA _hRCZQbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXOg0rhSEe2UuoshngsjNA" name="" type="_ghz7wLhSEe2UuoshngsjNA" association="_hXOg0bhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXPu8bhSEe2UuoshngsjNA" name="" memberEnd="_hXPu8rhSEe2UuoshngsjNA _hRGqsbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXPu8rhSEe2UuoshngsjNA" name="" type="_giWHQLhSEe2UuoshngsjNA" association="_hXPu8bhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXQ9ELhSEe2UuoshngsjNA" name="" memberEnd="_hXQ9EbhSEe2UuoshngsjNA _hRIf4bhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXQ9EbhSEe2UuoshngsjNA" name="" type="_giWHQLhSEe2UuoshngsjNA" association="_hXQ9ELhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXRkIbhSEe2UuoshngsjNA" name="" memberEnd="_hXRkIrhSEe2UuoshngsjNA _hRJuALhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXRkIrhSEe2UuoshngsjNA" name="" type="_gitToLhSEe2UuoshngsjNA" association="_hXRkIbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXSyQbhSEe2UuoshngsjNA" name="" memberEnd="_hXSyQrhSEe2UuoshngsjNA _hRK8ILhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXSyQrhSEe2UuoshngsjNA" name="" type="_gi450LhSEe2UuoshngsjNA" association="_hXSyQbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXTZUbhSEe2UuoshngsjNA" name="" memberEnd="_hXTZUrhSEe2UuoshngsjNA _hRLjMbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXTZUrhSEe2UuoshngsjNA" name="" type="_gi450LhSEe2UuoshngsjNA" association="_hXTZUbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXUncbhSEe2UuoshngsjNA" name="" memberEnd="_hXUncrhSEe2UuoshngsjNA _hRNYYbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXUncrhSEe2UuoshngsjNA" name="" type="_gjBcsLhSEe2UuoshngsjNA" association="_hXUncbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXVOgbhSEe2UuoshngsjNA" name="" memberEnd="_hXVOgrhSEe2UuoshngsjNA _hRSQ4LhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXVOgrhSEe2UuoshngsjNA" name="" type="_gjYCALhSEe2UuoshngsjNA" association="_hXVOgbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXWcoLhSEe2UuoshngsjNA" name="" memberEnd="_hXWcobhSEe2UuoshngsjNA _hRS38LhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXWcobhSEe2UuoshngsjNA" name="" type="_gjYCALhSEe2UuoshngsjNA" association="_hXWcoLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXXqwbhSEe2UuoshngsjNA" name="" memberEnd="_hXXqwrhSEe2UuoshngsjNA _hRS38rhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXXqwrhSEe2UuoshngsjNA" name="" type="_gjYCALhSEe2UuoshngsjNA" association="_hXXqwbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXY44LhSEe2UuoshngsjNA" name="" memberEnd="_hXY44bhSEe2UuoshngsjNA _hRTfAbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXY44bhSEe2UuoshngsjNA" name="" type="_gjYCALhSEe2UuoshngsjNA" association="_hXY44LhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXZf8bhSEe2UuoshngsjNA" name="" memberEnd="_hXZf8rhSEe2UuoshngsjNA _hRUGEbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXZf8rhSEe2UuoshngsjNA" name="" type="_gjYCALhSEe2UuoshngsjNA" association="_hXZf8bhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXaHAbhSEe2UuoshngsjNA" name="" memberEnd="_hXaHArhSEe2UuoshngsjNA _hRXJYbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXaHArhSEe2UuoshngsjNA" name="" type="_gjjoMLhSEe2UuoshngsjNA" association="_hXaHAbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXauEbhSEe2UuoshngsjNA" name="" memberEnd="_hXauErhSEe2UuoshngsjNA _hRXwcbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXauErhSEe2UuoshngsjNA" name="" type="_gjjoMLhSEe2UuoshngsjNA" association="_hXauEbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXcjQbhSEe2UuoshngsjNA" name="" memberEnd="_hXcjQrhSEe2UuoshngsjNA _hRaMsbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXcjQrhSEe2UuoshngsjNA" name="" type="_gjzf0LhSEe2UuoshngsjNA" association="_hXcjQbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXdKUbhSEe2UuoshngsjNA" name="" memberEnd="_hXdxYLhSEe2UuoshngsjNA _hRg6YLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXdxYLhSEe2UuoshngsjNA" name="" type="_gkVrULhSEe2UuoshngsjNA" association="_hXdKUbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXeYcbhSEe2UuoshngsjNA" name="" memberEnd="_hXeYcrhSEe2UuoshngsjNA _hRiIgLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXeYcrhSEe2UuoshngsjNA" name="" type="_gkVrULhSEe2UuoshngsjNA" association="_hXeYcbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXfmkbhSEe2UuoshngsjNA" name="" memberEnd="_hXfmkrhSEe2UuoshngsjNA _hRivkLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXfmkrhSEe2UuoshngsjNA" name="" type="_gkVrULhSEe2UuoshngsjNA" association="_hXfmkbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXgNobhSEe2UuoshngsjNA" name="" memberEnd="_hXgNorhSEe2UuoshngsjNA _hRjWobhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXgNorhSEe2UuoshngsjNA" name="" type="_gkVrULhSEe2UuoshngsjNA" association="_hXgNobhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXiC0LhSEe2UuoshngsjNA" name="" memberEnd="_hXiC0bhSEe2UuoshngsjNA _hRj9s7hSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXiC0bhSEe2UuoshngsjNA" name="" type="_gkVrULhSEe2UuoshngsjNA" association="_hXiC0LhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXip4bhSEe2UuoshngsjNA" name="" memberEnd="_hXip4rhSEe2UuoshngsjNA _hRkkwbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXip4rhSEe2UuoshngsjNA" name="" type="_gkVrULhSEe2UuoshngsjNA" association="_hXip4bhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXj4AbhSEe2UuoshngsjNA" name="" memberEnd="_hXj4ArhSEe2UuoshngsjNA _hRmZ8bhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXj4ArhSEe2UuoshngsjNA" name="" type="_gkVrULhSEe2UuoshngsjNA" association="_hXj4AbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXkfEbhSEe2UuoshngsjNA" name="" memberEnd="_hXkfErhSEe2UuoshngsjNA _hRnoEbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXkfErhSEe2UuoshngsjNA" name="" type="_gkVrULhSEe2UuoshngsjNA" association="_hXkfEbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXltMbhSEe2UuoshngsjNA" name="" memberEnd="_hXltMrhSEe2UuoshngsjNA _hRr5gLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXltMrhSEe2UuoshngsjNA" name="" type="_glHucLhSEe2UuoshngsjNA" association="_hXltMbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXm7UbhSEe2UuoshngsjNA" name="" memberEnd="_hXm7UrhSEe2UuoshngsjNA _hRsgkLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXm7UrhSEe2UuoshngsjNA" name="" type="_glHucLhSEe2UuoshngsjNA" association="_hXm7UbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXniYbhSEe2UuoshngsjNA" name="" memberEnd="_hXniYrhSEe2UuoshngsjNA _hRtHoLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXniYrhSEe2UuoshngsjNA" name="" type="_glHucLhSEe2UuoshngsjNA" association="_hXniYbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXowgbhSEe2UuoshngsjNA" name="" memberEnd="_hXowgrhSEe2UuoshngsjNA _hRxZEbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXowgrhSEe2UuoshngsjNA" name="" type="_glHucLhSEe2UuoshngsjNA" association="_hXowgbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXpXkbhSEe2UuoshngsjNA" name="" memberEnd="_hXpXkrhSEe2UuoshngsjNA _hR0cYbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXpXkrhSEe2UuoshngsjNA" name="" type="_glHucLhSEe2UuoshngsjNA" association="_hXpXkbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXqlsbhSEe2UuoshngsjNA" name="" memberEnd="_hXqlsrhSEe2UuoshngsjNA _hR4GwLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXqlsrhSEe2UuoshngsjNA" name="" type="_gmH0ALhSEe2UuoshngsjNA" association="_hXqlsbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXrz0bhSEe2UuoshngsjNA" name="" memberEnd="_hXrz0rhSEe2UuoshngsjNA _hR4t0LhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXrz0rhSEe2UuoshngsjNA" name="" type="_gmH0ALhSEe2UuoshngsjNA" association="_hXrz0bhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXtB8bhSEe2UuoshngsjNA" name="" memberEnd="_hXtB8rhSEe2UuoshngsjNA _hR8YMrhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXtB8rhSEe2UuoshngsjNA" name="" type="_gmxUQLhSEe2UuoshngsjNA" association="_hXtB8bhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXtpAbhSEe2UuoshngsjNA" name="" memberEnd="_hXtpArhSEe2UuoshngsjNA _hR8_QbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXtpArhSEe2UuoshngsjNA" name="" type="_gmxUQLhSEe2UuoshngsjNA" association="_hXtpAbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXu3IbhSEe2UuoshngsjNA" name="" memberEnd="_hXu3IrhSEe2UuoshngsjNA _hR-0cbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXu3IrhSEe2UuoshngsjNA" name="" type="_gm2MwLhSEe2UuoshngsjNA" association="_hXu3IbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXwFQLhSEe2UuoshngsjNA" name="" memberEnd="_hXwFQbhSEe2UuoshngsjNA _hSHXULhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXwFQbhSEe2UuoshngsjNA" name="" type="_gnE2QLhSEe2UuoshngsjNA" association="_hXwFQLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXwsUbhSEe2UuoshngsjNA" name="" memberEnd="_hXwsUrhSEe2UuoshngsjNA _hSJMgbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXwsUrhSEe2UuoshngsjNA" name="" type="_gnE2QLhSEe2UuoshngsjNA" association="_hXwsUbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXx6cLhSEe2UuoshngsjNA" name="" memberEnd="_hXx6cbhSEe2UuoshngsjNA _hSPTIrhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXx6cbhSEe2UuoshngsjNA" name="" type="_gnyA4LhSEe2UuoshngsjNA" association="_hXx6cLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXyhgbhSEe2UuoshngsjNA" name="" memberEnd="_hXyhgrhSEe2UuoshngsjNA _hSP6MbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXyhgrhSEe2UuoshngsjNA" name="" type="_gnyA4LhSEe2UuoshngsjNA" association="_hXyhgbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hXzIkbhSEe2UuoshngsjNA" name="" memberEnd="_hXzIkrhSEe2UuoshngsjNA _hSXO8LhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hXzIkrhSEe2UuoshngsjNA" name="" type="_go4NELhSEe2UuoshngsjNA" association="_hXzIkbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX0WsbhSEe2UuoshngsjNA" name="" memberEnd="_hX0WsrhSEe2UuoshngsjNA _hSX2AbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX0WsrhSEe2UuoshngsjNA" name="" type="_go4NELhSEe2UuoshngsjNA" association="_hX0WsbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX1k0LhSEe2UuoshngsjNA" name="" memberEnd="_hX1k0bhSEe2UuoshngsjNA _hSYdEbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX1k0bhSEe2UuoshngsjNA" name="" type="_go4NELhSEe2UuoshngsjNA" association="_hX1k0LhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX2y8bhSEe2UuoshngsjNA" name="" memberEnd="_hX2y8rhSEe2UuoshngsjNA _hSa5ULhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX2y8rhSEe2UuoshngsjNA" name="" type="_go4NELhSEe2UuoshngsjNA" association="_hX2y8bhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX4BELhSEe2UuoshngsjNA" name="" memberEnd="_hX4BEbhSEe2UuoshngsjNA _hSbgYLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX4BEbhSEe2UuoshngsjNA" name="" type="_go4NELhSEe2UuoshngsjNA" association="_hX4BELhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX4oIbhSEe2UuoshngsjNA" name="" memberEnd="_hX4oIrhSEe2UuoshngsjNA _hScHcbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX4oIrhSEe2UuoshngsjNA" name="" type="_go4NELhSEe2UuoshngsjNA" association="_hX4oIbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX52QLhSEe2UuoshngsjNA" name="" memberEnd="_hX52QbhSEe2UuoshngsjNA _hSdVkLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX52QbhSEe2UuoshngsjNA" name="" type="_go4NELhSEe2UuoshngsjNA" association="_hX52QLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX6dUbhSEe2UuoshngsjNA" name="" memberEnd="_hX6dUrhSEe2UuoshngsjNA _hSejsLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX6dUrhSEe2UuoshngsjNA" name="" type="_gpHdoLhSEe2UuoshngsjNA" association="_hX6dUbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX7EYbhSEe2UuoshngsjNA" name="" memberEnd="_hX7EYrhSEe2UuoshngsjNA _hS1wELhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX7EYrhSEe2UuoshngsjNA" name="" type="_gpsscLhSEe2UuoshngsjNA" association="_hX7EYbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX8SgbhSEe2UuoshngsjNA" name="" memberEnd="_hX8SgrhSEe2UuoshngsjNA _hS2-MLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX8SgrhSEe2UuoshngsjNA" name="" type="_gpsscLhSEe2UuoshngsjNA" association="_hX8SgbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX85kbhSEe2UuoshngsjNA" name="" memberEnd="_hX85krhSEe2UuoshngsjNA _hS4MULhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX85krhSEe2UuoshngsjNA" name="" type="_gp-ZQLhSEe2UuoshngsjNA" association="_hX85kbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX-HsLhSEe2UuoshngsjNA" name="" memberEnd="_hX-HsbhSEe2UuoshngsjNA _hS4zYbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX-HsbhSEe2UuoshngsjNA" name="" type="_gp-ZQLhSEe2UuoshngsjNA" association="_hX-HsLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX-uwbhSEe2UuoshngsjNA" name="" memberEnd="_hX-uwrhSEe2UuoshngsjNA _hS5acbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX-uwrhSEe2UuoshngsjNA" name="" type="_gp-ZQLhSEe2UuoshngsjNA" association="_hX-uwbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hX_84LhSEe2UuoshngsjNA" name="" memberEnd="_hX_84bhSEe2UuoshngsjNA _hS5ac7hSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hX_84bhSEe2UuoshngsjNA" name="" type="_gp-ZQLhSEe2UuoshngsjNA" association="_hX_84LhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hYBLALhSEe2UuoshngsjNA" name="" memberEnd="_hYBLAbhSEe2UuoshngsjNA _hS6okLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hYBLAbhSEe2UuoshngsjNA" name="" type="_gp-ZQLhSEe2UuoshngsjNA" association="_hYBLALhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hYByEbhSEe2UuoshngsjNA" name="" memberEnd="_hYByErhSEe2UuoshngsjNA _hS-6A7hSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hYByErhSEe2UuoshngsjNA" name="" type="_gqbsQLhSEe2UuoshngsjNA" association="_hYByEbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hYDAMLhSEe2UuoshngsjNA" name="" memberEnd="_hYDAMbhSEe2UuoshngsjNA _hTAIIrhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hYDAMbhSEe2UuoshngsjNA" name="" type="_gqbsQLhSEe2UuoshngsjNA" association="_hYDAMLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hYDnQbhSEe2UuoshngsjNA" name="" memberEnd="_hYDnQrhSEe2UuoshngsjNA _hTBWQLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hYDnQrhSEe2UuoshngsjNA" name="" type="_gqmEULhSEe2UuoshngsjNA" association="_hYDnQbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hYE1YLhSEe2UuoshngsjNA" name="" memberEnd="_hYE1YbhSEe2UuoshngsjNA _hTDLcLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hYE1YbhSEe2UuoshngsjNA" name="" type="_gqq80LhSEe2UuoshngsjNA" association="_hYE1YLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hYFccbhSEe2UuoshngsjNA" name="" memberEnd="_hYFccrhSEe2UuoshngsjNA _hTEZkbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hYFccrhSEe2UuoshngsjNA" name="" type="_gqq80LhSEe2UuoshngsjNA" association="_hYFccbhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hYGqkLhSEe2UuoshngsjNA" name="" memberEnd="_hYGqkbhSEe2UuoshngsjNA _hTLHQbhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hYGqkbhSEe2UuoshngsjNA" name="" type="_grDXULhSEe2UuoshngsjNA" association="_hYGqkLhSEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_hYHRobhSEe2UuoshngsjNA" name="" memberEnd="_hYHRorhSEe2UuoshngsjNA _hTMVYLhSEe2UuoshngsjNA">
              <ownedEnd xmi:id="_hYHRorhSEe2UuoshngsjNA" name="" type="_grDXULhSEe2UuoshngsjNA" association="_hYHRobhSEe2UuoshngsjNA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_gUOywLhSEe2UuoshngsjNA" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_hIeTIbhSEe2UuoshngsjNA" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_hIfhQLhSEe2UuoshngsjNA" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_hIgIUbhSEe2UuoshngsjNA" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_hPjLgLhSEe2UuoshngsjNA" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_gVNqMLhSEe2UuoshngsjNA" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_hJu3YLhSEe2UuoshngsjNA" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gRTakLhSEe2UuoshngsjNA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_gRUBoLhSEe2UuoshngsjNA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_gSlM8LhSEe2UuoshngsjNA" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_hHpzwLhSEe2UuoshngsjNA" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_gX05ULhSEe2UuoshngsjNA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_hMnMQbhSEe2UuoshngsjNA" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gmeZULhSEe2UuoshngsjNA" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hHFzELhSEe2UuoshngsjNA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hHI2YLhSEe2UuoshngsjNA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hHKEgLhSEe2UuoshngsjNA" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_hHKrkbhSEe2UuoshngsjNA" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_hHL5sbhSEe2UuoshngsjNA" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_hH6ScLhSEe2UuoshngsjNA" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_hJXD8LhSEe2UuoshngsjNA" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hJwFgbhSEe2UuoshngsjNA" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hKaz4LhSEe2UuoshngsjNA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_hKcCALhSEe2UuoshngsjNA" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hMGO4LhSEe2UuoshngsjNA" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hMIEEbhSEe2UuoshngsjNA" name="Scanner"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_hMlXELhSEe2UuoshngsjNA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hMmlMbhSEe2UuoshngsjNA" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gTdWsLhSEe2UuoshngsjNA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_hIC1UbhSEe2UuoshngsjNA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hIEDcbhSEe2UuoshngsjNA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hI80QLhSEe2UuoshngsjNA" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hI-CYLhSEe2UuoshngsjNA" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gTek0LhSEe2UuoshngsjNA" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_gTfL4LhSEe2UuoshngsjNA" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_hIEqgbhSEe2UuoshngsjNA" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_hIF4obhSEe2UuoshngsjNA" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_hIHGwLhSEe2UuoshngsjNA" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gUbnELhSEe2UuoshngsjNA" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_hI04cLhSEe2UuoshngsjNA" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_hNcSsLhSEe2UuoshngsjNA" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_hNcSsbhSEe2UuoshngsjNA" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hOXfwLhSEe2UuoshngsjNA" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_hO_x4LhSEe2UuoshngsjNA" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gTa6cLhSEe2UuoshngsjNA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_gTbhgLhSEe2UuoshngsjNA" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_gTcvoLhSEe2UuoshngsjNA" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_hICOQLhSEe2UuoshngsjNA" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gTgaALhSEe2UuoshngsjNA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_gThBELhSEe2UuoshngsjNA" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_gUcOILhSEe2UuoshngsjNA" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_hI37wbhSEe2UuoshngsjNA" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_hI5w8LhSEe2UuoshngsjNA" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hIHt0bhSEe2UuoshngsjNA" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hI1fgbhSEe2UuoshngsjNA" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hI2toLhSEe2UuoshngsjNA" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hI3UsbhSEe2UuoshngsjNA" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gUNkoLhSEe2UuoshngsjNA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_gUNkobhSEe2UuoshngsjNA" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_gUOLsLhSEe2UuoshngsjNA" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_gUOLsbhSEe2UuoshngsjNA" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_gUOLsrhSEe2UuoshngsjNA" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_hIcd8bhSEe2UuoshngsjNA" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_hIdsELhSEe2UuoshngsjNA" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_hIZaoLhSEe2UuoshngsjNA" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_hIaowLhSEe2UuoshngsjNA" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_hIb24bhSEe2UuoshngsjNA" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gXnd8LhSEe2UuoshngsjNA" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_gXnd8bhSEe2UuoshngsjNA" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_gXnd8rhSEe2UuoshngsjNA" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_hMf3gLhSEe2UuoshngsjNA" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_hMhFobhSEe2UuoshngsjNA" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_hMiTwLhSEe2UuoshngsjNA" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gUU5YLhSEe2UuoshngsjNA" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_hIjLoLhSEe2UuoshngsjNA" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hIln4LhSEe2UuoshngsjNA" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hIndErhSEe2UuoshngsjNA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hIp5ULhSEe2UuoshngsjNA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hIsVkLhSEe2UuoshngsjNA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hIux0rhSEe2UuoshngsjNA" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hMPY0LhSEe2UuoshngsjNA" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hMROArhSEe2UuoshngsjNA" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hMTqQbhSEe2UuoshngsjNA" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hMXUoLhSEe2UuoshngsjNA" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gWy-kLhSEe2UuoshngsjNA" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_hLZrULhSEe2UuoshngsjNA" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hLaSYbhSEe2UuoshngsjNA" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hLbggLhSEe2UuoshngsjNA" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hLcHkLhSEe2UuoshngsjNA" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hLdVsbhSEe2UuoshngsjNA" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gXEEULhSEe2UuoshngsjNA" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_hLoU0LhSEe2UuoshngsjNA" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hLr_MbhSEe2UuoshngsjNA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hLtNUrhSEe2UuoshngsjNA" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hLwQoLhSEe2UuoshngsjNA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hL1JJrhSEe2UuoshngsjNA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_hL4McLhSEe2UuoshngsjNA" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_d5dZcLhSEe2UuoshngsjNA">
      <eAnnotations xmi:id="_d5o_oLhSEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_d57TgLhSEe2UuoshngsjNA" base_Package="_bUx2MLhSEe2UuoshngsjNA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_gbpCULhSEe2UuoshngsjNA" genericsValue="T,E" base_Element="_gbkw4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gb4S4LhSEe2UuoshngsjNA" base_Element="_gb3r0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gb6IELhSEe2UuoshngsjNA" base_Element="_gb3r0LhSEe2UuoshngsjNA">
    <annotations xmi:id="_gb6vILhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_gb9ycLhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_gb79QLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gb_noLhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_gb-ZgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gcCD4LhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_gcA1wLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gcG8YLhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_gcCq8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gcJ_sLhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_gcIKgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_geSGoLhSEe2UuoshngsjNA" genericsValue="String" base_Element="_gd6TMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gfckQLhSEe2UuoshngsjNA" genericsValue="String" base_Element="_gfZg8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ggdQ4LhSEe2UuoshngsjNA" base_Element="_ggcp0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_ggd38LhSEe2UuoshngsjNA" base_Element="_ggcp0LhSEe2UuoshngsjNA">
    <annotations xmi:id="_ggefALhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ggftILhSEe2UuoshngsjNA" base_Element="_ggefAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gggUMLhSEe2UuoshngsjNA" base_Element="_ggefAbhSEe2UuoshngsjNA">
    <annotations xmi:id="_gggUMbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gglMsLhSEe2UuoshngsjNA" base_Element="_gggUMrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gglzwLhSEe2UuoshngsjNA" base_Element="_gggUMrhSEe2UuoshngsjNA">
    <annotations xmi:id="_ggma0LhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_gg3gkLhSEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_gg1rYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gg-OQLhSEe2UuoshngsjNA" base_Element="_gg9nMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gg-1ULhSEe2UuoshngsjNA" base_Element="_gg9nMLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gg-1UbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ghDGwLhSEe2UuoshngsjNA" base_Element="_ghCfsLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ghJNYLhSEe2UuoshngsjNA" base_Element="_ghH_QLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_ghJ0cLhSEe2UuoshngsjNA" base_Element="_ghH_QLhSEe2UuoshngsjNA">
    <annotations xmi:id="_ghJ0cbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ghLpoLhSEe2UuoshngsjNA" base_Element="_ghKbgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_ghLpobhSEe2UuoshngsjNA" base_Element="_ghKbgLhSEe2UuoshngsjNA">
    <annotations xmi:id="_ghMQsLhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ghM3wLhSEe2UuoshngsjNA" base_Element="_ghMQsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_ghM3wbhSEe2UuoshngsjNA" base_Element="_ghMQsbhSEe2UuoshngsjNA">
    <annotations xmi:id="_ghNe0LhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_gh9FsLhSEe2UuoshngsjNA" genericsValue="Node" base_Element="_gh73kbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gh_h8LhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_gh-T0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_giB-MLhSEe2UuoshngsjNA" genericsValue="Integer" base_Element="_giAwELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_giG2sLhSEe2UuoshngsjNA" base_Element="_giFokLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_giHdwLhSEe2UuoshngsjNA" base_Element="_giFokLhSEe2UuoshngsjNA">
    <annotations xmi:id="_giIE0LhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_giZxoLhSEe2UuoshngsjNA" base_Element="_giZKkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_giaYsLhSEe2UuoshngsjNA" base_Element="_giZKkLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gia_wLhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_gi9LQbhSEe2UuoshngsjNA" dimensions="2" base_Element="_gi7WErhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gjqV4LhSEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_gjpHwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gjwcgLhSEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_gjunULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gj5mcLhSEe2UuoshngsjNA" base_Element="_gj4YULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gj60kLhSEe2UuoshngsjNA" base_Element="_gj4YULhSEe2UuoshngsjNA">
    <annotations xmi:id="_gj60kbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gj934LhSEe2UuoshngsjNA" base_Element="_gj9Q0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gj-e8LhSEe2UuoshngsjNA" base_Element="_gj9Q0LhSEe2UuoshngsjNA">
    <annotations xmi:id="_gj-e8bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gj_GALhSEe2UuoshngsjNA" base_Element="_gj-e8rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gj_tELhSEe2UuoshngsjNA" base_Element="_gj-e8rhSEe2UuoshngsjNA">
    <annotations xmi:id="_gj_tEbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gkOWkLhSEe2UuoshngsjNA" base_Element="_gkNvgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gkO9oLhSEe2UuoshngsjNA" base_Element="_gkNvgLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gkO9obhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_gkSoALhSEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_gkRZ4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gkZ8wLhSEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_gkYuoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gkbx8LhSEe2UuoshngsjNA" genericsValue="String" base_Element="_gkaj0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_gkdnILhSEe2UuoshngsjNA" base_Element="_gkcZALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gk3PwLhSEe2UuoshngsjNA" base_Element="_gk2osLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gk320LhSEe2UuoshngsjNA" base_Element="_gk2osLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gk4d4LhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_glC18LhSEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_glBn0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_glh-IbhSEe2UuoshngsjNA" base_Element="_glhXELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_glilMLhSEe2UuoshngsjNA" base_Element="_glhXELhSEe2UuoshngsjNA">
    <annotations xmi:id="_glilMbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gljzUbhSEe2UuoshngsjNA" base_Element="_gljMQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_glkaYLhSEe2UuoshngsjNA" base_Element="_gljMQbhSEe2UuoshngsjNA">
    <annotations xmi:id="_gllBcLhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gllogbhSEe2UuoshngsjNA" base_Element="_gllBcbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_glmPkLhSEe2UuoshngsjNA" base_Element="_gllBcbhSEe2UuoshngsjNA">
    <annotations xmi:id="_glmPkbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_glor0LhSEe2UuoshngsjNA" base_Element="_gloEwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_glpS4LhSEe2UuoshngsjNA" base_Element="_gloEwbhSEe2UuoshngsjNA">
    <annotations xmi:id="_glp58LhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_glqhALhSEe2UuoshngsjNA" base_Element="_glp58bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_glrIELhSEe2UuoshngsjNA" base_Element="_glp58bhSEe2UuoshngsjNA">
    <annotations xmi:id="_glrIEbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_glsWMbhSEe2UuoshngsjNA" base_Element="_glrvILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gls9QLhSEe2UuoshngsjNA" base_Element="_glrvILhSEe2UuoshngsjNA">
    <annotations xmi:id="_gls9QbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gluLYLhSEe2UuoshngsjNA" base_Element="_gls9QrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gluLYbhSEe2UuoshngsjNA" base_Element="_gls9QrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gluLYrhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_glvZgbhSEe2UuoshngsjNA" base_Element="_gluycLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_glwAkLhSEe2UuoshngsjNA" base_Element="_gluycLhSEe2UuoshngsjNA">
    <annotations xmi:id="_glwAkbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_glx1wLhSEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_glwAkrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gmKQQLhSEe2UuoshngsjNA" base_Element="_gmJpMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gmK3ULhSEe2UuoshngsjNA" base_Element="_gmJpMLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gmK3UbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gmMFcLhSEe2UuoshngsjNA" base_Element="_gmLeYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gmMsgLhSEe2UuoshngsjNA" base_Element="_gmLeYLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gmMsgbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gmN6oLhSEe2UuoshngsjNA" base_Element="_gmNTkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gmOhsLhSEe2UuoshngsjNA" base_Element="_gmNTkLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gmOhsbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_gmPv0LhSEe2UuoshngsjNA" dimensions="1" base_Element="_gmPIwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gmQW4LhSEe2UuoshngsjNA" base_Element="_gmPIwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gmQ98LhSEe2UuoshngsjNA" base_Element="_gmPIwLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gmQ98bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_gmSMELhSEe2UuoshngsjNA" dimensions="2" base_Element="_gmQ98rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gmSMEbhSEe2UuoshngsjNA" base_Element="_gmQ98rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gmSzILhSEe2UuoshngsjNA" base_Element="_gmQ98rhSEe2UuoshngsjNA">
    <annotations xmi:id="_gmSzIbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_gmYSsLhSEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_gmXEkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gmckILhSEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_gmbWALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_gmfAYLhSEe2UuoshngsjNA" base_Element="_gmeZULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gmg1kLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_gmfncLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gm5QELhSEe2UuoshngsjNA" base_Element="_gm4B8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gm53ILhSEe2UuoshngsjNA" base_Element="_gm4B8LhSEe2UuoshngsjNA">
    <annotations xmi:id="_gm53IbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_gm-voLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_gm9hgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gnOnQLhSEe2UuoshngsjNA" genericsValue="Integer" base_Element="_gnMyELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gntIYLhSEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_gnrTMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gnwLsLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_gnu9kLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_goWBkLhSEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_goUzcLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_goYd0LhSEe2UuoshngsjNA" genericsValue="T" base_Element="_goX2wLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gobhILhSEe2UuoshngsjNA" base_Element="_goa6ELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gol5MLhSEe2UuoshngsjNA" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_gokrELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_goucEbhSEe2UuoshngsjNA" base_Element="_goucELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gow4UbhSEe2UuoshngsjNA" base_Element="_gow4ULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_go7QYbhSEe2UuoshngsjNA" base_Element="_go7QYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_go73cLhSEe2UuoshngsjNA" base_Element="_go7QYLhSEe2UuoshngsjNA">
    <annotations xmi:id="_go73cbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_go9FkLhSEe2UuoshngsjNA" base_Element="_go8egLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_go9soLhSEe2UuoshngsjNA" base_Element="_go8egLhSEe2UuoshngsjNA">
    <annotations xmi:id="_go9sobhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_go-6wLhSEe2UuoshngsjNA" base_Element="_go9sorhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_go_h0LhSEe2UuoshngsjNA" base_Element="_go9sorhSEe2UuoshngsjNA">
    <annotations xmi:id="_go_h0bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_gpPZcLhSEe2UuoshngsjNA" base_Element="_gpOyYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_gpQAgrhSEe2UuoshngsjNA" dimensions="2" base_Element="_gpPZcbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_gpZKcbhSEe2UuoshngsjNA" base_Element="_gpYjYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_gpbmsbhSEe2UuoshngsjNA" dimensions="1" base_Element="_gpa_obhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gpsFYLhSEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_gpq3QLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_gpvIsLhSEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_gpt6k7hSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqA1gLhSEe2UuoshngsjNA" base_Element="_gqAOcLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqBckLhSEe2UuoshngsjNA" base_Element="_gqAOcLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqBckbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqCDobhSEe2UuoshngsjNA" base_Element="_gqCDoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqCqsLhSEe2UuoshngsjNA" base_Element="_gqCDoLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqCqsbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqDRwLhSEe2UuoshngsjNA" base_Element="_gqCqsrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqD40LhSEe2UuoshngsjNA" base_Element="_gqCqsrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqD40bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqFG8LhSEe2UuoshngsjNA" base_Element="_gqEf4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqFuALhSEe2UuoshngsjNA" base_Element="_gqEf4LhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqFuAbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqG8ILhSEe2UuoshngsjNA" base_Element="_gqGVELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqG8IbhSEe2UuoshngsjNA" base_Element="_gqGVELhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqHjMLhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqIKQLhSEe2UuoshngsjNA" base_Element="_gqHjMbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqIxULhSEe2UuoshngsjNA" base_Element="_gqHjMbhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqIxUbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqJYYbhSEe2UuoshngsjNA" base_Element="_gqIxUrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqJ_cLhSEe2UuoshngsjNA" base_Element="_gqIxUrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqJ_cbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqKmgbhSEe2UuoshngsjNA" base_Element="_gqJ_crhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqLNkLhSEe2UuoshngsjNA" base_Element="_gqJ_crhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqLNkbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqMbsLhSEe2UuoshngsjNA" base_Element="_gqL0oLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqMbsbhSEe2UuoshngsjNA" base_Element="_gqL0oLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqNCwLhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqNp0LhSEe2UuoshngsjNA" base_Element="_gqNCwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqOQ4LhSEe2UuoshngsjNA" base_Element="_gqNCwbhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqOQ4bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqO38LhSEe2UuoshngsjNA" base_Element="_gqOQ4rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqPfALhSEe2UuoshngsjNA" base_Element="_gqOQ4rhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqPfAbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqQtILhSEe2UuoshngsjNA" base_Element="_gqQGELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqRUMLhSEe2UuoshngsjNA" base_Element="_gqQGELhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqRUMbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqR7QLhSEe2UuoshngsjNA" base_Element="_gqRUMrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqR7QbhSEe2UuoshngsjNA" base_Element="_gqRUMrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqR7QrhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqTJYLhSEe2UuoshngsjNA" base_Element="_gqSiULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqTJYbhSEe2UuoshngsjNA" base_Element="_gqSiULhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqTwcLhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqUXgLhSEe2UuoshngsjNA" base_Element="_gqTwcbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqUXgbhSEe2UuoshngsjNA" base_Element="_gqTwcbhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqU-kLhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqU-krhSEe2UuoshngsjNA" base_Element="_gqU-kbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqVloLhSEe2UuoshngsjNA" base_Element="_gqU-kbhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqVlobhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqeIgLhSEe2UuoshngsjNA" base_Element="_gqdhc7hSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqevkLhSEe2UuoshngsjNA" base_Element="_gqdhc7hSEe2UuoshngsjNA">
    <annotations xmi:id="_gqevkbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqfWoLhSEe2UuoshngsjNA" base_Element="_gqevkrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqf9sLhSEe2UuoshngsjNA" base_Element="_gqevkrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqf9sbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqgkwbhSEe2UuoshngsjNA" base_Element="_gqf9srhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqhL0LhSEe2UuoshngsjNA" base_Element="_gqf9srhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqhL0bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqsK8LhSEe2UuoshngsjNA" base_Element="_gqrj4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqsK8bhSEe2UuoshngsjNA" base_Element="_gqrj4LhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqsK8rhSEe2UuoshngsjNA" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqsyALhSEe2UuoshngsjNA" base_Element="_gqsK87hSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gquAILhSEe2UuoshngsjNA" base_Element="_gqsK87hSEe2UuoshngsjNA">
    <annotations xmi:id="_gquAIbhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqvOQLhSEe2UuoshngsjNA" base_Element="_gqunMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqvOQbhSEe2UuoshngsjNA" base_Element="_gqunMLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqv1ULhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqwcYLhSEe2UuoshngsjNA" base_Element="_gqv1UbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqwcYbhSEe2UuoshngsjNA" base_Element="_gqv1UbhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqxDcLhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqxDcrhSEe2UuoshngsjNA" base_Element="_gqxDcbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqxqgLhSEe2UuoshngsjNA" base_Element="_gqxDcbhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqxqgbhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqyRkLhSEe2UuoshngsjNA" base_Element="_gqxqgrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqyRkbhSEe2UuoshngsjNA" base_Element="_gqxqgrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gqyRkrhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqy4oLhSEe2UuoshngsjNA" base_Element="_gqyRk7hSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqy4obhSEe2UuoshngsjNA" base_Element="_gqyRk7hSEe2UuoshngsjNA">
    <annotations xmi:id="_gqy4orhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gqzfsbhSEe2UuoshngsjNA" base_Element="_gqzfsLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gqzfsrhSEe2UuoshngsjNA" base_Element="_gqzfsLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq0GwLhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq0GwrhSEe2UuoshngsjNA" base_Element="_gq0GwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq0t0LhSEe2UuoshngsjNA" base_Element="_gq0GwbhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq0t0bhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq1U4LhSEe2UuoshngsjNA" base_Element="_gq0t0rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq1U4bhSEe2UuoshngsjNA" base_Element="_gq0t0rhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq1U4rhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq178LhSEe2UuoshngsjNA" base_Element="_gq1U47hSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq178bhSEe2UuoshngsjNA" base_Element="_gq1U47hSEe2UuoshngsjNA">
    <annotations xmi:id="_gq178rhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq2jALhSEe2UuoshngsjNA" base_Element="_gq1787hSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq3xILhSEe2UuoshngsjNA" base_Element="_gq1787hSEe2UuoshngsjNA">
    <annotations xmi:id="_gq3xIbhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq4YMLhSEe2UuoshngsjNA" base_Element="_gq3xIrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq4_QLhSEe2UuoshngsjNA" base_Element="_gq3xIrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq4_QbhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq4_Q7hSEe2UuoshngsjNA" base_Element="_gq4_QrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq5mULhSEe2UuoshngsjNA" base_Element="_gq4_QrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq5mUbhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq6NYLhSEe2UuoshngsjNA" base_Element="_gq5mUrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq6NYbhSEe2UuoshngsjNA" base_Element="_gq5mUrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq6NYrhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq60cLhSEe2UuoshngsjNA" base_Element="_gq6NY7hSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq60cbhSEe2UuoshngsjNA" base_Element="_gq6NY7hSEe2UuoshngsjNA">
    <annotations xmi:id="_gq60crhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq7bgbhSEe2UuoshngsjNA" base_Element="_gq7bgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq8CkLhSEe2UuoshngsjNA" base_Element="_gq7bgLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq8CkbhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq8poLhSEe2UuoshngsjNA" base_Element="_gq8CkrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq8pobhSEe2UuoshngsjNA" base_Element="_gq8CkrhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq8porhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq9QsLhSEe2UuoshngsjNA" base_Element="_gq8po7hSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq9QsbhSEe2UuoshngsjNA" base_Element="_gq8po7hSEe2UuoshngsjNA">
    <annotations xmi:id="_gq9QsrhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq93wbhSEe2UuoshngsjNA" base_Element="_gq93wLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq-e0LhSEe2UuoshngsjNA" base_Element="_gq93wLhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq-e0bhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq_F4LhSEe2UuoshngsjNA" base_Element="_gq-e0rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq_F4bhSEe2UuoshngsjNA" base_Element="_gq-e0rhSEe2UuoshngsjNA">
    <annotations xmi:id="_gq_F4rhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gq_s8LhSEe2UuoshngsjNA" base_Element="_gq_F47hSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_gq_s8bhSEe2UuoshngsjNA" base_Element="_gq_F47hSEe2UuoshngsjNA">
    <annotations xmi:id="_grAUALhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_grAUArhSEe2UuoshngsjNA" base_Element="_grAUAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_grA7ELhSEe2UuoshngsjNA" base_Element="_grAUAbhSEe2UuoshngsjNA">
    <annotations xmi:id="_grA7EbhSEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_grfcMLhSEe2UuoshngsjNA" base_Element="_gre1ILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_grh4crhSEe2UuoshngsjNA" dimensions="1" base_Element="_grhRYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_grjto7hSEe2UuoshngsjNA" dimensions="1" base_Element="_grjGkbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_grmJ47hSEe2UuoshngsjNA" base_Element="_grli0bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hHHoQLhSEe2UuoshngsjNA" base_Element="_hHFzELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hHJdcLhSEe2UuoshngsjNA" base_Element="_hHI2YLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hHKrkLhSEe2UuoshngsjNA" base_Element="_hHKEgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hHL5sLhSEe2UuoshngsjNA" base_Element="_hHKrkbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hHMgwLhSEe2UuoshngsjNA" base_Element="_hHL5sbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hHTOcLhSEe2UuoshngsjNA" base_Element="_hHSAUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hHUckLhSEe2UuoshngsjNA" base_Element="_hHSAUbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hHUckbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hHYuALhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_hHXf4rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hHajMLhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_hHZVELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hHgp0LhSEe2UuoshngsjNA" genericsValue="String, Activation" base_Element="_hHgCwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hHqa0LhSEe2UuoshngsjNA" base_Element="_hHpzwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hHyWobhSEe2UuoshngsjNA" base_Element="_hHxvkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hHzkwLhSEe2UuoshngsjNA" base_Element="_hHxvkLhSEe2UuoshngsjNA">
    <annotations xmi:id="_hHzkwbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hH65gLhSEe2UuoshngsjNA" base_Element="_hH6ScLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hH_K8LhSEe2UuoshngsjNA" base_Element="_hH-j4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hH_K8bhSEe2UuoshngsjNA" base_Element="_hH-j4LhSEe2UuoshngsjNA">
    <annotations xmi:id="_hH_K8rhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hIC1ULhSEe2UuoshngsjNA" base_Element="_hICOQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIEDcLhSEe2UuoshngsjNA" base_Element="_hIC1UbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIEqgLhSEe2UuoshngsjNA" base_Element="_hIEDcbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIF4oLhSEe2UuoshngsjNA" base_Element="_hIEqgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIGfsLhSEe2UuoshngsjNA" base_Element="_hIF4obhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIHt0LhSEe2UuoshngsjNA" base_Element="_hIHGwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIIU4LhSEe2UuoshngsjNA" base_Element="_hIHt0bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hINNYbhSEe2UuoshngsjNA" base_Element="_hIMmULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hIN0cLhSEe2UuoshngsjNA" base_Element="_hIMmULhSEe2UuoshngsjNA">
    <annotations xmi:id="_hIN0cbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hITUALhSEe2UuoshngsjNA" genericsValue="String, Flow" base_Element="_hISF4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hIUiILhSEe2UuoshngsjNA" genericsValue="Node, Activation" base_Element="_hITUAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIaBsLhSEe2UuoshngsjNA" base_Element="_hIZaoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIb24LhSEe2UuoshngsjNA" base_Element="_hIaowLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIcd8LhSEe2UuoshngsjNA" base_Element="_hIb24bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIdFALhSEe2UuoshngsjNA" base_Element="_hIcd8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIeTILhSEe2UuoshngsjNA" base_Element="_hIdsELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIe6MLhSEe2UuoshngsjNA" base_Element="_hIeTIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIgIULhSEe2UuoshngsjNA" base_Element="_hIfhQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIgvYLhSEe2UuoshngsjNA" base_Element="_hIgIUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hIjysLhSEe2UuoshngsjNA" base_Element="_hIjLoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hIkZwLhSEe2UuoshngsjNA" base_Element="_hIjysbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hIlA0LhSEe2UuoshngsjNA" base_Element="_hIjysbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hIlA0bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hImO8LhSEe2UuoshngsjNA" base_Element="_hIln4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hIm2ALhSEe2UuoshngsjNA" base_Element="_hImO8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hIndELhSEe2UuoshngsjNA" base_Element="_hImO8bhSEe2UuoshngsjNA">
    <annotations xmi:id="_hIndEbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hIoEILhSEe2UuoshngsjNA" base_Element="_hIndErhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hIpSQLhSEe2UuoshngsjNA" base_Element="_hIorMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hIpSQbhSEe2UuoshngsjNA" base_Element="_hIorMLhSEe2UuoshngsjNA">
    <annotations xmi:id="_hIpSQrhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hIqgYLhSEe2UuoshngsjNA" base_Element="_hIp5ULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hIrHcLhSEe2UuoshngsjNA" base_Element="_hIqgYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hIrugLhSEe2UuoshngsjNA" base_Element="_hIqgYbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hIrugbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hIs8oLhSEe2UuoshngsjNA" base_Element="_hIsVkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hIuKwLhSEe2UuoshngsjNA" base_Element="_hItjsLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hIux0LhSEe2UuoshngsjNA" base_Element="_hItjsLhSEe2UuoshngsjNA">
    <annotations xmi:id="_hIux0bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hIxOELhSEe2UuoshngsjNA" base_Element="_hIux0rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hIycMLhSEe2UuoshngsjNA" base_Element="_hIxOEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hIzDQLhSEe2UuoshngsjNA" base_Element="_hIxOEbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hIzDQbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hI1fgLhSEe2UuoshngsjNA" base_Element="_hI04cLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hI2GkLhSEe2UuoshngsjNA" base_Element="_hI1fgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hI3UsLhSEe2UuoshngsjNA" base_Element="_hI2toLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hI37wLhSEe2UuoshngsjNA" base_Element="_hI3UsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hI5J4LhSEe2UuoshngsjNA" base_Element="_hI37wbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hI6_ELhSEe2UuoshngsjNA" base_Element="_hI5w8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hI9bULhSEe2UuoshngsjNA" base_Element="_hI80QLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hI-pcLhSEe2UuoshngsjNA" base_Element="_hI-CYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hJDh8LhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hJCT0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hJFXILhSEe2UuoshngsjNA" base_Element="_hJEJALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hJOhELhSEe2UuoshngsjNA" base_Element="_hJNS8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hJPIILhSEe2UuoshngsjNA" base_Element="_hJNS8LhSEe2UuoshngsjNA">
    <annotations xmi:id="_hJPIIbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hJSygLhSEe2UuoshngsjNA" genericsValue="String, Node" base_Element="_hJSLcLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hJXrALhSEe2UuoshngsjNA" base_Element="_hJXD8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hJiDELhSEe2UuoshngsjNA" base_Element="_hJg08LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hJiqILhSEe2UuoshngsjNA" base_Element="_hJg08LhSEe2UuoshngsjNA">
    <annotations xmi:id="_hJiqIbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hJltcLhSEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_hJkfULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hJp-4bhSEe2UuoshngsjNA" base_Element="_hJpX0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hJql8LhSEe2UuoshngsjNA" base_Element="_hJpX0LhSEe2UuoshngsjNA">
    <annotations xmi:id="_hJql8bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hJwFgLhSEe2UuoshngsjNA" base_Element="_hJu3YLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hJxToLhSEe2UuoshngsjNA" base_Element="_hJwFgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hKKVMLhSEe2UuoshngsjNA" genericsValue="String,InstructionTimeSlot" base_Element="_hKJHELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hKP0wLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hKPNsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hKSRALhSEe2UuoshngsjNA" genericsValue="Double" base_Element="_hKRp8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hKUtQLhSEe2UuoshngsjNA" genericsValue="Double,ReliabilityRow" base_Element="_hKTfILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hKba8LhSEe2UuoshngsjNA" base_Element="_hKaz4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hKcpELhSEe2UuoshngsjNA" base_Element="_hKcCALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hLBQ0LhSEe2UuoshngsjNA" genericsValue="Activation,Row&lt;Activation>" base_Element="_hLApwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hLDtELhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hLCe8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hLFiQLhSEe2UuoshngsjNA" base_Element="_hLE7MLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hLKawLhSEe2UuoshngsjNA" base_Element="_hLJMoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hLLB0LhSEe2UuoshngsjNA" base_Element="_hLKawbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hLaSYLhSEe2UuoshngsjNA" base_Element="_hLZrULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hLa5cLhSEe2UuoshngsjNA" base_Element="_hLaSYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hLbggbhSEe2UuoshngsjNA" base_Element="_hLbggLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hLdVsLhSEe2UuoshngsjNA" base_Element="_hLcHkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hLej0LhSEe2UuoshngsjNA" base_Element="_hLdVsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hLo74LhSEe2UuoshngsjNA" base_Element="_hLoU0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hLqKALhSEe2UuoshngsjNA" base_Element="_hLo74bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hLqxELhSEe2UuoshngsjNA" base_Element="_hLo74bhSEe2UuoshngsjNA">
    <annotations xmi:id="_hLqxEbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hLrYILhSEe2UuoshngsjNA" base_Element="_hLqxErhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hLrYIbhSEe2UuoshngsjNA" base_Element="_hLqxErhSEe2UuoshngsjNA">
    <annotations xmi:id="_hLr_MLhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hLsmQLhSEe2UuoshngsjNA" base_Element="_hLr_MbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hLsmQ7hSEe2UuoshngsjNA" base_Element="_hLsmQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hLtNULhSEe2UuoshngsjNA" base_Element="_hLsmQbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hLtNUbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hLvCgLhSEe2UuoshngsjNA" base_Element="_hLtNUrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hLvpkLhSEe2UuoshngsjNA" base_Element="_hLvCgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hLvpkbhSEe2UuoshngsjNA" base_Element="_hLvCgbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hLvpkrhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hL1JILhSEe2UuoshngsjNA" base_Element="_hLwQoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hL1JI7hSEe2UuoshngsjNA" base_Element="_hL1JIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hL1JJLhSEe2UuoshngsjNA" base_Element="_hL1JIbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hL1JJbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hL2-ULhSEe2UuoshngsjNA" base_Element="_hL1JJrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hL3lYLhSEe2UuoshngsjNA" base_Element="_hL2-UbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hL3lYbhSEe2UuoshngsjNA" base_Element="_hL2-UbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hL3lYrhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hL4zgLhSEe2UuoshngsjNA" base_Element="_hL4McLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hL5akLhSEe2UuoshngsjNA" base_Element="_hL4zgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hL5akbhSEe2UuoshngsjNA" base_Element="_hL4zgbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hL5akrhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hMIEELhSEe2UuoshngsjNA" base_Element="_hMGO4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hMIrILhSEe2UuoshngsjNA" base_Element="_hMIEEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hMNjoLhSEe2UuoshngsjNA" base_Element="_hMM8kLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hMNjobhSEe2UuoshngsjNA" base_Element="_hMM8kLhSEe2UuoshngsjNA">
    <annotations xmi:id="_hMNjorhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hMOxwLhSEe2UuoshngsjNA" base_Element="_hMOKsLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hMOxwbhSEe2UuoshngsjNA" base_Element="_hMOKsLhSEe2UuoshngsjNA">
    <annotations xmi:id="_hMOxwrhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hMP_4LhSEe2UuoshngsjNA" base_Element="_hMPY0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hMQm8LhSEe2UuoshngsjNA" base_Element="_hMP_4bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hMROALhSEe2UuoshngsjNA" base_Element="_hMP_4bhSEe2UuoshngsjNA">
    <annotations xmi:id="_hMROAbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hMR1ELhSEe2UuoshngsjNA" base_Element="_hMROArhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hMTDMLhSEe2UuoshngsjNA" base_Element="_hMScILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hMTDMbhSEe2UuoshngsjNA" base_Element="_hMScILhSEe2UuoshngsjNA">
    <annotations xmi:id="_hMTqQLhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hMU4YLhSEe2UuoshngsjNA" base_Element="_hMTqQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hMWGgLhSEe2UuoshngsjNA" base_Element="_hMU4YbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hMWtkLhSEe2UuoshngsjNA" base_Element="_hMU4YbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hMWtkbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hMX7sLhSEe2UuoshngsjNA" base_Element="_hMXUoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hMZJ0LhSEe2UuoshngsjNA" base_Element="_hMX7sbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hMZw4LhSEe2UuoshngsjNA" base_Element="_hMX7sbhSEe2UuoshngsjNA">
    <annotations xmi:id="_hMZw4bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hMaX8bhSEe2UuoshngsjNA" base_Element="_hMZw4rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hMa_ALhSEe2UuoshngsjNA" base_Element="_hMZw4rhSEe2UuoshngsjNA">
    <annotations xmi:id="_hMa_AbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hMbmErhSEe2UuoshngsjNA" base_Element="_hMbmELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hMcNILhSEe2UuoshngsjNA" base_Element="_hMbmELhSEe2UuoshngsjNA">
    <annotations xmi:id="_hMcNIbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hMdbQLhSEe2UuoshngsjNA" base_Element="_hMcNIrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hMeCULhSEe2UuoshngsjNA" base_Element="_hMcNIrhSEe2UuoshngsjNA">
    <annotations xmi:id="_hMeCUbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hMhFoLhSEe2UuoshngsjNA" base_Element="_hMf3gLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hMhssLhSEe2UuoshngsjNA" base_Element="_hMhFobhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hMi60LhSEe2UuoshngsjNA" base_Element="_hMiTwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hMmlMLhSEe2UuoshngsjNA" base_Element="_hMlXELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hMnMQLhSEe2UuoshngsjNA" base_Element="_hMmlMbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hMoaYLhSEe2UuoshngsjNA" base_Element="_hMnMQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hMrdsLhSEe2UuoshngsjNA" genericsValue="Integer" base_Element="_hMqPkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hNbroLhSEe2UuoshngsjNA" genericsValue="T, E" base_Element="_hNbEkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hNdg0LhSEe2UuoshngsjNA" base_Element="_hNcSsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hNeH4LhSEe2UuoshngsjNA" genericsValue="Activation" base_Element="_hNdg0bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hNhyQLhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_hNf9EbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hNjncLhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hNiZUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hNk1kLhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hNjncrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hNmqwLhSEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_hNlcobhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hNq8MLhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hNpuELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hNy4ALhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_hNumkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hNzfELhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hNvNoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hN6MwLhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hN4-oLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hN8B8LhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hN6MwrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hN-eMLhSEe2UuoshngsjNA" genericsValue="Activation" base_Element="_hN9QELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hOA6cLhSEe2UuoshngsjNA" base_Element="_hN_sULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hOBhgLhSEe2UuoshngsjNA" genericsValue="Node" base_Element="_hOATYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hOBhgbhSEe2UuoshngsjNA" base_Element="_hN_sULhSEe2UuoshngsjNA">
    <annotations xmi:id="_hOBhgrhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hODWsLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hOCIkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hOD9wLhSEe2UuoshngsjNA" base_Element="_hODWsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hOFL4bhSEe2UuoshngsjNA" base_Element="_hOEk0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hOFy8LhSEe2UuoshngsjNA" base_Element="_hOEk0LhSEe2UuoshngsjNA">
    <annotations xmi:id="_hOFy8bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hOHBELhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hOGaALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hOI2QLhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_hOHoILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hOMgoLhSEe2UuoshngsjNA" genericsValue="Flow" base_Element="_hOLSgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hOPj8LhSEe2UuoshngsjNA" genericsValue="Node" base_Element="_hOOV0rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hORZILhSEe2UuoshngsjNA" genericsValue="Integer" base_Element="_hOQLAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hOYG0LhSEe2UuoshngsjNA" base_Element="_hOXfwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hOcYQLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hObxMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hOdmYbhSEe2UuoshngsjNA" base_Element="_hOc_ULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hOeNcLhSEe2UuoshngsjNA" base_Element="_hOc_ULhSEe2UuoshngsjNA">
    <annotations xmi:id="_hOeNcbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hOfbkLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hOe0gLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hOgpsrhSEe2UuoshngsjNA" base_Element="_hOgCoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hOhQwLhSEe2UuoshngsjNA" base_Element="_hOgCoLhSEe2UuoshngsjNA">
    <annotations xmi:id="_hOhQwbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hOie4LhSEe2UuoshngsjNA" genericsValue="Node" base_Element="_hOh30LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hOliMLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hOk7ILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hOnXYLhSEe2UuoshngsjNA" base_Element="_hOmJQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hOn-cLhSEe2UuoshngsjNA" base_Element="_hOmJQLhSEe2UuoshngsjNA">
    <annotations xmi:id="_hOn-cbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hOrBwLhSEe2UuoshngsjNA" genericsValue="Node" base_Element="_hOpzorhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_hOsP4bhSEe2UuoshngsjNA" base_Element="_hOro0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hOs28LhSEe2UuoshngsjNA" genericsValue="Node" base_Element="_hOro0bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hOwhULhSEe2UuoshngsjNA" base_Element="_hOvTMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hO2A4LhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hO0ywLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hO3PALhSEe2UuoshngsjNA" base_Element="_hO2n8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hO3PAbhSEe2UuoshngsjNA" base_Element="_hO2n8LhSEe2UuoshngsjNA">
    <annotations xmi:id="_hO32ELhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_hO5EMLhSEe2UuoshngsjNA" base_Element="_hO4dILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hPAY8LhSEe2UuoshngsjNA" base_Element="_hO_x4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hPDcQbhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hPDcQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hPFRcLhSEe2UuoshngsjNA" base_Element="_hPEqYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hPF4gLhSEe2UuoshngsjNA" base_Element="_hPEqYLhSEe2UuoshngsjNA">
    <annotations xmi:id="_hPF4gbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hPMmMLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hPL_ILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hPQ3oLhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hPPpgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hPSs0LhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hPResbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hPTT4LhSEe2UuoshngsjNA" genericsValue="T" base_Element="_hPResrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hPWXMLhSEe2UuoshngsjNA" genericsValue="E" base_Element="_hPVwIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hPYMYLhSEe2UuoshngsjNA" base_Element="_hPXlULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hPZagLhSEe2UuoshngsjNA" base_Element="_hPYzdrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_hPcd0bhSEe2UuoshngsjNA" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_hPb2wbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hPcd0rhSEe2UuoshngsjNA" base_Element="_hPb2wbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hPjLgbhSEe2UuoshngsjNA" base_Element="_hPjLgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hPoEAbhSEe2UuoshngsjNA" base_Element="_hPnc8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hPorELhSEe2UuoshngsjNA" genericsValue="Node" base_Element="_hPnc8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_hPpSILhSEe2UuoshngsjNA" base_Element="_hPnc8LhSEe2UuoshngsjNA">
    <annotations xmi:id="_hPpSIbhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_hP4isLhSEe2UuoshngsjNA" genericsValue="Integer" base_Element="_hP3UkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hQIaULhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hQHzQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hQJocLhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_hQJBYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hQK2kLhSEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_hQKPgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQQWILhSEe2UuoshngsjNA" base_Element="_hQPvEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQRkQLhSEe2UuoshngsjNA" base_Element="_hQQ9MLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQSLULhSEe2UuoshngsjNA" base_Element="_hQRkQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQUAgLhSEe2UuoshngsjNA" base_Element="_hQTZcrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQUnkLhSEe2UuoshngsjNA" base_Element="_hQUAgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQXq4LhSEe2UuoshngsjNA" base_Element="_hQWcwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQY5ALhSEe2UuoshngsjNA" base_Element="_hQYR8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hQaHILhSEe2UuoshngsjNA" genericsValue="ChannelSet" base_Element="_hQZgELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQauMLhSEe2UuoshngsjNA" base_Element="_hQZgELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hQcjYLhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_hQb8UbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQdKcLhSEe2UuoshngsjNA" base_Element="_hQb8UbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQdxgbhSEe2UuoshngsjNA" base_Element="_hQdxgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hQfmsLhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hQeYkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQgNwLhSEe2UuoshngsjNA" base_Element="_hQeYkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQhb4LhSEe2UuoshngsjNA" base_Element="_hQgNwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQiqALhSEe2UuoshngsjNA" base_Element="_hQiC8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQj4IbhSEe2UuoshngsjNA" base_Element="_hQj4ILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQlGQLhSEe2UuoshngsjNA" base_Element="_hQkfMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQltULhSEe2UuoshngsjNA" base_Element="_hQlGQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQm7cLhSEe2UuoshngsjNA" base_Element="_hQmUYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQu3QLhSEe2UuoshngsjNA" base_Element="_hQuQMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQ52YbhSEe2UuoshngsjNA" base_Element="_hQ5PULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQ6dcLhSEe2UuoshngsjNA" base_Element="_hQ52YrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQ7rkLhSEe2UuoshngsjNA" base_Element="_hQ6dcbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hQ85sLhSEe2UuoshngsjNA" genericsValue="Node" base_Element="_hQ8SoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQ9gwLhSEe2UuoshngsjNA" base_Element="_hQ8SoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hQ-u4LhSEe2UuoshngsjNA" genericsValue="Integer" base_Element="_hQ9gwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hQ-u4bhSEe2UuoshngsjNA" base_Element="_hQ9gwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hRBLILhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_hQ_V8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRByMLhSEe2UuoshngsjNA" base_Element="_hQ_V8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRCZQLhSEe2UuoshngsjNA" base_Element="_hRByMbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRDAULhSEe2UuoshngsjNA" base_Element="_hRCZQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRGDoLhSEe2UuoshngsjNA" base_Element="_hRFckrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRGqsLhSEe2UuoshngsjNA" base_Element="_hRGDobhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRHRwLhSEe2UuoshngsjNA" base_Element="_hRGqsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRH40LhSEe2UuoshngsjNA" base_Element="_hRHRwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRIf4LhSEe2UuoshngsjNA" base_Element="_hRH40bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRJG8LhSEe2UuoshngsjNA" base_Element="_hRIf4bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRKVELhSEe2UuoshngsjNA" base_Element="_hRJuALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRLjMLhSEe2UuoshngsjNA" base_Element="_hRK8ILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRMxULhSEe2UuoshngsjNA" base_Element="_hRLjMbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRN_cLhSEe2UuoshngsjNA" base_Element="_hRNYYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hROmgLhSEe2UuoshngsjNA" base_Element="_hRN_crhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRPNkLhSEe2UuoshngsjNA" base_Element="_hROmgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRRCwrhSEe2UuoshngsjNA" base_Element="_hRRCwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRRp0bhSEe2UuoshngsjNA" base_Element="_hRRp0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRSQ4bhSEe2UuoshngsjNA" base_Element="_hRSQ4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRS38bhSEe2UuoshngsjNA" base_Element="_hRS38LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRTfALhSEe2UuoshngsjNA" base_Element="_hRS38rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRUGELhSEe2UuoshngsjNA" base_Element="_hRTfAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hRVUMLhSEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_hRUGEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRV7QLhSEe2UuoshngsjNA" base_Element="_hRUGEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRXwcLhSEe2UuoshngsjNA" base_Element="_hRXJYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRYXgLhSEe2UuoshngsjNA" base_Element="_hRXwcbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hRba0LhSEe2UuoshngsjNA" genericsValue="Edge" base_Element="_hRaMsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRhhcLhSEe2UuoshngsjNA" base_Element="_hRg6YLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRiIgbhSEe2UuoshngsjNA" base_Element="_hRiIgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRjWoLhSEe2UuoshngsjNA" base_Element="_hRivkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRj9srhSEe2UuoshngsjNA" base_Element="_hRjWobhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRkkwLhSEe2UuoshngsjNA" base_Element="_hRj9s7hSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hRly4LhSEe2UuoshngsjNA" genericsValue="Activation" base_Element="_hRkkwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRmZ8LhSEe2UuoshngsjNA" base_Element="_hRkkwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hRnBALhSEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_hRmZ8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRnoELhSEe2UuoshngsjNA" base_Element="_hRmZ8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRo2MLhSEe2UuoshngsjNA" base_Element="_hRnoEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRr5gbhSEe2UuoshngsjNA" base_Element="_hRr5gLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRsgkbhSEe2UuoshngsjNA" base_Element="_hRsgkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRtHobhSEe2UuoshngsjNA" base_Element="_hRtHoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRtusbhSEe2UuoshngsjNA" base_Element="_hRtusLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRu80LhSEe2UuoshngsjNA" base_Element="_hRuVwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRwK8LhSEe2UuoshngsjNA" base_Element="_hRvj4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRwyALhSEe2UuoshngsjNA" base_Element="_hRwK8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRxZELhSEe2UuoshngsjNA" base_Element="_hRwyAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRyAILhSEe2UuoshngsjNA" base_Element="_hRxZEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRynMLhSEe2UuoshngsjNA" base_Element="_hRyAIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hRz1ULhSEe2UuoshngsjNA" base_Element="_hRynMbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hR0cYLhSEe2UuoshngsjNA" base_Element="_hRz1UbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hR1DcLhSEe2UuoshngsjNA" base_Element="_hR0cYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hR4GwbhSEe2UuoshngsjNA" base_Element="_hR4GwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hR4t0bhSEe2UuoshngsjNA" base_Element="_hR4t0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hR5U4LhSEe2UuoshngsjNA" base_Element="_hR4t0rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hR8_QLhSEe2UuoshngsjNA" base_Element="_hR8YMrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hR9mULhSEe2UuoshngsjNA" base_Element="_hR8_QbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hR_bgLhSEe2UuoshngsjNA" base_Element="_hR-0cbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSACkLhSEe2UuoshngsjNA" base_Element="_hR_bgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSDF4bhSEe2UuoshngsjNA" base_Element="_hSDF4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSE7EbhSEe2UuoshngsjNA" base_Element="_hSE7ELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSFiILhSEe2UuoshngsjNA" base_Element="_hSE7ErhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSGJMLhSEe2UuoshngsjNA" base_Element="_hSFiIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hSIlcLhSEe2UuoshngsjNA" genericsValue="Integer" base_Element="_hSHXULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSJMgLhSEe2UuoshngsjNA" base_Element="_hSHXULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hSJzkLhSEe2UuoshngsjNA" genericsValue="SchedulableObject" base_Element="_hSJMgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSNd8LhSEe2UuoshngsjNA" base_Element="_hSM24LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSOFALhSEe2UuoshngsjNA" base_Element="_hSNd8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSOsEbhSEe2UuoshngsjNA" base_Element="_hSOFAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSPTIbhSEe2UuoshngsjNA" base_Element="_hSPTILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSP6MLhSEe2UuoshngsjNA" base_Element="_hSPTIrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSQhQLhSEe2UuoshngsjNA" base_Element="_hSP6MbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSRIULhSEe2UuoshngsjNA" base_Element="_hSQhQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSS9gLhSEe2UuoshngsjNA" base_Element="_hSRvYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSX2ALhSEe2UuoshngsjNA" base_Element="_hSXO8LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSYdELhSEe2UuoshngsjNA" base_Element="_hSX2AbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSZEILhSEe2UuoshngsjNA" base_Element="_hSYdEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSZEIrhSEe2UuoshngsjNA" base_Element="_hSZEIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSZrMbhSEe2UuoshngsjNA" base_Element="_hSZrMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSaSQbhSEe2UuoshngsjNA" base_Element="_hSaSQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSa5UrhSEe2UuoshngsjNA" base_Element="_hSa5ULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hScHcLhSEe2UuoshngsjNA" base_Element="_hSbgYLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hScugbhSEe2UuoshngsjNA" base_Element="_hScHcbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSd8oLhSEe2UuoshngsjNA" base_Element="_hSdVkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSejsbhSEe2UuoshngsjNA" base_Element="_hSejsLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSfKwbhSEe2UuoshngsjNA" base_Element="_hSfKwLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSfx0bhSEe2UuoshngsjNA" base_Element="_hSfx0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_hSgY47hSEe2UuoshngsjNA" dimensions="2" base_Element="_hSgY4bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSg_8LhSEe2UuoshngsjNA" base_Element="_hSgY4bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSkDQbhSEe2UuoshngsjNA" base_Element="_hSkDQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSkqULhSEe2UuoshngsjNA" base_Element="_hSkDQrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSlRYLhSEe2UuoshngsjNA" base_Element="_hSkqUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSl4cLhSEe2UuoshngsjNA" base_Element="_hSlRYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSnGkLhSEe2UuoshngsjNA" base_Element="_hSmfgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSntobhSEe2UuoshngsjNA" base_Element="_hSntoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSoUsbhSEe2UuoshngsjNA" base_Element="_hSoUsLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSo7wbhSEe2UuoshngsjNA" base_Element="_hSo7wLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSpi0bhSEe2UuoshngsjNA" base_Element="_hSpi0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSqJ4bhSEe2UuoshngsjNA" base_Element="_hSqJ4LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSqw8LhSEe2UuoshngsjNA" base_Element="_hSqJ4rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSrYAbhSEe2UuoshngsjNA" base_Element="_hSrYALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSr_ELhSEe2UuoshngsjNA" base_Element="_hSrYArhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSsmILhSEe2UuoshngsjNA" base_Element="_hSr_EbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hStNMLhSEe2UuoshngsjNA" base_Element="_hSsmIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSt0QLhSEe2UuoshngsjNA" base_Element="_hStNMbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSubULhSEe2UuoshngsjNA" base_Element="_hSt0QbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSubUrhSEe2UuoshngsjNA" base_Element="_hSubUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSz64bhSEe2UuoshngsjNA" base_Element="_hSzT0rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS1JAbhSEe2UuoshngsjNA" base_Element="_hS1JALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hS2XILhSEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_hS1wELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS2XIbhSEe2UuoshngsjNA" base_Element="_hS1wELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS2-MbhSEe2UuoshngsjNA" base_Element="_hS2-MLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS4zYLhSEe2UuoshngsjNA" base_Element="_hS4MULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS5acLhSEe2UuoshngsjNA" base_Element="_hS4zYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS5acrhSEe2UuoshngsjNA" base_Element="_hS5acbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS6BgLhSEe2UuoshngsjNA" base_Element="_hS5ac7hSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS7PoLhSEe2UuoshngsjNA" base_Element="_hS6okLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS7PorhSEe2UuoshngsjNA" base_Element="_hS7PobhSEe2UuoshngsjNA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_hS8dwLhSEe2UuoshngsjNA" name="getNumChannels" method="_hVgCgLhSEe2UuoshngsjNA">
      <ownedParameter xmi:id="_hS8dwbhSEe2UuoshngsjNA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_hS9E0LhSEe2UuoshngsjNA" base_Element="_hS8dwLhSEe2UuoshngsjNA">
    <annotations xmi:id="_hS9E0bhSEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS9r4LhSEe2UuoshngsjNA" base_Element="_hS9E0rhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS9r47hSEe2UuoshngsjNA" base_Element="_hS9r4bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS_hELhSEe2UuoshngsjNA" base_Element="_hS-6A7hSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hTAIIbhSEe2UuoshngsjNA" base_Element="_hTAIILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hTAvMLhSEe2UuoshngsjNA" base_Element="_hTAIIrhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hTB9ULhSEe2UuoshngsjNA" base_Element="_hTBWQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hTCkYLhSEe2UuoshngsjNA" base_Element="_hTB9UbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hTEZkLhSEe2UuoshngsjNA" base_Element="_hTDLcLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hTFAoLhSEe2UuoshngsjNA" base_Element="_hTEZkbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hTIrArhSEe2UuoshngsjNA" base_Element="_hTIrALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hTJ5ILhSEe2UuoshngsjNA" base_Element="_hTJSErhSEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hTLHQLhSEe2UuoshngsjNA" base_Element="_hTKgMbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hTLuULhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hTLHQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_hTM8cLhSEe2UuoshngsjNA" genericsValue="String" base_Element="_hTMVYLhSEe2UuoshngsjNA"/>
  <uml:OpaqueBehavior xmi:id="_hVgCgLhSEe2UuoshngsjNA" name="getNumChannels" specification="_hS8dwLhSEe2UuoshngsjNA">
    <ownedParameter xmi:id="_hVgCgbhSEe2UuoshngsjNA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_hW_QQLhSEe2UuoshngsjNA" base_Element="_hW-CILhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXAeYLhSEe2UuoshngsjNA" base_Element="_hW_3ULhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXBFcLhSEe2UuoshngsjNA" base_Element="_hXAeYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXCTkLhSEe2UuoshngsjNA" base_Element="_hXBsgLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXDhsLhSEe2UuoshngsjNA" base_Element="_hXCTkbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXEv0LhSEe2UuoshngsjNA" base_Element="_hXDhsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXFW4LhSEe2UuoshngsjNA" base_Element="_hXEv0bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXGlALhSEe2UuoshngsjNA" base_Element="_hXF98LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXHzILhSEe2UuoshngsjNA" base_Element="_hXGlAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXIaMLhSEe2UuoshngsjNA" base_Element="_hXHzIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXJoULhSEe2UuoshngsjNA" base_Element="_hXJBQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXKPYLhSEe2UuoshngsjNA" base_Element="_hXJoUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXLdgLhSEe2UuoshngsjNA" base_Element="_hXK2cLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXMEkLhSEe2UuoshngsjNA" base_Element="_hXLdgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXNSsLhSEe2UuoshngsjNA" base_Element="_hXMroLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXOg0LhSEe2UuoshngsjNA" base_Element="_hXN5wLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXPu8LhSEe2UuoshngsjNA" base_Element="_hXOg0bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXQWALhSEe2UuoshngsjNA" base_Element="_hXPu8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXRkILhSEe2UuoshngsjNA" base_Element="_hXQ9ELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXSyQLhSEe2UuoshngsjNA" base_Element="_hXRkIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXTZULhSEe2UuoshngsjNA" base_Element="_hXSyQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXUncLhSEe2UuoshngsjNA" base_Element="_hXTZUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXVOgLhSEe2UuoshngsjNA" base_Element="_hXUncbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXV1kLhSEe2UuoshngsjNA" base_Element="_hXVOgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXXqwLhSEe2UuoshngsjNA" base_Element="_hXWcoLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXYR0LhSEe2UuoshngsjNA" base_Element="_hXXqwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXZf8LhSEe2UuoshngsjNA" base_Element="_hXY44LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXaHALhSEe2UuoshngsjNA" base_Element="_hXZf8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXauELhSEe2UuoshngsjNA" base_Element="_hXaHAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXcjQLhSEe2UuoshngsjNA" base_Element="_hXauEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXdKULhSEe2UuoshngsjNA" base_Element="_hXcjQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXeYcLhSEe2UuoshngsjNA" base_Element="_hXdKUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXfmkLhSEe2UuoshngsjNA" base_Element="_hXeYcbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXgNoLhSEe2UuoshngsjNA" base_Element="_hXfmkbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXhbwLhSEe2UuoshngsjNA" base_Element="_hXgNobhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXip4LhSEe2UuoshngsjNA" base_Element="_hXiC0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXj4ALhSEe2UuoshngsjNA" base_Element="_hXip4bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXkfELhSEe2UuoshngsjNA" base_Element="_hXj4AbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXltMLhSEe2UuoshngsjNA" base_Element="_hXkfEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXm7ULhSEe2UuoshngsjNA" base_Element="_hXltMbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXniYLhSEe2UuoshngsjNA" base_Element="_hXm7UbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXowgLhSEe2UuoshngsjNA" base_Element="_hXniYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXpXkLhSEe2UuoshngsjNA" base_Element="_hXowgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXqlsLhSEe2UuoshngsjNA" base_Element="_hXpXkbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXrz0LhSEe2UuoshngsjNA" base_Element="_hXqlsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXtB8LhSEe2UuoshngsjNA" base_Element="_hXrz0bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXtpALhSEe2UuoshngsjNA" base_Element="_hXtB8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXu3ILhSEe2UuoshngsjNA" base_Element="_hXtpAbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXveMLhSEe2UuoshngsjNA" base_Element="_hXu3IbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXwsULhSEe2UuoshngsjNA" base_Element="_hXwFQLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXxTYLhSEe2UuoshngsjNA" base_Element="_hXwsUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXyhgLhSEe2UuoshngsjNA" base_Element="_hXx6cLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hXzIkLhSEe2UuoshngsjNA" base_Element="_hXyhgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX0WsLhSEe2UuoshngsjNA" base_Element="_hXzIkbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX09wLhSEe2UuoshngsjNA" base_Element="_hX0WsbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX2y8LhSEe2UuoshngsjNA" base_Element="_hX1k0LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX3aALhSEe2UuoshngsjNA" base_Element="_hX2y8bhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX4oILhSEe2UuoshngsjNA" base_Element="_hX4BELhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX5PMLhSEe2UuoshngsjNA" base_Element="_hX4oIbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX6dULhSEe2UuoshngsjNA" base_Element="_hX52QLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX7EYLhSEe2UuoshngsjNA" base_Element="_hX6dUbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX8SgLhSEe2UuoshngsjNA" base_Element="_hX7EYbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX85kLhSEe2UuoshngsjNA" base_Element="_hX8SgbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX9goLhSEe2UuoshngsjNA" base_Element="_hX85kbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX-uwLhSEe2UuoshngsjNA" base_Element="_hX-HsLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hX_V0LhSEe2UuoshngsjNA" base_Element="_hX-uwbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hYAj8LhSEe2UuoshngsjNA" base_Element="_hX_84LhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hYByELhSEe2UuoshngsjNA" base_Element="_hYBLALhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hYCZILhSEe2UuoshngsjNA" base_Element="_hYByEbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hYDnQLhSEe2UuoshngsjNA" base_Element="_hYDAMLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hYEOULhSEe2UuoshngsjNA" base_Element="_hYDnQbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hYFccLhSEe2UuoshngsjNA" base_Element="_hYE1YLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hYGDgLhSEe2UuoshngsjNA" base_Element="_hYFccbhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hYHRoLhSEe2UuoshngsjNA" base_Element="_hYGqkLhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_hYH4sLhSEe2UuoshngsjNA" base_Element="_hYHRobhSEe2UuoshngsjNA"/>
  <UMLLabProfile:Patch xmi:id="_loqg0LhSEe2UuoshngsjNA" base_Element="_ghADcLhSEe2UuoshngsjNA" patchText="@@ -367,26 +367,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_lotkILhSEe2UuoshngsjNA" base_Element="_gjYCALhSEe2UuoshngsjNA" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_louyQLhSEe2UuoshngsjNA" base_Element="_goZr8LhSEe2UuoshngsjNA" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_lowAYLhSEe2UuoshngsjNA" base_Element="_gotN8LhSEe2UuoshngsjNA" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_lozqwLhSEe2UuoshngsjNA" base_Element="_gpVgELhSEe2UuoshngsjNA" patchText="@@ -3991,22 +3991,25 @@&#xA; .%0D%0A */%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
</xmi:XMI>
