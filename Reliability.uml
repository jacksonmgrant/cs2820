<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_QTH_QLhVEe2UuoshngsjNA" name="Reliability">
    <eAnnotations xmi:id="_QbsFYLhVEe2UuoshngsjNA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_QbsscLhVEe2UuoshngsjNA" source="codegen">
        <details xmi:id="_QbsscbhVEe2UuoshngsjNA" key="codegenDirectory" value="/cs2820/src"/>
        <details xmi:id="_SpkSMLhVEe2UuoshngsjNA" key="AssociatedSourceCode" value="/cs2820/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820/src/edu/uiowa/cs/warp/Edge.java;3274728775/1;/cs2820/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820/src/edu/uiowa/cs/warp/Flow.java;559645871/1;/cs2820/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820/src/edu/uiowa/cs/warp/Program.java;2750337732/1;/cs2820/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820/src/edu/uiowa/cs/warp/ProgramVisualization.java;1316782014/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;1636731781/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820/src/edu/uiowa/cs/warp/Row.java;1905091962/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2803977720/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820/src/edu/uiowa/cs/warp/Warp.java;1531133216/1;/cs2820/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadDescription.java;3772857374/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadListener.java;3333188147/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadTest.java;2658600754/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoad.java;2147536034/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_ERkUELhkEe2vO_8xu6TRjQ" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_ERk7ILhkEe2vO_8xu6TRjQ" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_ERk7IbhkEe2vO_8xu6TRjQ" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_ERk7IrhkEe2vO_8xu6TRjQ" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="false"/>
          <details xmi:id="_ERk7I7hkEe2vO_8xu6TRjQ" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_RcuroLhVEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_RcurobhVEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_RcurorhVEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_Rcuro7hVEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_RcurpLhVEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_RcurpbhVEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_RcurprhVEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_RcvSsLhVEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_RcvSsbhVEe2UuoshngsjNA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_RcNuQLhVEe2UuoshngsjNA" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_RcNuQbhVEe2UuoshngsjNA" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_RcNuQrhVEe2UuoshngsjNA" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_RcOVUrhVEe2UuoshngsjNA" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_Rc3OgLhVEe2UuoshngsjNA" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_R023wbhVEe2UuoshngsjNA" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_RdrG0LhVEe2UuoshngsjNA" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_R1tMULhVEe2UuoshngsjNA" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_RduKILhVEe2UuoshngsjNA" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_R1vBgLhVEe2UuoshngsjNA" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_R1vBgrhVEe2UuoshngsjNA" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RfrR8LhVEe2UuoshngsjNA" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_R2pAcLhVEe2UuoshngsjNA" general="_R0GCwLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R39PELhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R39PEbhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5bOsLhVEe2UuoshngsjNA" name="AbstractMap" specification="_RfsgELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5bOsbhVEe2UuoshngsjNA" type="_RfrR8LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RfsgELhVEe2UuoshngsjNA" name="AbstractMap" method="_R5bOsLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RfsgEbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RfsgErhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RfsgE7hVEe2UuoshngsjNA" type="_RfrR8LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RftHILhVEe2UuoshngsjNA" name="Activation">
              <generalization xmi:id="_R0N-k7hVEe2UuoshngsjNA" general="_RiIwELhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R392ILhVEe2UuoshngsjNA" name="coordinators" type="_R0Gp0LhVEe2UuoshngsjNA" isReadOnly="true" association="_R6vdULhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R3-dMbhVEe2UuoshngsjNA" name="edges" type="_R0Gp0LhVEe2UuoshngsjNA" isReadOnly="true" association="_R6vdU7hVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R3_EQLhVEe2UuoshngsjNA" name="additionalScheduleTimes" type="_R0Gp0LhVEe2UuoshngsjNA" isReadOnly="true" association="_R6wEYbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R3_EQrhVEe2UuoshngsjNA" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3_rULhVEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R2q1obhVEe2UuoshngsjNA" client="_RftHILhVEe2UuoshngsjNA" supplier="_R2qOkbhVEe2UuoshngsjNA" contract="_R2qOkbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5b1wLhVEe2UuoshngsjNA" name="Activation" specification="_RftuMLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5b1wbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5b1wrhVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5b1w7hVEe2UuoshngsjNA" name="Activation" specification="_R0JtILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5b1xLhVEe2UuoshngsjNA" name="elem" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5b1xbhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5b1xrhVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5b1x7hVEe2UuoshngsjNA" name="clone" specification="_RfuVQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5b1yLhVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5b1ybhVEe2UuoshngsjNA" name="getEdgesByReleaseTime" specification="_Rfu8UrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5b1yrhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5b1y7hVEe2UuoshngsjNA" name="getEdgesByLatestReleaseTime" specification="_RfvjYbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5b1zLhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5b1zbhVEe2UuoshngsjNA" name="getEdgesByPeriod" specification="_RfwKcbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5b1zrhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5b1z7hVEe2UuoshngsjNA" name="getEdgesByDeadline" specification="_RfwxgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5b10LhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5cc0LhVEe2UuoshngsjNA" name="getEdgesByPriority" specification="_RfxYkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5cc0bhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5cc0rhVEe2UuoshngsjNA" name="addEdges" specification="_R2sDwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5cc07hVEe2UuoshngsjNA" name="edges" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5cc1LhVEe2UuoshngsjNA" name="addEdge" specification="_R0K7Q7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5cc1bhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5cc1rhVEe2UuoshngsjNA" name="increaseEdgePhases" specification="_Rfx_oLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5cc17hVEe2UuoshngsjNA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5cc2LhVEe2UuoshngsjNA" name="updatePriorityAndRelease" specification="_RfzNwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5cc2bhVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5cc2rhVEe2UuoshngsjNA" name="addConflict" specification="_RfzNwrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5cc27hVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5cc3LhVEe2UuoshngsjNA" name="addConflicts" specification="_R2sq0bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5cc3bhVEe2UuoshngsjNA" name="conflicts" type="_R0IfAbhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5cc3rhVEe2UuoshngsjNA" name="addCoordinator" specification="_Rfz00LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5cc37hVEe2UuoshngsjNA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5cc4LhVEe2UuoshngsjNA" name="addCoordinators" specification="_R2tR4bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5cc4bhVEe2UuoshngsjNA" name="coordinators" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dD4LhVEe2UuoshngsjNA" name="addScheduleTimes" specification="_R2ugALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dD4bhVEe2UuoshngsjNA" name="scheduleTime" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dD4rhVEe2UuoshngsjNA" name="getNextScheduleTime" specification="_Rfz00rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dD47hVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5dD5LhVEe2UuoshngsjNA" type="_RilcALhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dD5bhVEe2UuoshngsjNA" name="getMatchingEndTime" specification="_Rf0b4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dD5rhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5dD57hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dD6LhVEe2UuoshngsjNA" name="getNextStartTime" specification="_Rf1C8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dD6bhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5dD6rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dD67hVEe2UuoshngsjNA" name="getNextEndTime" specification="_Rf1C87hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dD7LhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5dD7bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dD7rhVEe2UuoshngsjNA" name="getNumEdges" specification="_Rf1qALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dD77hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dD8LhVEe2UuoshngsjNA" name="compareTo" specification="_R0LiUbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dD8bhVEe2UuoshngsjNA" name="obj" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5dD8rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dD87hVEe2UuoshngsjNA" name="conflictExists" specification="_R0MJY7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dD9LhVEe2UuoshngsjNA" name="obj" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5dD9bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dq8LhVEe2UuoshngsjNA" name="canCombine" specification="_R0MwcbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dq8bhVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5dq8rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dq87hVEe2UuoshngsjNA" name="getDelta" specification="_Rf1qArhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dq9LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dq9bhVEe2UuoshngsjNA" name="getExecutionDuration" specification="_Rf2RELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dq9rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dq97hVEe2UuoshngsjNA" name="getCombinedExecutionDuration" specification="_R0MwdLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dq-LhVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5dq-bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dq-rhVEe2UuoshngsjNA" name="printAll" specification="_Rf2RErhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dq-7hVEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dq_LhVEe2UuoshngsjNA" name="printAll" specification="_Rf2RFLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5dq_bhVEe2UuoshngsjNA" name="printEdges" specification="_R0NXgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5dq_rhVEe2UuoshngsjNA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5dq_7hVEe2UuoshngsjNA" name="edges" type="_Rh77wLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5drALhVEe2UuoshngsjNA" name="printEdges" specification="_R0N-kLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5drAbhVEe2UuoshngsjNA" name="edges" type="_Rh77wLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RftuMLhVEe2UuoshngsjNA" name="Activation" visibility="package" method="_R5b1wLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RftuMrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RftuM7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RftuMbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RftuNLhVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RfuVQLhVEe2UuoshngsjNA" name="clone" method="_R5b1x7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0KUNLhVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rfu8UrhVEe2UuoshngsjNA" name="getEdgesByReleaseTime" method="_R5b1ybhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKULhVEe2UuoshngsjNA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_R0KUNbhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RfvjYbhVEe2UuoshngsjNA" name="getEdgesByLatestReleaseTime" method="_R5b1y7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKUbhVEe2UuoshngsjNA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_R0KUNrhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RfwKcbhVEe2UuoshngsjNA" name="getEdgesByPeriod" method="_R5b1zbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKUrhVEe2UuoshngsjNA">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_R0K7QLhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RfwxgLhVEe2UuoshngsjNA" name="getEdgesByDeadline" method="_R5b1z7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKU7hVEe2UuoshngsjNA">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_R0K7QbhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RfxYkLhVEe2UuoshngsjNA" name="getEdgesByPriority" method="_R5cc0LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKVLhVEe2UuoshngsjNA">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_R0K7QrhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rfx_oLhVEe2UuoshngsjNA" name="increaseEdgePhases" method="_R5cc1rhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKVbhVEe2UuoshngsjNA">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_RfymsLhVEe2UuoshngsjNA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RfzNwLhVEe2UuoshngsjNA" name="updatePriorityAndRelease" method="_R5cc2LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKVrhVEe2UuoshngsjNA">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_RfzNwbhVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RfzNwrhVEe2UuoshngsjNA" name="addConflict" method="_R5cc2rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RfzNw7hVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rfz00LhVEe2UuoshngsjNA" name="addCoordinator" method="_R5cc3rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rfz00bhVEe2UuoshngsjNA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rfz00rhVEe2UuoshngsjNA" name="getNextScheduleTime" method="_R5dD4rhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKWLhVEe2UuoshngsjNA">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rfz007hVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R0LiULhVEe2UuoshngsjNA" type="_RilcALhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rf0b4LhVEe2UuoshngsjNA" name="getMatchingEndTime" method="_R5dD5bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKWbhVEe2UuoshngsjNA">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rf0b4bhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rf0b4rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rf1C8LhVEe2UuoshngsjNA" name="getNextStartTime" method="_R5dD6LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKWrhVEe2UuoshngsjNA">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rf1C8bhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rf1C8rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rf1C87hVEe2UuoshngsjNA" name="getNextEndTime" method="_R5dD67hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SxYLhVEe2UuoshngsjNA">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rf1C9LhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rf1C9bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rf1qALhVEe2UuoshngsjNA" name="getNumEdges" method="_R5dD7rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rf1qAbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rf1qArhVEe2UuoshngsjNA" name="getDelta" method="_R5dq87hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SxYbhVEe2UuoshngsjNA">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rf1qA7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rf2RELhVEe2UuoshngsjNA" name="getExecutionDuration" method="_R5dq9bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rf2REbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rf2RErhVEe2UuoshngsjNA" name="printAll" method="_R5dq-rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rf2RE7hVEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rf2RFLhVEe2UuoshngsjNA" name="printAll" method="_R5dq_LhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_R0JtILhVEe2UuoshngsjNA" name="Activation" visibility="package" method="_R5b1w7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0KUMbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0KUMrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0JtIbhVEe2UuoshngsjNA" name="elem" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0KUMLhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R0KUM7hVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0K7Q7hVEe2UuoshngsjNA" name="addEdge" method="_R5cc1LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0K7RLhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0LiUbhVEe2UuoshngsjNA" name="compareTo" method="_R5dD8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0LiUrhVEe2UuoshngsjNA" name="obj" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0LiU7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R0MJY7hVEe2UuoshngsjNA" name="conflictExists" method="_R5dD87hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0MJZLhVEe2UuoshngsjNA" name="obj" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0MwcLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R0MwcbhVEe2UuoshngsjNA" name="canCombine" method="_R5dq8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0MwcrhVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0Mwc7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R0MwdLhVEe2UuoshngsjNA" name="getCombinedExecutionDuration" method="_R5dq97hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0MwdbhVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0MwdrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R0NXgLhVEe2UuoshngsjNA" name="printEdges" visibility="private" method="_R5dq_bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0NXgbhVEe2UuoshngsjNA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R0NXgrhVEe2UuoshngsjNA" name="edges" type="_Rh77wLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0N-kLhVEe2UuoshngsjNA" name="printEdges" visibility="private" method="_R5drALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0N-kbhVEe2UuoshngsjNA" name="edges" type="_Rh77wLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2sDwLhVEe2UuoshngsjNA" name="addEdges" method="_R5cc0rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2sDwbhVEe2UuoshngsjNA" name="edges" type="_R0Gp0LhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2sq0bhVEe2UuoshngsjNA" name="addConflicts" method="_R5cc3LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2sq0rhVEe2UuoshngsjNA" name="conflicts" type="_R0IfAbhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2tR4bhVEe2UuoshngsjNA" name="addCoordinators" method="_R5cc4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2t48LhVEe2UuoshngsjNA" name="coordinators" type="_R0Gp0LhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2ugALhVEe2UuoshngsjNA" name="addScheduleTimes" method="_R5dD4LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SKV7hVEe2UuoshngsjNA">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_R2ugAbhVEe2UuoshngsjNA" name="scheduleTime" type="_R0Gp0LhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rf6igLhVEe2UuoshngsjNA" name="Activations">
              <generalization xmi:id="_R0PMsLhVEe2UuoshngsjNA" general="_RfrR8LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4ASYLhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4ASYbhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rf7JkLhVEe2UuoshngsjNA" name="BasicPoset">
              <ownedComment xmi:id="_R6SxYrhVEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_R0Qa1LhVEe2UuoshngsjNA" general="_RhUQsLhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5eSALhVEe2UuoshngsjNA" name="BasicPoset" specification="_R0PzwbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5eSAbhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5eSArhVEe2UuoshngsjNA" type="_Rf7JkLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R0PzwbhVEe2UuoshngsjNA" name="BasicPoset" visibility="package" method="_R5eSALhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0Qa0bhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0Qa0rhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0Qa0LhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0Qa07hVEe2UuoshngsjNA" type="_Rf7JkLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rf7woLhVEe2UuoshngsjNA" name="ChannelAnalysis">
              <ownedComment xmi:id="_R6SxY7hVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R4ASYrhVEe2UuoshngsjNA" name="program" visibility="private" type="_RhiTILhVEe2UuoshngsjNA" association="_R6wEZLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4A5cbhVEe2UuoshngsjNA" name="programTable" visibility="private" type="_RhzY4LhVEe2UuoshngsjNA" association="_R6wrcrhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4A5c7hVEe2UuoshngsjNA" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5eSA7hVEe2UuoshngsjNA" name="ChannelAnalysis" specification="_R0RB4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5eSBLhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5eSBbhVEe2UuoshngsjNA" type="_Rf7woLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5eSBrhVEe2UuoshngsjNA" name="ChannelAnalysis" specification="_R0TeILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5eSB7hVEe2UuoshngsjNA" name="program" type="_RhiTILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5eSCLhVEe2UuoshngsjNA" type="_Rf7woLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5e5ELhVEe2UuoshngsjNA" name="isChannelConflict" specification="_Rf8-wLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5e5EbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rf8-wLhVEe2UuoshngsjNA" name="isChannelConflict" method="_R5e5ELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rf8-wbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R0RB4LhVEe2UuoshngsjNA" name="ChannelAnalysis" visibility="package" method="_R5eSA7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0RB4rhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0RB47hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0RB4bhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0RB5LhVEe2UuoshngsjNA" type="_Rf7woLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0TeILhVEe2UuoshngsjNA" name="ChannelAnalysis" visibility="package" method="_R5eSBrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0TeIrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0TeI7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0TeIbhVEe2UuoshngsjNA" name="program" type="_RhiTILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0TeJLhVEe2UuoshngsjNA" type="_Rf7woLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rf-M4LhVEe2UuoshngsjNA" name="ChannelVisualization">
              <ownedComment xmi:id="_R6SxZLhVEe2UuoshngsjNA">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R0UsRLhVEe2UuoshngsjNA" general="_Ri8oYLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4BggbhVEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4BggrhVEe2UuoshngsjNA" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4Bgg7hVEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4BghLhVEe2UuoshngsjNA" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4BghbhVEe2UuoshngsjNA" name="warp" visibility="private" type="_RjW4ELhVEe2UuoshngsjNA" association="_R6xSgbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4CHkbhVEe2UuoshngsjNA" name="ca" visibility="private" type="_Rf7woLhVEe2UuoshngsjNA" association="_R6xShLhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5e5ErhVEe2UuoshngsjNA" name="ChannelVisualization" specification="_R0UFMLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5e5E7hVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5e5FLhVEe2UuoshngsjNA" type="_Rf-M4LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R0UFMLhVEe2UuoshngsjNA" name="ChannelVisualization" visibility="package" method="_R5e5ErhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0UsQbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0UsQrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0UsQLhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0UsQ7hVEe2UuoshngsjNA" type="_Rf-M4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rf-z8LhVEe2UuoshngsjNA" name="Channels">
              <ownedComment xmi:id="_R6SxZbhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R4CuorhVEe2UuoshngsjNA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4DVsLhVEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4DVsrhVEe2UuoshngsjNA" name="channelsAvailable" visibility="package" type="_R0Gp0LhVEe2UuoshngsjNA" association="_R6x5kbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5e5GrhVEe2UuoshngsjNA" name="Channels" specification="_RgApIrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5e5G7hVEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5e5HLhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5e5HbhVEe2UuoshngsjNA" type="_Rf-z8LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5e5HrhVEe2UuoshngsjNA" name="getChannelSet" specification="_RgBQM7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5e5H7hVEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5e5ILhVEe2UuoshngsjNA" type="_R0HQ4bhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5e5IbhVEe2UuoshngsjNA" name="addNewChannelSet" specification="_RgB3QLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5fgILhVEe2UuoshngsjNA" name="isEmpty" specification="_RgB3QbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5fgIbhVEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5fgIrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5fgI7hVEe2UuoshngsjNA" name="removeChannel" specification="_RgCeULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5fgJLhVEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5fgJbhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5fgJrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5fgJ7hVEe2UuoshngsjNA" name="addChannel" specification="_RgCeVLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5fgKLhVEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5fgKbhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5fgKrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5fgK7hVEe2UuoshngsjNA" name="getNumChannels" specification="_RgDFYbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5fgLLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RgApIrhVEe2UuoshngsjNA" name="Channels" visibility="package" method="_R5e5GrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgBQMLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgBQMbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RgApI7hVEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgApJLhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgBQMrhVEe2UuoshngsjNA" type="_Rf-z8LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgBQM7hVEe2UuoshngsjNA" name="getChannelSet" method="_R5e5HrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgBQNLhVEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R2w8QLhVEe2UuoshngsjNA" type="_R0HQ4bhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgB3QLhVEe2UuoshngsjNA" name="addNewChannelSet" method="_R5e5IbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RgB3QbhVEe2UuoshngsjNA" name="isEmpty" method="_R5fgILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgB3QrhVEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgB3Q7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgCeULhVEe2UuoshngsjNA" name="removeChannel" method="_R5fgI7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgCeUbhVEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgCeUrhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgCeU7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgCeVLhVEe2UuoshngsjNA" name="addChannel" method="_R5fgJ7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgCeVbhVEe2UuoshngsjNA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgCeVrhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgDFYLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgDFYbhVEe2UuoshngsjNA" name="getNumChannels" method="_R5fgK7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgDFYrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_Rf_bALhVEe2UuoshngsjNA" name="ChannelSet" visibility="private">
                <generalization xmi:id="_R2wVMLhVEe2UuoshngsjNA" general="_R0HQ4bhVEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_R4CuoLhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4CuobhVEe2UuoshngsjNA" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5e5FbhVEe2UuoshngsjNA" name="ChannelSet" specification="_RgACELhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R5e5FrhVEe2UuoshngsjNA" type="_Rf_bALhVEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5e5F7hVEe2UuoshngsjNA" name="ChannelSet" specification="_RgACFLhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R5e5GLhVEe2UuoshngsjNA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_R5e5GbhVEe2UuoshngsjNA" type="_Rf_bALhVEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_RgACELhVEe2UuoshngsjNA" name="ChannelSet" visibility="private" method="_R5e5FbhVEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_RgACEbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_RgACErhVEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_RgACE7hVEe2UuoshngsjNA" type="_Rf_bALhVEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_RgACFLhVEe2UuoshngsjNA" name="ChannelSet" visibility="private" method="_R5e5F7hVEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_RgACFrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_RgApILhVEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_RgACFbhVEe2UuoshngsjNA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_RgApIbhVEe2UuoshngsjNA" type="_Rf_bALhVEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgDscLhVEe2UuoshngsjNA" name="CodeFragment">
              <ownedAttribute xmi:id="_R4D8wbhVEe2UuoshngsjNA" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4D8wrhVEe2UuoshngsjNA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4Ej0LhVEe2UuoshngsjNA" name="edges" visibility="package" type="_R0Gp0LhVEe2UuoshngsjNA" association="_R6x5lLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4FK4LhVEe2UuoshngsjNA" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4FK4rhVEe2UuoshngsjNA" name="codeFragment" visibility="package" type="_R0Gp0LhVEe2UuoshngsjNA" association="_R6ygobhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4Fx8rhVEe2UuoshngsjNA" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4GZAbhVEe2UuoshngsjNA" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5fgLbhVEe2UuoshngsjNA" name="CodeFragment" specification="_RgE6kLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5fgLrhVEe2UuoshngsjNA" type="_RgDscLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5fgL7hVEe2UuoshngsjNA" name="CodeFragment" specification="_R2xjULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5fgMLhVEe2UuoshngsjNA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5fgMbhVEe2UuoshngsjNA" name="edges" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5fgMrhVEe2UuoshngsjNA" name="coordinators" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5fgM7hVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5fgNLhVEe2UuoshngsjNA" type="_RgDscLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5gHMLhVEe2UuoshngsjNA" name="getCoordinator" specification="_RgFhoLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5gHMbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5gHMrhVEe2UuoshngsjNA" name="instructions" specification="_RgFhorhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5gHM7hVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5gHNLhVEe2UuoshngsjNA" name="size" specification="_RgGIsbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5gHNbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5gHNrhVEe2UuoshngsjNA" name="generateCodeFragment" specification="_RgGvwLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5gHN7hVEe2UuoshngsjNA" name="getBaseInstruction" specification="_RgHW0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5gHOLhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5gHObhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5gHOrhVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5gHO7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5gHPLhVEe2UuoshngsjNA" name="push" specification="_RgH94LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5gHPbhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5gHPrhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5gHP7hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5gHQLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5gHQbhVEe2UuoshngsjNA" name="pull" specification="_RgH95bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5gHQrhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5gHQ7hVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5gHRLhVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5gHRbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5guQLhVEe2UuoshngsjNA" name="ifHas" specification="_RgIk9LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5guQbhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5guQrhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5guQ7hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5guRLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5guRbhVEe2UuoshngsjNA" name="ifNotHas" specification="_RgJMAbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5guRrhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5guR7hVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5guSLhVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5guSbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5guSrhVEe2UuoshngsjNA" name="wait" specification="_RgJzELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5guS7hVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5guTLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5guTbhVEe2UuoshngsjNA" name="sleep" specification="_RgJzE7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5guTrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5guT7hVEe2UuoshngsjNA" name="reportIfDifferentCoordinators" specification="_R2yxcrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5guULhVEe2UuoshngsjNA" name="coordinators" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5guUbhVEe2UuoshngsjNA" name="multipleCoordinators" specification="_R2zYgbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5guUrhVEe2UuoshngsjNA" name="coordinators" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5guU7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RgE6kLhVEe2UuoshngsjNA" name="CodeFragment" visibility="package" method="_R5fgLbhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgE6kbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgE6krhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6SxZrhVEe2UuoshngsjNA">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_RgE6k7hVEe2UuoshngsjNA" type="_RgDscLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgFhoLhVEe2UuoshngsjNA" name="getCoordinator" method="_R5gHMLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SxaLhVEe2UuoshngsjNA">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_RgFhobhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgFhorhVEe2UuoshngsjNA" name="instructions" method="_R5gHMrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SxabhVEe2UuoshngsjNA">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_R2yxcbhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgGIsbhVEe2UuoshngsjNA" name="size" method="_R5gHNLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6SxarhVEe2UuoshngsjNA">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_RgGIsrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgGvwLhVEe2UuoshngsjNA" name="generateCodeFragment" visibility="private" method="_R5gHNrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RgHW0LhVEe2UuoshngsjNA" name="getBaseInstruction" visibility="private" method="_R5gHN7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgHW0bhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgHW0rhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgHW07hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgHW1LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgH94LhVEe2UuoshngsjNA" name="push" visibility="private" method="_R5gHPLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgH94bhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgH94rhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgH947hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgH95LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgH95bhVEe2UuoshngsjNA" name="pull" visibility="private" method="_R5gHQbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgIk8LhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgIk8bhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgIk8rhVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgIk87hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgIk9LhVEe2UuoshngsjNA" name="ifHas" visibility="private" method="_R5guQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgIk9bhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgIk9rhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgIk97hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgJMALhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgJMAbhVEe2UuoshngsjNA" name="ifNotHas" visibility="private" method="_R5guRbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgJMArhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgJMA7hVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgJMBLhVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgJMBbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgJzELhVEe2UuoshngsjNA" name="wait" method="_R5guSrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgJzEbhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgJzErhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgJzE7hVEe2UuoshngsjNA" name="sleep" isStatic="true" method="_R5guTbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgJzFLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R2xjULhVEe2UuoshngsjNA" name="CodeFragment" visibility="package" method="_R5fgL7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R2yKYLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R2yKYbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6SxZ7hVEe2UuoshngsjNA">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_R2xjUbhVEe2UuoshngsjNA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R2xjUrhVEe2UuoshngsjNA" name="edges" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R2xjU7hVEe2UuoshngsjNA" name="coordinators" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R2xjVLhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R2yKYrhVEe2UuoshngsjNA" type="_RgDscLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2yxcrhVEe2UuoshngsjNA" name="reportIfDifferentCoordinators" visibility="private" method="_R5guT7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2yxc7hVEe2UuoshngsjNA" name="coordinators" type="_R0Gp0LhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2zYgbhVEe2UuoshngsjNA" name="multipleCoordinators" visibility="private" method="_R5guUbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2zYgrhVEe2UuoshngsjNA" name="coordinators" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R2zYg7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgLoQLhVEe2UuoshngsjNA" name="CombinedActivation">
              <generalization xmi:id="_R0YWpbhVEe2UuoshngsjNA" general="_RftHILhVEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_R21NsLhVEe2UuoshngsjNA" client="_RgLoQLhVEe2UuoshngsjNA" supplier="_R2qOkbhVEe2UuoshngsjNA" contract="_R2qOkbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5hVULhVEe2UuoshngsjNA" name="CombinedActivation" specification="_RgMPULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5hVUbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5hVUrhVEe2UuoshngsjNA" type="_RgLoQLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5hVU7hVEe2UuoshngsjNA" name="CombinedActivation" specification="_R0XIgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5hVVLhVEe2UuoshngsjNA" name="elem" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5hVVbhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5hVVrhVEe2UuoshngsjNA" type="_RgLoQLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5hVV7hVEe2UuoshngsjNA" name="CombinedActivation" specification="_R0Xvk7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5hVWLhVEe2UuoshngsjNA" name="priorEntry" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5hVWbhVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5hVWrhVEe2UuoshngsjNA" type="_RgLoQLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5hVW7hVEe2UuoshngsjNA" name="canCombine" specification="_R0XvmbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5hVXLhVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5hVXbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RgMPULhVEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_R5hVULhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgMPUrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgMPU7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RgMPUbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgMPVLhVEe2UuoshngsjNA" type="_RgLoQLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0XIgLhVEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_R5hVU7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0XvkLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0XvkbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0XIgbhVEe2UuoshngsjNA" name="elem" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0XIgrhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R0XvkrhVEe2UuoshngsjNA" type="_RgLoQLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0Xvk7hVEe2UuoshngsjNA" name="CombinedActivation" visibility="package" method="_R5hVV7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0XvlrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0Xvl7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0XvlLhVEe2UuoshngsjNA" name="priorEntry" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0XvlbhVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0XvmLhVEe2UuoshngsjNA" type="_RgLoQLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0XvmbhVEe2UuoshngsjNA" name="canCombine" method="_R5hVW7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0YWoLhVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0YWobhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgNdcLhVEe2UuoshngsjNA" name="CommunicationGraph">
              <ownedComment xmi:id="_R6Sxa7hVEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R0ZkyrhVEe2UuoshngsjNA" general="_Ri8oYLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4HnILhVEe2UuoshngsjNA" name="wfm" visibility="package" type="_Rgd8ILhVEe2UuoshngsjNA" association="_R6zuwLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4HnIrhVEe2UuoshngsjNA" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4IOMbhVEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4IOM7hVEe2UuoshngsjNA" name="workLoad" visibility="package" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R6zuw7hVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5h8YLhVEe2UuoshngsjNA" name="CommunicationGraph" specification="_R0Y9sLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5h8YbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5h8YrhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5h8Y7hVEe2UuoshngsjNA" type="_RgNdcLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5h8ZLhVEe2UuoshngsjNA" name="CommunicationGraph" specification="_R0ZkwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5h8ZbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5h8ZrhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5h8Z7hVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5h8aLhVEe2UuoshngsjNA" type="_RgNdcLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5h8abhVEe2UuoshngsjNA" name="createHeader" specification="_RgOrkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5h8arhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ijcLhVEe2UuoshngsjNA" name="createFooter" specification="_RgPSobhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ijcbhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ijcrhVEe2UuoshngsjNA" name="visualization" specification="_RgQgwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ijc7hVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ijdLhVEe2UuoshngsjNA" name="createWarpFileContent" specification="_RgRu4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ijdbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RgOrkLhVEe2UuoshngsjNA" name="createHeader" method="_R5h8abhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0Zkx7hVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgPSobhVEe2UuoshngsjNA" name="createFooter" method="_R5ijcLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0ZkyLhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgQgwLhVEe2UuoshngsjNA" name="visualization" method="_R5ijcrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0ZkybhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgRu4LhVEe2UuoshngsjNA" name="createWarpFileContent" method="_R5ijdLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgRu4bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R0Y9sLhVEe2UuoshngsjNA" name="CommunicationGraph" method="_R5h8YLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0Y9s7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0Y9tLhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0Y9sbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0Y9srhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0Y9tbhVEe2UuoshngsjNA" type="_RgNdcLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0ZkwLhVEe2UuoshngsjNA" name="CommunicationGraph" method="_R5h8ZLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0ZkxLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0ZkxbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0ZkwbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0ZkwrhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0Zkw7hVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R0ZkxrhVEe2UuoshngsjNA" type="_RgNdcLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgS9ALhVEe2UuoshngsjNA" name="ConnectivityPoset">
              <ownedComment xmi:id="_R6TYcLhVEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_R0ay4rhVEe2UuoshngsjNA" general="_RhUQsLhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5jKgLhVEe2UuoshngsjNA" name="ConnectivityPoset" specification="_R0aL0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5jKgbhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5jKgrhVEe2UuoshngsjNA" type="_RgS9ALhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5jKg7hVEe2UuoshngsjNA" name="findCoordinator" specification="_R22b0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5jKhLhVEe2UuoshngsjNA" name="nodesInFlow" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5jKhbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R0aL0LhVEe2UuoshngsjNA" name="ConnectivityPoset" visibility="package" method="_R5jKgLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0aL0rhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0ay4LhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0aL0bhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0ay4bhVEe2UuoshngsjNA" type="_RgS9ALhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R22b0LhVEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_R5jKg7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R22b0bhVEe2UuoshngsjNA" name="nodesInFlow" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R22b0rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgTkELhVEe2UuoshngsjNA" name="DeadlineComparator">
              <interfaceRealization xmi:id="_R23C47hVEe2UuoshngsjNA" client="_RgTkELhVEe2UuoshngsjNA" supplier="_R0ay47hVEe2UuoshngsjNA" contract="_R0ay47hVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5jKhrhVEe2UuoshngsjNA" name="compare" specification="_R244ELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5jxkLhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5jxkbhVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5jxkrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R244ELhVEe2UuoshngsjNA" name="compare" method="_R5jKhrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R244EbhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R244ErhVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R244E7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgUyMLhVEe2UuoshngsjNA" name="Description">
              <ownedComment xmi:id="_R6TYcbhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R25fIrhVEe2UuoshngsjNA" general="_R0Gp0LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4I1QbhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4I1QrhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5jxk7hVEe2UuoshngsjNA" name="Description" specification="_RgUyMbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5jxlLhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5jxlbhVEe2UuoshngsjNA" name="Description" specification="_RgVZQ7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5jxlrhVEe2UuoshngsjNA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5jxl7hVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5jxmLhVEe2UuoshngsjNA" name="toString" specification="_RgVZSLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5jxmbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RgUyMbhVEe2UuoshngsjNA" name="Description" method="_R5jxk7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgVZQLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgVZQbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RgVZQrhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgVZQ7hVEe2UuoshngsjNA" name="Description" method="_R5jxlbhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgVZRbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgVZRrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RgVZRLhVEe2UuoshngsjNA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgVZR7hVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgVZSLhVEe2UuoshngsjNA" name="toString" method="_R5jxmLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgWAULhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgWnYLhVEe2UuoshngsjNA" name="Edge">
              <generalization xmi:id="_R0dPJLhVEe2UuoshngsjNA" general="_RiIwELhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4I1Q7hVEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4JcULhVEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4JcUbhVEe2UuoshngsjNA" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4JcUrhVEe2UuoshngsjNA" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4JcU7hVEe2UuoshngsjNA" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4JcVLhVEe2UuoshngsjNA" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4KDYLhVEe2UuoshngsjNA" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4KDYbhVEe2UuoshngsjNA" name="state" type="_RgXOcLhVEe2UuoshngsjNA" association="_R6TYcrhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4KDYrhVEe2UuoshngsjNA" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R26GMbhVEe2UuoshngsjNA" client="_RgWnYLhVEe2UuoshngsjNA" supplier="_R2qOkbhVEe2UuoshngsjNA" contract="_R2qOkbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5kYoLhVEe2UuoshngsjNA" name="Edge" specification="_RgX1g7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5kYobhVEe2UuoshngsjNA" type="_RgWnYLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5kYorhVEe2UuoshngsjNA" name="Edge" specification="_RgYckLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5kYo7hVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5kYpLhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5kYpbhVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5kYprhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5kYp7hVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5kYqLhVEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5kYqbhVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5kYqrhVEe2UuoshngsjNA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5kYq7hVEe2UuoshngsjNA" type="_RgWnYLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5kYrLhVEe2UuoshngsjNA" name="compareTo" specification="_R0coELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5kYrbhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5kYrrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5kYr7hVEe2UuoshngsjNA" name="toString" specification="_RgZDoLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5kYsLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5kYsbhVEe2UuoshngsjNA" name="print" specification="_RgaRwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5kYsrhVEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5k_sLhVEe2UuoshngsjNA" name="print" specification="_Rgbf4rhVEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RgX1g7hVEe2UuoshngsjNA" name="Edge" visibility="package" method="_R5kYoLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgX1hLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgX1hbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RgX1hrhVEe2UuoshngsjNA" type="_RgWnYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgYckLhVEe2UuoshngsjNA" name="Edge" visibility="package" method="_R5kYorhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgYcmbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgYcmrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RgYckbhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgYckrhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgYck7hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgYclLhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgYclbhVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgYclrhVEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgYcl7hVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgYcmLhVEe2UuoshngsjNA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgYcm7hVEe2UuoshngsjNA" type="_RgWnYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgZDoLhVEe2UuoshngsjNA" name="toString" method="_R5kYr7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgZDobhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgaRwLhVEe2UuoshngsjNA" name="print" method="_R5kYsbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgaRwbhVEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rgbf4rhVEe2UuoshngsjNA" name="print" method="_R5k_sLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_R0coELhVEe2UuoshngsjNA" name="compareTo" method="_R5kYrLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0coEbhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0dPILhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_RgXOcLhVEe2UuoshngsjNA" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_RgX1gLhVEe2UuoshngsjNA" name="RELEASED"/>
                <ownedLiteral xmi:id="_RgX1gbhVEe2UuoshngsjNA" name="EXECUTING"/>
                <ownedLiteral xmi:id="_RgX1grhVEe2UuoshngsjNA" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rgd8ILhVEe2UuoshngsjNA" name="FileManager">
              <ownedComment xmi:id="_R6TYdLhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R4KqcLhVEe2UuoshngsjNA" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4KqcbhVEe2UuoshngsjNA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5k_sbhVEe2UuoshngsjNA" name="FileManager" specification="_RgejMLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5k_srhVEe2UuoshngsjNA" type="_Rgd8ILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5k_s7hVEe2UuoshngsjNA" name="FileManager" specification="_RgejNLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5k_tLhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5k_tbhVEe2UuoshngsjNA" type="_Rgd8ILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5k_trhVEe2UuoshngsjNA" name="getDocumentsDirectory" specification="_RgfKRLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5k_t7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5lmwLhVEe2UuoshngsjNA" name="getCurrentDirectory" specification="_RgfKRrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5lmwbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5lmwrhVEe2UuoshngsjNA" name="createFile" specification="_RgfxULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5lmw7hVEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lmxLhVEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lmxbhVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lmxrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5lmx7hVEe2UuoshngsjNA" name="createFile" specification="_RggYYLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5lmyLhVEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lmybhVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lmyrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5lmy7hVEe2UuoshngsjNA" name="createDirectory" specification="_RggYZLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5lmzLhVEe2UuoshngsjNA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lmzbhVEe2UuoshngsjNA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lmzrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5lmz7hVEe2UuoshngsjNA" name="writeFile" specification="_Rgg_c7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5lm0LhVEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lm0bhVEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5lm0rhVEe2UuoshngsjNA" name="readFile" specification="_RghmgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5lm07hVEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lm1LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RgejMLhVEe2UuoshngsjNA" name="FileManager" method="_R5k_sbhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgejMbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgejMrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6TYdbhVEe2UuoshngsjNA">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_RgejM7hVEe2UuoshngsjNA" type="_Rgd8ILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgejNLhVEe2UuoshngsjNA" name="FileManager" method="_R5k_s7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgfKQbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgfKQrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RgfKQLhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgfKQ7hVEe2UuoshngsjNA" type="_Rgd8ILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgfKRLhVEe2UuoshngsjNA" name="getDocumentsDirectory" method="_R5k_trhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgfKRbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgfKRrhVEe2UuoshngsjNA" name="getCurrentDirectory" method="_R5lmwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgfKR7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgfxULhVEe2UuoshngsjNA" name="createFile" method="_R5lmwrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_gLhVEe2UuoshngsjNA">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_RgfxUbhVEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgfxUrhVEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgfxU7hVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgfxVLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RggYYLhVEe2UuoshngsjNA" name="createFile" method="_R5lmx7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RggYYbhVEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RggYYrhVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RggYY7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RggYZLhVEe2UuoshngsjNA" name="createDirectory" method="_R5lmy7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rgg_cLhVEe2UuoshngsjNA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rgg_cbhVEe2UuoshngsjNA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rgg_crhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rgg_c7hVEe2UuoshngsjNA" name="writeFile" method="_R5lmz7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rgg_dLhVEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rgg_dbhVEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RghmgLhVEe2UuoshngsjNA" name="readFile" method="_R5lm0rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RghmgbhVEe2UuoshngsjNA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RghmgrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgiNkLhVEe2UuoshngsjNA" name="Flow">
              <ownedComment xmi:id="_R6T_gbhVEe2UuoshngsjNA">
                <body>The Flow class extends the SchedulableObject file and implements Comparable.&#xD;
It keeps track of the flows used for the WARP project.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R0iutrhVEe2UuoshngsjNA" general="_RiIwELhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4LRgLhVEe2UuoshngsjNA" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4LRgbhVEe2UuoshngsjNA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4LRgrhVEe2UuoshngsjNA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4L4kLhVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4L4kbhVEe2UuoshngsjNA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4L4krhVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4L4k7hVEe2UuoshngsjNA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4L4lLhVEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4L4lbhVEe2UuoshngsjNA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4MfoLhVEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4MfobhVEe2UuoshngsjNA" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4MforhVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4Mfo7hVEe2UuoshngsjNA" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4MfpLhVEe2UuoshngsjNA" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4NGsLhVEe2UuoshngsjNA" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4NGsrhVEe2UuoshngsjNA" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4NtwbhVEe2UuoshngsjNA" name="nodes" visibility="package" type="_R0Gp0LhVEe2UuoshngsjNA" association="_R60V0bhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4OU0bhVEe2UuoshngsjNA" name="linkTxAndTotalCost" visibility="package" type="_R0Gp0LhVEe2UuoshngsjNA" association="_R6084bhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4O74bhVEe2UuoshngsjNA" name="edges" visibility="package" type="_R0Gp0LhVEe2UuoshngsjNA" association="_R61j8LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4Pi8bhVEe2UuoshngsjNA" name="nodePredecessor" visibility="package" type="_RhJRkbhVEe2UuoshngsjNA" association="_R62LAbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4QKALhVEe2UuoshngsjNA" name="edgePredecessor" visibility="package" type="_RgWnYLhVEe2UuoshngsjNA" association="_R62yEbhVEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_R27UULhVEe2UuoshngsjNA" client="_RgiNkLhVEe2UuoshngsjNA" supplier="_R2qOkbhVEe2UuoshngsjNA" contract="_R2qOkbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN0LhVEe2UuoshngsjNA" name="Flow" specification="_RgjbsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN0bhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5mN0rhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5mN07hVEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5mN1LhVEe2UuoshngsjNA" type="_RgiNkLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN1bhVEe2UuoshngsjNA" name="Flow" specification="_RgkCxbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN1rhVEe2UuoshngsjNA" type="_RgiNkLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN17hVEe2UuoshngsjNA" name="getInitialPriority" specification="_Rgkp07hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN2LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN2bhVEe2UuoshngsjNA" name="getIndex" specification="_RglQ4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN2rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN27hVEe2UuoshngsjNA" name="getNumTxPerLink" specification="_Rgl38LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN3LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN3bhVEe2UuoshngsjNA" name="getNodes" specification="_RgmfALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN3rhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN37hVEe2UuoshngsjNA" name="getEdges" specification="_RgnGELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN4LhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN4bhVEe2UuoshngsjNA" name="addEdge" specification="_R0iHoLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN4rhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN47hVEe2UuoshngsjNA" name="addNode" specification="_R0iHorhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN5LhVEe2UuoshngsjNA" name="node" type="_RhJRkbhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN5bhVEe2UuoshngsjNA" name="getLinkTxAndTotalCost" specification="_RgntILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN5rhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN57hVEe2UuoshngsjNA" name="setInitialPriority" specification="_RgntIrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN6LhVEe2UuoshngsjNA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN6bhVEe2UuoshngsjNA" name="setIndex" specification="_RgntJLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN6rhVEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN67hVEe2UuoshngsjNA" name="setNumTxPerLink" specification="_RgoUMLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN7LhVEe2UuoshngsjNA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5mN7bhVEe2UuoshngsjNA" name="setNodes" specification="_R29JgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5mN7rhVEe2UuoshngsjNA" name="nodes" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5m04LhVEe2UuoshngsjNA" name="setLinkTxAndTotalCost" specification="_R29wkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5m04bhVEe2UuoshngsjNA" name="linkTxAndTotalCost" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5m04rhVEe2UuoshngsjNA" name="compareTo" specification="_R0iusLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5m047hVEe2UuoshngsjNA" name="flow" type="_RgiNkLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5m05LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5m05bhVEe2UuoshngsjNA" name="toString" specification="_RgoUMrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5m05rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RgjbsLhVEe2UuoshngsjNA" name="Flow" visibility="package" method="_R5mN0LhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RgkCwrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RgkCw7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6T_grhVEe2UuoshngsjNA">
                  <body>Constructor that sets name, priority, and index.&#xD;
     * &#xD;
     * @param name the name of the flow&#xD;
     * @param priority the priority of the flow&#xD;
     * @param index the index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RgjbsbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgkCwLhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgkCwbhVEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgkCxLhVEe2UuoshngsjNA" type="_RgiNkLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgkCxbhVEe2UuoshngsjNA" name="Flow" visibility="package" method="_R5mN1bhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Rgkp0LhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rgkp0bhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6T_g7hVEe2UuoshngsjNA">
                  <body>Constructor that sets the index, numTxPerLink, nodePredecessor, and edgePredecessor.&#xD;
     * It also initializes an ArrayList each for nodes, linkTxAndTotalCost, and edges.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rgkp0rhVEe2UuoshngsjNA" type="_RgiNkLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rgkp07hVEe2UuoshngsjNA" name="getInitialPriority" method="_R5mN17hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_hLhVEe2UuoshngsjNA">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rgkp1LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RglQ4LhVEe2UuoshngsjNA" name="getIndex" method="_R5mN2bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_hbhVEe2UuoshngsjNA">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_RglQ4bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rgl38LhVEe2UuoshngsjNA" name="getNumTxPerLink" method="_R5mN27hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_hrhVEe2UuoshngsjNA">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rgl38bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgmfALhVEe2UuoshngsjNA" name="getNodes" method="_R5mN3bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_h7hVEe2UuoshngsjNA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_R28icLhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgnGELhVEe2UuoshngsjNA" name="getEdges" method="_R5mN37hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_iLhVEe2UuoshngsjNA">
                  <body>@return the edges</body>
                </ownedComment>
                <ownedParameter xmi:id="_R28icbhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgntILhVEe2UuoshngsjNA" name="getLinkTxAndTotalCost" method="_R5mN5bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_i7hVEe2UuoshngsjNA">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_R28icrhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgntIrhVEe2UuoshngsjNA" name="setInitialPriority" method="_R5mN57hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_jLhVEe2UuoshngsjNA">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RgntI7hVEe2UuoshngsjNA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgntJLhVEe2UuoshngsjNA" name="setIndex" method="_R5mN6bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_jbhVEe2UuoshngsjNA">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RgntJbhVEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgoUMLhVEe2UuoshngsjNA" name="setNumTxPerLink" method="_R5mN67hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_jrhVEe2UuoshngsjNA">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RgoUMbhVEe2UuoshngsjNA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgoUMrhVEe2UuoshngsjNA" name="toString" method="_R5m05bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rgo7QLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R0iHoLhVEe2UuoshngsjNA" name="addEdge" method="_R5mN4bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_ibhVEe2UuoshngsjNA">
                  <body>Add an edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R0iHobhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0iHorhVEe2UuoshngsjNA" name="addNode" method="_R5mN47hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_irhVEe2UuoshngsjNA">
                  <body>Add a node to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R0iHo7hVEe2UuoshngsjNA" name="node" type="_RhJRkbhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0iusLhVEe2UuoshngsjNA" name="compareTo" method="_R5m04rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0iusbhVEe2UuoshngsjNA" name="flow" type="_RgiNkLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0iusrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R29JgLhVEe2UuoshngsjNA" name="setNodes" method="_R5mN7bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6T_j7hVEe2UuoshngsjNA">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_R29JgbhVEe2UuoshngsjNA" name="nodes" type="_R0Gp0LhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R29wkLhVEe2UuoshngsjNA" name="setLinkTxAndTotalCost" method="_R5m04LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6UmkLhVEe2UuoshngsjNA">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_R29wkbhVEe2UuoshngsjNA" name="linkTxAndTotalCost" type="_R0Gp0LhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgrXgLhVEe2UuoshngsjNA" name="FlowMap">
              <ownedComment xmi:id="_R6UmkbhVEe2UuoshngsjNA">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R0kj4LhVEe2UuoshngsjNA" general="_RfrR8LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4QxELhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4RYILhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rgr-kLhVEe2UuoshngsjNA" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_R6UmkrhVEe2UuoshngsjNA">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R0kj4rhVEe2UuoshngsjNA" general="_RfrR8LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4RYIbhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4RYIrhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rgr-kbhVEe2UuoshngsjNA" name="GraphViz">
              <ownedComment xmi:id="_R6Umk7hVEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R0mZFLhVEe2UuoshngsjNA" general="_Ri8oYLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4RYI7hVEe2UuoshngsjNA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4RYJLhVEe2UuoshngsjNA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4RYJbhVEe2UuoshngsjNA" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4R_MLhVEe2UuoshngsjNA" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4R_MbhVEe2UuoshngsjNA" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4R_M7hVEe2UuoshngsjNA" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4SmQLhVEe2UuoshngsjNA" name="wfm" visibility="package" type="_Rgd8ILhVEe2UuoshngsjNA" association="_R63ZIbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4SmQrhVEe2UuoshngsjNA" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4TNULhVEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4TNUrhVEe2UuoshngsjNA" name="gv" visibility="package" type="_Rgr-kbhVEe2UuoshngsjNA" association="_R63ZJLhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5m057hVEe2UuoshngsjNA" name="GraphViz" specification="_R0lK8bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5nb8LhVEe2UuoshngsjNA" name="wfm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5nb8bhVEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5nb8rhVEe2UuoshngsjNA" type="_Rgr-kbhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5nb87hVEe2UuoshngsjNA" name="GraphViz" specification="_R0lyBbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5nb9LhVEe2UuoshngsjNA" name="wfm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5nb9bhVEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5nb9rhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5nb97hVEe2UuoshngsjNA" type="_Rgr-kbhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5nb-LhVEe2UuoshngsjNA" name="visualization" specification="_RgtMsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5nb-bhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5nb-rhVEe2UuoshngsjNA" name="initializeGraphVizContent" specification="_RgtzwrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5nb-7hVEe2UuoshngsjNA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5nb_LhVEe2UuoshngsjNA" name="finalizeGraphVizContent" specification="_Rgua0LhVEe2UuoshngsjNA">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5nb_bhVEe2UuoshngsjNA" name="getGraphVizContent" specification="_Rgua0bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5nb_rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5nb_7hVEe2UuoshngsjNA" name="createGraphVizContent" specification="_RgvB4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ncALhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oDALhVEe2UuoshngsjNA" name="addFlowToGraphViz" specification="_Rgvo8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oDAbhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oDArhVEe2UuoshngsjNA" name="addSrcNodeToGraphViz" specification="_Rgvo8rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oDA7hVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oDBLhVEe2UuoshngsjNA" name="addSnkNodeToGraphViz" specification="_Rgvo9LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oDBbhVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oDBrhVEe2UuoshngsjNA" name="finalizeCurrentFlowInGraphViz" specification="_RgwQAbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oDB7hVEe2UuoshngsjNA" name="addNodeName" specification="_RgwQArhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oDCLhVEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5oDCbhVEe2UuoshngsjNA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RgtMsLhVEe2UuoshngsjNA" name="visualization" method="_R5nb-LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0mZE7hVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RgtzwrhVEe2UuoshngsjNA" name="initializeGraphVizContent" method="_R5nb-rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rgtzw7hVEe2UuoshngsjNA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rgua0LhVEe2UuoshngsjNA" name="finalizeGraphVizContent" method="_R5nb_LhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rgua0bhVEe2UuoshngsjNA" name="getGraphVizContent" method="_R5nb_bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6UmlLhVEe2UuoshngsjNA">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rgua0rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgvB4LhVEe2UuoshngsjNA" name="createGraphVizContent" method="_R5nb_7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgvB4bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rgvo8LhVEe2UuoshngsjNA" name="addFlowToGraphViz" method="_R5oDALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rgvo8bhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rgvo8rhVEe2UuoshngsjNA" name="addSrcNodeToGraphViz" method="_R5oDArhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rgvo87hVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rgvo9LhVEe2UuoshngsjNA" name="addSnkNodeToGraphViz" method="_R5oDBLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgwQALhVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RgwQAbhVEe2UuoshngsjNA" name="finalizeCurrentFlowInGraphViz" method="_R5oDBrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RgwQArhVEe2UuoshngsjNA" name="addNodeName" visibility="private" method="_R5oDB7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RgwQA7hVEe2UuoshngsjNA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RgwQBLhVEe2UuoshngsjNA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R0lK8bhVEe2UuoshngsjNA" name="GraphViz" visibility="package" method="_R5m057hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0lyArhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0lyA7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0lyALhVEe2UuoshngsjNA" name="wfm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0lyAbhVEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R0lyBLhVEe2UuoshngsjNA" type="_Rgr-kbhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0lyBbhVEe2UuoshngsjNA" name="GraphViz" visibility="package" method="_R5nb87hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0mZELhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0mZEbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0lyBrhVEe2UuoshngsjNA" name="wfm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0lyB7hVEe2UuoshngsjNA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R0lyCLhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R0mZErhVEe2UuoshngsjNA" type="_Rgr-kbhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RgyFMLhVEe2UuoshngsjNA" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_R6UmlbhVEe2UuoshngsjNA">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_R3AM0LhVEe2UuoshngsjNA" general="_R0qDcLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4T0YLhVEe2UuoshngsjNA" name="gv" visibility="package" type="_Rgr-kbhVEe2UuoshngsjNA" association="_R64AMbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oDCrhVEe2UuoshngsjNA" name="GraphVizListener" specification="_R0rRkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oDC7hVEe2UuoshngsjNA" name="gv" type="_Rgr-kbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5oDDLhVEe2UuoshngsjNA" type="_RgyFMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oqELhVEe2UuoshngsjNA" name="buildGraphViz" specification="_R0rRlbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oqEbhVEe2UuoshngsjNA" name="gv" type="_Rgr-kbhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oqErhVEe2UuoshngsjNA" name="enterWarpName" specification="_R0r4orhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oqE7hVEe2UuoshngsjNA" name="ctx" type="_R0r4oLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oqFLhVEe2UuoshngsjNA" name="exitWarp" specification="_R0sftLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oqFbhVEe2UuoshngsjNA" name="ctx" type="_R0sfsrhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oqFrhVEe2UuoshngsjNA" name="enterFlowName" specification="_R0tt0bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oqF7hVEe2UuoshngsjNA" name="ctx" type="_R0tGxLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oqGLhVEe2UuoshngsjNA" name="exitSrcNode" specification="_R0uU5LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oqGbhVEe2UuoshngsjNA" name="ctx" type="_R0uU4rhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oqGrhVEe2UuoshngsjNA" name="exitSnkNode" specification="_R0u79bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oqG7hVEe2UuoshngsjNA" name="ctx" type="_R0u787hVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5oqHLhVEe2UuoshngsjNA" name="exitFlow" specification="_R0wKEbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5oqHbhVEe2UuoshngsjNA" name="ctx" type="_R0vjBLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R0rRkLhVEe2UuoshngsjNA" name="GraphVizListener" visibility="private" method="_R5oDCrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R0rRkrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R0rRk7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R0rRkbhVEe2UuoshngsjNA" name="gv" type="_Rgr-kbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R0rRlLhVEe2UuoshngsjNA" type="_RgyFMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0rRlbhVEe2UuoshngsjNA" name="buildGraphViz" isStatic="true" method="_R5oqELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0rRlrhVEe2UuoshngsjNA" name="gv" type="_Rgr-kbhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0r4orhVEe2UuoshngsjNA" name="enterWarpName" method="_R5oqErhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0r4o7hVEe2UuoshngsjNA" name="ctx" type="_R0r4oLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0sftLhVEe2UuoshngsjNA" name="exitWarp" method="_R5oqFLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0tGwLhVEe2UuoshngsjNA" name="ctx" type="_R0sfsrhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0tt0bhVEe2UuoshngsjNA" name="enterFlowName" method="_R5oqFrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0tt0rhVEe2UuoshngsjNA" name="ctx" type="_R0tGxLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0uU5LhVEe2UuoshngsjNA" name="exitSrcNode" method="_R5oqGLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0uU5bhVEe2UuoshngsjNA" name="ctx" type="_R0uU4rhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0u79bhVEe2UuoshngsjNA" name="exitSnkNode" method="_R5oqGrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0vjALhVEe2UuoshngsjNA" name="ctx" type="_R0u787hVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R0wKEbhVEe2UuoshngsjNA" name="exitFlow" method="_R5oqHLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0wKErhVEe2UuoshngsjNA" name="ctx" type="_R0vjBLhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rg0hcLhVEe2UuoshngsjNA" name="GuiVisualization">
              <ownedComment xmi:id="_R6UmlrhVEe2UuoshngsjNA">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R4UbcbhVEe2UuoshngsjNA" name="frame" visibility="package" type="_R0x_QbhVEe2UuoshngsjNA" association="_R64nQbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4VCgbhVEe2UuoshngsjNA" name="jtable" visibility="package" type="_R0ymUrhVEe2UuoshngsjNA" association="_R65OUbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5pRILhVEe2UuoshngsjNA" name="GuiVisualization" specification="_Rg1IgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5pRIbhVEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5pRIrhVEe2UuoshngsjNA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5pRI7hVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5pRJLhVEe2UuoshngsjNA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5pRJbhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5pRJrhVEe2UuoshngsjNA" type="_Rg0hcLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5pRJ7hVEe2UuoshngsjNA" name="setVisible" specification="_Rg1vk7hVEe2UuoshngsjNA">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5pRKLhVEe2UuoshngsjNA" name="resizeColumnWidth" specification="_R3Az4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5pRKbhVEe2UuoshngsjNA" name="table" type="_R0ymUrhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rg1IgLhVEe2UuoshngsjNA" name="GuiVisualization" method="_R5pRILhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Rg1IhLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rg1IhbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6VNoLhVEe2UuoshngsjNA">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rg1IgbhVEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rg1IgrhVEe2UuoshngsjNA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1vkLhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rg1Ig7hVEe2UuoshngsjNA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rg1vkbhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rg1IhrhVEe2UuoshngsjNA" type="_Rg0hcLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rg1vk7hVEe2UuoshngsjNA" name="setVisible" method="_R5pRJ7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6VNobhVEe2UuoshngsjNA">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_R3Az4LhVEe2UuoshngsjNA" name="resizeColumnWidth" visibility="private" method="_R5pRKLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3Az4bhVEe2UuoshngsjNA" name="table" type="_R0ymUrhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rg3kwLhVEe2UuoshngsjNA" name="InputGraphFile">
              <ownedComment xmi:id="_R6VNorhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R4VpkLhVEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4VpkbhVEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4VpkrhVEe2UuoshngsjNA" name="wfm" visibility="private" type="_Rgd8ILhVEe2UuoshngsjNA" association="_R651YLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4WQobhVEe2UuoshngsjNA" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4WQorhVEe2UuoshngsjNA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4W3sLhVEe2UuoshngsjNA" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4W3sbhVEe2UuoshngsjNA" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5p4MLhVEe2UuoshngsjNA" name="InputGraphFile" specification="_R01Ck7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5p4MbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5p4MrhVEe2UuoshngsjNA" type="_Rg3kwLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5p4M7hVEe2UuoshngsjNA" name="InputGraphFile" specification="_R01ppLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5p4NLhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5p4NbhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5p4NrhVEe2UuoshngsjNA" type="_Rg3kwLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5p4N7hVEe2UuoshngsjNA" name="setGraphFileName" specification="_Rg9EULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5p4OLhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5p4ObhVEe2UuoshngsjNA" name="verifyGraphFileName" specification="_Rg9rYbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5p4OrhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5p4O7hVEe2UuoshngsjNA" name="readGraphFile" specification="_Rg-ScLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5p4PLhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5p4PbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5p4PrhVEe2UuoshngsjNA" name="getInputGraphFileName" specification="_Rg-Sc7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5p4P7hVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5p4QLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5p4QbhVEe2UuoshngsjNA" name="readGraphFileContents" specification="_Rg-5gLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5p4QrhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5p4Q7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5qfQLhVEe2UuoshngsjNA" name="printVerboseMessage" specification="_Rg-5g7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5qfQbhVEe2UuoshngsjNA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5qfQrhVEe2UuoshngsjNA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5qfQ7hVEe2UuoshngsjNA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rg9EULhVEe2UuoshngsjNA" name="setGraphFileName" visibility="private" method="_R5p4N7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rg9rYLhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rg9rYbhVEe2UuoshngsjNA" name="verifyGraphFileName" visibility="private" method="_R5p4ObhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rg9rYrhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rg-ScLhVEe2UuoshngsjNA" name="readGraphFile" method="_R5p4O7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rg-ScbhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rg-ScrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rg-Sc7hVEe2UuoshngsjNA" name="getInputGraphFileName" visibility="private" method="_R5p4PrhVEe2UuoshngsjNA" raisedException="_R3Ba8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rg-SdLhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rg-SdbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rg-5gLhVEe2UuoshngsjNA" name="readGraphFileContents" visibility="private" method="_R5p4QbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rg-5gbhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rg-5grhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rg-5g7hVEe2UuoshngsjNA" name="printVerboseMessage" visibility="private" method="_R5qfQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rg-5hLhVEe2UuoshngsjNA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rg-5hbhVEe2UuoshngsjNA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rg-5hrhVEe2UuoshngsjNA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R01Ck7hVEe2UuoshngsjNA" name="InputGraphFile" method="_R5p4MLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R01pobhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R01porhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R01poLhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R01po7hVEe2UuoshngsjNA" type="_Rg3kwLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R01ppLhVEe2UuoshngsjNA" name="InputGraphFile" method="_R5p4M7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R01pp7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R01pqLhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R01ppbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R01pprhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R01pqbhVEe2UuoshngsjNA" type="_Rg3kwLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhAHoLhVEe2UuoshngsjNA" name="InstructionTimeSlot">
              <generalization xmi:id="_R02QsLhVEe2UuoshngsjNA" general="_RiGT0LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4XewLhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4XewbhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5qfRLhVEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_RhAusLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5qfRbhVEe2UuoshngsjNA" type="_RhAHoLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5qfRrhVEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_RhBVwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5qfR7hVEe2UuoshngsjNA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5qfSLhVEe2UuoshngsjNA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5qfSbhVEe2UuoshngsjNA" type="_RhAHoLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5rGULhVEe2UuoshngsjNA" name="InstructionTimeSlot" specification="_RhBVxrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5rGUbhVEe2UuoshngsjNA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5rGUrhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5rGU7hVEe2UuoshngsjNA" type="_RhAHoLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RhAusLhVEe2UuoshngsjNA" name="InstructionTimeSlot" method="_R5qfRLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RhAusbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RhAusrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RhAus7hVEe2UuoshngsjNA" type="_RhAHoLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhBVwLhVEe2UuoshngsjNA" name="InstructionTimeSlot" visibility="package" method="_R5qfRrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RhBVw7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RhBVxLhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RhBVwbhVEe2UuoshngsjNA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhBVwrhVEe2UuoshngsjNA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhBVxbhVEe2UuoshngsjNA" type="_RhAHoLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhBVxrhVEe2UuoshngsjNA" name="InstructionTimeSlot" visibility="package" method="_R5rGULhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RhB80bhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RhB80rhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RhB80LhVEe2UuoshngsjNA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RhB81LhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhB807hVEe2UuoshngsjNA" type="_RhAHoLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhCj4LhVEe2UuoshngsjNA" name="LatencyAnalysis">
              <ownedComment xmi:id="_R6VNo7hVEe2UuoshngsjNA">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R4XewrhVEe2UuoshngsjNA" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4Xew7hVEe2UuoshngsjNA" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4YF0LhVEe2UuoshngsjNA" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4YF0rhVEe2UuoshngsjNA" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4YF07hVEe2UuoshngsjNA" name="latencyReport" visibility="private" type="_RgUyMLhVEe2UuoshngsjNA" association="_R651Y7hVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4Ys4bhVEe2UuoshngsjNA" name="program" visibility="private" type="_RhiTILhVEe2UuoshngsjNA" association="_R66ccbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4Ys47hVEe2UuoshngsjNA" name="workload" visibility="private" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R67DgbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4ZT8bhVEe2UuoshngsjNA" name="programTable" visibility="private" type="_RhzY4LhVEe2UuoshngsjNA" association="_R67qkbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4ZT87hVEe2UuoshngsjNA" name="nodeIndex" visibility="private" type="_R0GCwLhVEe2UuoshngsjNA" association="_R68RobhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5rGVLhVEe2UuoshngsjNA" name="LatencyAnalysis" specification="_R03e0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5rGVbhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5rGVrhVEe2UuoshngsjNA" type="_RhCj4LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5rGV7hVEe2UuoshngsjNA" name="LatencyAnalysis" specification="_R03e1bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5rGWLhVEe2UuoshngsjNA" name="program" type="_RhiTILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5rGWbhVEe2UuoshngsjNA" type="_RhCj4LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5rGWrhVEe2UuoshngsjNA" name="latencyReport" specification="_RhDyALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5rGW7hVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5rGXLhVEe2UuoshngsjNA" name="numMatchingTx" specification="_RhEZELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5rGXbhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5rGXrhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5rGX7hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5rGYLhVEe2UuoshngsjNA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5rGYbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RhDyALhVEe2UuoshngsjNA" name="latencyReport" method="_R5rGWrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R04F47hVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhEZELhVEe2UuoshngsjNA" name="numMatchingTx" method="_R5rGXLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhEZEbhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhEZErhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhEZE7hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhEZFLhVEe2UuoshngsjNA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhEZFbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R03e0LhVEe2UuoshngsjNA" name="LatencyAnalysis" visibility="package" method="_R5rGVLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R03e0rhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R03e07hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R03e0bhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R03e1LhVEe2UuoshngsjNA" type="_RhCj4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R03e1bhVEe2UuoshngsjNA" name="LatencyAnalysis" visibility="package" method="_R5rGV7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R04F4LhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R04F4bhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R03e1rhVEe2UuoshngsjNA" name="program" type="_RhiTILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R04F4rhVEe2UuoshngsjNA" type="_RhCj4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhGOQLhVEe2UuoshngsjNA" name="LatencyVisualization">
              <ownedComment xmi:id="_R6VNpLhVEe2UuoshngsjNA">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R04s9bhVEe2UuoshngsjNA" general="_Ri8oYLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4aiELhVEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4aiEbhVEe2UuoshngsjNA" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4aiErhVEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4bJILhVEe2UuoshngsjNA" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4bJIbhVEe2UuoshngsjNA" name="warp" visibility="private" type="_RjW4ELhVEe2UuoshngsjNA" association="_R6-t4bhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4bwMLhVEe2UuoshngsjNA" name="la" visibility="private" type="_RhCj4LhVEe2UuoshngsjNA" association="_R6_U8bhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5rtYLhVEe2UuoshngsjNA" name="LatencyVisualization" specification="_R04s8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5rtYbhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5rtYrhVEe2UuoshngsjNA" type="_RhGOQLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R04s8LhVEe2UuoshngsjNA" name="LatencyVisualization" visibility="package" method="_R5rtYLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R04s8rhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R04s87hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R04s8bhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R04s9LhVEe2UuoshngsjNA" type="_RhGOQLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhHcYLhVEe2UuoshngsjNA" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_R3DQILhVEe2UuoshngsjNA" client="_RhHcYLhVEe2UuoshngsjNA" supplier="_R0ay47hVEe2UuoshngsjNA" contract="_R0ay47hVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5rtY7hVEe2UuoshngsjNA" name="compare" specification="_R3D3MLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5rtZLhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5rtZbhVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5rtZrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R3D3MLhVEe2UuoshngsjNA" name="compare" method="_R5rtY7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3D3MbhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3D3MrhVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3D3M7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhIqgLhVEe2UuoshngsjNA" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_R3EeQrhVEe2UuoshngsjNA" client="_RhIqgLhVEe2UuoshngsjNA" supplier="_R0ay47hVEe2UuoshngsjNA" contract="_R0ay47hVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5sUcLhVEe2UuoshngsjNA" name="compare" specification="_R3FFUbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5sUcbhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5sUcrhVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5sUc7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R3FFUbhVEe2UuoshngsjNA" name="compare" method="_R5sUcLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3FFUrhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3FFU7hVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3FFVLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhJRkbhVEe2UuoshngsjNA" name="Node">
              <generalization xmi:id="_R07wQLhVEe2UuoshngsjNA" general="_RiIwELhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4bwMrhVEe2UuoshngsjNA" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4bwM7hVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4cXQLhVEe2UuoshngsjNA" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4cXQbhVEe2UuoshngsjNA" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4cXQrhVEe2UuoshngsjNA" name="edges" type="_R0Gp0LhVEe2UuoshngsjNA" isReadOnly="true" association="_R6_8AbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4c-ULhVEe2UuoshngsjNA" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4c-UbhVEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R3FsY7hVEe2UuoshngsjNA" client="_RhJRkbhVEe2UuoshngsjNA" supplier="_R2qOkbhVEe2UuoshngsjNA" contract="_R2qOkbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5sUdLhVEe2UuoshngsjNA" name="Node" specification="_RhKfsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5sUdbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5sUdrhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5sUd7hVEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5sUeLhVEe2UuoshngsjNA" type="_RhJRkbhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5s7gLhVEe2UuoshngsjNA" name="compareTo" specification="_R06iILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5s7gbhVEe2UuoshngsjNA" name="node" type="_RhJRkbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5s7grhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5s7g7hVEe2UuoshngsjNA" name="toString" specification="_RhKft7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5s7hLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5s7hbhVEe2UuoshngsjNA" name="addEdge" specification="_R07JM7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5s7hrhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5s7h7hVEe2UuoshngsjNA" name="addConflict" specification="_RhLGxLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5s7iLhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5s7ibhVEe2UuoshngsjNA" name="numEdges" specification="_RhLt0bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5s7irhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5s7i7hVEe2UuoshngsjNA" name="print" specification="_RhLt07hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5s7jLhVEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5s7jbhVEe2UuoshngsjNA" name="print" specification="_RhMU47hVEe2UuoshngsjNA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RhKfsLhVEe2UuoshngsjNA" name="Node" visibility="package" method="_R5sUdLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RhKftLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RhKftbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RhKfsbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhKfsrhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhKfs7hVEe2UuoshngsjNA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhKftrhVEe2UuoshngsjNA" type="_RhJRkbhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhKft7hVEe2UuoshngsjNA" name="toString" method="_R5s7g7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhLGwLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhLGxLhVEe2UuoshngsjNA" name="addConflict" method="_R5s7h7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhLt0LhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhLt0bhVEe2UuoshngsjNA" name="numEdges" method="_R5s7ibhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhLt0rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhLt07hVEe2UuoshngsjNA" name="print" method="_R5s7i7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhLt1LhVEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhMU47hVEe2UuoshngsjNA" name="print" method="_R5s7jbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_R06iILhVEe2UuoshngsjNA" name="compareTo" method="_R5s7gLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R06iIbhVEe2UuoshngsjNA" name="node" type="_RhJRkbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R06iIrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R07JM7hVEe2UuoshngsjNA" name="addEdge" method="_R5s7hbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R07JNLhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhPYMLhVEe2UuoshngsjNA" name="NodeMap">
              <ownedComment xmi:id="_R6VNpbhVEe2UuoshngsjNA">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R08XULhVEe2UuoshngsjNA" general="_RfrR8LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4c-UrhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4dlYLhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhP_QLhVEe2UuoshngsjNA" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_R6VNprhVEe2UuoshngsjNA">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R09lc7hVEe2UuoshngsjNA" general="_RibrALhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5tikLhVEe2UuoshngsjNA" name="NonPreemptiveSchedule" specification="_R08-YbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5tikbhVEe2UuoshngsjNA" name="poset" type="_RhUQsLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5tikrhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5tik7hVEe2UuoshngsjNA" type="_RhP_QLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R08-YbhVEe2UuoshngsjNA" name="NonPreemptiveSchedule" visibility="package" method="_R5tikLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R09lcLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R09lcbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R08-YrhVEe2UuoshngsjNA" name="poset" type="_RhUQsLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R08-Y7hVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R09lcrhVEe2UuoshngsjNA" type="_RhP_QLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhQmULhVEe2UuoshngsjNA" name="NotImplentedVisualization">
              <generalization xmi:id="_R0-MgbhVEe2UuoshngsjNA" general="_Ri8oYLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4dlYbhVEe2UuoshngsjNA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4dlYrhVEe2UuoshngsjNA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4dlY7hVEe2UuoshngsjNA" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4dlZLhVEe2UuoshngsjNA" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4eMcLhVEe2UuoshngsjNA" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4eMcbhVEe2UuoshngsjNA" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5tilLhVEe2UuoshngsjNA" name="NotImplentedVisualization" specification="_RhRNYLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5tilbhVEe2UuoshngsjNA" type="_RhQmULhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5tilrhVEe2UuoshngsjNA" name="NotImplentedVisualization" specification="_RhR0cLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5til7hVEe2UuoshngsjNA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5timLhVEe2UuoshngsjNA" type="_RhQmULhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5timbhVEe2UuoshngsjNA" name="visualization" specification="_RhR0dbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5timrhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RhRNYLhVEe2UuoshngsjNA" name="NotImplentedVisualization" visibility="package" method="_R5tilLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RhRNYbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RhRNYrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RhRNY7hVEe2UuoshngsjNA" type="_RhQmULhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhR0cLhVEe2UuoshngsjNA" name="NotImplentedVisualization" visibility="package" method="_R5tilrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RhR0crhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RhR0c7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RhR0cbhVEe2UuoshngsjNA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhR0dLhVEe2UuoshngsjNA" type="_RhQmULhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhR0dbhVEe2UuoshngsjNA" name="visualization" method="_R5timbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R0-MgLhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhTpoLhVEe2UuoshngsjNA" name="PeriodComparator">
              <interfaceRealization xmi:id="_R3G6gLhVEe2UuoshngsjNA" client="_RhTpoLhVEe2UuoshngsjNA" supplier="_R0ay47hVEe2UuoshngsjNA" contract="_R0ay47hVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5tim7hVEe2UuoshngsjNA" name="compare" specification="_R3HhkbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5tinLhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5tinbhVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5tinrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R3HhkbhVEe2UuoshngsjNA" name="compare" method="_R5tim7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3HhkrhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3Hhk7hVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3HhlLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhUQsLhVEe2UuoshngsjNA" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_R6V0sLhVEe2UuoshngsjNA">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R4eMcrhVEe2UuoshngsjNA" name="activations" visibility="private" type="_Rf6igLhVEe2UuoshngsjNA" association="_R7AjEbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4ezgLhVEe2UuoshngsjNA" name="workload" visibility="private" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R7AjFLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4ezgrhVEe2UuoshngsjNA" name="flows" visibility="protected" type="_RgiNkLhVEe2UuoshngsjNA" association="_R7BKIbhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R4ezhLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R4ezhbhVEe2UuoshngsjNA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4ezg7hVEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4fakbhVEe2UuoshngsjNA" name="nodes" visibility="private" type="_RhJRkbhVEe2UuoshngsjNA" association="_R7BKJLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R4fak7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R4falLhVEe2UuoshngsjNA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R4fakrhVEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4gBobhVEe2UuoshngsjNA" name="nodeMap" visibility="private" type="_RhPYMLhVEe2UuoshngsjNA" association="_R7BxMbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4gBo7hVEe2UuoshngsjNA" name="priorityQueue" visibility="private" type="_Rh8i1LhVEe2UuoshngsjNA" association="_R7BxNLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4gosrhVEe2UuoshngsjNA" name="nodeConnectivityMap" visibility="protected" type="_R0GCwLhVEe2UuoshngsjNA" association="_R7CYQbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4hPwrhVEe2UuoshngsjNA" name="activationMap" visibility="package" type="_Rgr-kLhVEe2UuoshngsjNA" association="_R7CYRLhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJoLhVEe2UuoshngsjNA" name="Poset" specification="_R1ABsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uJobhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5uJorhVEe2UuoshngsjNA" type="_RhUQsLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJo7hVEe2UuoshngsjNA" name="getNodeConnectivity" specification="_RhVe0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uJpLhVEe2UuoshngsjNA" type="_R0GCwLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJpbhVEe2UuoshngsjNA" name="getNodeNames" specification="_RhWF4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uJprhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJp7hVEe2UuoshngsjNA" name="getNodesNamesOrderedAlphabetically" specification="_RhWF4rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uJqLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5uJqbhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJqrhVEe2UuoshngsjNA" name="buildPosetOfActivations" specification="_RhWs87hVEe2UuoshngsjNA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJq7hVEe2UuoshngsjNA" name="createEdgeLists" specification="_RhXUALhVEe2UuoshngsjNA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJrLhVEe2UuoshngsjNA" name="createConflictLists" specification="_RhXUAbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJrbhVEe2UuoshngsjNA" name="createGlobalConflictLists" specification="_RhX7ELhVEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJrrhVEe2UuoshngsjNA" name="createLocalConflictLists" specification="_RhX7EbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uJr7hVEe2UuoshngsjNA" name="findCoordinator" specification="_R3J90LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uJsLhVEe2UuoshngsjNA" name="nodesInFlow" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5uJsbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uwsLhVEe2UuoshngsjNA" name="buildTxArray" specification="_R3Kk4bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uwsbhVEe2UuoshngsjNA" name="nodesInFlow" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5uwsrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5uws7hVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uwtLhVEe2UuoshngsjNA" name="createInitialActivations" specification="_RhYiILhVEe2UuoshngsjNA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uwtbhVEe2UuoshngsjNA" name="getMaxTx" specification="_R1AowLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uwtrhVEe2UuoshngsjNA" name="node" type="_RhJRkbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5uwt7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uwuLhVEe2UuoshngsjNA" name="getActivation" specification="_R1Aow7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uwubhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5uwurhVEe2UuoshngsjNA" name="node" type="_RhJRkbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5uwu7hVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uwvLhVEe2UuoshngsjNA" name="getHyperPeriod" specification="_RhZJMLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uwvbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uwvrhVEe2UuoshngsjNA" name="getMaxPhase" specification="_RhZJMrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uwv7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uwwLhVEe2UuoshngsjNA" name="orderActivations" specification="_RhZJNLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5uwwbhVEe2UuoshngsjNA" name="getNextActivation" specification="_RhZwQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5uwwrhVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5vXwLhVEe2UuoshngsjNA" name="addActivation" specification="_R1BP0rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5vXwbhVEe2UuoshngsjNA" name="activation" type="_RftHILhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5vXwrhVEe2UuoshngsjNA" name="findBaseStation" specification="_RhZwQbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5vXw7hVEe2UuoshngsjNA" type="_RhJRkbhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RhVe0LhVEe2UuoshngsjNA" name="getNodeConnectivity" visibility="private" method="_R5uJo7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3IvsLhVEe2UuoshngsjNA" type="_R0GCwLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhWF4LhVEe2UuoshngsjNA" name="getNodeNames" method="_R5uJpbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3JWwLhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhWF4rhVEe2UuoshngsjNA" name="getNodesNamesOrderedAlphabetically" method="_R5uJp7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhWs8LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RhWs8bhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhWs87hVEe2UuoshngsjNA" name="buildPosetOfActivations" method="_R5uJqrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhXUALhVEe2UuoshngsjNA" name="createEdgeLists" visibility="private" method="_R5uJq7hVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhXUAbhVEe2UuoshngsjNA" name="createConflictLists" visibility="private" method="_R5uJrLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhX7ELhVEe2UuoshngsjNA" name="createGlobalConflictLists" visibility="private" method="_R5uJrbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhX7EbhVEe2UuoshngsjNA" name="createLocalConflictLists" visibility="private" method="_R5uJrrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhYiILhVEe2UuoshngsjNA" name="createInitialActivations" visibility="private" method="_R5uwtLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhZJMLhVEe2UuoshngsjNA" name="getHyperPeriod" method="_R5uwvLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhZJMbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhZJMrhVEe2UuoshngsjNA" name="getMaxPhase" method="_R5uwvrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhZJM7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhZJNLhVEe2UuoshngsjNA" name="orderActivations" method="_R5uwwLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhZwQLhVEe2UuoshngsjNA" name="getNextActivation" method="_R5uwwbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6V0s7hVEe2UuoshngsjNA">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1BP0bhVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhZwQbhVEe2UuoshngsjNA" name="findBaseStation" visibility="protected" method="_R5vXwrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6V0tbhVEe2UuoshngsjNA">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1BP1LhVEe2UuoshngsjNA" type="_RhJRkbhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1ABsLhVEe2UuoshngsjNA" name="Poset" visibility="package" method="_R5uJoLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1ABsrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1ABs7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6V0sbhVEe2UuoshngsjNA">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1ABsbhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1ABtLhVEe2UuoshngsjNA" type="_RhUQsLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1AowLhVEe2UuoshngsjNA" name="getMaxTx" visibility="private" method="_R5uwtbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1AowbhVEe2UuoshngsjNA" name="node" type="_RhJRkbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1AowrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1Aow7hVEe2UuoshngsjNA" name="getActivation" visibility="private" method="_R5uwuLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1AoxLhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1AoxbhVEe2UuoshngsjNA" name="node" type="_RhJRkbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1BP0LhVEe2UuoshngsjNA" type="_RftHILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1BP0rhVEe2UuoshngsjNA" name="addActivation" method="_R5vXwLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6V0tLhVEe2UuoshngsjNA">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1BP07hVEe2UuoshngsjNA" name="activation" type="_RftHILhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3J90LhVEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_R5uJr7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6V0srhVEe2UuoshngsjNA">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3J90bhVEe2UuoshngsjNA" name="nodesInFlow" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3J90rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R3Kk4bhVEe2UuoshngsjNA" name="buildTxArray" visibility="private" method="_R5uwsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3Kk4rhVEe2UuoshngsjNA" name="nodesInFlow" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3Kk47hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3Kk5LhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhcMgLhVEe2UuoshngsjNA" name="PreemptiveSchedule">
              <ownedComment xmi:id="_R6V0trhVEe2UuoshngsjNA">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R1HWdLhVEe2UuoshngsjNA" general="_RibrALhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5vXxLhVEe2UuoshngsjNA" name="PreemptiveSchedule" specification="_R1Cd8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5vXxbhVEe2UuoshngsjNA" name="poset" type="_RhUQsLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5vXxrhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5vXx7hVEe2UuoshngsjNA" type="_RhcMgLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5vXyLhVEe2UuoshngsjNA" name="continueSearch" specification="_R1DsELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5vXybhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5vXyrhVEe2UuoshngsjNA" name="activation" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5vXy7hVEe2UuoshngsjNA" type="_R3MaELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5v-0LhVEe2UuoshngsjNA" name="toProgram" specification="_RhczkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5v-0bhVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5v-0rhVEe2UuoshngsjNA" name="findPreeptiveChannelAndTime" specification="_R1ETI7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5v-07hVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5v-1LhVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5v-1bhVEe2UuoshngsjNA" type="_R3MaELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5v-1rhVEe2UuoshngsjNA" name="findAdditionalTime" specification="_R1E6MLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5v-17hVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5v-2LhVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5v-2bhVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5v-2rhVEe2UuoshngsjNA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5v-27hVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5v-3LhVEe2UuoshngsjNA" name="findMaxTimeAvailable" specification="_R1GIULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5v-3bhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5v-3rhVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5v-37hVEe2UuoshngsjNA" type="_R3MaELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5v-4LhVEe2UuoshngsjNA" name="availableTime" specification="_R1GIU7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5v-4bhVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5v-4rhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5v-47hVEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5v-5LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5v-5bhVEe2UuoshngsjNA" name="addToSchedule" specification="_R1GvYLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5v-5rhVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5wl4LhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5wl4bhVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5wl4rhVEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5wl47hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5wl5LhVEe2UuoshngsjNA" name="addToSchedule" specification="_R1GvZrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5wl5bhVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5wl5rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RhczkLhVEe2UuoshngsjNA" name="toProgram" method="_R5v-0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1ETIrhVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1Cd8LhVEe2UuoshngsjNA" name="PreemptiveSchedule" visibility="package" method="_R5vXxLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1DFArhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1DFA7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1DFALhVEe2UuoshngsjNA" name="poset" type="_RhUQsLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1DFAbhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1DFBLhVEe2UuoshngsjNA" type="_RhcMgLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1DsELhVEe2UuoshngsjNA" name="continueSearch" visibility="protected" method="_R5vXyLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1DsEbhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1DsErhVEe2UuoshngsjNA" name="activation" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3NBILhVEe2UuoshngsjNA" type="_R3MaELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1ETI7hVEe2UuoshngsjNA" name="findPreeptiveChannelAndTime" visibility="private" method="_R5v-0rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1ETJLhVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1ETJbhVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3NBIbhVEe2UuoshngsjNA" type="_R3MaELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1E6MLhVEe2UuoshngsjNA" name="findAdditionalTime" visibility="private" method="_R5v-1rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1E6MbhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1E6MrhVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1E6M7hVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1E6NLhVEe2UuoshngsjNA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3NBIrhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1GIULhVEe2UuoshngsjNA" name="findMaxTimeAvailable" visibility="private" method="_R5v-3LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1GIUbhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1GIUrhVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3NBI7hVEe2UuoshngsjNA" type="_R3MaELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1GIU7hVEe2UuoshngsjNA" name="availableTime" visibility="private" method="_R5v-4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1GIVLhVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1GIVbhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1GIVrhVEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1GIV7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1GvYLhVEe2UuoshngsjNA" name="addToSchedule" visibility="private" method="_R5v-5bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1GvYbhVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1GvYrhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1GvY7hVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1GvZLhVEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1GvZbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1GvZrhVEe2UuoshngsjNA" name="addToSchedule" visibility="protected" method="_R5wl5LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1GvZ7hVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1HWcLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rhgd8LhVEe2UuoshngsjNA" name="PriorityComparator">
              <interfaceRealization xmi:id="_R3NoMLhVEe2UuoshngsjNA" client="_Rhgd8LhVEe2UuoshngsjNA" supplier="_R0ay47hVEe2UuoshngsjNA" contract="_R0ay47hVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5wl57hVEe2UuoshngsjNA" name="compare" specification="_R3OPQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5wl6LhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5wl6bhVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5wl6rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R3OPQLhVEe2UuoshngsjNA" name="compare" method="_R5wl57hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3OPQbhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3OPQrhVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3OPQ7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhiTILhVEe2UuoshngsjNA" name="Program">
              <ownedComment xmi:id="_R6V0t7hVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R4h20LhVEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4h20bhVEe2UuoshngsjNA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4h20rhVEe2UuoshngsjNA" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4id4LhVEe2UuoshngsjNA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4id4bhVEe2UuoshngsjNA" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4id4rhVEe2UuoshngsjNA" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4id47hVEe2UuoshngsjNA" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4id5LhVEe2UuoshngsjNA" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4id5bhVEe2UuoshngsjNA" name="workLoad" visibility="package" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R7C_UbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4jE8bhVEe2UuoshngsjNA" name="scheduleBuilt" visibility="package" type="_RhzY4LhVEe2UuoshngsjNA" association="_R7C_VLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4jE87hVEe2UuoshngsjNA" name="SchedulerSelected" visibility="package" type="_R3O2UrhVEe2UuoshngsjNA" association="_R7DmYbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4jsAbhVEe2UuoshngsjNA" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4jsA7hVEe2UuoshngsjNA" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4kTEbhVEe2UuoshngsjNA" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4k6ILhVEe2UuoshngsjNA" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4lhMLhVEe2UuoshngsjNA" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4lhMrhVEe2UuoshngsjNA" name="channelsAvailable" visibility="package" type="_Rf-z8LhVEe2UuoshngsjNA" association="_R7ENcLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4mIQbhVEe2UuoshngsjNA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4mIQ7hVEe2UuoshngsjNA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4mvUbhVEe2UuoshngsjNA" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4mvU7hVEe2UuoshngsjNA" name="deadlineMisses" visibility="private" type="_RgUyMLhVEe2UuoshngsjNA" association="_R7E0gbhVEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_R1JLobhVEe2UuoshngsjNA" client="_RhiTILhVEe2UuoshngsjNA" supplier="_RiptcLhVEe2UuoshngsjNA" contract="_RiptcLhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5wl67hVEe2UuoshngsjNA" name="Program" specification="_R3PdYbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5wl7LhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5wl7bhVEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5wl7rhVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5wl77hVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5wl8LhVEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5wl8bhVEe2UuoshngsjNA" type="_RhiTILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5xM8LhVEe2UuoshngsjNA" name="Program" specification="_R3QEd7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5xM8bhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5xM8rhVEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5xM87hVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5xM9LhVEe2UuoshngsjNA" type="_RhiTILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5xM9bhVEe2UuoshngsjNA" name="setDefaultParameters" specification="_R1KZwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5xM9rhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5xM97hVEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5xM-LhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5xM-bhVEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5xM-rhVEe2UuoshngsjNA" name="toWorkLoad" specification="_RhkvYLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5xM-7hVEe2UuoshngsjNA" type="_Rj_KMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5xM_LhVEe2UuoshngsjNA" name="buildProgram" specification="_R3QrhrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5xM_bhVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5xM_rhVEe2UuoshngsjNA" name="buildOriginalProgram" specification="_RhkvYbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5xM_7hVEe2UuoshngsjNA" name="waitInstruction" specification="_RhkvYrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5xNALhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5xNAbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5xNArhVEe2UuoshngsjNA" name="elseWaitInstruction" specification="_RhlWcbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5xNA7hVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5xNBLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5x0ALhVEe2UuoshngsjNA" name="elsePullClause" specification="_Rhl9gLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5x0AbhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0ArhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0A7hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0BLhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0BbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5x0BrhVEe2UuoshngsjNA" name="hasPushInstruction" specification="_Rhl9hrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5x0B7hVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0CLhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0CbhVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0CrhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0C7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5x0DLhVEe2UuoshngsjNA" name="pushInstruction" specification="_RhmklbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5x0DbhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0DrhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0D7hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0ELhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0EbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5x0ErhVEe2UuoshngsjNA" name="getFirstChannelInInstruction" specification="_RhnLorhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5x0E7hVEe2UuoshngsjNA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0FLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5x0FbhVEe2UuoshngsjNA" name="findNextAvailableInstructionTimeSlot" specification="_R1LA0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5x0FrhVEe2UuoshngsjNA" name="schedule" type="_RhzY4LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5x0F7hVEe2UuoshngsjNA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0GLhVEe2UuoshngsjNA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0GbhVEe2UuoshngsjNA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0GrhVEe2UuoshngsjNA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0G7hVEe2UuoshngsjNA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5x0HLhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0HbhVEe2UuoshngsjNA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5x0HrhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0H7hVEe2UuoshngsjNA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0ILhVEe2UuoshngsjNA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0IbhVEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0IrhVEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0I7hVEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5x0JLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybELhVEe2UuoshngsjNA" name="slotIsAvailable" specification="_R1Ln47hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ybEbhVEe2UuoshngsjNA" name="currentInstructionTimeSlot" type="_RhAHoLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5ybErhVEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5ybE7hVEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5ybFLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybFbhVEe2UuoshngsjNA" name="findNextAvailableChannel" specification="_R1MO8bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ybFrhVEe2UuoshngsjNA" name="schedule" type="_RhzY4LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5ybF7hVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5ybGLhVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5ybGbhVEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5ybGrhVEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5ybG7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybHLhVEe2UuoshngsjNA" name="selectPriority" specification="_RhnysLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybHbhVEe2UuoshngsjNA" name="selectRM" specification="_RhoZwLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybHrhVEe2UuoshngsjNA" name="selectDM" specification="_RhoZwbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybH7hVEe2UuoshngsjNA" name="selectRtHART" specification="_RhoZwrhVEe2UuoshngsjNA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybILhVEe2UuoshngsjNA" name="setScheduleSelected" specification="_R3RSkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ybIbhVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybIrhVEe2UuoshngsjNA" name="setSchedule" specification="_R1M2ALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ybI7hVEe2UuoshngsjNA" name="schedule" type="_RhzY4LhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybJLhVEe2UuoshngsjNA" name="getSchedule" specification="_RhoZw7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ybJbhVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5ybJrhVEe2UuoshngsjNA" name="getSchedulerName" specification="_RhoZxLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5ybJ7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zCILhVEe2UuoshngsjNA" name="getSchChoice" specification="_RhpA1LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zCIbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zCIrhVEe2UuoshngsjNA" name="getNumChannels" specification="_Rhpn4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zCI7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zCJLhVEe2UuoshngsjNA" name="getNumTransmissions" specification="_Rhpn5bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zCJbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zCJrhVEe2UuoshngsjNA" name="getRealTimeHartFlag" specification="_RhqO9LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zCJ7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zCKLhVEe2UuoshngsjNA" name="setRealTimeHartFlag" specification="_Rhq2AbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zCKbhVEe2UuoshngsjNA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zCKrhVEe2UuoshngsjNA" name="getMinPacketReceptionRate" specification="_Rhq2A7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zCK7hVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zCLLhVEe2UuoshngsjNA" name="getE2e" specification="_RhrdE7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zCLbhVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zCLrhVEe2UuoshngsjNA" name="getName" specification="_RhsrM7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zCL7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zCMLhVEe2UuoshngsjNA" name="getOptimizationFlag" specification="_RhtSQ7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zCMbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zpMLhVEe2UuoshngsjNA" name="deadlineMisses" specification="_Rht5U7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zpMbhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zpMrhVEe2UuoshngsjNA" name="getNumFaults" specification="_Rht5VLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zpM7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zpNLhVEe2UuoshngsjNA" name="getNodeMapIndex" specification="_RhugZLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zpNbhVEe2UuoshngsjNA" type="_R0GCwLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>// create an array of node names sorted alphabetically&#xD;
 var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); &#xD;
 &#xD;
 // create a new mapping from node names to index in schedule table&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>();&#xD;
 &#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RhkvYLhVEe2UuoshngsjNA" name="toWorkLoad" method="_R5xM-rhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6V0uLhVEe2UuoshngsjNA">
                  <body>@return the WorkLoad object containing all flows and nodes within the graph.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1KZxbhVEe2UuoshngsjNA" type="_Rj_KMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhkvYbhVEe2UuoshngsjNA" name="buildOriginalProgram" method="_R5xM_rhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhkvYrhVEe2UuoshngsjNA" name="waitInstruction" visibility="private" method="_R5xM_7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhkvY7hVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhlWcLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhlWcbhVEe2UuoshngsjNA" name="elseWaitInstruction" visibility="private" method="_R5xNArhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhlWcrhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhlWc7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rhl9gLhVEe2UuoshngsjNA" name="elsePullClause" visibility="private" method="_R5x0ALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rhl9gbhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rhl9grhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rhl9g7hVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rhl9hLhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rhl9hbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rhl9hrhVEe2UuoshngsjNA" name="hasPushInstruction" visibility="private" method="_R5x0BrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhmkkLhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhmkkbhVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhmkkrhVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rhmkk7hVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhmklLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhmklbhVEe2UuoshngsjNA" name="pushInstruction" visibility="private" method="_R5x0DLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhmklrhVEe2UuoshngsjNA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rhmkl7hVEe2UuoshngsjNA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhmkmLhVEe2UuoshngsjNA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhnLoLhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhnLobhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhnLorhVEe2UuoshngsjNA" name="getFirstChannelInInstruction" visibility="private" method="_R5x0ErhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhnLo7hVEe2UuoshngsjNA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RhnLpLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhnysLhVEe2UuoshngsjNA" name="selectPriority" method="_R5ybHLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhoZwLhVEe2UuoshngsjNA" name="selectRM" method="_R5ybHbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhoZwbhVEe2UuoshngsjNA" name="selectDM" method="_R5ybHrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhoZwrhVEe2UuoshngsjNA" name="selectRtHART" method="_R5ybH7hVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RhoZw7hVEe2UuoshngsjNA" name="getSchedule" method="_R5ybJLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6WbwLhVEe2UuoshngsjNA">
                  <body>@return the completed schedule for the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1M2ArhVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhoZxLhVEe2UuoshngsjNA" name="getSchedulerName" method="_R5ybJrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhpA0LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhpA1LhVEe2UuoshngsjNA" name="getSchChoice" method="_R5zCILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhpA1bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rhpn4LhVEe2UuoshngsjNA" name="getNumChannels" method="_R5zCIrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rhpn4bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rhpn5bhVEe2UuoshngsjNA" name="getNumTransmissions" method="_R5zCJLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhqO8LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhqO9LhVEe2UuoshngsjNA" name="getRealTimeHartFlag" visibility="private" method="_R5zCJrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rhq2ALhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rhq2AbhVEe2UuoshngsjNA" name="setRealTimeHartFlag" visibility="private" method="_R5zCKLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rhq2ArhVEe2UuoshngsjNA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rhq2A7hVEe2UuoshngsjNA" name="getMinPacketReceptionRate" method="_R5zCKrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3R5orhVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhrdE7hVEe2UuoshngsjNA" name="getE2e" method="_R5zCLLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3R5o7hVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RhsrM7hVEe2UuoshngsjNA" name="getName" method="_R5zCLrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhsrNLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhtSQ7hVEe2UuoshngsjNA" name="getOptimizationFlag" method="_R5zCMLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhtSRLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rht5U7hVEe2UuoshngsjNA" name="deadlineMisses" method="_R5zpMLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1M2A7hVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rht5VLhVEe2UuoshngsjNA" name="getNumFaults" method="_R5zpMrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RhugYLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RhugZLhVEe2UuoshngsjNA" name="getNodeMapIndex" method="_R5zpNLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6WbwbhVEe2UuoshngsjNA">
                  <body>@return a HashMap mapping each node to its index when sorted by alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3SgsLhVEe2UuoshngsjNA" type="_R0GCwLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1KZwLhVEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_R5xM9bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1KZwbhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1KZwrhVEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1KZw7hVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1KZxLhVEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1LA0LhVEe2UuoshngsjNA" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_R5x0FbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1LA0bhVEe2UuoshngsjNA" name="schedule" type="_RhzY4LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1LA0rhVEe2UuoshngsjNA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA07hVEe2UuoshngsjNA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA1LhVEe2UuoshngsjNA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA1bhVEe2UuoshngsjNA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA1rhVEe2UuoshngsjNA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R1Ln4bhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA17hVEe2UuoshngsjNA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R1Ln4rhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA2LhVEe2UuoshngsjNA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA2bhVEe2UuoshngsjNA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA2rhVEe2UuoshngsjNA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA27hVEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1LA3LhVEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1Ln4LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1Ln47hVEe2UuoshngsjNA" name="slotIsAvailable" visibility="private" method="_R5ybELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1Ln5LhVEe2UuoshngsjNA" name="currentInstructionTimeSlot" type="_RhAHoLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1Ln5bhVEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1Ln5rhVEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1MO8LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1MO8bhVEe2UuoshngsjNA" name="findNextAvailableChannel" visibility="private" method="_R5ybFbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1MO8rhVEe2UuoshngsjNA" name="schedule" type="_RhzY4LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1MO87hVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1MO9LhVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1MO9bhVEe2UuoshngsjNA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1MO9rhVEe2UuoshngsjNA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1MO97hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1M2ALhVEe2UuoshngsjNA" name="setSchedule" visibility="private" method="_R5ybIrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1M2AbhVEe2UuoshngsjNA" name="schedule" type="_RhzY4LhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3PdYbhVEe2UuoshngsjNA" name="Program" visibility="package" method="_R5wl67hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3QEdLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3QEdbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R3PdYrhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3QEcLhVEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3QEcbhVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3QEcrhVEe2UuoshngsjNA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3QEc7hVEe2UuoshngsjNA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3QEdrhVEe2UuoshngsjNA" type="_RhiTILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3QEd7hVEe2UuoshngsjNA" name="Program" visibility="package" method="_R5xM8LhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3Qrg7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3QrhLhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R3QrgLhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3QrgbhVEe2UuoshngsjNA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3QrgrhVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3QrhbhVEe2UuoshngsjNA" type="_RhiTILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3QrhrhVEe2UuoshngsjNA" name="buildProgram" method="_R5xM_LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3Qrh7hVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3RSkLhVEe2UuoshngsjNA" name="setScheduleSelected" visibility="private" method="_R5ybILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3RSkbhVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RhzY4LhVEe2UuoshngsjNA" name="ProgramSchedule">
              <generalization xmi:id="_R1UKwLhVEe2UuoshngsjNA" general="_Riul8LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4n9cLhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4n9cbhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5zpNrhVEe2UuoshngsjNA" name="ProgramSchedule" specification="_Rhz_8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5zpN7hVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R50QQLhVEe2UuoshngsjNA" name="ProgramSchedule" specification="_Rhz_9LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R50QQbhVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R50QQrhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R50QQ7hVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rhz_8LhVEe2UuoshngsjNA" name="ProgramSchedule" method="_R5zpNrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Rhz_8bhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rhz_8rhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rhz_87hVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rhz_9LhVEe2UuoshngsjNA" name="ProgramSchedule" visibility="package" method="_R50QQLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Rh0nAbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rh0nArhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rhz_9bhVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rh0nALhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rh0nA7hVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rh0nBLhVEe2UuoshngsjNA" name="ProgramVisualization">
              <ownedComment xmi:id="_R6WbwrhVEe2UuoshngsjNA">
                <body>Develops a visualization of a Warp graph schedule formatted as a table&#xD;
using arrays. Each column of the table is a time slot, and the rows &#xD;
contain the schedule's instructions. The visualization can be displayed&#xD;
as a GuiVisualization with the displayVisualization() method. A header&#xD;
and footer can also be added with additional information about the Warp&#xD;
graph.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R1VY47hVEe2UuoshngsjNA" general="_Ri8oYLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4okgLhVEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4okgbhVEe2UuoshngsjNA" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4okgrhVEe2UuoshngsjNA" name="sourceCode" visibility="private" type="_RhzY4LhVEe2UuoshngsjNA" association="_R7E0hLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4pLkLhVEe2UuoshngsjNA" name="program" visibility="private" type="_RhiTILhVEe2UuoshngsjNA" association="_R7FbkbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4pLkrhVEe2UuoshngsjNA" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R50QRLhVEe2UuoshngsjNA" name="ProgramVisualization" specification="_R1Ux0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R50QRbhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R50QRrhVEe2UuoshngsjNA" type="_Rh0nBLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R50QR7hVEe2UuoshngsjNA" name="displayVisualization" specification="_Rh1OELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R50QSLhVEe2UuoshngsjNA" type="_Rg0hcLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R50QSbhVEe2UuoshngsjNA" name="createHeader" specification="_Rh2cMLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R50QSrhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R50QS7hVEe2UuoshngsjNA" name="createFooter" specification="_Rh3qUbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R50QTLhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R50QTbhVEe2UuoshngsjNA" name="createColumnHeader" specification="_Rh4RYrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R50QTrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R50QT7hVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R503ULhVEe2UuoshngsjNA" name="createVisualizationData" specification="_Rh44c7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R503UbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R503UrhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R503U7hVEe2UuoshngsjNA" name="createTitle" specification="_Rh5fg7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R503VLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rh1OELhVEe2UuoshngsjNA" name="displayVisualization" method="_R50QR7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1VY4LhVEe2UuoshngsjNA" type="_Rg0hcLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rh2cMLhVEe2UuoshngsjNA" name="createHeader" visibility="protected" method="_R50QSbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1VY4bhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rh3qUbhVEe2UuoshngsjNA" name="createFooter" visibility="protected" method="_R50QS7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1VY4rhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rh4RYrhVEe2UuoshngsjNA" name="createColumnHeader" visibility="protected" method="_R50QTbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rh4RY7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rh4RZLhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rh44c7hVEe2UuoshngsjNA" name="createVisualizationData" visibility="protected" method="_R503ULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rh44dLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rh44dbhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rh5fg7hVEe2UuoshngsjNA" name="createTitle" visibility="private" method="_R503U7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6WbxLhVEe2UuoshngsjNA">
                  <body>@return the title for the visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rh6GkLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1Ux0LhVEe2UuoshngsjNA" name="ProgramVisualization" visibility="package" method="_R50QRLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1Ux0rhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1Ux07hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6Wbw7hVEe2UuoshngsjNA">
                  <body>Creates and initializes a new visualization.&#xD;
   * &#xD;
   * @param warp object</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1Ux0bhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1Ux1LhVEe2UuoshngsjNA" type="_Rh0nBLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rh6toLhVEe2UuoshngsjNA" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_R3UV4LhVEe2UuoshngsjNA" client="_Rh6toLhVEe2UuoshngsjNA" supplier="_R0ay47hVEe2UuoshngsjNA" contract="_R0ay47hVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R503VbhVEe2UuoshngsjNA" name="compare" specification="_R3VkALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R503VrhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R503V7hVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R503WLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R3VkALhVEe2UuoshngsjNA" name="compare" method="_R503VbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3VkAbhVEe2UuoshngsjNA" name="obj1" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3VkArhVEe2UuoshngsjNA" name="obj2" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3VkA7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rh77wLhVEe2UuoshngsjNA" name="ReleaseTimeQueue">
              <generalization xmi:id="_Rh9J4bhVEe2UuoshngsjNA" general="_Rh8i1LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4pyobhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4pyorhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R503WbhVEe2UuoshngsjNA" name="ReleaseTimeQueue" specification="_Rh8i0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R503WrhVEe2UuoshngsjNA" type="_Rh77wLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R503W7hVEe2UuoshngsjNA" name="ReleaseTimeQueue" specification="_R1V_8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R503XLhVEe2UuoshngsjNA" name="schedulableObjects" type="_R0-zkLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R503XbhVEe2UuoshngsjNA" type="_Rh77wLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rh8i0LhVEe2UuoshngsjNA" name="ReleaseTimeQueue" visibility="package" method="_R503WbhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Rh8i0bhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rh8i0rhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rh8i07hVEe2UuoshngsjNA" type="_Rh77wLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1V_8LhVEe2UuoshngsjNA" name="ReleaseTimeQueue" visibility="package" method="_R503W7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1V_8rhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1V_87hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1V_8bhVEe2UuoshngsjNA" name="schedulableObjects" type="_R0-zkLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1V_9LhVEe2UuoshngsjNA" type="_Rh77wLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rh9w8bhVEe2UuoshngsjNA" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_0HFMAMv3Ee2QFfqiYSegRA">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_QP94IL3oEe2wPvZiCmNZ2Q" name="e2e" visibility="private" type="_R3R5oLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_QQPk8L3oEe2wPvZiCmNZ2Q" name="minPacketReceptionRate" visibility="private" type="_R3R5oLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_QQQzEb3oEe2wPvZiCmNZ2Q" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_0G4-wMv3Ee2QFfqiYSegRA" name="nPushes" visibility="private" type="_R0Gp0LhVEe2UuoshngsjNA" association="_0HL5sMv3Ee2QFfqiYSegRA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R503XrhVEe2UuoshngsjNA" name="ReliabilityAnalysis" specification="_R1XOELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_EdURELhkEe2vO_8xu6TRjQ" type="_Rh9w8bhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EdUREbhkEe2vO_8xu6TRjQ" name="program" type="_RhiTILhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
	// Not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R51eYLhVEe2UuoshngsjNA" name="verifyReliabilities" specification="_Rh-YALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R51eYbhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0G-eUMv3Ee2QFfqiYSegRA" name="ReliabilityAnalysis" specification="_Eh1EwL3iEe2wPvZiCmNZ2Q">
                <ownedParameter xmi:id="_0G-eUcv3Ee2QFfqiYSegRA" type="_Rh9w8bhVEe2UuoshngsjNA" direction="return"/>
                <ownedParameter xmi:id="_0G-eUsv3Ee2QFfqiYSegRA" name="e2e" type="_R3R5oLhVEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_0G-eU8v3Ee2QFfqiYSegRA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_0G-eVMv3Ee2QFfqiYSegRA" key="create"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_0G-eVcv3Ee2QFfqiYSegRA" name="minPacketReceptionRate" type="_R3R5oLhVEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_0G-eVsv3Ee2QFfqiYSegRA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_0G-eV8v3Ee2QFfqiYSegRA" key="create"/>
                  </eAnnotations>
                </ownedParameter>
                <language>java</language>
                <body>this.setDefaultParameters();&#xD;
   this.e2e = e2e;&#xD;
   this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0G_FYMv3Ee2QFfqiYSegRA" name="ReliabilityAnalysis" specification="_HDuZwL3iEe2wPvZiCmNZ2Q">
                <ownedParameter xmi:id="_0G_FYcv3Ee2QFfqiYSegRA" type="_Rh9w8bhVEe2UuoshngsjNA" direction="return"/>
                <ownedParameter xmi:id="_0G_FYsv3Ee2QFfqiYSegRA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.setDefaultParameters();&#xD;
   this.numFaults = numFaults;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0G_scMv3Ee2QFfqiYSegRA" name="setDefaultParameters" specification="_0F78gMv3Ee2QFfqiYSegRA">
                <language>java</language>
                <body>this.e2e = 0.99;&#xD;
	  this.minPacketReceptionRate = 0.9;&#xD;
	  this.numFaults = 0;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0HATgMv3Ee2QFfqiYSegRA" name="numTxPerLinkAndTotalTxCost" specification="_4KTHYL3hEe2wPvZiCmNZ2Q">
                <ownedParameter xmi:id="_0HATgcv3Ee2QFfqiYSegRA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                <ownedParameter xmi:id="_0HATgsv3Ee2QFfqiYSegRA" name="flow" type="_RgiNkLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>ArrayList&lt;Node> nodesInFlow = flow.getNodes();&#xD;
   &#xD;
   int nNodesInFlow = nodesInFlow.size();&#xD;
   &#xD;
   /*Array to track nPushes for each node in this flow (same as nTx per link).&#xD;
   Initialized to all 0 values.&#xD;
   The last entry will contain the worst-case cost of transmitting E2E in &#xD;
   isolation*/&#xD;
   nPushes = new ArrayList&lt;Integer>(Collections.nCopies(nNodesInFlow + 1, 0));&#xD;
   &#xD;
   int nHops = nNodesInFlow - 1;&#xD;
   &#xD;
   /*minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
   * reliability for the flow.&#xD;
   * Use max to handle rounding error when e2e == 1.0 */&#xD;
   Double minLinkReliablityNeeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); &#xD;
   &#xD;
   &#xD;
   /* Now compute reliability of packet reaching each node in the given time slot:&#xD;
    *Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
    *each row is a time slot, stating at time 0&#xD;
    *each column represents the reliability of the packet reaching that node at the&#xD;
    *current time slot (i.e., the row it is in)&#xD;
    *will add rows as we compute reliabilities until the final reliability is reached&#xD;
    *for all nodes. */&#xD;
   ReliabilityTable reliabilityWindow = new ReliabilityTable();&#xD;
   &#xD;
   ReliabilityRow nextRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
   // initialize (i.e., P (packet@FlowSrc = 1)&#xD;
   nextRow.set(0, 1.0);&#xD;
   // the analysis will end when the e2e reliability metric is met, initially the&#xD;
   // state is not met and will be 0 with this statement&#xD;
   Double e2eReliabilityState = nextRow.get(nNodesInFlow - 1);&#xD;
   &#xD;
   &#xD;
   int timeSlot = 0;&#xD;
   ReliabilityRow prevReliabilityRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
   &#xD;
   while (e2eReliabilityState &lt; e2e) {&#xD;
 	  Collections.copy(prevReliabilityRow, nextRow);&#xD;
 	  &#xD;
 	  nextRow = nextRow(prevReliabilityRow, minLinkReliablityNeeded);&#xD;
       &#xD;
 	  e2eReliabilityState = nextRow.get(nNodesInFlow - 1);&#xD;
       &#xD;
 	  reliabilityWindow.add(nextRow);&#xD;
       &#xD;
 	  timeSlot += 1;&#xD;
   &#xD;
   }&#xD;
	  &#xD;
	  // The total (worst-case) cost to transmit E2E in isolation with&#xD;
   // specified reliability target is the number of rows in the reliabilityWindow,&#xD;
   // which is equal to the number of time slots.&#xD;
   int time = timeSlot;&#xD;
	  nPushes.set(nNodesInFlow, time);&#xD;
	  return nPushes;&#xD;
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0HATg8v3Ee2QFfqiYSegRA" name="nextRow" specification="_0GlcwMv3Ee2QFfqiYSegRA">
                <ownedParameter xmi:id="_0HAThMv3Ee2QFfqiYSegRA" name="prevReliabilityRow" type="_Rh_mIbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_0HAThcv3Ee2QFfqiYSegRA" name="minLinkReliablityNeeded">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0HAThsv3Ee2QFfqiYSegRA" type="_Rh_mIbhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>int nNodesInFlow = nPushes.size()-1;&#xD;
	  ReliabilityRow currentReliabilityRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
	  Collections.copy(currentReliabilityRow, prevReliabilityRow);&#xD;
	  &#xD;
	  for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) {&#xD;
		  int flowSrcNodeindex = nodeIndex;&#xD;
		  int flowSnkNodeindex = nodeIndex + 1;&#xD;
		  Double prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeindex);&#xD;
		  Double prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeindex);&#xD;
		  Double nextSnkState;&#xD;
	  &#xD;
		  // do a push until PrevSnk state > e2e to ensure next node reaches target E2E BUT&#xD;
		  // skip if no chance of success (i.e., source doesn't have packet)&#xD;
		  if ((prevSrcNodeState > 0 &amp;&amp; prevSnkNodeState &lt; minLinkReliablityNeeded)) {&#xD;
		  &#xD;
		  		//need to continue attempting to Tx, so update current state&#xD;
		  		nextSnkState = ((1.0 - minPacketReceptionRate) * prevSnkNodeState) + &#xD;
		  					(minPacketReceptionRate * prevSrcNodeState);&#xD;
		  		// increment the number of pushes for for this node to snk node&#xD;
		  		nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1);&#xD;
		  } else {&#xD;
   			// snkNode has met its reliability. Thus move on to the&#xD;
 	  		// next node and record the reliability met&#xD;
   			nextSnkState = prevSnkNodeState;&#xD;
		  }&#xD;
		  &#xD;
		  currentReliabilityRow.set(flowSnkNodeindex, nextSnkState);&#xD;
	  }&#xD;
	  return currentReliabilityRow;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rh-YALhVEe2UuoshngsjNA" name="verifyReliabilities" method="_R51eYLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rh-YAbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1XOELhVEe2UuoshngsjNA" name="ReliabilityAnalysis" method="_R503XrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1XOErhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1XOE7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1XOFLhVEe2UuoshngsjNA" type="_Rh9w8bhVEe2UuoshngsjNA" direction="return"/>
                <ownedParameter xmi:id="_R1XOEbhVEe2UuoshngsjNA" name="program" type="_RhiTILhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_WaBrELhgEe2UuoshngsjNA" name="getReliabilities">
                <ownedParameter xmi:id="_WaBrEbhgEe2UuoshngsjNA" type="_RiCCYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_4KTHYL3hEe2wPvZiCmNZ2Q" name="numTxPerLinkAndTotalTxCost" visibility="public" method="_0HATgMv3Ee2QFfqiYSegRA">
                <ownedComment xmi:id="_0HFzEcv3Ee2QFfqiYSegRA">
                  <body>Calculates number of transmissions needed per link and total worst-case&#xD;
   * transmission time for the given flow.&#xD;
   * &#xD;
   * @param flow the flow being analyzed&#xD;
   * @return an ArrayList containing the number of transmissions per link and the&#xD;
   * total worst case time of transmitting end to end at the end of the List.</body>
                </ownedComment>
                <ownedParameter xmi:id="_9yYKML3hEe2wPvZiCmNZ2Q" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                <ownedParameter xmi:id="_9yiiQL3hEe2wPvZiCmNZ2Q" name="flow" type="_RgiNkLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eh1EwL3iEe2wPvZiCmNZ2Q" name="ReliabilityAnalysis" visibility="public" method="_0G-eUMv3Ee2QFfqiYSegRA">
                <eAnnotations xmi:id="_nbFioL3iEe2wPvZiCmNZ2Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nbFiob3iEe2wPvZiCmNZ2Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_0HFMAcv3Ee2QFfqiYSegRA">
                  <body>Creates a new ReliabilityAnalysis object with the provided values for&#xD;
    * end-to-end communication and minimum packet reception rate. All other&#xD;
    * values are set to defaults.&#xD;
    * &#xD;
    * @param e2e The required end to end communication reliability for flows&#xD;
    * @param minPacketReceptionRate The minimum packet reception rate for nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_Sy-PIL3iEe2wPvZiCmNZ2Q" type="_Rh9w8bhVEe2UuoshngsjNA" direction="return"/>
                <ownedParameter xmi:id="_Eh1r0L3iEe2wPvZiCmNZ2Q" name="e2e" type="_R3R5oLhVEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_c1_zQL3iEe2wPvZiCmNZ2Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_c2BBYL3iEe2wPvZiCmNZ2Q" key="create"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_Eh1r0b3iEe2wPvZiCmNZ2Q" name="minPacketReceptionRate" type="_R3R5oLhVEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_i9qVEL3iEe2wPvZiCmNZ2Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_i9q8IL3iEe2wPvZiCmNZ2Q" key="create"/>
                  </eAnnotations>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_HDuZwL3iEe2wPvZiCmNZ2Q" name="ReliabilityAnalysis" visibility="public" method="_0G_FYMv3Ee2QFfqiYSegRA">
                <eAnnotations xmi:id="_hiXbwL3iEe2wPvZiCmNZ2Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_hiYC0L3iEe2wPvZiCmNZ2Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_0HFMAsv3Ee2QFfqiYSegRA">
                  <body>Creates a new ReliabilityAnalysis object with the provided values for&#xD;
    * the number of faults. All other values are set to defaults.&#xD;
    * &#xD;
    * @param numFaults The number of faults allowed per edge in a Flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_Vy0EYL3iEe2wPvZiCmNZ2Q" type="_Rh9w8bhVEe2UuoshngsjNA" direction="return"/>
                <ownedParameter xmi:id="_HDuZwb3iEe2wPvZiCmNZ2Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_0F78gMv3Ee2QFfqiYSegRA" name="setDefaultParameters" visibility="private" method="_0G_scMv3Ee2QFfqiYSegRA">
                <ownedComment xmi:id="_0HFzEMv3Ee2QFfqiYSegRA">
                  <body>Sets all parameters to default values specified within this method.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_0GlcwMv3Ee2QFfqiYSegRA" name="nextRow" visibility="private" method="_0HATg8v3Ee2QFfqiYSegRA">
                <ownedComment xmi:id="_0HFzEsv3Ee2QFfqiYSegRA">
                  <body>Computes the next row in the reliability window.&#xD;
   * &#xD;
   * @param prevReliabilityRow The previous reliability row in the reliability window&#xD;
   * @param minLinkReliablityNeeded The minimum reliability needed for each link in the path&#xD;
   * @return the next reliability row in the reliability window</body>
                </ownedComment>
                <ownedParameter xmi:id="_0GmD0Mv3Ee2QFfqiYSegRA" name="prevReliabilityRow" type="_Rh_mIbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_0GmD0cv3Ee2QFfqiYSegRA" name="minLinkReliablityNeeded">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_0GmD0sv3Ee2QFfqiYSegRA" type="_Rh_mIbhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Rh-YArhVEe2UuoshngsjNA" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_R6WbxrhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Rh-_ELhVEe2UuoshngsjNA" name="minPacketReceptionRate" type="_R3R5oLhVEe2UuoshngsjNA" isReadOnly="true"/>
              <ownedAttribute xmi:id="_Rh_mILhVEe2UuoshngsjNA" name="e2e" type="_R3R5oLhVEe2UuoshngsjNA" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rh_mIbhVEe2UuoshngsjNA" name="ReliabilityRow">
              <generalization xmi:id="_R1X1ILhVEe2UuoshngsjNA" general="_RiGT0LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4pyo7hVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4pypLhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R51eYrhVEe2UuoshngsjNA" name="ReliabilityRow" specification="_RiA0QLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R51eY7hVEe2UuoshngsjNA" type="_Rh_mIbhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R51eZLhVEe2UuoshngsjNA" name="ReliabilityRow" specification="_R3WyILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R51eZbhVEe2UuoshngsjNA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R51eZrhVEe2UuoshngsjNA" name="element" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R51eZ7hVEe2UuoshngsjNA" type="_Rh_mIbhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R51eaLhVEe2UuoshngsjNA" name="ReliabilityRow" specification="_R3WyJrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R51eabhVEe2UuoshngsjNA" name="rowArray" type="_R3R5oLhVEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R51earhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R51ea7hVEe2UuoshngsjNA" type="_Rh_mIbhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RiA0QLhVEe2UuoshngsjNA" name="ReliabilityRow" method="_R51eYrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RiA0QbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RiA0QrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RiA0Q7hVEe2UuoshngsjNA" type="_Rh_mIbhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3WyILhVEe2UuoshngsjNA" name="ReliabilityRow" visibility="package" method="_R51eZLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3WyI7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3WyJLhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R3WyIbhVEe2UuoshngsjNA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3WyIrhVEe2UuoshngsjNA" name="element" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3WyJbhVEe2UuoshngsjNA" type="_Rh_mIbhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3WyJrhVEe2UuoshngsjNA" name="ReliabilityRow" visibility="package" method="_R51eaLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3XZMLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3XZMbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R3WyJ7hVEe2UuoshngsjNA" name="rowArray" type="_R3R5oLhVEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3XZM7hVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3XZMrhVEe2UuoshngsjNA" type="_Rh_mIbhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RiCCYLhVEe2UuoshngsjNA" name="ReliabilityTable">
              <generalization xmi:id="_R1YcMLhVEe2UuoshngsjNA" general="_Riul8LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4qZsLhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4qZsbhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R51ebLhVEe2UuoshngsjNA" name="ReliabilityTable" specification="_RiCCYbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R51ebbhVEe2UuoshngsjNA" type="_RiCCYLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R52FcLhVEe2UuoshngsjNA" name="ReliabilityTable" specification="_RiCpc7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R52FcbhVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R52FcrhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R52Fc7hVEe2UuoshngsjNA" type="_RiCCYLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RiCCYbhVEe2UuoshngsjNA" name="ReliabilityTable" method="_R51ebLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RiCpcLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RiCpcbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RiCpcrhVEe2UuoshngsjNA" type="_RiCCYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RiCpc7hVEe2UuoshngsjNA" name="ReliabilityTable" visibility="package" method="_R52FcLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RiCpdrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RiCpd7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RiCpdLhVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiCpdbhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiCpeLhVEe2UuoshngsjNA" type="_RiCCYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RiDQgLhVEe2UuoshngsjNA" name="ReliabilityVisualization">
              <ownedComment xmi:id="_R6Wbx7hVEe2UuoshngsjNA">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R1ZqULhVEe2UuoshngsjNA" general="_Ri8oYLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4qZsrhVEe2UuoshngsjNA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4qZs7hVEe2UuoshngsjNA" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4qZtLhVEe2UuoshngsjNA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4rAwLhVEe2UuoshngsjNA" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4rAwbhVEe2UuoshngsjNA" name="warp" visibility="private" type="_RjW4ELhVEe2UuoshngsjNA" association="_R7FblLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4rAw7hVEe2UuoshngsjNA" name="ra" visibility="private" type="_Rh9w8bhVEe2UuoshngsjNA" association="_R7GCobhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R52FdLhVEe2UuoshngsjNA" name="ReliabilityVisualization" specification="_R1ZDQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R52FdbhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R52FdrhVEe2UuoshngsjNA" type="_RiDQgLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R1ZDQLhVEe2UuoshngsjNA" name="ReliabilityVisualization" visibility="package" method="_R52FdLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1ZDQrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1ZDQ7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1ZDQbhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1ZDRLhVEe2UuoshngsjNA" type="_RiDQgLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RiEeoLhVEe2UuoshngsjNA" name="ReportVisualization">
              <generalization xmi:id="_R1a4cbhVEe2UuoshngsjNA" general="_Ri8oYLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4rn0LhVEe2UuoshngsjNA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4rn0bhVEe2UuoshngsjNA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4rn0rhVEe2UuoshngsjNA" name="content" visibility="private" type="_RgUyMLhVEe2UuoshngsjNA" association="_R7GCpLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4rn1LhVEe2UuoshngsjNA" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R52Fd7hVEe2UuoshngsjNA" name="ReportVisualization" specification="_R1aRYLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R52FeLhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R52FebhVEe2UuoshngsjNA" name="warp" type="_RiptcLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R52FerhVEe2UuoshngsjNA" name="content" type="_RgUyMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R52Fe7hVEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R52FfLhVEe2UuoshngsjNA" type="_RiEeoLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R52sgLhVEe2UuoshngsjNA" name="visualization" specification="_RiFFsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R52sgbhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R52sgrhVEe2UuoshngsjNA" name="createReport" specification="_RiFsw7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R52sg7hVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RiFFsLhVEe2UuoshngsjNA" name="visualization" method="_R52sgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1aRaLhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RiFsw7hVEe2UuoshngsjNA" name="createReport" visibility="private" method="_R52sgrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1a4cLhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1aRYLhVEe2UuoshngsjNA" name="ReportVisualization" visibility="package" method="_R52Fd7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1aRZbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1aRZrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1aRYbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1aRYrhVEe2UuoshngsjNA" name="warp" type="_RiptcLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1aRY7hVEe2UuoshngsjNA" name="content" type="_RgUyMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1aRZLhVEe2UuoshngsjNA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1aRZ7hVEe2UuoshngsjNA" type="_RiEeoLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RiGT0LhVEe2UuoshngsjNA" name="Row">
              <generalization xmi:id="_R3YnVrhVEe2UuoshngsjNA" general="_R0Gp0LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4sO4bhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4sO4rhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R52shLhVEe2UuoshngsjNA" name="Row" specification="_RiHh8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R52shbhVEe2UuoshngsjNA" type="_RiGT0LhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R52shrhVEe2UuoshngsjNA" name="Row" specification="_R3YAQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R52sh7hVEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R52siLhVEe2UuoshngsjNA" name="element" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R52sibhVEe2UuoshngsjNA" type="_RiGT0LhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R52sirhVEe2UuoshngsjNA" name="Row" specification="_R3YnULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R52si7hVEe2UuoshngsjNA" name="rowArray" type="_R24RALhVEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R52sjLhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R52sjbhVEe2UuoshngsjNA" type="_RiGT0LhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R52sjrhVEe2UuoshngsjNA" name="Row" specification="_RiHh9LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R52sj7hVEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R52skLhVEe2UuoshngsjNA" type="_RiGT0LhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RiHh8LhVEe2UuoshngsjNA" name="Row" method="_R52shLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RiHh8bhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RiHh8rhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RiHh87hVEe2UuoshngsjNA" type="_RiGT0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RiHh9LhVEe2UuoshngsjNA" name="Row" visibility="package" method="_R52sjrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RiIJALhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RiIJAbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RiHh9bhVEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiIJArhVEe2UuoshngsjNA" type="_RiGT0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3YAQLhVEe2UuoshngsjNA" name="Row" visibility="package" method="_R52shrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3YAQ7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3YARLhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R3YAQbhVEe2UuoshngsjNA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3YAQrhVEe2UuoshngsjNA" name="element" type="_R24RALhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3YARbhVEe2UuoshngsjNA" type="_RiGT0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3YnULhVEe2UuoshngsjNA" name="Row" visibility="package" method="_R52sirhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3YnUrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3YnU7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R3YnUbhVEe2UuoshngsjNA" name="rowArray" type="_R24RALhVEe2UuoshngsjNA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R3YnVbhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3YnVLhVEe2UuoshngsjNA" type="_RiGT0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RiIwELhVEe2UuoshngsjNA" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_R4s18LhVEe2UuoshngsjNA" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4s18bhVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4s18rhVEe2UuoshngsjNA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4s187hVEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4s19LhVEe2UuoshngsjNA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4tdALhVEe2UuoshngsjNA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4tdAbhVEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4tdArhVEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4tdA7hVEe2UuoshngsjNA" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4tdBLhVEe2UuoshngsjNA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4tdBbhVEe2UuoshngsjNA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4uEEbhVEe2UuoshngsjNA" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4uEErhVEe2UuoshngsjNA" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4uEE7hVEe2UuoshngsjNA" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4urILhVEe2UuoshngsjNA" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4urIrhVEe2UuoshngsjNA" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4vSMbhVEe2UuoshngsjNA" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4v5QLhVEe2UuoshngsjNA" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4v5QbhVEe2UuoshngsjNA" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4v5QrhVEe2UuoshngsjNA" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4v5Q7hVEe2UuoshngsjNA" name="predecessor" type="_RiIwELhVEe2UuoshngsjNA" association="_R6XC0LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4wgULhVEe2UuoshngsjNA" name="endTimes" visibility="private" type="_Rh8i1LhVEe2UuoshngsjNA" association="_R7GpsbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4xHYLhVEe2UuoshngsjNA" name="subObjects" type="_R1cGkbhVEe2UuoshngsjNA" isReadOnly="true" association="_R7HQwbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R53TkLhVEe2UuoshngsjNA" name="SchedulableObject" specification="_RiLzYLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R53TkbhVEe2UuoshngsjNA" type="_RiIwELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R53TkrhVEe2UuoshngsjNA" name="SchedulableObject" specification="_R1dUsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R53Tk7hVEe2UuoshngsjNA" name="obj" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R53TlLhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53TlbhVEe2UuoshngsjNA" type="_RiIwELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R53TlrhVEe2UuoshngsjNA" name="SchedulableObject" specification="_RiMacLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R53Tl7hVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53TmLhVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53TmbhVEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53TmrhVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53Tm7hVEe2UuoshngsjNA" type="_RiIwELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R53TnLhVEe2UuoshngsjNA" name="SchedulableObject" specification="_RiNBg7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R53TnbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53TnrhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53Tn7hVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53ToLhVEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53TobhVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R53TorhVEe2UuoshngsjNA" type="_RiIwELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R53To7hVEe2UuoshngsjNA" name="setDefaultParameters" specification="_RiNomLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R53TpLhVEe2UuoshngsjNA" name="getAllEndTimes" specification="_RiOPoLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R53TpbhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536oLhVEe2UuoshngsjNA" name="addToEndTimes" specification="_RiOPorhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536obhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536orhVEe2UuoshngsjNA" name="peekEndTimes" specification="_RiO2sLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536o7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536pLhVEe2UuoshngsjNA" name="pollEndTimes" specification="_RiO2srhVEe2UuoshngsjNA">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536pbhVEe2UuoshngsjNA" name="addSubObject" specification="_R1dUt7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536prhVEe2UuoshngsjNA" name="obj" type="_RiIwELhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536p7hVEe2UuoshngsjNA" name="getName" specification="_RiO2s7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536qLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536qbhVEe2UuoshngsjNA" name="setName" specification="_RiPdwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536qrhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536q7hVEe2UuoshngsjNA" name="getReleaseTime" specification="_RiPdwrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536rLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536rbhVEe2UuoshngsjNA" name="getPhase" specification="_RiPdxLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536rrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536r7hVEe2UuoshngsjNA" name="getStartTime" specification="_RiQE0bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536sLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536sbhVEe2UuoshngsjNA" name="setEndTime" specification="_RiQE07hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536srhVEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R536s7hVEe2UuoshngsjNA" name="setStartTime" specification="_RiQr4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R536tLhVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R54hsLhVEe2UuoshngsjNA" name="setReleaseTime" specification="_RiQr4rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R54hsbhVEe2UuoshngsjNA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R54hsrhVEe2UuoshngsjNA" name="setPeriod" specification="_RiQr5LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R54hs7hVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R54htLhVEe2UuoshngsjNA" name="setPhase" specification="_RiRS8bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R54htbhVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R54htrhVEe2UuoshngsjNA" name="setNextReleaseTime" specification="_RiRS87hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R54ht7hVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R54huLhVEe2UuoshngsjNA" name="maxPhaseComparison" specification="_R1d7wbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R54hubhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R54hurhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R54hu7hVEe2UuoshngsjNA" name="maxPhaseComparison" specification="_R1ei0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R54hvLhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R54hvbhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R54hvrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55IwLhVEe2UuoshngsjNA" name="deadlineComparison" specification="_R1ei1LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55IwbhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55IwrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55Iw7hVEe2UuoshngsjNA" name="deadlineComparison" specification="_R1fJ4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55IxLhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55IxbhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55IxrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55Ix7hVEe2UuoshngsjNA" name="periodComparison" specification="_R1fJ5LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55IyLhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55IybhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55IyrhVEe2UuoshngsjNA" name="periodComparison" specification="_R1fw8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55Iy7hVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55IzLhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55IzbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55IzrhVEe2UuoshngsjNA" name="priorityComparison" specification="_R1fw9LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55Iz7hVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55I0LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55I0bhVEe2UuoshngsjNA" name="priorityComparison" specification="_R1fw97hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55I0rhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55I07hVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55I1LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55I1bhVEe2UuoshngsjNA" name="releaseTimeComparison" specification="_R1gYAbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55I1rhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55I17hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55v0LhVEe2UuoshngsjNA" name="releaseTimeComparison" specification="_R1gYBLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55v0bhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55v0rhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55v07hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55v1LhVEe2UuoshngsjNA" name="LatestReleaseTimeComparison" specification="_R1g_E7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55v1bhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55v1rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55v17hVEe2UuoshngsjNA" name="LatestReleaseTimeComparison" specification="_R1g_FrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55v2LhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55v2bhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R55v2rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55v27hVEe2UuoshngsjNA" name="compareAscendingOrder" specification="_RiShELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55v3LhVEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R55v3bhVEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R55v3rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55v37hVEe2UuoshngsjNA" name="compareDescendingOrder" specification="_RiTIILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55v4LhVEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R55v4bhVEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R55v4rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55v47hVEe2UuoshngsjNA" name="print" specification="_RiTIJLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R55v5LhVEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R55v5bhVEe2UuoshngsjNA" name="print" specification="_RiTIJrhVEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RiLzYLhVEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_R53TkLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RiLzYbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RiLzYrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RiLzY7hVEe2UuoshngsjNA" type="_RiIwELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RiMacLhVEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_R53TlrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RiNBgLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RiNBgbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RiMacbhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiMacrhVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiMac7hVEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiMadLhVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiNBgrhVEe2UuoshngsjNA" type="_RiIwELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RiNBg7hVEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_R53TnLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RiNolbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RiNolrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RiNokLhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiNokbhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiNokrhVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiNok7hVEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiNolLhVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiNol7hVEe2UuoshngsjNA" type="_RiIwELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RiNomLhVEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_R53To7hVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RiOPoLhVEe2UuoshngsjNA" name="getAllEndTimes" method="_R53TpLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6XC07hVEe2UuoshngsjNA">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1dUtrhVEe2UuoshngsjNA" type="_Rh8i1LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RiOPorhVEe2UuoshngsjNA" name="addToEndTimes" method="_R536oLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RiOPo7hVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiO2sLhVEe2UuoshngsjNA" name="peekEndTimes" method="_R536orhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RiO2sbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiO2srhVEe2UuoshngsjNA" name="pollEndTimes" method="_R536pLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RiO2s7hVEe2UuoshngsjNA" name="getName" method="_R536p7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6XC1LhVEe2UuoshngsjNA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiO2tLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiPdwLhVEe2UuoshngsjNA" name="setName" method="_R536qbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6XC1bhVEe2UuoshngsjNA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiPdwbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiPdwrhVEe2UuoshngsjNA" name="getReleaseTime" method="_R536q7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6XC1rhVEe2UuoshngsjNA">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiPdw7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiPdxLhVEe2UuoshngsjNA" name="getPhase" method="_R536rbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6XC17hVEe2UuoshngsjNA">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiQE0LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiQE0bhVEe2UuoshngsjNA" name="getStartTime" method="_R536r7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6XC2LhVEe2UuoshngsjNA">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiQE0rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiQE07hVEe2UuoshngsjNA" name="setEndTime" method="_R536sbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Xp4LhVEe2UuoshngsjNA">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiQE1LhVEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiQr4LhVEe2UuoshngsjNA" name="setStartTime" method="_R536s7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Xp4bhVEe2UuoshngsjNA">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiQr4bhVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiQr4rhVEe2UuoshngsjNA" name="setReleaseTime" method="_R54hsLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Xp4rhVEe2UuoshngsjNA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiQr47hVEe2UuoshngsjNA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiQr5LhVEe2UuoshngsjNA" name="setPeriod" method="_R54hsrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Xp47hVEe2UuoshngsjNA">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiRS8LhVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiRS8bhVEe2UuoshngsjNA" name="setPhase" method="_R54htLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Xp5LhVEe2UuoshngsjNA">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiRS8rhVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiRS87hVEe2UuoshngsjNA" name="setNextReleaseTime" method="_R54htrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Xp5bhVEe2UuoshngsjNA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RiRS9LhVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiShELhVEe2UuoshngsjNA" name="compareAscendingOrder" method="_R55v27hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RiShEbhVEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiShErhVEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiShE7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiTIILhVEe2UuoshngsjNA" name="compareDescendingOrder" method="_R55v37hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RiTIIbhVEe2UuoshngsjNA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiTIIrhVEe2UuoshngsjNA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RiTII7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiTIJLhVEe2UuoshngsjNA" name="print" method="_R55v47hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RiTIJbhVEe2UuoshngsjNA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiTIJrhVEe2UuoshngsjNA" name="print" method="_R55v5bhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_R1dUsLhVEe2UuoshngsjNA" name="SchedulableObject" visibility="package" method="_R53TkrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1dUs7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1dUtLhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6XC0rhVEe2UuoshngsjNA">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1dUsbhVEe2UuoshngsjNA" name="obj" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1dUsrhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1dUtbhVEe2UuoshngsjNA" type="_RiIwELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1dUt7hVEe2UuoshngsjNA" name="addSubObject" method="_R536pbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1d7wLhVEe2UuoshngsjNA" name="obj" type="_RiIwELhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1d7wbhVEe2UuoshngsjNA" name="maxPhaseComparison" method="_R54huLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1d7wrhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1d7w7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1ei0LhVEe2UuoshngsjNA" name="maxPhaseComparison" method="_R54hu7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1ei0bhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1ei0rhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1ei07hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1ei1LhVEe2UuoshngsjNA" name="deadlineComparison" method="_R55IwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1ei1bhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1ei1rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1fJ4LhVEe2UuoshngsjNA" name="deadlineComparison" method="_R55Iw7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1fJ4bhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1fJ4rhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1fJ47hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1fJ5LhVEe2UuoshngsjNA" name="periodComparison" method="_R55Ix7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1fJ5bhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1fJ5rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1fw8LhVEe2UuoshngsjNA" name="periodComparison" method="_R55IyrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1fw8bhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1fw8rhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1fw87hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1fw9LhVEe2UuoshngsjNA" name="priorityComparison" method="_R55IzrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1fw9bhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1fw9rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1fw97hVEe2UuoshngsjNA" name="priorityComparison" method="_R55I0bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1fw-LhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1fw-bhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1gYALhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1gYAbhVEe2UuoshngsjNA" name="releaseTimeComparison" method="_R55I1bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1gYArhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1gYA7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1gYBLhVEe2UuoshngsjNA" name="releaseTimeComparison" method="_R55v0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1g_ELhVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1g_EbhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1g_ErhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1g_E7hVEe2UuoshngsjNA" name="LatestReleaseTimeComparison" method="_R55v1LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1g_FLhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1g_FbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1g_FrhVEe2UuoshngsjNA" name="LatestReleaseTimeComparison" method="_R55v17hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1g_F7hVEe2UuoshngsjNA" name="obj1" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1g_GLhVEe2UuoshngsjNA" name="obj2" type="_RiIwELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1hmILhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RiZ10LhVEe2UuoshngsjNA" name="SchedulableObjectQueue">
              <generalization xmi:id="_Riac4LhVEe2UuoshngsjNA" general="_Rh8i1LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4xucLhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4yVgLhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R56W4LhVEe2UuoshngsjNA" name="SchedulableObjectQueue" specification="_R3bDkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R56W4bhVEe2UuoshngsjNA" name="comparitor" type="_R0ay47hVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R56W4rhVEe2UuoshngsjNA" type="_RiZ10LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R56W47hVEe2UuoshngsjNA" name="SchedulableObjectQueue" specification="_R3bqobhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R56W5LhVEe2UuoshngsjNA" name="comparitor" type="_R0ay47hVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R56W5bhVEe2UuoshngsjNA" name="schedulableObjects" type="_R0-zkLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R56W5rhVEe2UuoshngsjNA" type="_RiZ10LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R3bDkLhVEe2UuoshngsjNA" name="SchedulableObjectQueue" visibility="package" method="_R56W4LhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3bDkrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3bDk7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R3bDkbhVEe2UuoshngsjNA" name="comparitor" type="_R0ay47hVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3bDlLhVEe2UuoshngsjNA" type="_RiZ10LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3bqobhVEe2UuoshngsjNA" name="SchedulableObjectQueue" visibility="package" method="_R56W47hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3bqpLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3bqpbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R3bqorhVEe2UuoshngsjNA" name="comparitor" type="_R0ay47hVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3bqo7hVEe2UuoshngsjNA" name="schedulableObjects" type="_R0-zkLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3bqprhVEe2UuoshngsjNA" type="_RiZ10LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RibrALhVEe2UuoshngsjNA" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_R6Xp5rhVEe2UuoshngsjNA">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R4yVgbhVEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4yVgrhVEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4yVg7hVEe2UuoshngsjNA" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4y8kbhVEe2UuoshngsjNA" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4y8k7hVEe2UuoshngsjNA" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R4y8lLhVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4zjoLhVEe2UuoshngsjNA" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4zjorhVEe2UuoshngsjNA" name="schedule" visibility="protected" type="_Rijm0LhVEe2UuoshngsjNA" association="_R7H30bhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4zjpLhVEe2UuoshngsjNA" name="poset" visibility="protected" type="_RhUQsLhVEe2UuoshngsjNA" association="_R7Ie4bhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5698LhVEe2UuoshngsjNA" name="Schedule" specification="_R1kpcLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5698bhVEe2UuoshngsjNA" name="poset" type="_RhUQsLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5698rhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R56987hVEe2UuoshngsjNA" type="_RibrALhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R569_rhVEe2UuoshngsjNA" name="getSchedule" specification="_RieHQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R569_7hVEe2UuoshngsjNA" type="_Rijm0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R56-ALhVEe2UuoshngsjNA" name="buildSchedule" specification="_RieHQbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R56-AbhVEe2UuoshngsjNA" name="toProgram" specification="_RieHQrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R56-ArhVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R57lALhVEe2UuoshngsjNA" name="replaceNullWithSleep" specification="_R1lQhrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R57lAbhVEe2UuoshngsjNA" name="program" type="_RhzY4LhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R57lArhVEe2UuoshngsjNA" name="fakeSchedulingToTestRest" specification="_R1l3kLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R57lA7hVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R57lBLhVEe2UuoshngsjNA" name="getChannelAndSetStartTime" specification="_R1l3krhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R57lBbhVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R57lBrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R57lB7hVEe2UuoshngsjNA" name="findChannelAndTime" specification="_R1l3lbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R57lCLhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R57lCbhVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R57lCrhVEe2UuoshngsjNA" type="_RicSELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R57lC7hVEe2UuoshngsjNA" name="continueSearch" specification="_R1meorhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R57lDLhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R57lDbhVEe2UuoshngsjNA" name="activation" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R57lDrhVEe2UuoshngsjNA" type="_RicSELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R57lD7hVEe2UuoshngsjNA" name="noOtherChannelConflicts" specification="_R1nFsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R57lELhVEe2UuoshngsjNA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R57lEbhVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R57lErhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R57lE7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R57lFLhVEe2UuoshngsjNA" name="conflictsExist" specification="_R1nFtbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R57lFbhVEe2UuoshngsjNA" name="obj" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R57lFrhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R57lF7hVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R57lGLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58MELhVEe2UuoshngsjNA" name="freeOfCoordinatorConflicts" specification="_R1nswbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R58MEbhVEe2UuoshngsjNA" name="obj" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R58MErhVEe2UuoshngsjNA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58ME7hVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MFLhVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MFbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58MFrhVEe2UuoshngsjNA" name="isAvailable" specification="_R1oT0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R58MF7hVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R58MGLhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MGbhVEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MGrhVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MG7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58MHLhVEe2UuoshngsjNA" name="isAvailable" specification="_R1oT1rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R58MHbhVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R58MHrhVEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MH7hVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MILhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58MIbhVEe2UuoshngsjNA" name="timeRemaining" specification="_RigjgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R58MIrhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MI7hVEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MJLhVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58MJbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58MJrhVEe2UuoshngsjNA" name="canCombineEntriesInPlace" specification="_R1o64bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R58MJ7hVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R58MKLhVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R58MKbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58zILhVEe2UuoshngsjNA" name="combinedEntriesInPlace" specification="_R1o65bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R58zIbhVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R58zIrhVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R58zI7hVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R58zJLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58zJbhVEe2UuoshngsjNA" name="addToSchedule" specification="_R1ph8rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R58zJrhVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R58zJ7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58zKLhVEe2UuoshngsjNA" name="reportNotSchedulable" specification="_R1ph9bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R58zKbhVEe2UuoshngsjNA" name="object" type="_RftHILhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58zKrhVEe2UuoshngsjNA" name="printVerbose" specification="_RihKkLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R58zK7hVEe2UuoshngsjNA" name="print" specification="_RihKkbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RieHQLhVEe2UuoshngsjNA" name="getSchedule" method="_R569_rhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6YQ8rhVEe2UuoshngsjNA">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1lQhLhVEe2UuoshngsjNA" type="_Rijm0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RieHQbhVEe2UuoshngsjNA" name="buildSchedule" visibility="private" method="_R56-ALhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RieHQrhVEe2UuoshngsjNA" name="toProgram" method="_R56-AbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1lQhbhVEe2UuoshngsjNA" type="_RhzY4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RigjgLhVEe2UuoshngsjNA" name="timeRemaining" visibility="protected" method="_R58MIbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6YQ-LhVEe2UuoshngsjNA">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_RigjgbhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RigjgrhVEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rigjg7hVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RigjhLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RihKkLhVEe2UuoshngsjNA" name="printVerbose" method="_R58zKrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RihKkbhVEe2UuoshngsjNA" name="print" method="_R58zK7hVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_R1kpcLhVEe2UuoshngsjNA" name="Schedule" visibility="package" method="_R5698LhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1lQgbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1lQgrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1kpcbhVEe2UuoshngsjNA" name="poset" type="_RhUQsLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1lQgLhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1lQg7hVEe2UuoshngsjNA" type="_RibrALhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1lQhrhVEe2UuoshngsjNA" name="replaceNullWithSleep" visibility="private" method="_R57lALhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6YQ87hVEe2UuoshngsjNA">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1lQh7hVEe2UuoshngsjNA" name="program" type="_RhzY4LhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1l3kLhVEe2UuoshngsjNA" name="fakeSchedulingToTestRest" visibility="private" method="_R57lArhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1l3kbhVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1l3krhVEe2UuoshngsjNA" name="getChannelAndSetStartTime" visibility="protected" method="_R57lBLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6YQ9LhVEe2UuoshngsjNA">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1l3k7hVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1l3lLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1l3lbhVEe2UuoshngsjNA" name="findChannelAndTime" visibility="protected" method="_R57lB7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1l3lrhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1meoLhVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1meobhVEe2UuoshngsjNA" type="_RicSELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1meorhVEe2UuoshngsjNA" name="continueSearch" visibility="protected" method="_R57lC7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6YQ9bhVEe2UuoshngsjNA">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1meo7hVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1mepLhVEe2UuoshngsjNA" name="activation" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1mepbhVEe2UuoshngsjNA" type="_RicSELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1nFsLhVEe2UuoshngsjNA" name="noOtherChannelConflicts" visibility="protected" method="_R57lD7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1nFsbhVEe2UuoshngsjNA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1nFsrhVEe2UuoshngsjNA" name="schedulableObject" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1nFs7hVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1nFtLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1nFtbhVEe2UuoshngsjNA" name="conflictsExist" visibility="protected" method="_R57lFLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1nFtrhVEe2UuoshngsjNA" name="obj" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1nFt7hVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1nFuLhVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1nswLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1nswbhVEe2UuoshngsjNA" name="freeOfCoordinatorConflicts" visibility="protected" method="_R58MELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1nswrhVEe2UuoshngsjNA" name="obj" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1nsw7hVEe2UuoshngsjNA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1nsxLhVEe2UuoshngsjNA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1nsxbhVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1nsxrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1oT0LhVEe2UuoshngsjNA" name="isAvailable" visibility="protected" method="_R58MFrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6YQ9rhVEe2UuoshngsjNA">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1oT0bhVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1oT0rhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1oT07hVEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1oT1LhVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1oT1bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1oT1rhVEe2UuoshngsjNA" name="isAvailable" visibility="protected" method="_R58MHLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6YQ97hVEe2UuoshngsjNA">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_R1oT17hVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1oT2LhVEe2UuoshngsjNA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1oT2bhVEe2UuoshngsjNA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1o64LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1o64bhVEe2UuoshngsjNA" name="canCombineEntriesInPlace" visibility="private" method="_R58MJrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1o64rhVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1o647hVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1o65LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1o65bhVEe2UuoshngsjNA" name="combinedEntriesInPlace" visibility="private" method="_R58zILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1o65rhVEe2UuoshngsjNA" name="a1" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1o657hVEe2UuoshngsjNA" name="a2" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1ph8LhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1ph8bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1ph8rhVEe2UuoshngsjNA" name="addToSchedule" visibility="protected" method="_R58zJbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1ph87hVEe2UuoshngsjNA" name="next" type="_RftHILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1ph9LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1ph9bhVEe2UuoshngsjNA" name="reportNotSchedulable" visibility="private" method="_R58zKLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1qJALhVEe2UuoshngsjNA" name="object" type="_RftHILhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_RicSELhVEe2UuoshngsjNA" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_R40KsbhVEe2UuoshngsjNA" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R40Ks7hVEe2UuoshngsjNA" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5699LhVEe2UuoshngsjNA" name="ScheduleLocation" specification="_Ric5ILhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R5699bhVEe2UuoshngsjNA" type="_RicSELhVEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5699rhVEe2UuoshngsjNA" name="ScheduleLocation" specification="_Ric5JLhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R56997hVEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_R569-LhVEe2UuoshngsjNA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_R569-bhVEe2UuoshngsjNA" type="_RicSELhVEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R569-rhVEe2UuoshngsjNA" name="getChannel" specification="_RidgMbhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R569-7hVEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R569_LhVEe2UuoshngsjNA" name="getTime" specification="_RidgM7hVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R569_bhVEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_Ric5ILhVEe2UuoshngsjNA" name="ScheduleLocation" visibility="package" method="_R5699LhVEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_Ric5IbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Ric5IrhVEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Ric5I7hVEe2UuoshngsjNA" type="_RicSELhVEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Ric5JLhVEe2UuoshngsjNA" name="ScheduleLocation" visibility="package" method="_R5699rhVEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_Ric5J7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Ric5KLhVEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Ric5JbhVEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Ric5JrhVEe2UuoshngsjNA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_RidgMLhVEe2UuoshngsjNA" type="_RicSELhVEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_RidgMbhVEe2UuoshngsjNA" name="getChannel" visibility="protected" method="_R569-rhVEe2UuoshngsjNA">
                  <ownedComment xmi:id="_R6YQ8LhVEe2UuoshngsjNA">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_RidgMrhVEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RidgM7hVEe2UuoshngsjNA" name="getTime" visibility="protected" method="_R569_LhVEe2UuoshngsjNA">
                  <ownedComment xmi:id="_R6YQ8bhVEe2UuoshngsjNA">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_RidgNLhVEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rijm0LhVEe2UuoshngsjNA" name="ScheduleTable">
              <generalization xmi:id="_R1rXILhVEe2UuoshngsjNA" general="_Riul8LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R40xwbhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R41Y0LhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R59aMLhVEe2UuoshngsjNA" name="ScheduleTable" specification="_RikN4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R59aMbhVEe2UuoshngsjNA" type="_Rijm0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R59aMrhVEe2UuoshngsjNA" name="ScheduleTable" specification="_Rik08LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R59aM7hVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R59aNLhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R59aNbhVEe2UuoshngsjNA" type="_Rijm0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RikN4LhVEe2UuoshngsjNA" name="ScheduleTable" visibility="package" method="_R59aMLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RikN4bhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RikN4rhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RikN47hVEe2UuoshngsjNA" type="_Rijm0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rik08LhVEe2UuoshngsjNA" name="ScheduleTable" visibility="package" method="_R59aMrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Rik087hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rik09LhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rik08bhVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rik08rhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rik09bhVEe2UuoshngsjNA" type="_Rijm0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RilcALhVEe2UuoshngsjNA" name="ScheduleTime">
              <ownedAttribute xmi:id="_R41Y0bhVEe2UuoshngsjNA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R41Y0rhVEe2UuoshngsjNA" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R59aNrhVEe2UuoshngsjNA" name="ScheduleTime" specification="_RimDELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R59aN7hVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R59aOLhVEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R59aObhVEe2UuoshngsjNA" type="_RilcALhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RimDELhVEe2UuoshngsjNA" name="ScheduleTime" visibility="package" method="_R59aNrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RimDE7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RimDFLhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RimDEbhVEe2UuoshngsjNA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RimDErhVEe2UuoshngsjNA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RimDFbhVEe2UuoshngsjNA" type="_RilcALhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RimqILhVEe2UuoshngsjNA" name="SimulatorInput">
              <ownedComment xmi:id="_R6YQ-bhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RinRMLhVEe2UuoshngsjNA" name="SortedPeriodQueue">
              <generalization xmi:id="_RiofULhVEe2UuoshngsjNA" general="_Rh8i1LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R41Y07hVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R41_4LhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R59aOrhVEe2UuoshngsjNA" name="SortedPeriodQueue" specification="_Rin4QbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R59aO7hVEe2UuoshngsjNA" type="_RinRMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-BQLhVEe2UuoshngsjNA" name="SortedPeriodQueue" specification="_R1r-MLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-BQbhVEe2UuoshngsjNA" name="schedulableObjects" type="_R0-zkLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-BQrhVEe2UuoshngsjNA" type="_RinRMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rin4QbhVEe2UuoshngsjNA" name="SortedPeriodQueue" visibility="package" method="_R59aOrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Rin4QrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rin4Q7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rin4RLhVEe2UuoshngsjNA" type="_RinRMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1r-MLhVEe2UuoshngsjNA" name="SortedPeriodQueue" visibility="package" method="_R5-BQLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1r-MrhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1r-M7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1r-MbhVEe2UuoshngsjNA" name="schedulableObjects" type="_R0-zkLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1r-NLhVEe2UuoshngsjNA" type="_RinRMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_RiptcLhVEe2UuoshngsjNA" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_R1slQbhVEe2UuoshngsjNA" general="_Rh-YArhVEe2UuoshngsjNA"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Riq7kLhVEe2UuoshngsjNA" name="ScheduleChoices">
                <ownedLiteral xmi:id="_Riq7krhVEe2UuoshngsjNA" name="PRIORITY"/>
                <ownedLiteral xmi:id="_Riq7k7hVEe2UuoshngsjNA" name="RM"/>
                <ownedLiteral xmi:id="_RirioLhVEe2UuoshngsjNA" name="DM"/>
                <ownedLiteral xmi:id="_RiriobhVEe2UuoshngsjNA" name="RTHART"/>
                <ownedLiteral xmi:id="_RiriorhVEe2UuoshngsjNA" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_Ririo7hVEe2UuoshngsjNA" name="POSET_RM"/>
                <ownedLiteral xmi:id="_RiripLhVEe2UuoshngsjNA" name="POSET_DM"/>
                <ownedLiteral xmi:id="_RiripbhVEe2UuoshngsjNA" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_RisJsLhVEe2UuoshngsjNA" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_RisJsbhVEe2UuoshngsjNA" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_RisJsrhVEe2UuoshngsjNA" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_RisJs7hVEe2UuoshngsjNA" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_RisJtLhVEe2UuoshngsjNA" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_RiswwLhVEe2UuoshngsjNA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RiswwbhVEe2UuoshngsjNA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RitX0LhVEe2UuoshngsjNA" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RitX0bhVEe2UuoshngsjNA" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RitX0rhVEe2UuoshngsjNA" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RitX07hVEe2UuoshngsjNA" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rit-4LhVEe2UuoshngsjNA" name="SystemFactory">
              <ownedComment xmi:id="_R6YQ-rhVEe2UuoshngsjNA">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-BQ7hVEe2UuoshngsjNA" name="create" specification="_R1tzYLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-BRLhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-BRbhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-BRrhVEe2UuoshngsjNA" name="choice" type="_Riq7kLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-BR7hVEe2UuoshngsjNA" type="_RjW4ELhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R1tzYLhVEe2UuoshngsjNA" name="create" isStatic="true" method="_R5-BQ7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1tzYbhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1tzYrhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1tzY7hVEe2UuoshngsjNA" name="choice" type="_Riq7kLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1tzZLhVEe2UuoshngsjNA" type="_RjW4ELhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Riul8LhVEe2UuoshngsjNA" name="Table">
              <generalization xmi:id="_R3fVAbhVEe2UuoshngsjNA" general="_R0Gp0LhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R41_4bhVEe2UuoshngsjNA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R41_4rhVEe2UuoshngsjNA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-BSLhVEe2UuoshngsjNA" name="Table" specification="_RivNAbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-BSbhVEe2UuoshngsjNA" type="_Riul8LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-BSrhVEe2UuoshngsjNA" name="Table" specification="_Riv0ELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-BS7hVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-BTLhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-BTbhVEe2UuoshngsjNA" type="_Riul8LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-BTrhVEe2UuoshngsjNA" name="getNumRows" specification="_Riv0FrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-BT7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-BULhVEe2UuoshngsjNA" name="getNumColumns" specification="_RiwbIbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-BUbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-BUrhVEe2UuoshngsjNA" name="set" specification="_R3et8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-BU7hVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-BVLhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-BVbhVEe2UuoshngsjNA" name="element" type="_R24RALhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-oULhVEe2UuoshngsjNA" name="get" specification="_RiwbI7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-oUbhVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-oUrhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-oU7hVEe2UuoshngsjNA" type="_R24RALhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RivNAbhVEe2UuoshngsjNA" name="Table" method="_R5-BSLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RivNArhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RivNA7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RivNBLhVEe2UuoshngsjNA" type="_Riul8LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Riv0ELhVEe2UuoshngsjNA" name="Table" method="_R5-BSrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_Riv0E7hVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Riv0FLhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Riv0EbhVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Riv0ErhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Riv0FbhVEe2UuoshngsjNA" type="_Riul8LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Riv0FrhVEe2UuoshngsjNA" name="getNumRows" method="_R5-BTrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RiwbILhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiwbIbhVEe2UuoshngsjNA" name="getNumColumns" method="_R5-BULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RiwbIrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RiwbI7hVEe2UuoshngsjNA" name="get" method="_R5-oULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RixCMLhVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RixCMbhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3fVALhVEe2UuoshngsjNA" type="_R24RALhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3et8LhVEe2UuoshngsjNA" name="set" method="_R5-BUrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3et8bhVEe2UuoshngsjNA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3et8rhVEe2UuoshngsjNA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3et87hVEe2UuoshngsjNA" name="element" type="_R24RALhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_RixpQLhVEe2UuoshngsjNA" name="Visualization">
              <ownedComment xmi:id="_R6Y4ALhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_RixpQbhVEe2UuoshngsjNA" name="SystemChoices">
                <ownedLiteral xmi:id="_RiyQUbhVEe2UuoshngsjNA" name="SOURCE"/>
                <ownedLiteral xmi:id="_RiyQUrhVEe2UuoshngsjNA" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_RiyQU7hVEe2UuoshngsjNA" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_RiyQVLhVEe2UuoshngsjNA" name="LATENCY"/>
                <ownedLiteral xmi:id="_RiyQVbhVEe2UuoshngsjNA" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_RiyQVrhVEe2UuoshngsjNA" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_Riy3YLhVEe2UuoshngsjNA" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Riy3YbhVEe2UuoshngsjNA" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_Ri0FgLhVEe2UuoshngsjNA" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_Ri0FgbhVEe2UuoshngsjNA" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_Ri0FgrhVEe2UuoshngsjNA" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_Ri0skLhVEe2UuoshngsjNA" name="toDisplay"/>
              <ownedOperation xmi:id="_Ri0skbhVEe2UuoshngsjNA" name="toFile"/>
              <ownedOperation xmi:id="_Ri0skrhVEe2UuoshngsjNA" name="toString">
                <ownedParameter xmi:id="_Ri0sk7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ri1ToLhVEe2UuoshngsjNA" name="VisualizationFactory">
              <ownedComment xmi:id="_R6Y4AbhVEe2UuoshngsjNA">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-oVLhVEe2UuoshngsjNA" name="createProgramVisualization" specification="_R1vokbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-oVbhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-oVrhVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-oV7hVEe2UuoshngsjNA" name="choice" type="_RixpQbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-oWLhVEe2UuoshngsjNA" type="_RixpQLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-oWbhVEe2UuoshngsjNA" name="createWorkLoadVisualization" specification="_R1wPobhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-oWrhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-oW7hVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-oXLhVEe2UuoshngsjNA" name="choice" type="_Riy3YbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-oXbhVEe2UuoshngsjNA" type="_RixpQLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R1vokbhVEe2UuoshngsjNA" name="createProgramVisualization" isStatic="true" method="_R5-oVLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1vokrhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1vok7hVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1volLhVEe2UuoshngsjNA" name="choice" type="_RixpQbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1wPoLhVEe2UuoshngsjNA" type="_RixpQLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1wPobhVEe2UuoshngsjNA" name="createWorkLoadVisualization" isStatic="true" method="_R5-oWbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R1wPorhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1wPo7hVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1wPpLhVEe2UuoshngsjNA" name="choice" type="_Riy3YbhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1wPpbhVEe2UuoshngsjNA" type="_RixpQLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ri2hwLhVEe2UuoshngsjNA" name="VisualizationImplementation">
              <ownedComment xmi:id="_R6Y4ArhVEe2UuoshngsjNA">
                <body>VisualizationImplementation class implements the Visualization file,&#xD;
helping create visualizations for the WARP project based on&#xD;
the requested information/parameters. &#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R41_47hVEe2UuoshngsjNA" name="visualization" visibility="private" type="_RgUyMLhVEe2UuoshngsjNA" association="_R7JF8bhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R42m8bhVEe2UuoshngsjNA" name="fileContent" visibility="private" type="_RgUyMLhVEe2UuoshngsjNA" association="_R7JtALhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R42m87hVEe2UuoshngsjNA" name="window" visibility="private" type="_Rg0hcLhVEe2UuoshngsjNA" association="_R7JtA7hVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R43OAbhVEe2UuoshngsjNA" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R43OA7hVEe2UuoshngsjNA" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R431EbhVEe2UuoshngsjNA" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R431E7hVEe2UuoshngsjNA" name="fm" visibility="private" type="_Rgd8ILhVEe2UuoshngsjNA" association="_R7KUEbhVEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R431FLhVEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R44cIbhVEe2UuoshngsjNA" name="warp" visibility="private" type="_RjW4ELhVEe2UuoshngsjNA" association="_R7K7IbhVEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R44cIrhVEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R44cJLhVEe2UuoshngsjNA" name="workLoad" visibility="private" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R7LiMLhVEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R45DMLhVEe2UuoshngsjNA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R45DMrhVEe2UuoshngsjNA" name="visualizationObject" visibility="private" type="_Ri8oYLhVEe2UuoshngsjNA" association="_R7LiM7hVEe2UuoshngsjNA"/>
              <interfaceRealization xmi:id="_R1wPprhVEe2UuoshngsjNA" client="_Ri2hwLhVEe2UuoshngsjNA" supplier="_RixpQLhVEe2UuoshngsjNA" contract="_RixpQLhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-oXrhVEe2UuoshngsjNA" name="VisualizationImplementation" specification="_R3gjIrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-oX7hVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-oYLhVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-oYbhVEe2UuoshngsjNA" name="choice" type="_R3gjILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-oYrhVEe2UuoshngsjNA" type="_Ri2hwLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5-oY7hVEe2UuoshngsjNA" name="VisualizationImplementation" specification="_R3hxQbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5-oZLhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-oZbhVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5-oZrhVEe2UuoshngsjNA" name="choice" type="_R3hKM7hVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R5-oZ7hVEe2UuoshngsjNA" type="_Ri2hwLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5_PYLhVEe2UuoshngsjNA" name="toDisplay" specification="_Ri3v4LhVEe2UuoshngsjNA">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5_PYbhVEe2UuoshngsjNA" name="toFile" specification="_Ri4W87hVEe2UuoshngsjNA">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5_PYrhVEe2UuoshngsjNA" name="toString" specification="_Ri4-ArhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5_PY7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5_PZLhVEe2UuoshngsjNA" name="createVisualization" specification="_R3iYULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5_PZbhVEe2UuoshngsjNA" name="choice" type="_R3gjILhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5_PZrhVEe2UuoshngsjNA" name="createVisualization" specification="_R3iYUrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5_PZ7hVEe2UuoshngsjNA" name="choice" type="_R3hKM7hVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5_PaLhVEe2UuoshngsjNA" name="createVisualization" specification="_R3i_YbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5_PabhVEe2UuoshngsjNA" name="obj" type="_R24RALhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R5_ParhVEe2UuoshngsjNA" name="createFileNameTemplate" specification="_Ri5lELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R5_Pa7hVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5_PbLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ri3v4LhVEe2UuoshngsjNA" name="toDisplay" method="_R5_PYLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Ri4W87hVEe2UuoshngsjNA" name="toFile" method="_R5_PYbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Ri4-ArhVEe2UuoshngsjNA" name="toString" method="_R5_PYrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ri4-A7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri5lELhVEe2UuoshngsjNA" name="createFileNameTemplate" visibility="private" method="_R5_ParhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Y4B7hVEe2UuoshngsjNA">
                  <body>@return the file name template created from the output path and input string.&#xD;
@param outputDirectory directory where output visualization goes</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ri5lEbhVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ri5lErhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R3gjIrhVEe2UuoshngsjNA" name="VisualizationImplementation" method="_R5-oXrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3hKMLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3hKMbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6Y4A7hVEe2UuoshngsjNA">
                  <body>Constructor that initializes objects, and makes a call to &#xD;
   * VisualizationObject. This creates a visualization for warp.&#xD;
@param warp any object implementing the Warp interface.&#xD;
@param outputDirectory directory where output visualization goes&#xD;
@param choice the requested visualization for system.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3gjI7hVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3gjJLhVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3gjJbhVEe2UuoshngsjNA" name="choice" type="_R3gjILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3hKMrhVEe2UuoshngsjNA" type="_Ri2hwLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3hxQbhVEe2UuoshngsjNA" name="VisualizationImplementation" method="_R5-oY7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3hxRbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3hxRrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R6Y4BLhVEe2UuoshngsjNA">
                  <body>Constructor that initializes objects, and makes a call to &#xD;
   * VisualizationObject. This creates a visualization for work load.&#xD;
@param workLoad Workload that will be visualized&#xD;
@param outputDirectory directory where output visualization goes&#xD;
@param choice the requested visualization for work load.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3hxQrhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3hxQ7hVEe2UuoshngsjNA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3hxRLhVEe2UuoshngsjNA" name="choice" type="_R3hKM7hVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3hxR7hVEe2UuoshngsjNA" type="_Ri2hwLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3iYULhVEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_R5_PZLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Y4BbhVEe2UuoshngsjNA">
                  <body>Depending on the system choice, implement a visualization accordingly.&#xD;
   * These include source, reliability analysis, simulator input, latency analysis,&#xD;
   * chanel analysis, latency report, and deadline report.&#xD;
@param choice the requested visualization for system.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3iYUbhVEe2UuoshngsjNA" name="choice" type="_R3gjILhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3iYUrhVEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_R5_PZrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Y4BrhVEe2UuoshngsjNA">
                  <body>Depending on the workload choice, implement a visualization accordingly.&#xD;
   * These include communication graph, graphViz, and input graph.&#xD;
@param choice the requested visualization for work load.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3i_YLhVEe2UuoshngsjNA" name="choice" type="_R3hKM7hVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3i_YbhVEe2UuoshngsjNA" name="createVisualization" visibility="private" method="_R5_PaLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3i_YrhVEe2UuoshngsjNA" name="obj" type="_R24RALhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ri8oYLhVEe2UuoshngsjNA" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_R6Y4CLhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R46RULhVEe2UuoshngsjNA" name="fm" visibility="private" type="_Rgd8ILhVEe2UuoshngsjNA" association="_R7MJQbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R46RUrhVEe2UuoshngsjNA" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R464YbhVEe2UuoshngsjNA" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R464Y7hVEe2UuoshngsjNA" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R464ZLhVEe2UuoshngsjNA" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R464ZbhVEe2UuoshngsjNA" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R464ZrhVEe2UuoshngsjNA" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6AdgLhVEe2UuoshngsjNA" name="VisualizationObject" specification="_R1yr4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6AdgbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6AdgrhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6Adg7hVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6AdhLhVEe2UuoshngsjNA" type="_Ri8oYLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6AdhbhVEe2UuoshngsjNA" name="VisualizationObject" specification="_R1zS8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6AdhrhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6Adh7hVEe2UuoshngsjNA" name="warp" type="_RiptcLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6AdiLhVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6AdibhVEe2UuoshngsjNA" type="_Ri8oYLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BEkLhVEe2UuoshngsjNA" name="VisualizationObject" specification="_R1z6ALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BEkbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6BEkrhVEe2UuoshngsjNA" name="warp" type="_RiptcLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6BEk7hVEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6BElLhVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6BElbhVEe2UuoshngsjNA" type="_Ri8oYLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BElrhVEe2UuoshngsjNA" name="VisualizationObject" specification="_R1z6CLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BEl7hVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6BEmLhVEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6BEmbhVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6BEmrhVEe2UuoshngsjNA" type="_Ri8oYLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BEm7hVEe2UuoshngsjNA" name="nameExtension" specification="_R3kNgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BEnLhVEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6BEnbhVEe2UuoshngsjNA" name="m" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6BEnrhVEe2UuoshngsjNA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6BEn7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BEoLhVEe2UuoshngsjNA" name="nameExtension" specification="_Ri_EoLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BEobhVEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6BEorhVEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6BEo7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BEpLhVEe2UuoshngsjNA" name="getFileManager" specification="_Ri_EpLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BEpbhVEe2UuoshngsjNA" type="_Rgd8ILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BroLhVEe2UuoshngsjNA" name="visualization" specification="_Ri_rsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BrobhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BrorhVEe2UuoshngsjNA" name="createFile" specification="_Ri_rsbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Bro7hVEe2UuoshngsjNA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6BrpLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BrpbhVEe2UuoshngsjNA" name="fileVisualization" specification="_RjASwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BrprhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Brp7hVEe2UuoshngsjNA" name="displayVisualization" specification="_RjASwbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BrqLhVEe2UuoshngsjNA" type="_Rg0hcLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BrqbhVEe2UuoshngsjNA" name="createHeader" specification="_RjASwrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BrqrhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Brq7hVEe2UuoshngsjNA" name="createFooter" specification="_RjA50LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BrrLhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6BrrbhVEe2UuoshngsjNA" name="createColumnHeader" specification="_RjA50bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6BrrrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6Brr7hVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6CSsLhVEe2UuoshngsjNA" name="createVisualizationData" specification="_RjA51bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6CSsbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6CSsrhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ri_EoLhVEe2UuoshngsjNA" name="nameExtension" visibility="private" method="_R6BEoLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ri_EobhVEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ri_EorhVEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ri_Eo7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri_EpLhVEe2UuoshngsjNA" name="getFileManager" method="_R6BEpLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Y4CbhVEe2UuoshngsjNA">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_R10hFLhVEe2UuoshngsjNA" type="_Rgd8ILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri_rsLhVEe2UuoshngsjNA" name="visualization" method="_R6BroLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R10hFbhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri_rsbhVEe2UuoshngsjNA" name="createFile" method="_R6BrorhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Ri_rsrhVEe2UuoshngsjNA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ri_rs7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjASwLhVEe2UuoshngsjNA" name="fileVisualization" method="_R6BrpbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R10hFrhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjASwbhVEe2UuoshngsjNA" name="displayVisualization" method="_R6Brp7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R10hF7hVEe2UuoshngsjNA" type="_Rg0hcLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjASwrhVEe2UuoshngsjNA" name="createHeader" visibility="protected" method="_R6BrqbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R10hGLhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjA50LhVEe2UuoshngsjNA" name="createFooter" visibility="protected" method="_R6Brq7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R10hGbhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjA50bhVEe2UuoshngsjNA" name="createColumnHeader" visibility="protected" method="_R6BrrbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjA50rhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RjA507hVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjA51bhVEe2UuoshngsjNA" name="createVisualizationData" visibility="protected" method="_R6CSsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjBg4LhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RjBg4bhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R1yr4LhVEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_R6AdgLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1yr5LhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1yr5bhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1yr4bhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1yr4rhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1yr47hVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1yr5rhVEe2UuoshngsjNA" type="_Ri8oYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1zS8LhVEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_R6AdhbhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1zS9LhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1zS9bhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1zS8bhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1zS8rhVEe2UuoshngsjNA" name="warp" type="_RiptcLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1zS87hVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1zS9rhVEe2UuoshngsjNA" type="_Ri8oYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1z6ALhVEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_R6BEkLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R1z6BbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R1z6BrhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1z6AbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1z6ArhVEe2UuoshngsjNA" name="warp" type="_RiptcLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1z6A7hVEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1z6BLhVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R1z6B7hVEe2UuoshngsjNA" type="_Ri8oYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R1z6CLhVEe2UuoshngsjNA" name="VisualizationObject" visibility="package" method="_R6BElrhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R10hEbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R10hErhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R1z6CbhVEe2UuoshngsjNA" name="fm" type="_Rgd8ILhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R1z6CrhVEe2UuoshngsjNA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R10hELhVEe2UuoshngsjNA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R10hE7hVEe2UuoshngsjNA" type="_Ri8oYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3kNgLhVEe2UuoshngsjNA" name="nameExtension" visibility="private" method="_R6BEm7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3kNgbhVEe2UuoshngsjNA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3kNgrhVEe2UuoshngsjNA" name="m" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3k0kLhVEe2UuoshngsjNA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3k0kbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjD9ILhVEe2UuoshngsjNA" name="Warp">
              <ownedComment xmi:id="_R6Y4CrhVEe2UuoshngsjNA">
                <body>Main file for the entire WARP interface. &#xD;
WARP: On-the-fly Program Synthesis for Agile, Real-time, and Reliable Wireless Networks. This&#xD;
system generates node communication programs WARP uses programs to specify a network’s behavior&#xD;
and includes a synthesis procedure to automatically generate such programs from a high-level&#xD;
specification of the system’s workload and topology. WARP has three unique features: &lt;br>&#xD;
(1) WARP uses a domain-specific language to specify stateful programs that include conditional&#xD;
statements to control when a flow’s packets are transmitted. The execution paths of programs&#xD;
depend on the pattern of packet losses observed at run-time, thereby enabling WARP to readily&#xD;
adapt to packet losses due to short-term variations in link quality. &lt;br>&#xD;
(2) Our synthesis technique uses heuristics to improve network performance by considering&#xD;
multiple packet loss patterns and associated execution paths when determining the transmissions&#xD;
performed by nodes. Furthermore, the generated programs ensure that the likelihood of a flow&#xD;
delivering its packets by its deadline exceeds a user-specified threshold. &lt;br>&#xD;
(3) WARP can adapt to workload and topology changes without explicitly reconstructing a network’s&#xD;
program based on the observation that nodes can independently synthesize the same program when&#xD;
they share the same workload and topology information. Simulations show that WARP improves&#xD;
network throughput for data collection, dissemination, and mixed workloads on two realistic&#xD;
topologies. Testbed experiments show that WARP reduces the time to add new flows by 5 times over&#xD;
a state-of-the-art centralized control plane and guarantees the real-time and reliability of all&#xD;
flows.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R48GgLhVEe2UuoshngsjNA" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R48GgbhVEe2UuoshngsjNA" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R48tkLhVEe2UuoshngsjNA" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_R3R5oLhVEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R49UoLhVEe2UuoshngsjNA" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R49UobhVEe2UuoshngsjNA" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_R3R5oLhVEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R49UorhVEe2UuoshngsjNA" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R49Uo7hVEe2UuoshngsjNA" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R497sLhVEe2UuoshngsjNA" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R497sbhVEe2UuoshngsjNA" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_Riq7kLhVEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R497srhVEe2UuoshngsjNA" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R497s7hVEe2UuoshngsjNA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R497tLhVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R497tbhVEe2UuoshngsjNA" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4-iwLhVEe2UuoshngsjNA" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4-iwrhVEe2UuoshngsjNA" name="minLQ" visibility="private" isStatic="true" type="_R3R5oLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4-ixLhVEe2UuoshngsjNA" name="e2e" visibility="private" isStatic="true" type="_R3R5oLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R4_J0bhVEe2UuoshngsjNA" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4_J07hVEe2UuoshngsjNA" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4_w4LhVEe2UuoshngsjNA" name="gvRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4_w4rhVEe2UuoshngsjNA" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R4_w5LhVEe2UuoshngsjNA" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5AX8bhVEe2UuoshngsjNA" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5AX87hVEe2UuoshngsjNA" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5A_ALhVEe2UuoshngsjNA" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5A_ArhVEe2UuoshngsjNA" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5BmELhVEe2UuoshngsjNA" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5BmErhVEe2UuoshngsjNA" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5BmE7hVEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5CNIbhVEe2UuoshngsjNA" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5CNI7hVEe2UuoshngsjNA" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5C0MbhVEe2UuoshngsjNA" name="schedulerSelected" visibility="private" isStatic="true" type="_Riq7kLhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6CSs7hVEe2UuoshngsjNA" name="main" specification="_RjFLQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6CStLhVEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6CStbhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6CStrhVEe2UuoshngsjNA" name="visualize" specification="_R14LcLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6CSt7hVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6CSuLhVEe2UuoshngsjNA" name="choice" type="_Riy3YbhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6CSubhVEe2UuoshngsjNA" name="visualize" specification="_R14ygLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6CSurhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6CSu7hVEe2UuoshngsjNA" name="choice" type="_RixpQbhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6C5wLhVEe2UuoshngsjNA" name="verifyPerformanceRequirements" specification="_R14yg7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6C5wbhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6C5wrhVEe2UuoshngsjNA" name="verifyReliabilities" specification="_R14yhbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6C5w7hVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6C5xLhVEe2UuoshngsjNA" name="verifyDeadlines" specification="_R15ZkbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6C5xbhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6C5xrhVEe2UuoshngsjNA" name="verifyNoChannelConflicts" specification="_R15Zk7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6C5x7hVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6C5yLhVEe2UuoshngsjNA" name="setWarpParameters" specification="_RjGZYLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6C5ybhVEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6C5yrhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6C5y7hVEe2UuoshngsjNA" name="printWarpParameters" specification="_RjGZZLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>// Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjFLQLhVEe2UuoshngsjNA" name="main" isStatic="true" method="_R6CSs7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6Y4C7hVEe2UuoshngsjNA">
                  <body>Main method for WARP program. Makes a call to WARP system parameters and prints accordingly.&#xD;
   * It also initializes Workload with number of faults tolerated per edge, minimum link &#xD;
   * quality in each system, e2e, and the input file from which the graph workload is read.&#xD;
   * If there is an all out files requested flag, the parameters are visualized according to &#xD;
   * configurations.&#xD;
   * &#xD;
   * @param args Command line option</body>
                </ownedComment>
                <ownedParameter xmi:id="_RjFLQbhVEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RjFyULhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjGZYLhVEe2UuoshngsjNA" name="setWarpParameters" visibility="private" isStatic="true" method="_R6C5yLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6ZfFrhVEe2UuoshngsjNA">
                  <body>Sets the parameters configurations for WARP.&#xD;
   * Arguments that aren't passed through the command line are set to default.&#xD;
@param args Command line arguments.</body>
                </ownedComment>
                <ownedParameter xmi:id="_RjGZYbhVEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RjGZYrhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjGZZLhVEe2UuoshngsjNA" name="printWarpParameters" visibility="private" isStatic="true" method="_R6C5y7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6ZfF7hVEe2UuoshngsjNA">
                  <body>Prints all system configuration parameters.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_R14LcLhVEe2UuoshngsjNA" name="visualize" visibility="private" isStatic="true" method="_R6CStrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6ZfELhVEe2UuoshngsjNA">
                  <body>When the workload visualization is not null and there is a verbose mode flag &#xD;
   * it prints a string, else it is output to a file.&#xD;
   * If the Gui Visualization is selected, then it displays the visualization.&#xD;
@param workLoad the WorkLoad object &#xD;
@param choice keep track of choices for work load to create a visualization of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R14LcbhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R14LcrhVEe2UuoshngsjNA" name="choice" type="_Riy3YbhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R14ygLhVEe2UuoshngsjNA" name="visualize" visibility="private" isStatic="true" method="_R6CSubhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6ZfEbhVEe2UuoshngsjNA">
                  <body>Creates visualization based on the choice. If var pointer is not null, then the visualization file is created.&#xD;
   * The var pointer is displayed if Gui visualization and specific scheduler has been requested.&#xD;
@param warp Refers to the main WARP interface.&#xD;
@param choice keep track of choices for the system to create a visualization of.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R14ygbhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R14ygrhVEe2UuoshngsjNA" name="choice" type="_RixpQbhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R14yg7hVEe2UuoshngsjNA" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_R6C5wLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6ZfErhVEe2UuoshngsjNA">
                  <body>Checks if performance-based requirements are met. This includes &#xD;
   * deadlines, reliabilities, and verifying that there are no channel conflicts.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R14yhLhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R14yhbhVEe2UuoshngsjNA" name="verifyReliabilities" visibility="private" isStatic="true" method="_R6C5wrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6ZfE7hVEe2UuoshngsjNA">
                  <body>Checks for the flow reliabilities. An error is printed if flows don't&#xD;
   * meet the reliability target.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R15ZkLhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R15ZkbhVEe2UuoshngsjNA" name="verifyDeadlines" visibility="private" isStatic="true" method="_R6C5xLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6ZfFLhVEe2UuoshngsjNA">
                  <body>Checks for the flow deadlines. An error is printed if flows don't&#xD;
   * meet the deadline target.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R15ZkrhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R15Zk7hVEe2UuoshngsjNA" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_R6C5xrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6ZfFbhVEe2UuoshngsjNA">
                  <body>Checks for the flow channel conflicts. An error is printed if flows &#xD;
   * contain a conflict.&#xD;
@param warp Refers to the main WARP interface.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R15ZlLhVEe2UuoshngsjNA" name="warp" type="_RjW4ELhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjLR4LhVEe2UuoshngsjNA" name="WarpDSL">
              <ownedComment xmi:id="_R6ZfGLhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R5ECULhVEe2UuoshngsjNA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5EpYLhVEe2UuoshngsjNA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5EpYbhVEe2UuoshngsjNA" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5F3gLhVEe2UuoshngsjNA" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5F3gbhVEe2UuoshngsjNA" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5F3grhVEe2UuoshngsjNA" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6EH4LhVEe2UuoshngsjNA" name="getInstructionParameters" specification="_RjO8QLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6EH4bhVEe2UuoshngsjNA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6EH4rhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjO8QLhVEe2UuoshngsjNA" name="getInstructionParameters" method="_R6EH4LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjO8QbhVEe2UuoshngsjNA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3nQ0LhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_RjL48LhVEe2UuoshngsjNA" name="InstructionParameters">
                <ownedAttribute xmi:id="_R5F3g7hVEe2UuoshngsjNA" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5GekLhVEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R5GekbhVEe2UuoshngsjNA" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5GekrhVEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R5Gek7hVEe2UuoshngsjNA" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5HFoLhVEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R5HFobhVEe2UuoshngsjNA" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5HForhVEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R5HFo7hVEe2UuoshngsjNA" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5HFpLhVEe2UuoshngsjNA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R5HFpbhVEe2UuoshngsjNA" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5HFprhVEe2UuoshngsjNA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R5HssbhVEe2UuoshngsjNA" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5HssrhVEe2UuoshngsjNA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Dg0LhVEe2UuoshngsjNA" name="getCoordinator" specification="_RjMgALhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Dg0bhVEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Dg0rhVEe2UuoshngsjNA" name="setCoordinator" specification="_RjNHEbhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Dg07hVEe2UuoshngsjNA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Dg1LhVEe2UuoshngsjNA" name="setName" specification="_RjNHE7hVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Dg1bhVEe2UuoshngsjNA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Dg1rhVEe2UuoshngsjNA" name="setFlow" specification="_RjNuILhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Dg17hVEe2UuoshngsjNA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Dg2LhVEe2UuoshngsjNA" name="setSrc" specification="_RjNuIrhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Dg2bhVEe2UuoshngsjNA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Dg2rhVEe2UuoshngsjNA" name="setSnk" specification="_RjNuJLhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Dg27hVEe2UuoshngsjNA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Dg3LhVEe2UuoshngsjNA" name="setChannel" specification="_RjOVMLhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Dg3bhVEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Dg3rhVEe2UuoshngsjNA" name="unused" specification="_RjOVMrhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Dg37hVEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_RjMgALhVEe2UuoshngsjNA" name="getCoordinator" method="_R6Dg0LhVEe2UuoshngsjNA">
                  <ownedComment xmi:id="_R6ZfGbhVEe2UuoshngsjNA">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_RjNHELhVEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RjNHEbhVEe2UuoshngsjNA" name="setCoordinator" method="_R6Dg0rhVEe2UuoshngsjNA">
                  <ownedComment xmi:id="_R6ZfGrhVEe2UuoshngsjNA">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_RjNHErhVEe2UuoshngsjNA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RjNHE7hVEe2UuoshngsjNA" name="setName" visibility="private" method="_R6Dg1LhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_RjNHFLhVEe2UuoshngsjNA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RjNuILhVEe2UuoshngsjNA" name="setFlow" visibility="private" method="_R6Dg1rhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_RjNuIbhVEe2UuoshngsjNA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RjNuIrhVEe2UuoshngsjNA" name="setSrc" visibility="private" method="_R6Dg2LhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_RjNuI7hVEe2UuoshngsjNA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RjNuJLhVEe2UuoshngsjNA" name="setSnk" visibility="private" method="_R6Dg2rhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_RjNuJbhVEe2UuoshngsjNA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RjOVMLhVEe2UuoshngsjNA" name="setChannel" visibility="private" method="_R6Dg3LhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_RjOVMbhVEe2UuoshngsjNA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RjOVMrhVEe2UuoshngsjNA" name="unused" method="_R6Dg3rhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_RjOVM7hVEe2UuoshngsjNA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_RjPjUbhVEe2UuoshngsjNA" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_R3oe8bhVEe2UuoshngsjNA" general="_R3n34LhVEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_R5Hss7hVEe2UuoshngsjNA" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R5ITwbhVEe2UuoshngsjNA" name="instructionParametersArrayList" visibility="package" type="_R0Gp0LhVEe2UuoshngsjNA" association="_R7MwUbhVEe2UuoshngsjNA"/>
                <ownedAttribute xmi:id="_R5I60rhVEe2UuoshngsjNA" name="instructionParameters" visibility="package" type="_RjL48LhVEe2UuoshngsjNA" association="_R7MwVLhVEe2UuoshngsjNA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6EH47hVEe2UuoshngsjNA" name="ListenerDsl" specification="_RjQKYLhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6EH5LhVEe2UuoshngsjNA" type="_RjPjUbhVEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6EH5bhVEe2UuoshngsjNA" name="getInstructionParameters" specification="_RjQxcLhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6EH5rhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6EH57hVEe2UuoshngsjNA" name="enterAction" specification="_R18c4bhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6EH6LhVEe2UuoshngsjNA" name="ctx" type="_R1710LhVEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6EH6bhVEe2UuoshngsjNA" name="exitAction" specification="_R19D8LhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6EH6rhVEe2UuoshngsjNA" name="ctx" type="_R1710LhVEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6EH67hVEe2UuoshngsjNA" name="exitFlowName" specification="_R19rBLhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6EH7LhVEe2UuoshngsjNA" name="ctx" type="_R19rArhVEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6EH7bhVEe2UuoshngsjNA" name="exitCmd" specification="_R1-SFbhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6EH7rhVEe2UuoshngsjNA" name="ctx" type="_R1-SE7hVEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6EH77hVEe2UuoshngsjNA" name="exitSrcNode" specification="_R1_gMbhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6EH8LhVEe2UuoshngsjNA" name="ctx" type="_R1-5JLhVEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Eu8LhVEe2UuoshngsjNA" name="exitSnkNode" specification="_R2AHQrhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Eu8bhVEe2UuoshngsjNA" name="ctx" type="_R2AHQLhVEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Eu8rhVEe2UuoshngsjNA" name="exitChannel" specification="_R2AuVLhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R6Eu87hVEe2UuoshngsjNA" name="ctx" type="_R2AuUrhVEe2UuoshngsjNA"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_RjQKYLhVEe2UuoshngsjNA" name="ListenerDsl" visibility="package" method="_R6EH47hVEe2UuoshngsjNA">
                  <eAnnotations xmi:id="_RjQKYbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_RjQKYrhVEe2UuoshngsjNA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_RjQKY7hVEe2UuoshngsjNA" type="_RjPjUbhVEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_RjQxcLhVEe2UuoshngsjNA" name="getInstructionParameters" method="_R6EH5bhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R3oe8LhVEe2UuoshngsjNA" type="_R0Gp0LhVEe2UuoshngsjNA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R18c4bhVEe2UuoshngsjNA" name="enterAction" method="_R6EH57hVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R18c4rhVEe2UuoshngsjNA" name="ctx" type="_R1710LhVEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R19D8LhVEe2UuoshngsjNA" name="exitAction" method="_R6EH6bhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R19D8bhVEe2UuoshngsjNA" name="ctx" type="_R1710LhVEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R19rBLhVEe2UuoshngsjNA" name="exitFlowName" method="_R6EH67hVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R19rBbhVEe2UuoshngsjNA" name="ctx" type="_R19rArhVEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R1-SFbhVEe2UuoshngsjNA" name="exitCmd" method="_R6EH7bhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R1-5ILhVEe2UuoshngsjNA" name="ctx" type="_R1-SE7hVEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R1_gMbhVEe2UuoshngsjNA" name="exitSrcNode" method="_R6EH77hVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R1_gMrhVEe2UuoshngsjNA" name="ctx" type="_R1-5JLhVEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R2AHQrhVEe2UuoshngsjNA" name="exitSnkNode" method="_R6Eu8LhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R2AHQ7hVEe2UuoshngsjNA" name="ctx" type="_R2AHQLhVEe2UuoshngsjNA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R2AuVLhVEe2UuoshngsjNA" name="exitChannel" method="_R6Eu8rhVEe2UuoshngsjNA">
                  <ownedParameter xmi:id="_R2AuVbhVEe2UuoshngsjNA" name="ctx" type="_R2AuUrhVEe2UuoshngsjNA"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_RjW4ELhVEe2UuoshngsjNA" name="WarpInterface">
              <ownedComment xmi:id="_R6ZfG7hVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_R2B8cLhVEe2UuoshngsjNA" general="_RiptcLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RjXfILhVEe2UuoshngsjNA" name="toWorkload">
                <ownedParameter xmi:id="_R2DKkLhVEe2UuoshngsjNA" type="_Rj_KMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjXfIbhVEe2UuoshngsjNA" name="toProgram">
                <ownedParameter xmi:id="_R2DKkbhVEe2UuoshngsjNA" type="_RhiTILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjYGMLhVEe2UuoshngsjNA" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_R2DKkrhVEe2UuoshngsjNA" type="_Rh9w8bhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjYGMbhVEe2UuoshngsjNA" name="toSimulator">
                <ownedParameter xmi:id="_R2DKk7hVEe2UuoshngsjNA" type="_RimqILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjYGMrhVEe2UuoshngsjNA" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_R2DKlLhVEe2UuoshngsjNA" type="_RhCj4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjYtQLhVEe2UuoshngsjNA" name="toChannelAnalysis">
                <ownedParameter xmi:id="_R2DKlbhVEe2UuoshngsjNA" type="_Rf7woLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjYtQbhVEe2UuoshngsjNA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_RjYtQrhVEe2UuoshngsjNA" name="reliabilitiesMet">
                <ownedParameter xmi:id="_RjYtQ7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjZUULhVEe2UuoshngsjNA" name="deadlinesMet">
                <ownedParameter xmi:id="_RjZUUbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjZ7YLhVEe2UuoshngsjNA" name="WarpPoset">
              <ownedComment xmi:id="_R6ZfHLhVEe2UuoshngsjNA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_R2DKm7hVEe2UuoshngsjNA" general="_RhUQsLhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Eu9LhVEe2UuoshngsjNA" name="WarpPoset" specification="_R2DKlrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Eu9bhVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6Eu9rhVEe2UuoshngsjNA" type="_RjZ7YLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6FWALhVEe2UuoshngsjNA" name="findCoordinator" specification="_R3ptELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6FWAbhVEe2UuoshngsjNA" name="nodesInFlow" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6FWArhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R2DKlrhVEe2UuoshngsjNA" name="WarpPoset" visibility="package" method="_R6Eu9LhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R2DKmLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R2DKmbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R2DKl7hVEe2UuoshngsjNA" name="workload" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R2DKmrhVEe2UuoshngsjNA" type="_RjZ7YLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3ptELhVEe2UuoshngsjNA" name="findCoordinator" visibility="protected" method="_R6FWALhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3qUILhVEe2UuoshngsjNA" name="nodesInFlow" type="_R0Gp0LhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3qUIbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjbJgLhVEe2UuoshngsjNA" name="WarpSystem">
              <ownedComment xmi:id="_R6ZfHbhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R5KI8LhVEe2UuoshngsjNA" name="program" visibility="private" type="_RhiTILhVEe2UuoshngsjNA" association="_R7NXYbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5KI8rhVEe2UuoshngsjNA" name="workLoad" visibility="private" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R7N-cbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5KwAbhVEe2UuoshngsjNA" name="ra" visibility="private" type="_Rh9w8bhVEe2UuoshngsjNA" association="_R7OlgLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5KwA7hVEe2UuoshngsjNA" name="la" visibility="private" type="_RhCj4LhVEe2UuoshngsjNA" association="_R7Olg7hVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5LXEbhVEe2UuoshngsjNA" name="ca" visibility="private" type="_Rf7woLhVEe2UuoshngsjNA" association="_R7PMkbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5LXE7hVEe2UuoshngsjNA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5MlMLhVEe2UuoshngsjNA" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5MlMbhVEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5MlM7hVEe2UuoshngsjNA" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5NMQLhVEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R2DKnLhVEe2UuoshngsjNA" client="_RjbJgLhVEe2UuoshngsjNA" supplier="_RjW4ELhVEe2UuoshngsjNA" contract="_RjW4ELhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6FWBbhVEe2UuoshngsjNA" name="WarpSystem" specification="_R3riQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6FWBrhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6FWB7hVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6FWCLhVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6FWCbhVEe2UuoshngsjNA" type="_RjbJgLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6FWCrhVEe2UuoshngsjNA" name="toWorkload" specification="_Rjc-sLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6FWC7hVEe2UuoshngsjNA" type="_Rj_KMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6F9ELhVEe2UuoshngsjNA" name="toProgram" specification="_RjdlwrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6F9EbhVEe2UuoshngsjNA" type="_RhiTILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6F9ErhVEe2UuoshngsjNA" name="toReliabilityAnalysis" specification="_Rjez4bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6F9E7hVEe2UuoshngsjNA" type="_Rh9w8bhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6F9FLhVEe2UuoshngsjNA" name="toSimulator" specification="_Rjfa87hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6F9FbhVEe2UuoshngsjNA" type="_RimqILhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6F9FrhVEe2UuoshngsjNA" name="toLatencyAnalysis" specification="_RjgCA7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6F9F7hVEe2UuoshngsjNA" type="_RhCj4LhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6F9GLhVEe2UuoshngsjNA" name="toChannelAnalysis" specification="_RjgpErhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6F9GbhVEe2UuoshngsjNA" type="_Rf7woLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6F9GrhVEe2UuoshngsjNA" name="reliabilitiesMet" specification="_RjhQILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6F9G7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6F9HLhVEe2UuoshngsjNA" name="deadlinesMet" specification="_RjhQJbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6F9HbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6F9HrhVEe2UuoshngsjNA" name="createProgram" specification="_R3sJULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6F9H7hVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6F9ILhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6F9IbhVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6GkILhVEe2UuoshngsjNA" name="getNumFaults" specification="_Rjh3NLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6GkIbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6GkIrhVEe2UuoshngsjNA" name="getMinPacketReceptionRate" specification="_RjieRLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6GkI7hVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6GkJLhVEe2UuoshngsjNA" name="getE2e" specification="_RjjFU7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6GkJbhVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6GkJrhVEe2UuoshngsjNA" name="getName" specification="_RjjsYrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6GkJ7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6GkKLhVEe2UuoshngsjNA" name="getSchedulerName" specification="_RjkTcrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6GkKbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6GkKrhVEe2UuoshngsjNA" name="getNumTransmissions" specification="_Rjk6grhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6GkK7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6GkLLhVEe2UuoshngsjNA" name="getOptimizationFlag" specification="_RjlhkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6GkLbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rjc-sLhVEe2UuoshngsjNA" name="toWorkload" method="_R6FWCrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2DxoLhVEe2UuoshngsjNA" type="_Rj_KMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjdlwrhVEe2UuoshngsjNA" name="toProgram" method="_R6F9ELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2EYsLhVEe2UuoshngsjNA" type="_RhiTILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rjez4bhVEe2UuoshngsjNA" name="toReliabilityAnalysis" method="_R6F9ErhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2EYsbhVEe2UuoshngsjNA" type="_Rh9w8bhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rjfa87hVEe2UuoshngsjNA" name="toSimulator" method="_R6F9FLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2EYsrhVEe2UuoshngsjNA" type="_RimqILhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjgCA7hVEe2UuoshngsjNA" name="toLatencyAnalysis" method="_R6F9FrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2EYs7hVEe2UuoshngsjNA" type="_RhCj4LhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjgpErhVEe2UuoshngsjNA" name="toChannelAnalysis" method="_R6F9GLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2EYtLhVEe2UuoshngsjNA" type="_Rf7woLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjhQILhVEe2UuoshngsjNA" name="reliabilitiesMet" method="_R6F9GrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjhQIbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjhQJbhVEe2UuoshngsjNA" name="deadlinesMet" method="_R6F9HLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rjh3MLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rjh3NLhVEe2UuoshngsjNA" name="getNumFaults" method="_R6GkILhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjieQLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjieRLhVEe2UuoshngsjNA" name="getMinPacketReceptionRate" method="_R6GkIrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3sJVLhVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjjFU7hVEe2UuoshngsjNA" name="getE2e" method="_R6GkJLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3swYLhVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjjsYrhVEe2UuoshngsjNA" name="getName" method="_R6GkJrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjjsY7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjkTcrhVEe2UuoshngsjNA" name="getSchedulerName" method="_R6GkKLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjkTc7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rjk6grhVEe2UuoshngsjNA" name="getNumTransmissions" method="_R6GkKrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_Rjk6g7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjlhkLhVEe2UuoshngsjNA" name="getOptimizationFlag" method="_R6GkLLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjlhkbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjmIoLhVEe2UuoshngsjNA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_R3riQLhVEe2UuoshngsjNA" name="WarpSystem" method="_R6FWBbhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3riRLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3riRbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R3riQbhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3riQrhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3riQ7hVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3riRrhVEe2UuoshngsjNA" type="_RjbJgLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3sJULhVEe2UuoshngsjNA" name="createProgram" visibility="private" method="_R6F9HrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R3sJUbhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3sJUrhVEe2UuoshngsjNA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3sJU7hVEe2UuoshngsjNA" name="choice" type="_R3O2UrhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjpzALhVEe2UuoshngsjNA" name="WorkLoadDescription">
              <ownedComment xmi:id="_R6aGILhVEe2UuoshngsjNA">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_R2HcAbhVEe2UuoshngsjNA" general="_Ri8oYLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5NzULhVEe2UuoshngsjNA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5OaYLhVEe2UuoshngsjNA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5OaYbhVEe2UuoshngsjNA" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5OaYrhVEe2UuoshngsjNA" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5PBcLhVEe2UuoshngsjNA" name="description" visibility="private" type="_RgUyMLhVEe2UuoshngsjNA" association="_R7PMlLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5PBcrhVEe2UuoshngsjNA" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5PogbhVEe2UuoshngsjNA" name="fm" visibility="private" type="_Rgd8ILhVEe2UuoshngsjNA" association="_R7PzobhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5Pog7hVEe2UuoshngsjNA" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HLMLhVEe2UuoshngsjNA" name="WorkLoadDescription" specification="_RjqaELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HLMbhVEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6HLMrhVEe2UuoshngsjNA" type="_RjpzALhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HLM7hVEe2UuoshngsjNA" name="visualization" specification="_RjqaFbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HLNLhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HLNbhVEe2UuoshngsjNA" name="fileVisualization" specification="_RjrBIrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HLNrhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HLN7hVEe2UuoshngsjNA" name="toString" specification="_RjroMrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HLOLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HLObhVEe2UuoshngsjNA" name="initialize" specification="_RjsPQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HLOrhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HyQLhVEe2UuoshngsjNA" name="main" specification="_RjsPQrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HyQbhVEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6HyQrhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Get file contents&#xD;
	  String file = &quot;StressTest.txt&quot;;&#xD;
	  WorkLoadDescription stressTest = new WorkLoadDescription(file);&#xD;
	  Description toBeAlphabetized = stressTest.visualization();&#xD;
	  &#xD;
	  //Parse file name&#xD;
	  String firstLine = toBeAlphabetized.remove(0);&#xD;
	  String fileName = firstLine.substring(0, firstLine.indexOf(' '));&#xD;
	  &#xD;
	  //Trim and Sort toBeAlphabetized to only contain flows&#xD;
	  toBeAlphabetized.remove(toBeAlphabetized.size()-1);&#xD;
	  Collections.sort(toBeAlphabetized);&#xD;
	  &#xD;
	  //Print the file in the proper format&#xD;
	  System.out.println(fileName);&#xD;
	  for(int i = 0; i &lt; toBeAlphabetized.size(); i++) {&#xD;
		  System.out.print(&quot;Flow &quot; + (i+1) + &quot;: &quot; + toBeAlphabetized.get(i));&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjqaELhVEe2UuoshngsjNA" name="WorkLoadDescription" visibility="package" method="_R6HLMLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_RjqaErhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RjqaE7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RjqaEbhVEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjqaFLhVEe2UuoshngsjNA" type="_RjpzALhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjqaFbhVEe2UuoshngsjNA" name="visualization" method="_R6HLM7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2G08bhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjrBIrhVEe2UuoshngsjNA" name="fileVisualization" method="_R6HLNbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2HcALhVEe2UuoshngsjNA" type="_RgUyMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjroMrhVEe2UuoshngsjNA" name="toString" method="_R6HLN7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjroM7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjsPQLhVEe2UuoshngsjNA" name="initialize" visibility="private" method="_R6HLObhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjsPQbhVEe2UuoshngsjNA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjsPQrhVEe2UuoshngsjNA" name="main" isStatic="true" method="_R6HyQLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_R6aGIbhVEe2UuoshngsjNA">
                  <body>Returns Flows alphabetically.&#xD;
	 *&#xD;
	 * @param args instantiates WorkLoadDescription, prints StressTest.txt alphabetically</body>
                </ownedComment>
                <ownedParameter xmi:id="_RjsPQ7hVEe2UuoshngsjNA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RjsPRLhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjtdYLhVEe2UuoshngsjNA" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_R6aGIrhVEe2UuoshngsjNA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R3tXcLhVEe2UuoshngsjNA" general="_R0qDcLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5QPkLhVEe2UuoshngsjNA" name="workLoad" visibility="package" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R7QasLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5Q2oLhVEe2UuoshngsjNA" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HyQ7hVEe2UuoshngsjNA" name="WorkLoadListener" specification="_R2IDELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HyRLhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6HyRbhVEe2UuoshngsjNA" type="_RjtdYLhVEe2UuoshngsjNA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HyRrhVEe2UuoshngsjNA" name="buildNodesAndFlows" specification="_R2IqIbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HyR7hVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then build the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HySLhVEe2UuoshngsjNA" name="testPrintStdOut" specification="_RjuEcLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HySbhVEe2UuoshngsjNA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6HySrhVEe2UuoshngsjNA" name="enterWarpName" specification="_R2IqI7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6HyS7hVEe2UuoshngsjNA" name="ctx" type="_R0r4oLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6IZULhVEe2UuoshngsjNA" name="enterFlowName" specification="_R2JRM7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6IZUbhVEe2UuoshngsjNA" name="ctx" type="_R0tGxLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6IZUrhVEe2UuoshngsjNA" name="exitPriority" specification="_R2KfULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6IZU7hVEe2UuoshngsjNA" name="ctx" type="_R2J4QrhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6IZVLhVEe2UuoshngsjNA" name="exitPeriod" specification="_R2LGYrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6IZVbhVEe2UuoshngsjNA" name="ctx" type="_R2LGYLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6IZVrhVEe2UuoshngsjNA" name="exitDeadline" specification="_R2M7kbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6IZV7hVEe2UuoshngsjNA" name="ctx" type="_R2MUgrhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6IZWLhVEe2UuoshngsjNA" name="exitPhase" specification="_R2OJsrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6IZWbhVEe2UuoshngsjNA" name="ctx" type="_R2OJsLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6IZWrhVEe2UuoshngsjNA" name="exitSrcNode" specification="_R2Oww7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6IZW7hVEe2UuoshngsjNA" name="ctx" type="_R0uU4rhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6IZXLhVEe2UuoshngsjNA" name="exitSnkNode" specification="_R2PX07hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6IZXbhVEe2UuoshngsjNA" name="ctx" type="_R0u787hVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6IZXrhVEe2UuoshngsjNA" name="exitFlow" specification="_R2P-47hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6IZX7hVEe2UuoshngsjNA" name="ctx" type="_R0vjBLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjuEcLhVEe2UuoshngsjNA" name="testPrintStdOut" method="_R6HySLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RjuEcbhVEe2UuoshngsjNA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R2IDELhVEe2UuoshngsjNA" name="WorkLoadListener" visibility="private" method="_R6HyQ7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R2IDErhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R2IDE7hVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R2IDEbhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R2IqILhVEe2UuoshngsjNA" type="_RjtdYLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2IqIbhVEe2UuoshngsjNA" name="buildNodesAndFlows" isStatic="true" method="_R6HyRrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2IqIrhVEe2UuoshngsjNA" name="workLoad" type="_Rj_KMLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2IqI7hVEe2UuoshngsjNA" name="enterWarpName" method="_R6HySrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2IqJLhVEe2UuoshngsjNA" name="ctx" type="_R0r4oLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2JRM7hVEe2UuoshngsjNA" name="enterFlowName" method="_R6IZULhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2JRNLhVEe2UuoshngsjNA" name="ctx" type="_R0tGxLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2KfULhVEe2UuoshngsjNA" name="exitPriority" method="_R6IZUrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2KfUbhVEe2UuoshngsjNA" name="ctx" type="_R2J4QrhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2LGYrhVEe2UuoshngsjNA" name="exitPeriod" method="_R6IZVLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2LtcLhVEe2UuoshngsjNA" name="ctx" type="_R2LGYLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2M7kbhVEe2UuoshngsjNA" name="exitDeadline" method="_R6IZVrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2M7krhVEe2UuoshngsjNA" name="ctx" type="_R2MUgrhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2OJsrhVEe2UuoshngsjNA" name="exitPhase" method="_R6IZWLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2OJs7hVEe2UuoshngsjNA" name="ctx" type="_R2OJsLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2Oww7hVEe2UuoshngsjNA" name="exitSrcNode" method="_R6IZWrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2OwxLhVEe2UuoshngsjNA" name="ctx" type="_R0uU4rhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2PX07hVEe2UuoshngsjNA" name="exitSnkNode" method="_R6IZXLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2PX1LhVEe2UuoshngsjNA" name="ctx" type="_R0u787hVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R2P-47hVEe2UuoshngsjNA" name="exitFlow" method="_R6IZXrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R2P-5LhVEe2UuoshngsjNA" name="ctx" type="_R0vjBLhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rjv5oLhVEe2UuoshngsjNA" name="WorkLoadTest" visibility="package">
              <ownedAttribute xmi:id="_R5RdsLhVEe2UuoshngsjNA" name="stressTestWorkLoad" visibility="private" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R7Qas7hVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5RdsrhVEe2UuoshngsjNA" name="exampleThreeWorkLoad" visibility="private" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R7RBwbhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JAYLhVEe2UuoshngsjNA" name="setUp" specification="_RjxHwLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>String stressTest = &quot;StressTest.txt&quot;;&#xD;
		stressTestWorkLoad = new WorkLoad(0.9, 0.99, stressTest);&#xD;
		&#xD;
		String exampleThree = &quot;Example3.txt&quot;;&#xD;
		exampleThreeWorkLoad = new WorkLoad(0.9, 0.99, exampleThree);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JAYbhVEe2UuoshngsjNA" name="testAddFlow" specification="_Rjxu07hVEe2UuoshngsjNA">
                <language>java</language>
                <body>Flow originalFlow = new Flow(&quot;Test flow to be added&quot;, 0, 0);&#xD;
		stressTestWorkLoad.addFlow(originalFlow.getName());&#xD;
		FlowMap allFlowsInstressTestWorkLoad = stressTestWorkLoad.getFlows();&#xD;
		Flow addedFlow = allFlowsInstressTestWorkLoad.get(originalFlow.getName());&#xD;
		assertEquals(originalFlow.getName(), addedFlow.getName());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JAYrhVEe2UuoshngsjNA" name="testAddNodeToFlow" specification="_RjyV4rhVEe2UuoshngsjNA">
                <language>java</language>
                <body>var initial = stressTestWorkLoad.getNodesInFlow(&quot;F5&quot;);&#xD;
		stressTestWorkLoad.addNodeToFlow(&quot;F5&quot;, &quot;F&quot;);&#xD;
		var updated = stressTestWorkLoad.getNodesInFlow(&quot;F5&quot;);&#xD;
	&#xD;
		assertEquals(&quot;F&quot;, updated[updated.length-1]);&#xD;
		assertNotEquals(initial, updated);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JAY7hVEe2UuoshngsjNA" name="testGetFlowPriority" specification="_Rjy88LhVEe2UuoshngsjNA">
                <language>java</language>
                <body>Flow originalFlow = new Flow(&quot;Test flow to be added&quot;, 0, 0);&#xD;
		&#xD;
		//Using the stress test file&#xD;
		stressTestWorkLoad.addFlow(originalFlow.getName());&#xD;
		int expectedPriority = 15;&#xD;
		int actualPriority = stressTestWorkLoad.getFlowPriority(originalFlow.getName());&#xD;
		assertEquals(expectedPriority, actualPriority);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JAZLhVEe2UuoshngsjNA" name="testSetFlowPriority" specification="_Rjy89LhVEe2UuoshngsjNA">
                <language>java</language>
                <body>int setThreeFP = exampleThreeWorkLoad.getFlowPriority(&quot;F3&quot;);&#xD;
		exampleThreeWorkLoad.setFlowPriority(&quot;F3&quot;, 30);&#xD;
		int actualThreeFP = exampleThreeWorkLoad.getFlowPriority(&quot;F3&quot;);&#xD;
		assertEquals(30, actualThreeFP);&#xD;
		assertNotEquals(setThreeFP, actualThreeFP);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JAZbhVEe2UuoshngsjNA" name="testSetFlowDeadline" specification="_RjzkA7hVEe2UuoshngsjNA">
                <language>java</language>
                <body>int setFD = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		stressTestWorkLoad.setFlowDeadline(&quot;F3&quot;, 100);&#xD;
		int actualFD = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		assertEquals(100, actualFD);&#xD;
		assertNotEquals(setFD, actualFD);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JAZrhVEe2UuoshngsjNA" name="testGetFlowDeadlineStressTest" specification="_Rj0LE7hVEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 50;&#xD;
		Integer actual = stressTestWorkLoad.getFlowDeadline(&quot;F3&quot;);&#xD;
		assertEquals(expected, actual);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JAZ7hVEe2UuoshngsjNA" name="testGetFlowDeadlineDefault" specification="_Rj0yIrhVEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 100;&#xD;
		Integer actual = exampleThreeWorkLoad.getFlowDeadline(&quot;F0&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JAaLhVEe2UuoshngsjNA" name="testGetFlowTxAttemptsPerLink" specification="_Rj1ZMLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>int expected = 3;&#xD;
		int actual = exampleThreeWorkLoad.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		assertEquals(expected, actual);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JncLhVEe2UuoshngsjNA" name="testSetFlowsInRMorderStressTest" specification="_Rj1ZNLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>stressTestWorkLoad.setFlowsInRMorder();&#xD;
		String expected = &quot;[F1, AF1, F2, AF2, F3, F4, AF4, F5, AF5, F6, F7, F8, F9, F10, AF10]&quot;;&#xD;
		String actual = stressTestWorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6JncbhVEe2UuoshngsjNA" name="testSetFlowsInRMOrderExampleThree" specification="_Rj2AQ7hVEe2UuoshngsjNA">
                <language>java</language>
                <body>exampleThreeWorkLoad.setFlowsInRMorder();&#xD;
		String expected = &quot;[F0, F1, F2, F3, F4, F5]&quot;;&#xD;
		String actual = exampleThreeWorkLoad.getFlowNamesInPriorityOrder().toString();&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6KOgLhVEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_StressTest" specification="_Rj2nU7hVEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&#xD;
				&quot;J&quot;,&quot;K&quot;,&quot;L&quot;,&quot;M&quot;,&quot;N&quot;,&quot;O&quot;,&quot;P&quot;,&quot;Q&quot;,&quot;R&quot;,&quot;S&quot;,&quot;T&quot;,&quot;U&quot;,&quot;V&quot;,&quot;W&quot;,&quot;Y&quot;};&#xD;
		String[] actual = stressTestWorkLoad.getNodeNamesOrderedAlphabetically();&#xD;
		for (int i = 0; i &lt; expected.length; i++) {&#xD;
			assertEquals(expected[i], actual[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6KOgbhVEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_Example3" specification="_Rj3OYbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] expectedThree = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;F&quot;,&quot;G&quot;,&quot;I&quot;,&#xD;
				&quot;P&quot;,&quot;R&quot;,&quot;V&quot;,&quot;X&quot;};&#xD;
		String[] actualThree = exampleThreeWorkLoad.getNodeNamesOrderedAlphabetically();&#xD;
		for (int i = 0; i &lt; expectedThree.length; i++) {&#xD;
			assertEquals(expectedThree[i], actualThree[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6KOgrhVEe2UuoshngsjNA" name="testGetFlowNamesStressTest" specification="_Rj3OZbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[F1, F5, F2, F4, F3, F6, F7, F8, F9, F10, AF1, AF5, AF2, AF4, AF10]&quot;;&#xD;
		String[] actual = stressTestWorkLoad.getFlowNames();&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6KOg7hVEe2UuoshngsjNA" name="testGetFlowNamesExampleThree" specification="_Rj5DkLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[F0, F1, F2, F3, F4, F5]&quot;;&#xD;
		String[] actual = exampleThreeWorkLoad.getFlowNames();&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6KOhLhVEe2UuoshngsjNA" name="testGetNodeIndex" specification="_Rj5DlLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>var expectedL = 11;&#xD;
		var actualL = stressTestWorkLoad.getNodeIndex(&quot;L&quot;);&#xD;
		assertEquals(expectedL,actualL);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6KOhbhVEe2UuoshngsjNA" name="testGetNodesInFlow" specification="_Rj5qo7hVEe2UuoshngsjNA">
                <language>java</language>
                <body>String[] actual = stressTestWorkLoad.getNodesInFlow(&quot;F9&quot;);&#xD;
		String expected = &quot;[A, B, C, D, E, J, K, L]&quot;;&#xD;
		assertEquals(expected, (Arrays.toString(actual)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6KOhrhVEe2UuoshngsjNA" name="testGetHyperPeriodStressTest" specification="_Rj6RsrhVEe2UuoshngsjNA">
                <language>java</language>
                <body>var expected = 300;&#xD;
		var actual = stressTestWorkLoad.getHyperPeriod();&#xD;
		assertEquals(expected,actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6KOh7hVEe2UuoshngsjNA" name="testGetHyperPeriodDefault" specification="_Rj7f0bhVEe2UuoshngsjNA">
                <language>java</language>
                <body>var expected = 100;&#xD;
		var actual = exampleThreeWorkLoad.getHyperPeriod();&#xD;
		assertEquals(expected,actual);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6KOiLhVEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowStressTest" specification="_Rj8G4bhVEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 11;&#xD;
		Integer actual = stressTestWorkLoad.getTotalTxAttemptsInFlow(&quot;F9&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6K1kLhVEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowDefault" specification="_Rj8G5bhVEe2UuoshngsjNA">
                <language>java</language>
                <body>Integer expected = 4;&#xD;
		Integer actual = exampleThreeWorkLoad.getTotalTxAttemptsInFlow(&quot;F0&quot;);&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6K1kbhVEe2UuoshngsjNA" name="testGetNumTxAttemptsPerLink" specification="_Rj9VAbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>String expected = &quot;[3, 4, 5, 6, 6, 6, 5, 0]&quot;;&#xD;
		Integer[] actual = stressTestWorkLoad.getNumTxAttemptsPerLink(&quot;F9&quot;);&#xD;
		assertEquals(expected, Arrays.toString(actual));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6K1krhVEe2UuoshngsjNA" name="testMaxFlowLength" specification="_Rj98ELhVEe2UuoshngsjNA">
                <language>java</language>
                <body>var maxFL = 8;&#xD;
		int actualFL = stressTestWorkLoad.maxFlowLength();&#xD;
		assertEquals(maxFL, actualFL);	&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjxHwLhVEe2UuoshngsjNA" name="setUp" method="_R6JAYLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rjxu07hVEe2UuoshngsjNA" name="testAddFlow" visibility="package" method="_R6JAYbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RjyV4rhVEe2UuoshngsjNA" name="testAddNodeToFlow" visibility="package" method="_R6JAYrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rjy88LhVEe2UuoshngsjNA" name="testGetFlowPriority" visibility="package" method="_R6JAY7hVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rjy89LhVEe2UuoshngsjNA" name="testSetFlowPriority" visibility="package" method="_R6JAZLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RjzkA7hVEe2UuoshngsjNA" name="testSetFlowDeadline" visibility="package" method="_R6JAZbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj0LE7hVEe2UuoshngsjNA" name="testGetFlowDeadlineStressTest" visibility="package" method="_R6JAZrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj0yIrhVEe2UuoshngsjNA" name="testGetFlowDeadlineDefault" visibility="package" method="_R6JAZ7hVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj1ZMLhVEe2UuoshngsjNA" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_R6JAaLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj1ZNLhVEe2UuoshngsjNA" name="testSetFlowsInRMorderStressTest" visibility="package" method="_R6JncLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj2AQ7hVEe2UuoshngsjNA" name="testSetFlowsInRMOrderExampleThree" visibility="package" method="_R6JncbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj2nU7hVEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_StressTest" visibility="package" method="_R6KOgLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj3OYbhVEe2UuoshngsjNA" name="testGetNodeNamesOrderedAlphabetically_Example3" visibility="package" method="_R6KOgbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj3OZbhVEe2UuoshngsjNA" name="testGetFlowNamesStressTest" visibility="package" method="_R6KOgrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj5DkLhVEe2UuoshngsjNA" name="testGetFlowNamesExampleThree" visibility="package" method="_R6KOg7hVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj5DlLhVEe2UuoshngsjNA" name="testGetNodeIndex" visibility="package" method="_R6KOhLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj5qo7hVEe2UuoshngsjNA" name="testGetNodesInFlow" visibility="package" method="_R6KOhbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj6RsrhVEe2UuoshngsjNA" name="testGetHyperPeriodStressTest" visibility="package" method="_R6KOhrhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj7f0bhVEe2UuoshngsjNA" name="testGetHyperPeriodDefault" visibility="package" method="_R6KOh7hVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj8G4bhVEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowStressTest" visibility="package" method="_R6KOiLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj8G5bhVEe2UuoshngsjNA" name="testGetTotalTxAttemptsInFlowDefault" visibility="package" method="_R6K1kLhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj9VAbhVEe2UuoshngsjNA" name="testGetNumTxAttemptsPerLink" visibility="package" method="_R6K1kbhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_Rj98ELhVEe2UuoshngsjNA" name="testMaxFlowLength" visibility="package" method="_R6K1krhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rj_KMLhVEe2UuoshngsjNA" name="WorkLoad">
              <ownedComment xmi:id="_0HFzE8v3Ee2QFfqiYSegRA">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
Can be used for viewing, editing, and adding flows and nodes in the graph as well as calculating&#xD;
the per node and total transmission attempts.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R2X6s7hVEe2UuoshngsjNA" general="_RjpzALhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5Sr0LhVEe2UuoshngsjNA" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5Sr0bhVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5Sr0rhVEe2UuoshngsjNA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5Sr07hVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5Sr1LhVEe2UuoshngsjNA" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5TS4LhVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5TS4bhVEe2UuoshngsjNA" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5TS4rhVEe2UuoshngsjNA" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5TS47hVEe2UuoshngsjNA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5TS5LhVEe2UuoshngsjNA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5TS5bhVEe2UuoshngsjNA" name="minPacketReceptionRate" type="_R3R5oLhVEe2UuoshngsjNA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5TS5rhVEe2UuoshngsjNA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5TS57hVEe2UuoshngsjNA" name="e2e" visibility="private" type="_R3R5oLhVEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5T58LhVEe2UuoshngsjNA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5T58rhVEe2UuoshngsjNA" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5T587hVEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5T59LhVEe2UuoshngsjNA" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5T59bhVEe2UuoshngsjNA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5UhAbhVEe2UuoshngsjNA" name="flows" type="_RgrXgLhVEe2UuoshngsjNA" association="_R6aGJLhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5UhArhVEe2UuoshngsjNA" name="nodes" type="_RhPYMLhVEe2UuoshngsjNA" association="_R6atMbhVEe2UuoshngsjNA"/>
              <ownedAttribute xmi:id="_R5UhA7hVEe2UuoshngsjNA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5VIEbhVEe2UuoshngsjNA" name="flowNamesInOriginalOrder" type="_R0Gp0LhVEe2UuoshngsjNA" association="_R7Ro0LhVEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5VIE7hVEe2UuoshngsjNA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R5VvILhVEe2UuoshngsjNA" name="flowNamesInPriorityOrder" type="_R0Gp0LhVEe2UuoshngsjNA" association="_R7SP4LhVEe2UuoshngsjNA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R5VvIrhVEe2UuoshngsjNA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R2U3Y7hVEe2UuoshngsjNA" client="_Rj_KMLhVEe2UuoshngsjNA" supplier="_Rh-YArhVEe2UuoshngsjNA" contract="_Rh-YArhVEe2UuoshngsjNA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6K1k7hVEe2UuoshngsjNA" name="WorkLoad" specification="_R3ulkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6K1lLhVEe2UuoshngsjNA" name="m" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6K1lbhVEe2UuoshngsjNA" name="e2e" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6K1lrhVEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6K1l7hVEe2UuoshngsjNA" type="_Rj_KMLhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6LcoLhVEe2UuoshngsjNA" name="WorkLoad" specification="_R3vMo7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6LcobhVEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6LcorhVEe2UuoshngsjNA" name="m" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6Lco7hVEe2UuoshngsjNA" name="e2e" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R6LcpLhVEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6LcpbhVEe2UuoshngsjNA" type="_Rj_KMLhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6LcprhVEe2UuoshngsjNA" name="setDefaultParameters" specification="_RkBmcLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Lcp7hVEe2UuoshngsjNA" name="getE2e" specification="_RkBmcbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6LcqLhVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6LcqbhVEe2UuoshngsjNA" name="getIntForFlowNames" specification="_RkBmcrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6LcqrhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Lcq7hVEe2UuoshngsjNA" name="getName" specification="_RkCNgLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6LcrLhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6LcrbhVEe2UuoshngsjNA" name="setMinPacketReceptionRate" specification="_R3wawbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6LcrrhVEe2UuoshngsjNA" name="minPacketReceptionRate" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Lcr7hVEe2UuoshngsjNA" name="getMaxPhase" specification="_RkCNgrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6LcsLhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6LcsbhVEe2UuoshngsjNA" name="getMinPeriod" specification="_RkCNhLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6LcsrhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Lcs7hVEe2UuoshngsjNA" name="setE2e" specification="_R3xB0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6LctLhVEe2UuoshngsjNA" name="e2e" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6LctbhVEe2UuoshngsjNA" name="setIntForFlowNames" specification="_RkC0kbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6LctrhVEe2UuoshngsjNA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MDsLhVEe2UuoshngsjNA" name="setName" specification="_RkC0k7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MDsbhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MDsrhVEe2UuoshngsjNA" name="setNodeChannel" specification="_RkDboLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MDs7hVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MDtLhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MDtbhVEe2UuoshngsjNA" name="getNodeChannel" specification="_RkDbo7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MDtrhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MDt7hVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MDuLhVEe2UuoshngsjNA" name="addFlow" specification="_RkECsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MDubhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MDurhVEe2UuoshngsjNA" name="isIntForNodeNames" specification="_RkECsrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MDu7hVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MDvLhVEe2UuoshngsjNA" name="isIntForFlowNames" specification="_RkECtLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MDvbhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MDvrhVEe2UuoshngsjNA" name="addNodeToFlow" specification="_RkEpwbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MDv7hVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MDwLhVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MDwbhVEe2UuoshngsjNA" name="getFlowPriority" specification="_RkFQ0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MDwrhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MDw7hVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MDxLhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MDxbhVEe2UuoshngsjNA" name="setFlowPriority" specification="_RkFQ1LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MDxrhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MDx7hVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MqwLhVEe2UuoshngsjNA" name="setFlowPeriod" specification="_RkF34rhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MqwbhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MqwrhVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Mqw7hVEe2UuoshngsjNA" name="setFlowDeadline" specification="_RkGe8LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MqxLhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MqxbhVEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MqxrhVEe2UuoshngsjNA" name="setFlowPhase" specification="_RkGe87hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Mqx7hVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MqyLhVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MqybhVEe2UuoshngsjNA" name="getFlowIndex" specification="_RkHtELhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MqyrhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6Mqy7hVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6MqzLhVEe2UuoshngsjNA" name="getFlowPriority" specification="_RkHtE7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6MqzbhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6MqzrhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Mqz7hVEe2UuoshngsjNA" name="getFlowPeriod" specification="_RkIUIrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Mq0LhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6Mq0bhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Mq0rhVEe2UuoshngsjNA" name="getFlowDeadline" specification="_RkIUJbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Mq07hVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6Mq1LhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Mq1bhVEe2UuoshngsjNA" name="getFlowPhase" specification="_RkI7MrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Mq1rhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6Mq17hVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR0LhVEe2UuoshngsjNA" name="getFlowTxAttemptsPerLink" specification="_RkJiQLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6NR0bhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6NR0rhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR07hVEe2UuoshngsjNA" name="setFlowsInPriorityOrder" specification="_RkJiQ7hVEe2UuoshngsjNA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR1LhVEe2UuoshngsjNA" name="setFlowsInDMorder" specification="_RkJiRLhVEe2UuoshngsjNA">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR1bhVEe2UuoshngsjNA" name="setFlowsInRMorder" specification="_RkJiRbhVEe2UuoshngsjNA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR1rhVEe2UuoshngsjNA" name="setFlowsInRealTimeHARTorder" specification="_RkKJULhVEe2UuoshngsjNA">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR17hVEe2UuoshngsjNA" name="finalizeCurrentFlow" specification="_RkKJUbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6NR2LhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR2bhVEe2UuoshngsjNA" name="nextReleaseTime" specification="_RkKJU7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6NR2rhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6NR27hVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6NR3LhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR3bhVEe2UuoshngsjNA" name="nextAbsoluteDeadline" specification="_RkKwYrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6NR3rhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6NR37hVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6NR4LhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR4bhVEe2UuoshngsjNA" name="finalizeFlowWithE2eParameters" specification="_RkLXcLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6NR4rhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis analyzer = new ReliabilityAnalysis(e2e, m);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = analyzer.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6NR47hVEe2UuoshngsjNA" name="finalizeFlowWithFixedFaultTolerance" specification="_RkLXcrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6NR5LhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis analyzer = new ReliabilityAnalysis(e2e, minPacketReceptionRate);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = analyzer.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6N46LhVEe2UuoshngsjNA" name="getNodeNamesOrderedAlphabetically" specification="_RkL-gLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6N46bhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6N46rhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6N467hVEe2UuoshngsjNA" name="getFlow" specification="_RkMlkLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6N47LhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6N47bhVEe2UuoshngsjNA" type="_RgiNkLhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it.\n&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6N47rhVEe2UuoshngsjNA" name="getFlowNames" specification="_RkMlkrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6N477hVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6N48LhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6N48bhVEe2UuoshngsjNA" name="getNodeIndex" specification="_RkMllrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6N48rhVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6N487hVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6N49LhVEe2UuoshngsjNA" name="getNodesInFlow" specification="_RkMlmbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6N49bhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6N49rhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6N497hVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6N4-LhVEe2UuoshngsjNA" name="getHyperPeriod" specification="_RkNMo7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6N4-bhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
     // Find LCM of hyperPeriod so far and the current period, then update the&#xD;
     // hyperPeriod with that value&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); &#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Of8LhVEe2UuoshngsjNA" name="getTotalTxAttemptsInFlow" specification="_RkNzsLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Of8bhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6Of8rhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Of87hVEe2UuoshngsjNA" name="getNumTxAttemptsPerLink" specification="_RkNzs7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Of9LhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6Of9bhVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R6Of9rhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Of97hVEe2UuoshngsjNA" name="addEdge" specification="_R2X6sLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Of-LhVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6Of-bhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R6Of-rhVEe2UuoshngsjNA" name="maxFlowLength" specification="_RkPB0LhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_R6Of-7hVEe2UuoshngsjNA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RkBmcLhVEe2UuoshngsjNA" name="setDefaultParameters" visibility="private" method="_R6LcprhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RkBmcbhVEe2UuoshngsjNA" name="getE2e" method="_R6Lcp7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HGaIsv3Ee2QFfqiYSegRA">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3wawLhVEe2UuoshngsjNA" type="_R3R5oLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkBmcrhVEe2UuoshngsjNA" name="getIntForFlowNames" method="_R6LcqbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HGaI8v3Ee2QFfqiYSegRA">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkBmc7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkCNgLhVEe2UuoshngsjNA" name="getName" method="_R6Lcq7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HGaJMv3Ee2QFfqiYSegRA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkCNgbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkCNgrhVEe2UuoshngsjNA" name="getMaxPhase" method="_R6Lcr7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHBMMv3Ee2QFfqiYSegRA">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkCNg7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkCNhLhVEe2UuoshngsjNA" name="getMinPeriod" method="_R6LcsbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHBMcv3Ee2QFfqiYSegRA">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkC0kLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkC0kbhVEe2UuoshngsjNA" name="setIntForFlowNames" method="_R6LctbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHBM8v3Ee2QFfqiYSegRA">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkC0krhVEe2UuoshngsjNA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkC0k7hVEe2UuoshngsjNA" name="setName" method="_R6MDsLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHBNMv3Ee2QFfqiYSegRA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkC0lLhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkDboLhVEe2UuoshngsjNA" name="setNodeChannel" method="_R6MDsrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHBNcv3Ee2QFfqiYSegRA">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkDbobhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkDborhVEe2UuoshngsjNA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkDbo7hVEe2UuoshngsjNA" name="getNodeChannel" method="_R6MDtbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHBNsv3Ee2QFfqiYSegRA">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkDbpLhVEe2UuoshngsjNA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkDbpbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkECsLhVEe2UuoshngsjNA" name="addFlow" method="_R6MDuLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHBN8v3Ee2QFfqiYSegRA">
                  <body>Adds a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
   * the default values. Priority is set to the number of flows already added (index), 0 for first&#xD;
   * flow. This will create a default priority equal to the order listed in the input graph file.&#xD;
   * Index is set to the same value to preserve that order as a secondary sort key.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkECsbhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkECsrhVEe2UuoshngsjNA" name="isIntForNodeNames" method="_R6MDurhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkECs7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkECtLhVEe2UuoshngsjNA" name="isIntForFlowNames" method="_R6MDvLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkEpwLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkEpwbhVEe2UuoshngsjNA" name="addNodeToFlow" method="_R6MDvrhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHBOMv3Ee2QFfqiYSegRA">
                  <body>Adds the given node to the flow. Creates a new node with default priority if there is not&#xD;
   * already an existing node with the given name. Updates the flow's transmission cost after &#xD;
   * the node has been added.&#xD;
   * &#xD;
   * @param flowName the flow to add the node to&#xD;
   * @param nodeName the name of the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkEpwrhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkEpw7hVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkFQ0LhVEe2UuoshngsjNA" name="getFlowPriority" method="_R6MDwbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHoQMv3Ee2QFfqiYSegRA">
                  <body>Finds the priority of the given node within the given flow.&#xD;
   * &#xD;
   * @param flowName the flow the node belongs to&#xD;
   * @param nodeName the node to find the priority of&#xD;
   * @return the priority of the given node, 0 if node does not exist</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkFQ0bhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkFQ0rhVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkFQ07hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkFQ1LhVEe2UuoshngsjNA" name="setFlowPriority" method="_R6MDxbhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkF34LhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkF34bhVEe2UuoshngsjNA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkF34rhVEe2UuoshngsjNA" name="setFlowPeriod" method="_R6MqwLhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkF347hVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkF35LhVEe2UuoshngsjNA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkGe8LhVEe2UuoshngsjNA" name="setFlowDeadline" method="_R6Mqw7hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkGe8bhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkGe8rhVEe2UuoshngsjNA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkGe87hVEe2UuoshngsjNA" name="setFlowPhase" method="_R6MqxrhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkGe9LhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkHGALhVEe2UuoshngsjNA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkHtELhVEe2UuoshngsjNA" name="getFlowIndex" method="_R6MqybhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkHtEbhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkHtErhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkHtE7hVEe2UuoshngsjNA" name="getFlowPriority" method="_R6MqzLhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHoQcv3Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get the priority from&#xD;
   * @return the priority of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkIUILhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkIUIbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkIUIrhVEe2UuoshngsjNA" name="getFlowPeriod" method="_R6Mqz7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHoQsv3Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get the period from&#xD;
   * @return the period of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkIUI7hVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkIUJLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkIUJbhVEe2UuoshngsjNA" name="getFlowDeadline" method="_R6Mq0rhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHoQ8v3Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get the deadline from&#xD;
   * @return the deadline of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkI7MLhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkI7MbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkI7MrhVEe2UuoshngsjNA" name="getFlowPhase" method="_R6Mq1bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHoRMv3Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get the phase from&#xD;
   * @return the phase of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkI7M7hVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkI7NLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkJiQLhVEe2UuoshngsjNA" name="getFlowTxAttemptsPerLink" method="_R6NR0LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHoRcv3Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to retrieve transmission attempts from&#xD;
   * @return the number of transmission attempts for any one link in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkJiQbhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkJiQrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkJiQ7hVEe2UuoshngsjNA" name="setFlowsInPriorityOrder" method="_R6NR07hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHoRsv3Ee2QFfqiYSegRA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by priority, and then by&#xD;
   * index.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_RkJiRLhVEe2UuoshngsjNA" name="setFlowsInDMorder" method="_R6NR1LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HIPUMv3Ee2QFfqiYSegRA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by deadline, and then by&#xD;
   * priority.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_RkJiRbhVEe2UuoshngsjNA" name="setFlowsInRMorder" method="_R6NR1bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HIPUcv3Ee2QFfqiYSegRA">
                  <body>Sets flowNamesInPriorityOrder to a List of all flows sorted first by period, and then by&#xD;
   * priority.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_RkKJULhVEe2UuoshngsjNA" name="setFlowsInRealTimeHARTorder" method="_R6NR1rhVEe2UuoshngsjNA"/>
              <ownedOperation xmi:id="_RkKJUbhVEe2UuoshngsjNA" name="finalizeCurrentFlow" method="_R6NR17hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkKJUrhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkKJU7hVEe2UuoshngsjNA" name="nextReleaseTime" method="_R6NR2bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkKJVLhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkKwYLhVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkKwYbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkKwYrhVEe2UuoshngsjNA" name="nextAbsoluteDeadline" method="_R6NR3bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkKwY7hVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkKwZLhVEe2UuoshngsjNA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkKwZbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkLXcLhVEe2UuoshngsjNA" name="finalizeFlowWithE2eParameters" visibility="private" method="_R6NR4bhVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkLXcbhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkLXcrhVEe2UuoshngsjNA" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_R6NR47hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkLXc7hVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkL-gLhVEe2UuoshngsjNA" name="getNodeNamesOrderedAlphabetically" method="_R6N46LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HIPUsv3Ee2QFfqiYSegRA">
                  <body>@return a String array of all node names in alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkL-gbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RkL-grhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkMlkLhVEe2UuoshngsjNA" name="getFlow" visibility="private" method="_R6N467hVEe2UuoshngsjNA">
                <ownedParameter xmi:id="_RkMlkbhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R2XTobhVEe2UuoshngsjNA" type="_RgiNkLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkMlkrhVEe2UuoshngsjNA" name="getFlowNames" method="_R6N47rhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HIPU8v3Ee2QFfqiYSegRA">
                  <body>@return a String array with the flow names in their original order from the graph file</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkMlk7hVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RkMllLhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkMllrhVEe2UuoshngsjNA" name="getNodeIndex" method="_R6N48bhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HIPVMv3Ee2QFfqiYSegRA">
                  <body>@param nodeName the node to find the index of&#xD;
   * @return the index of the given node</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkMll7hVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkMlmLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkMlmbhVEe2UuoshngsjNA" name="getNodesInFlow" method="_R6N49LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HIPVcv3Ee2QFfqiYSegRA">
                  <body>@param flowName the flow to get node names from&#xD;
   * @return an empty array if the flow given doesn't exists, otherwise&#xD;
   * returns an array of the names of the nodes in the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkMlmrhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkNMoLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RkNMobhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkNMo7hVEe2UuoshngsjNA" name="getHyperPeriod" method="_R6N4-LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HI2YMv3Ee2QFfqiYSegRA">
                  <body>Calculates the hyperPeriod, which is the smallest time period required to wait&#xD;
   * until all flows can be repeated.&#xD;
   * &#xD;
   * @return the hyperPeriod of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkNMpLhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkNzsLhVEe2UuoshngsjNA" name="getTotalTxAttemptsInFlow" method="_R6Of8LhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HI2Ycv3Ee2QFfqiYSegRA">
                  <body>@param flowName the name of the flow being analyzed&#xD;
   * @return the total number of transmission attempts in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkNzsbhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkNzsrhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkNzs7hVEe2UuoshngsjNA" name="getNumTxAttemptsPerLink" method="_R6Of87hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HI2Ysv3Ee2QFfqiYSegRA">
                  <body>Calculates the number of transmission attempts for each link in a given flow.&#xD;
   * &#xD;
   * @param flowName the name of the flow being analyzed&#xD;
   * @return an array of the number of transmissions needed for each&#xD;
   * edge to meet E2E target</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkNztLhVEe2UuoshngsjNA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkNztbhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RkNztrhVEe2UuoshngsjNA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkPB0LhVEe2UuoshngsjNA" name="maxFlowLength" method="_R6Of-rhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HI2ZMv3Ee2QFfqiYSegRA">
                  <body>@return the length of the longest flow in the WorkLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkPB0bhVEe2UuoshngsjNA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R2X6sLhVEe2UuoshngsjNA" name="addEdge" method="_R6Of97hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HI2Y8v3Ee2QFfqiYSegRA">
                  <body>Adds an edge to an existing node's list of connected edges.&#xD;
   * &#xD;
   * @param nodeName the node the edge is being added to&#xD;
   * @param edge the edge to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_R2X6sbhVEe2UuoshngsjNA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R2X6srhVEe2UuoshngsjNA" name="edge" type="_RgWnYLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3ulkLhVEe2UuoshngsjNA" name="WorkLoad" visibility="package" method="_R6K1k7hVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3vMoLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3vMobhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_0HGaIMv3Ee2QFfqiYSegRA">
                  <body>Creates a new WorkLoad based on the provided file, packet reception rate, and end to end&#xD;
   * reliability. In addition to initializing the WorkLoad attributes, it will read the input&#xD;
   * file, built the AST of the graph, and build the node and flow data objects. This constructor&#xD;
   * sets the number of faults equal to 0.&#xD;
   * &#xD;
   * @param m the minimum packet reception rate to use for the Workload, between 0.0 and 1.0&#xD;
   * @param e2e the end to end communication reliability for the Workload, between 0.0 and 1.0&#xD;
   * @param inputFileName the file to develop the graph from</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3ulkbhVEe2UuoshngsjNA" name="m" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3ulkrhVEe2UuoshngsjNA" name="e2e" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3ulk7hVEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3vMorhVEe2UuoshngsjNA" type="_Rj_KMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3vMo7hVEe2UuoshngsjNA" name="WorkLoad" visibility="package" method="_R6LcoLhVEe2UuoshngsjNA">
                <eAnnotations xmi:id="_R3vztLhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R3vztbhVEe2UuoshngsjNA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_0HGaIcv3Ee2QFfqiYSegRA">
                  <body>Creates a new WorkLoad based on the provided file, packet reception rate, and end to end&#xD;
   * reliability. In addition to initializing the WorkLoad attributes, it will read the input&#xD;
   * file, built the AST of the graph, and build the node and flow data objects.&#xD;
   * &#xD;
   * @param numFaults the number of faults per edge to use for the Workload, integer >= 0&#xD;
   * @param m the minimum packet reception rate to use for the Workload, between 0.0 and 1.0&#xD;
   * @param e2e the end to end communication reliability for the Workload, between 0.0 and 1.0&#xD;
   * @param inputFileName the file to develop the graph from</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3vzsLhVEe2UuoshngsjNA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3vzsbhVEe2UuoshngsjNA" name="m" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3vzsrhVEe2UuoshngsjNA" name="e2e" type="_R3R5oLhVEe2UuoshngsjNA"/>
                <ownedParameter xmi:id="_R3vzs7hVEe2UuoshngsjNA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R3vztrhVEe2UuoshngsjNA" type="_Rj_KMLhVEe2UuoshngsjNA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3wawbhVEe2UuoshngsjNA" name="setMinPacketReceptionRate" method="_R6LcrbhVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HGaJcv3Ee2QFfqiYSegRA">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3wawrhVEe2UuoshngsjNA" name="minPacketReceptionRate" type="_R3R5oLhVEe2UuoshngsjNA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R3xB0LhVEe2UuoshngsjNA" name="setE2e" method="_R6Lcs7hVEe2UuoshngsjNA">
                <ownedComment xmi:id="_0HHBMsv3Ee2QFfqiYSegRA">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_R3xB0bhVEe2UuoshngsjNA" name="e2e" type="_R3R5oLhVEe2UuoshngsjNA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_R24RALhVEe2UuoshngsjNA" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R3MaELhVEe2UuoshngsjNA" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R3O2UrhVEe2UuoshngsjNA" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R3gjILhVEe2UuoshngsjNA" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R3hKM7hVEe2UuoshngsjNA" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6TYcrhVEe2UuoshngsjNA" name="" memberEnd="_R4KDYbhVEe2UuoshngsjNA _R6TYc7hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6TYc7hVEe2UuoshngsjNA" name="" type="_RgWnYLhVEe2UuoshngsjNA" association="_R6TYcrhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6XC0LhVEe2UuoshngsjNA" name="" memberEnd="_R4v5Q7hVEe2UuoshngsjNA _R6XC0bhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6XC0bhVEe2UuoshngsjNA" name="" type="_RiIwELhVEe2UuoshngsjNA" association="_R6XC0LhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6aGJLhVEe2UuoshngsjNA" name="" memberEnd="_R5UhAbhVEe2UuoshngsjNA _R6atMLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6atMLhVEe2UuoshngsjNA" name="" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R6aGJLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6atMbhVEe2UuoshngsjNA" name="" memberEnd="_R5UhArhVEe2UuoshngsjNA _R6atMrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6atMrhVEe2UuoshngsjNA" name="" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R6atMbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6vdULhVEe2UuoshngsjNA" name="" memberEnd="_R6vdUbhVEe2UuoshngsjNA _R392ILhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6vdUbhVEe2UuoshngsjNA" name="" type="_RftHILhVEe2UuoshngsjNA" association="_R6vdULhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6vdU7hVEe2UuoshngsjNA" name="" memberEnd="_R6vdVLhVEe2UuoshngsjNA _R3-dMbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6vdVLhVEe2UuoshngsjNA" name="" type="_RftHILhVEe2UuoshngsjNA" association="_R6vdU7hVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6wEYbhVEe2UuoshngsjNA" name="" memberEnd="_R6wEYrhVEe2UuoshngsjNA _R3_EQLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6wEYrhVEe2UuoshngsjNA" name="" type="_RftHILhVEe2UuoshngsjNA" association="_R6wEYbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6wEZLhVEe2UuoshngsjNA" name="" memberEnd="_R6wrcLhVEe2UuoshngsjNA _R4ASYrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6wrcLhVEe2UuoshngsjNA" name="" type="_Rf7woLhVEe2UuoshngsjNA" association="_R6wEZLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6wrcrhVEe2UuoshngsjNA" name="" memberEnd="_R6wrc7hVEe2UuoshngsjNA _R4A5cbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6wrc7hVEe2UuoshngsjNA" name="" type="_Rf7woLhVEe2UuoshngsjNA" association="_R6wrcrhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6xSgbhVEe2UuoshngsjNA" name="" memberEnd="_R6xSgrhVEe2UuoshngsjNA _R4BghbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6xSgrhVEe2UuoshngsjNA" name="" type="_Rf-M4LhVEe2UuoshngsjNA" association="_R6xSgbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6xShLhVEe2UuoshngsjNA" name="" memberEnd="_R6xShbhVEe2UuoshngsjNA _R4CHkbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6xShbhVEe2UuoshngsjNA" name="" type="_Rf-M4LhVEe2UuoshngsjNA" association="_R6xShLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6x5kbhVEe2UuoshngsjNA" name="" memberEnd="_R6x5krhVEe2UuoshngsjNA _R4DVsrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6x5krhVEe2UuoshngsjNA" name="" type="_Rf-z8LhVEe2UuoshngsjNA" association="_R6x5kbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6x5lLhVEe2UuoshngsjNA" name="" memberEnd="_R6x5lbhVEe2UuoshngsjNA _R4Ej0LhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6x5lbhVEe2UuoshngsjNA" name="" type="_RgDscLhVEe2UuoshngsjNA" association="_R6x5lLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6ygobhVEe2UuoshngsjNA" name="" memberEnd="_R6ygorhVEe2UuoshngsjNA _R4FK4rhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6ygorhVEe2UuoshngsjNA" name="" type="_RgDscLhVEe2UuoshngsjNA" association="_R6ygobhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6zuwLhVEe2UuoshngsjNA" name="" memberEnd="_R6zuwbhVEe2UuoshngsjNA _R4HnILhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6zuwbhVEe2UuoshngsjNA" name="" type="_RgNdcLhVEe2UuoshngsjNA" association="_R6zuwLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6zuw7hVEe2UuoshngsjNA" name="" memberEnd="_R6zuxLhVEe2UuoshngsjNA _R4IOM7hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6zuxLhVEe2UuoshngsjNA" name="" type="_RgNdcLhVEe2UuoshngsjNA" association="_R6zuw7hVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R60V0bhVEe2UuoshngsjNA" name="" memberEnd="_R60V0rhVEe2UuoshngsjNA _R4NtwbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R60V0rhVEe2UuoshngsjNA" name="" type="_RgiNkLhVEe2UuoshngsjNA" association="_R60V0bhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6084bhVEe2UuoshngsjNA" name="" memberEnd="_R6084rhVEe2UuoshngsjNA _R4OU0bhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6084rhVEe2UuoshngsjNA" name="" type="_RgiNkLhVEe2UuoshngsjNA" association="_R6084bhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R61j8LhVEe2UuoshngsjNA" name="" memberEnd="_R61j8bhVEe2UuoshngsjNA _R4O74bhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R61j8bhVEe2UuoshngsjNA" name="" type="_RgiNkLhVEe2UuoshngsjNA" association="_R61j8LhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R62LAbhVEe2UuoshngsjNA" name="" memberEnd="_R62LArhVEe2UuoshngsjNA _R4Pi8bhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R62LArhVEe2UuoshngsjNA" name="" type="_RgiNkLhVEe2UuoshngsjNA" association="_R62LAbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R62yEbhVEe2UuoshngsjNA" name="" memberEnd="_R62yErhVEe2UuoshngsjNA _R4QKALhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R62yErhVEe2UuoshngsjNA" name="" type="_RgiNkLhVEe2UuoshngsjNA" association="_R62yEbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R63ZIbhVEe2UuoshngsjNA" name="" memberEnd="_R63ZIrhVEe2UuoshngsjNA _R4SmQLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R63ZIrhVEe2UuoshngsjNA" name="" type="_Rgr-kbhVEe2UuoshngsjNA" association="_R63ZIbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R63ZJLhVEe2UuoshngsjNA" name="" memberEnd="_R63ZJbhVEe2UuoshngsjNA _R4TNUrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R63ZJbhVEe2UuoshngsjNA" name="" type="_Rgr-kbhVEe2UuoshngsjNA" association="_R63ZJLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R64AMbhVEe2UuoshngsjNA" name="" memberEnd="_R64AMrhVEe2UuoshngsjNA _R4T0YLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R64AMrhVEe2UuoshngsjNA" name="" type="_RgyFMLhVEe2UuoshngsjNA" association="_R64AMbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R64nQbhVEe2UuoshngsjNA" name="" memberEnd="_R64nQrhVEe2UuoshngsjNA _R4UbcbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R64nQrhVEe2UuoshngsjNA" name="" type="_Rg0hcLhVEe2UuoshngsjNA" association="_R64nQbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R65OUbhVEe2UuoshngsjNA" name="" memberEnd="_R65OUrhVEe2UuoshngsjNA _R4VCgbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R65OUrhVEe2UuoshngsjNA" name="" type="_Rg0hcLhVEe2UuoshngsjNA" association="_R65OUbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R651YLhVEe2UuoshngsjNA" name="" memberEnd="_R651YbhVEe2UuoshngsjNA _R4VpkrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R651YbhVEe2UuoshngsjNA" name="" type="_Rg3kwLhVEe2UuoshngsjNA" association="_R651YLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R651Y7hVEe2UuoshngsjNA" name="" memberEnd="_R651ZLhVEe2UuoshngsjNA _R4YF07hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R651ZLhVEe2UuoshngsjNA" name="" type="_RhCj4LhVEe2UuoshngsjNA" association="_R651Y7hVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R66ccbhVEe2UuoshngsjNA" name="" memberEnd="_R66ccrhVEe2UuoshngsjNA _R4Ys4bhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R66ccrhVEe2UuoshngsjNA" name="" type="_RhCj4LhVEe2UuoshngsjNA" association="_R66ccbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R67DgbhVEe2UuoshngsjNA" name="" memberEnd="_R67DgrhVEe2UuoshngsjNA _R4Ys47hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R67DgrhVEe2UuoshngsjNA" name="" type="_RhCj4LhVEe2UuoshngsjNA" association="_R67DgbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R67qkbhVEe2UuoshngsjNA" name="" memberEnd="_R67qkrhVEe2UuoshngsjNA _R4ZT8bhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R67qkrhVEe2UuoshngsjNA" name="" type="_RhCj4LhVEe2UuoshngsjNA" association="_R67qkbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R68RobhVEe2UuoshngsjNA" name="" memberEnd="_R68RorhVEe2UuoshngsjNA _R4ZT87hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R68RorhVEe2UuoshngsjNA" name="" type="_RhCj4LhVEe2UuoshngsjNA" association="_R68RobhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6-t4bhVEe2UuoshngsjNA" name="" memberEnd="_R6-t4rhVEe2UuoshngsjNA _R4bJIbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6-t4rhVEe2UuoshngsjNA" name="" type="_RhGOQLhVEe2UuoshngsjNA" association="_R6-t4bhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6_U8bhVEe2UuoshngsjNA" name="" memberEnd="_R6_U8rhVEe2UuoshngsjNA _R4bwMLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6_U8rhVEe2UuoshngsjNA" name="" type="_RhGOQLhVEe2UuoshngsjNA" association="_R6_U8bhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R6_8AbhVEe2UuoshngsjNA" name="" memberEnd="_R6_8ArhVEe2UuoshngsjNA _R4cXQrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R6_8ArhVEe2UuoshngsjNA" name="" type="_RhJRkbhVEe2UuoshngsjNA" association="_R6_8AbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7AjEbhVEe2UuoshngsjNA" name="" memberEnd="_R7AjErhVEe2UuoshngsjNA _R4eMcrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7AjErhVEe2UuoshngsjNA" name="" type="_RhUQsLhVEe2UuoshngsjNA" association="_R7AjEbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7AjFLhVEe2UuoshngsjNA" name="" memberEnd="_R7AjFbhVEe2UuoshngsjNA _R4ezgLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7AjFbhVEe2UuoshngsjNA" name="" type="_RhUQsLhVEe2UuoshngsjNA" association="_R7AjFLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7BKIbhVEe2UuoshngsjNA" name="" memberEnd="_R7BKIrhVEe2UuoshngsjNA _R4ezgrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7BKIrhVEe2UuoshngsjNA" name="" type="_RhUQsLhVEe2UuoshngsjNA" association="_R7BKIbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7BKJLhVEe2UuoshngsjNA" name="" memberEnd="_R7BKJbhVEe2UuoshngsjNA _R4fakbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7BKJbhVEe2UuoshngsjNA" name="" type="_RhUQsLhVEe2UuoshngsjNA" association="_R7BKJLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7BxMbhVEe2UuoshngsjNA" name="" memberEnd="_R7BxMrhVEe2UuoshngsjNA _R4gBobhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7BxMrhVEe2UuoshngsjNA" name="" type="_RhUQsLhVEe2UuoshngsjNA" association="_R7BxMbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7BxNLhVEe2UuoshngsjNA" name="" memberEnd="_R7BxNbhVEe2UuoshngsjNA _R4gBo7hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7BxNbhVEe2UuoshngsjNA" name="" type="_RhUQsLhVEe2UuoshngsjNA" association="_R7BxNLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7CYQbhVEe2UuoshngsjNA" name="" memberEnd="_R7CYQrhVEe2UuoshngsjNA _R4gosrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7CYQrhVEe2UuoshngsjNA" name="" type="_RhUQsLhVEe2UuoshngsjNA" association="_R7CYQbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7CYRLhVEe2UuoshngsjNA" name="" memberEnd="_R7CYRbhVEe2UuoshngsjNA _R4hPwrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7CYRbhVEe2UuoshngsjNA" name="" type="_RhUQsLhVEe2UuoshngsjNA" association="_R7CYRLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7C_UbhVEe2UuoshngsjNA" name="" memberEnd="_R7C_UrhVEe2UuoshngsjNA _R4id5bhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7C_UrhVEe2UuoshngsjNA" name="" type="_RhiTILhVEe2UuoshngsjNA" association="_R7C_UbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7C_VLhVEe2UuoshngsjNA" name="" memberEnd="_R7C_VbhVEe2UuoshngsjNA _R4jE8bhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7C_VbhVEe2UuoshngsjNA" name="" type="_RhiTILhVEe2UuoshngsjNA" association="_R7C_VLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7DmYbhVEe2UuoshngsjNA" name="" memberEnd="_R7DmYrhVEe2UuoshngsjNA _R4jE87hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7DmYrhVEe2UuoshngsjNA" name="" type="_RhiTILhVEe2UuoshngsjNA" association="_R7DmYbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7ENcLhVEe2UuoshngsjNA" name="" memberEnd="_R7ENcbhVEe2UuoshngsjNA _R4lhMrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7ENcbhVEe2UuoshngsjNA" name="" type="_RhiTILhVEe2UuoshngsjNA" association="_R7ENcLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7E0gbhVEe2UuoshngsjNA" name="" memberEnd="_R7E0grhVEe2UuoshngsjNA _R4mvU7hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7E0grhVEe2UuoshngsjNA" name="" type="_RhiTILhVEe2UuoshngsjNA" association="_R7E0gbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7E0hLhVEe2UuoshngsjNA" name="" memberEnd="_R7E0hbhVEe2UuoshngsjNA _R4okgrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7E0hbhVEe2UuoshngsjNA" name="" type="_Rh0nBLhVEe2UuoshngsjNA" association="_R7E0hLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7FbkbhVEe2UuoshngsjNA" name="" memberEnd="_R7FbkrhVEe2UuoshngsjNA _R4pLkLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7FbkrhVEe2UuoshngsjNA" name="" type="_Rh0nBLhVEe2UuoshngsjNA" association="_R7FbkbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7FblLhVEe2UuoshngsjNA" name="" memberEnd="_R7FblbhVEe2UuoshngsjNA _R4rAwbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7FblbhVEe2UuoshngsjNA" name="" type="_RiDQgLhVEe2UuoshngsjNA" association="_R7FblLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7GCobhVEe2UuoshngsjNA" name="" memberEnd="_R7GCorhVEe2UuoshngsjNA _R4rAw7hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7GCorhVEe2UuoshngsjNA" name="" type="_RiDQgLhVEe2UuoshngsjNA" association="_R7GCobhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7GCpLhVEe2UuoshngsjNA" name="" memberEnd="_R7GCpbhVEe2UuoshngsjNA _R4rn0rhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7GCpbhVEe2UuoshngsjNA" name="" type="_RiEeoLhVEe2UuoshngsjNA" association="_R7GCpLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7GpsbhVEe2UuoshngsjNA" name="" memberEnd="_R7GpsrhVEe2UuoshngsjNA _R4wgULhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7GpsrhVEe2UuoshngsjNA" name="" type="_RiIwELhVEe2UuoshngsjNA" association="_R7GpsbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7HQwbhVEe2UuoshngsjNA" name="" memberEnd="_R7HQwrhVEe2UuoshngsjNA _R4xHYLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7HQwrhVEe2UuoshngsjNA" name="" type="_RiIwELhVEe2UuoshngsjNA" association="_R7HQwbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7H30bhVEe2UuoshngsjNA" name="" memberEnd="_R7H30rhVEe2UuoshngsjNA _R4zjorhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7H30rhVEe2UuoshngsjNA" name="" type="_RibrALhVEe2UuoshngsjNA" association="_R7H30bhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7Ie4bhVEe2UuoshngsjNA" name="" memberEnd="_R7Ie4rhVEe2UuoshngsjNA _R4zjpLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7Ie4rhVEe2UuoshngsjNA" name="" type="_RibrALhVEe2UuoshngsjNA" association="_R7Ie4bhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7JF8bhVEe2UuoshngsjNA" name="" memberEnd="_R7JF8rhVEe2UuoshngsjNA _R41_47hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7JF8rhVEe2UuoshngsjNA" name="" type="_Ri2hwLhVEe2UuoshngsjNA" association="_R7JF8bhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7JtALhVEe2UuoshngsjNA" name="" memberEnd="_R7JtAbhVEe2UuoshngsjNA _R42m8bhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7JtAbhVEe2UuoshngsjNA" name="" type="_Ri2hwLhVEe2UuoshngsjNA" association="_R7JtALhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7JtA7hVEe2UuoshngsjNA" name="" memberEnd="_R7JtBLhVEe2UuoshngsjNA _R42m87hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7JtBLhVEe2UuoshngsjNA" name="" type="_Ri2hwLhVEe2UuoshngsjNA" association="_R7JtA7hVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7KUEbhVEe2UuoshngsjNA" name="" memberEnd="_R7KUErhVEe2UuoshngsjNA _R431E7hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7KUErhVEe2UuoshngsjNA" name="" type="_Ri2hwLhVEe2UuoshngsjNA" association="_R7KUEbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7K7IbhVEe2UuoshngsjNA" name="" memberEnd="_R7K7IrhVEe2UuoshngsjNA _R44cIbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7K7IrhVEe2UuoshngsjNA" name="" type="_Ri2hwLhVEe2UuoshngsjNA" association="_R7K7IbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7LiMLhVEe2UuoshngsjNA" name="" memberEnd="_R7LiMbhVEe2UuoshngsjNA _R44cJLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7LiMbhVEe2UuoshngsjNA" name="" type="_Ri2hwLhVEe2UuoshngsjNA" association="_R7LiMLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7LiM7hVEe2UuoshngsjNA" name="" memberEnd="_R7LiNLhVEe2UuoshngsjNA _R45DMrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7LiNLhVEe2UuoshngsjNA" name="" type="_Ri2hwLhVEe2UuoshngsjNA" association="_R7LiM7hVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7MJQbhVEe2UuoshngsjNA" name="" memberEnd="_R7MJQrhVEe2UuoshngsjNA _R46RULhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7MJQrhVEe2UuoshngsjNA" name="" type="_Ri8oYLhVEe2UuoshngsjNA" association="_R7MJQbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7MwUbhVEe2UuoshngsjNA" name="" memberEnd="_R7MwUrhVEe2UuoshngsjNA _R5ITwbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7MwUrhVEe2UuoshngsjNA" name="" type="_RjPjUbhVEe2UuoshngsjNA" association="_R7MwUbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7MwVLhVEe2UuoshngsjNA" name="" memberEnd="_R7MwVbhVEe2UuoshngsjNA _R5I60rhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7MwVbhVEe2UuoshngsjNA" name="" type="_RjPjUbhVEe2UuoshngsjNA" association="_R7MwVLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7NXYbhVEe2UuoshngsjNA" name="" memberEnd="_R7NXYrhVEe2UuoshngsjNA _R5KI8LhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7NXYrhVEe2UuoshngsjNA" name="" type="_RjbJgLhVEe2UuoshngsjNA" association="_R7NXYbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7N-cbhVEe2UuoshngsjNA" name="" memberEnd="_R7N-crhVEe2UuoshngsjNA _R5KI8rhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7N-crhVEe2UuoshngsjNA" name="" type="_RjbJgLhVEe2UuoshngsjNA" association="_R7N-cbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7OlgLhVEe2UuoshngsjNA" name="" memberEnd="_R7OlgbhVEe2UuoshngsjNA _R5KwAbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7OlgbhVEe2UuoshngsjNA" name="" type="_RjbJgLhVEe2UuoshngsjNA" association="_R7OlgLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7Olg7hVEe2UuoshngsjNA" name="" memberEnd="_R7OlhLhVEe2UuoshngsjNA _R5KwA7hVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7OlhLhVEe2UuoshngsjNA" name="" type="_RjbJgLhVEe2UuoshngsjNA" association="_R7Olg7hVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7PMkbhVEe2UuoshngsjNA" name="" memberEnd="_R7PMkrhVEe2UuoshngsjNA _R5LXEbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7PMkrhVEe2UuoshngsjNA" name="" type="_RjbJgLhVEe2UuoshngsjNA" association="_R7PMkbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7PMlLhVEe2UuoshngsjNA" name="" memberEnd="_R7PMlbhVEe2UuoshngsjNA _R5PBcLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7PMlbhVEe2UuoshngsjNA" name="" type="_RjpzALhVEe2UuoshngsjNA" association="_R7PMlLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7PzobhVEe2UuoshngsjNA" name="" memberEnd="_R7PzorhVEe2UuoshngsjNA _R5PogbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7PzorhVEe2UuoshngsjNA" name="" type="_RjpzALhVEe2UuoshngsjNA" association="_R7PzobhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7QasLhVEe2UuoshngsjNA" name="" memberEnd="_R7QasbhVEe2UuoshngsjNA _R5QPkLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7QasbhVEe2UuoshngsjNA" name="" type="_RjtdYLhVEe2UuoshngsjNA" association="_R7QasLhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7Qas7hVEe2UuoshngsjNA" name="" memberEnd="_R7QatLhVEe2UuoshngsjNA _R5RdsLhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7QatLhVEe2UuoshngsjNA" name="" type="_Rjv5oLhVEe2UuoshngsjNA" association="_R7Qas7hVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7RBwbhVEe2UuoshngsjNA" name="" memberEnd="_R7RBwrhVEe2UuoshngsjNA _R5RdsrhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7RBwrhVEe2UuoshngsjNA" name="" type="_Rjv5oLhVEe2UuoshngsjNA" association="_R7RBwbhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7Ro0LhVEe2UuoshngsjNA" name="" memberEnd="_R7Ro0bhVEe2UuoshngsjNA _R5VIEbhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7Ro0bhVEe2UuoshngsjNA" name="" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R7Ro0LhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R7SP4LhVEe2UuoshngsjNA" name="" memberEnd="_R7SP4bhVEe2UuoshngsjNA _R5VvILhVEe2UuoshngsjNA">
              <ownedEnd xmi:id="_R7SP4bhVEe2UuoshngsjNA" name="" type="_Rj_KMLhVEe2UuoshngsjNA" association="_R7SP4LhVEe2UuoshngsjNA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_0HL5sMv3Ee2QFfqiYSegRA" name="" memberEnd="_0HL5scv3Ee2QFfqiYSegRA _0G4-wMv3Ee2QFfqiYSegRA">
              <ownedEnd xmi:id="_0HL5scv3Ee2QFfqiYSegRA" name="" type="_Rh9w8bhVEe2UuoshngsjNA" association="_0HL5sMv3Ee2QFfqiYSegRA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_RcuElLhVEe2UuoshngsjNA" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_R0qDcLhVEe2UuoshngsjNA" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R0qDcrhVEe2UuoshngsjNA" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R0qqgbhVEe2UuoshngsjNA" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R3n34LhVEe2UuoshngsjNA" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_RdDbwLhVEe2UuoshngsjNA" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_R1IkkLhVEe2UuoshngsjNA" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RcOVULhVEe2UuoshngsjNA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_RcOVUbhVEe2UuoshngsjNA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_RcZ7gLhVEe2UuoshngsjNA" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_R0V6YLhVEe2UuoshngsjNA" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RePHgLhVEe2UuoshngsjNA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_R2U3YbhVEe2UuoshngsjNA" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Rh8i1LhVEe2UuoshngsjNA" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R0GCwLhVEe2UuoshngsjNA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R0Gp0LhVEe2UuoshngsjNA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R0HQ4bhVEe2UuoshngsjNA" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R0H38bhVEe2UuoshngsjNA" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R0IfAbhVEe2UuoshngsjNA" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R0ay47hVEe2UuoshngsjNA" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R0-zkLhVEe2UuoshngsjNA" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R1IkkrhVEe2UuoshngsjNA" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R1bfgLhVEe2UuoshngsjNA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R1cGkbhVEe2UuoshngsjNA" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R2Fm0LhVEe2UuoshngsjNA" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R2GN4bhVEe2UuoshngsjNA" name="Scanner"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R2TpQLhVEe2UuoshngsjNA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R2UQUbhVEe2UuoshngsjNA" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RckTk7hVEe2UuoshngsjNA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_R0fEUbhVEe2UuoshngsjNA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R0frYbhVEe2UuoshngsjNA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R00bgLhVEe2UuoshngsjNA" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R01CkbhVEe2UuoshngsjNA" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RckTlLhVEe2UuoshngsjNA" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_RckTlbhVEe2UuoshngsjNA" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_R0frY7hVEe2UuoshngsjNA" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_R0gScbhVEe2UuoshngsjNA" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_R0gSc7hVEe2UuoshngsjNA" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Rcy9ELhVEe2UuoshngsjNA" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_R0xYMLhVEe2UuoshngsjNA" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_R2qOkLhVEe2UuoshngsjNA" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_R2qOkbhVEe2UuoshngsjNA" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R3Ba8LhVEe2UuoshngsjNA" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_R3R5oLhVEe2UuoshngsjNA" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RckTkLhVEe2UuoshngsjNA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_RckTkbhVEe2UuoshngsjNA" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_RckTkrhVEe2UuoshngsjNA" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_R0edQLhVEe2UuoshngsjNA" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RckTlrhVEe2UuoshngsjNA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_RckTl7hVEe2UuoshngsjNA" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_Rcy9EbhVEe2UuoshngsjNA" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_R0zNYbhVEe2UuoshngsjNA" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_R0zNY7hVEe2UuoshngsjNA" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_R0g5gbhVEe2UuoshngsjNA" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R0x_QbhVEe2UuoshngsjNA" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R0ymULhVEe2UuoshngsjNA" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R0ymUrhVEe2UuoshngsjNA" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RctdgLhVEe2UuoshngsjNA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_RcuEkLhVEe2UuoshngsjNA" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_RcuEkbhVEe2UuoshngsjNA" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_RcuEkrhVEe2UuoshngsjNA" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_RcuEk7hVEe2UuoshngsjNA" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_R0o1UrhVEe2UuoshngsjNA" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_R0pcYbhVEe2UuoshngsjNA" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_R0nnMLhVEe2UuoshngsjNA" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R0oOQbhVEe2UuoshngsjNA" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R0o1ULhVEe2UuoshngsjNA" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ReKPALhVEe2UuoshngsjNA" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_ReKPAbhVEe2UuoshngsjNA" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_ReKPArhVEe2UuoshngsjNA" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_R2RNALhVEe2UuoshngsjNA" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_R2R0EbhVEe2UuoshngsjNA" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_R2SbIbhVEe2UuoshngsjNA" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RcvSsrhVEe2UuoshngsjNA" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_R0r4oLhVEe2UuoshngsjNA" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R0sfsrhVEe2UuoshngsjNA" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R0tGxLhVEe2UuoshngsjNA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R0uU4rhVEe2UuoshngsjNA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R0u787hVEe2UuoshngsjNA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R0vjBLhVEe2UuoshngsjNA" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R2J4QrhVEe2UuoshngsjNA" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R2LGYLhVEe2UuoshngsjNA" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R2MUgrhVEe2UuoshngsjNA" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R2OJsLhVEe2UuoshngsjNA" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RdzpsLhVEe2UuoshngsjNA" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_R11IILhVEe2UuoshngsjNA" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R11vMbhVEe2UuoshngsjNA" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R12WQbhVEe2UuoshngsjNA" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R12WQ7hVEe2UuoshngsjNA" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R129UbhVEe2UuoshngsjNA" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Rd6XYLhVEe2UuoshngsjNA" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_R1710LhVEe2UuoshngsjNA" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R19rArhVEe2UuoshngsjNA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R1-SE7hVEe2UuoshngsjNA" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R1-5JLhVEe2UuoshngsjNA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R2AHQLhVEe2UuoshngsjNA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R2AuUrhVEe2UuoshngsjNA" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_QbtTgLhVEe2UuoshngsjNA">
      <eAnnotations xmi:id="_QbtTgbhVEe2UuoshngsjNA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_QbtTgrhVEe2UuoshngsjNA" base_Package="_QTH_QLhVEe2UuoshngsjNA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_Rfr5ALhVEe2UuoshngsjNA" genericsValue="T,E" base_Element="_RfrR8LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RfuVQbhVEe2UuoshngsjNA" base_Element="_RfuVQLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rfu8ULhVEe2UuoshngsjNA" base_Element="_RfuVQLhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rfu8UbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RfvjYLhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_Rfu8UrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RfwKcLhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_RfvjYbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RfwKcrhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_RfwKcbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RfwxgbhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_RfwxgLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RfxYkbhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_RfxYkLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RgBQNbhVEe2UuoshngsjNA" genericsValue="String" base_Element="_RgBQM7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RgGIsLhVEe2UuoshngsjNA" genericsValue="String" base_Element="_RgFhorhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RgOrkbhVEe2UuoshngsjNA" base_Element="_RgOrkLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RgOrkrhVEe2UuoshngsjNA" base_Element="_RgOrkLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RgPSoLhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RgPSorhVEe2UuoshngsjNA" base_Element="_RgPSobhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RgP5sLhVEe2UuoshngsjNA" base_Element="_RgPSobhVEe2UuoshngsjNA">
    <annotations xmi:id="_RgP5sbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RgQgwbhVEe2UuoshngsjNA" base_Element="_RgQgwLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RgRH0LhVEe2UuoshngsjNA" base_Element="_RgQgwLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RgRH0bhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RgULILhVEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_RgTkELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RgWAUbhVEe2UuoshngsjNA" base_Element="_RgVZSLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RgWAUrhVEe2UuoshngsjNA" base_Element="_RgVZSLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RgWAU7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RgXOcbhVEe2UuoshngsjNA" base_Element="_RgXOcLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RgZqsLhVEe2UuoshngsjNA" base_Element="_RgZDoLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RgZqsbhVEe2UuoshngsjNA" base_Element="_RgZDoLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RgZqsrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rga40LhVEe2UuoshngsjNA" base_Element="_RgaRwLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rgbf4LhVEe2UuoshngsjNA" base_Element="_RgaRwLhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rgbf4bhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RgcG8LhVEe2UuoshngsjNA" base_Element="_Rgbf4rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RgcG8bhVEe2UuoshngsjNA" base_Element="_Rgbf4rhVEe2UuoshngsjNA">
    <annotations xmi:id="_RgcG8rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RgmfAbhVEe2UuoshngsjNA" genericsValue="Node" base_Element="_RgmfALhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RgnGEbhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_RgnGELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RgntIbhVEe2UuoshngsjNA" genericsValue="Integer" base_Element="_RgntILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rgo7QbhVEe2UuoshngsjNA" base_Element="_RgoUMrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rgo7QrhVEe2UuoshngsjNA" base_Element="_RgoUMrhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rgo7Q7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RgtMsbhVEe2UuoshngsjNA" base_Element="_RgtMsLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RgtzwLhVEe2UuoshngsjNA" base_Element="_RgtMsLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RgtzwbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Rg1vkrhVEe2UuoshngsjNA" dimensions="2" base_Element="_Rg1Ig7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RhIDcLhVEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_RhHcYLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RhJRkLhVEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_RhIqgLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhLGwbhVEe2UuoshngsjNA" base_Element="_RhKft7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhLGwrhVEe2UuoshngsjNA" base_Element="_RhKft7hVEe2UuoshngsjNA">
    <annotations xmi:id="_RhLGw7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhMU4LhVEe2UuoshngsjNA" base_Element="_RhLt07hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhMU4bhVEe2UuoshngsjNA" base_Element="_RhLt07hVEe2UuoshngsjNA">
    <annotations xmi:id="_RhMU4rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhM78LhVEe2UuoshngsjNA" base_Element="_RhMU47hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhM78bhVEe2UuoshngsjNA" base_Element="_RhMU47hVEe2UuoshngsjNA">
    <annotations xmi:id="_RhM78rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhR0drhVEe2UuoshngsjNA" base_Element="_RhR0dbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhSbgLhVEe2UuoshngsjNA" base_Element="_RhR0dbhVEe2UuoshngsjNA">
    <annotations xmi:id="_RhSbgbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RhTpobhVEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_RhTpoLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RhVe0bhVEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_RhVe0LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RhWF4bhVEe2UuoshngsjNA" genericsValue="String" base_Element="_RhWF4LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_RhWs8rhVEe2UuoshngsjNA" base_Element="_RhWF4rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhdaoLhVEe2UuoshngsjNA" base_Element="_RhczkLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhdaobhVEe2UuoshngsjNA" base_Element="_RhczkLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RhdaorhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RhhFALhVEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_Rhgd8LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhpA0bhVEe2UuoshngsjNA" base_Element="_RhoZxLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhpA0rhVEe2UuoshngsjNA" base_Element="_RhoZxLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RhpA07hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rhpn4rhVEe2UuoshngsjNA" base_Element="_Rhpn4LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rhpn47hVEe2UuoshngsjNA" base_Element="_Rhpn4LhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rhpn5LhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhqO8bhVEe2UuoshngsjNA" base_Element="_Rhpn5bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhqO8rhVEe2UuoshngsjNA" base_Element="_Rhpn5bhVEe2UuoshngsjNA">
    <annotations xmi:id="_RhqO87hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhrdELhVEe2UuoshngsjNA" base_Element="_Rhq2A7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhrdEbhVEe2UuoshngsjNA" base_Element="_Rhq2A7hVEe2UuoshngsjNA">
    <annotations xmi:id="_RhrdErhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhsrMLhVEe2UuoshngsjNA" base_Element="_RhrdE7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhsrMbhVEe2UuoshngsjNA" base_Element="_RhrdE7hVEe2UuoshngsjNA">
    <annotations xmi:id="_RhsrMrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhtSQLhVEe2UuoshngsjNA" base_Element="_RhsrM7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhtSQbhVEe2UuoshngsjNA" base_Element="_RhsrM7hVEe2UuoshngsjNA">
    <annotations xmi:id="_RhtSQrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rht5ULhVEe2UuoshngsjNA" base_Element="_RhtSQ7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rht5UbhVEe2UuoshngsjNA" base_Element="_RhtSQ7hVEe2UuoshngsjNA">
    <annotations xmi:id="_Rht5UrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RhugYbhVEe2UuoshngsjNA" base_Element="_Rht5VLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RhugYrhVEe2UuoshngsjNA" base_Element="_Rht5VLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RhugY7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RhvHcLhVEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_RhugZLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rh11ILhVEe2UuoshngsjNA" base_Element="_Rh1OELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rh11IbhVEe2UuoshngsjNA" base_Element="_Rh1OELhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rh11IrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rh3DQLhVEe2UuoshngsjNA" base_Element="_Rh2cMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rh3DQbhVEe2UuoshngsjNA" base_Element="_Rh2cMLhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rh3qULhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rh3qUrhVEe2UuoshngsjNA" base_Element="_Rh3qUbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rh4RYLhVEe2UuoshngsjNA" base_Element="_Rh3qUbhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rh4RYbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Rh4RZbhVEe2UuoshngsjNA" dimensions="1" base_Element="_Rh4RYrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rh44cLhVEe2UuoshngsjNA" base_Element="_Rh4RYrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rh44cbhVEe2UuoshngsjNA" base_Element="_Rh4RYrhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rh44crhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Rh44drhVEe2UuoshngsjNA" dimensions="2" base_Element="_Rh44c7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rh5fgLhVEe2UuoshngsjNA" base_Element="_Rh44c7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rh5fgbhVEe2UuoshngsjNA" base_Element="_Rh44c7hVEe2UuoshngsjNA">
    <annotations xmi:id="_Rh5fgrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Rh7UsLhVEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_Rh6toLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Rh77wbhVEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_Rh77wLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_Rh9J4LhVEe2UuoshngsjNA" base_Element="_Rh8i1LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Rh9w8LhVEe2UuoshngsjNA" genericsValue="T" base_Element="_Rh9J4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RiFswLhVEe2UuoshngsjNA" base_Element="_RiFFsLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RiFswbhVEe2UuoshngsjNA" base_Element="_RiFFsLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RiFswrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RiG64LhVEe2UuoshngsjNA" genericsValue="T" base_Element="_RiGT0LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RiOPobhVEe2UuoshngsjNA" genericsValue="Integer" base_Element="_RiOPoLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RiZ10bhVEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_RiZ10LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RibD8LhVEe2UuoshngsjNA" genericsValue="T" base_Element="_Riac4LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_Rin4QLhVEe2UuoshngsjNA" genericsValue="T extends SchedulableObject" base_Element="_RinRMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RipGYLhVEe2UuoshngsjNA" genericsValue="T" base_Element="_RiofULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Riq7kbhVEe2UuoshngsjNA" base_Element="_Riq7kLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RivNALhVEe2UuoshngsjNA" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_Riul8LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RiyQULhVEe2UuoshngsjNA" base_Element="_RixpQbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RizecLhVEe2UuoshngsjNA" base_Element="_Riy3YbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ri4W8LhVEe2UuoshngsjNA" base_Element="_Ri3v4LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Ri4W8bhVEe2UuoshngsjNA" base_Element="_Ri3v4LhVEe2UuoshngsjNA">
    <annotations xmi:id="_Ri4W8rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ri4W9LhVEe2UuoshngsjNA" base_Element="_Ri4W87hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Ri4-ALhVEe2UuoshngsjNA" base_Element="_Ri4W87hVEe2UuoshngsjNA">
    <annotations xmi:id="_Ri4-AbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ri4-BLhVEe2UuoshngsjNA" base_Element="_Ri4-ArhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Ri4-BbhVEe2UuoshngsjNA" base_Element="_Ri4-ArhVEe2UuoshngsjNA">
    <annotations xmi:id="_Ri4-BrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_RjA51LhVEe2UuoshngsjNA" base_Element="_RjA50bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_RjBg4rhVEe2UuoshngsjNA" dimensions="2" base_Element="_RjA51bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_RjFyUbhVEe2UuoshngsjNA" base_Element="_RjFLQbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_RjGZY7hVEe2UuoshngsjNA" dimensions="1" base_Element="_RjGZYbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RjPjULhVEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_RjO8QLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_RjQxcbhVEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_RjQxcLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjc-sbhVEe2UuoshngsjNA" base_Element="_Rjc-sLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjdlwLhVEe2UuoshngsjNA" base_Element="_Rjc-sLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjdlwbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjdlw7hVEe2UuoshngsjNA" base_Element="_RjdlwrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjeM0LhVEe2UuoshngsjNA" base_Element="_RjdlwrhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rjez4LhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjfa8LhVEe2UuoshngsjNA" base_Element="_Rjez4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rjfa8bhVEe2UuoshngsjNA" base_Element="_Rjez4bhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rjfa8rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjgCALhVEe2UuoshngsjNA" base_Element="_Rjfa87hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjgCAbhVEe2UuoshngsjNA" base_Element="_Rjfa87hVEe2UuoshngsjNA">
    <annotations xmi:id="_RjgCArhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjgCBLhVEe2UuoshngsjNA" base_Element="_RjgCA7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjgpELhVEe2UuoshngsjNA" base_Element="_RjgCA7hVEe2UuoshngsjNA">
    <annotations xmi:id="_RjgpEbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjgpE7hVEe2UuoshngsjNA" base_Element="_RjgpErhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjgpFLhVEe2UuoshngsjNA" base_Element="_RjgpErhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjgpFbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjhQIrhVEe2UuoshngsjNA" base_Element="_RjhQILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjhQI7hVEe2UuoshngsjNA" base_Element="_RjhQILhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjhQJLhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjh3MbhVEe2UuoshngsjNA" base_Element="_RjhQJbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rjh3MrhVEe2UuoshngsjNA" base_Element="_RjhQJbhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rjh3M7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjieQbhVEe2UuoshngsjNA" base_Element="_Rjh3NLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjieQrhVEe2UuoshngsjNA" base_Element="_Rjh3NLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjieQ7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjjFULhVEe2UuoshngsjNA" base_Element="_RjieRLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjjFUbhVEe2UuoshngsjNA" base_Element="_RjieRLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjjFUrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjjFVLhVEe2UuoshngsjNA" base_Element="_RjjFU7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjjsYLhVEe2UuoshngsjNA" base_Element="_RjjFU7hVEe2UuoshngsjNA">
    <annotations xmi:id="_RjjsYbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjjsZLhVEe2UuoshngsjNA" base_Element="_RjjsYrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjkTcLhVEe2UuoshngsjNA" base_Element="_RjjsYrhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjkTcbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjkTdLhVEe2UuoshngsjNA" base_Element="_RjkTcrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rjk6gLhVEe2UuoshngsjNA" base_Element="_RjkTcrhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rjk6gbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjk6hLhVEe2UuoshngsjNA" base_Element="_Rjk6grhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rjk6hbhVEe2UuoshngsjNA" base_Element="_Rjk6grhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rjk6hrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjlhkrhVEe2UuoshngsjNA" base_Element="_RjlhkLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rjlhk7hVEe2UuoshngsjNA" base_Element="_RjlhkLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjlhlLhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjmIobhVEe2UuoshngsjNA" base_Element="_RjmIoLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjmvsLhVEe2UuoshngsjNA" base_Element="_RjmIoLhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjmvsbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjqaFrhVEe2UuoshngsjNA" base_Element="_RjqaFbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjrBILhVEe2UuoshngsjNA" base_Element="_RjqaFbhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjrBIbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjrBI7hVEe2UuoshngsjNA" base_Element="_RjrBIrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjroMLhVEe2UuoshngsjNA" base_Element="_RjrBIrhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjroMbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjroNLhVEe2UuoshngsjNA" base_Element="_RjroMrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjroNbhVEe2UuoshngsjNA" base_Element="_RjroMrhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjroNrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjxu0LhVEe2UuoshngsjNA" base_Element="_RjxHwLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rjxu0bhVEe2UuoshngsjNA" base_Element="_RjxHwLhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rjxu0rhVEe2UuoshngsjNA" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjxu1LhVEe2UuoshngsjNA" base_Element="_Rjxu07hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjyV4LhVEe2UuoshngsjNA" base_Element="_Rjxu07hVEe2UuoshngsjNA">
    <annotations xmi:id="_RjyV4bhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjyV47hVEe2UuoshngsjNA" base_Element="_RjyV4rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjyV5LhVEe2UuoshngsjNA" base_Element="_RjyV4rhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjyV5bhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjy88bhVEe2UuoshngsjNA" base_Element="_Rjy88LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rjy88rhVEe2UuoshngsjNA" base_Element="_Rjy88LhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rjy887hVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjzkALhVEe2UuoshngsjNA" base_Element="_Rjy89LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_RjzkAbhVEe2UuoshngsjNA" base_Element="_Rjy89LhVEe2UuoshngsjNA">
    <annotations xmi:id="_RjzkArhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj0LELhVEe2UuoshngsjNA" base_Element="_RjzkA7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj0LEbhVEe2UuoshngsjNA" base_Element="_RjzkA7hVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj0LErhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj0LFLhVEe2UuoshngsjNA" base_Element="_Rj0LE7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj0yILhVEe2UuoshngsjNA" base_Element="_Rj0LE7hVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj0yIbhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj0yI7hVEe2UuoshngsjNA" base_Element="_Rj0yIrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj0yJLhVEe2UuoshngsjNA" base_Element="_Rj0yIrhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj0yJbhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj1ZMbhVEe2UuoshngsjNA" base_Element="_Rj1ZMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj1ZMrhVEe2UuoshngsjNA" base_Element="_Rj1ZMLhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj1ZM7hVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj2AQLhVEe2UuoshngsjNA" base_Element="_Rj1ZNLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj2AQbhVEe2UuoshngsjNA" base_Element="_Rj1ZNLhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj2AQrhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj2nULhVEe2UuoshngsjNA" base_Element="_Rj2AQ7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj2nUbhVEe2UuoshngsjNA" base_Element="_Rj2AQ7hVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj2nUrhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj2nVLhVEe2UuoshngsjNA" base_Element="_Rj2nU7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj2nVbhVEe2UuoshngsjNA" base_Element="_Rj2nU7hVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj3OYLhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj3OYrhVEe2UuoshngsjNA" base_Element="_Rj3OYbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj3OY7hVEe2UuoshngsjNA" base_Element="_Rj3OYbhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj3OZLhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj4cgLhVEe2UuoshngsjNA" base_Element="_Rj3OZbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj4cgbhVEe2UuoshngsjNA" base_Element="_Rj3OZbhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj4cgrhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj5DkbhVEe2UuoshngsjNA" base_Element="_Rj5DkLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj5DkrhVEe2UuoshngsjNA" base_Element="_Rj5DkLhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj5Dk7hVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj5qoLhVEe2UuoshngsjNA" base_Element="_Rj5DlLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj5qobhVEe2UuoshngsjNA" base_Element="_Rj5DlLhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj5qorhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj5qpLhVEe2UuoshngsjNA" base_Element="_Rj5qo7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj6RsLhVEe2UuoshngsjNA" base_Element="_Rj5qo7hVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj6RsbhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj6Rs7hVEe2UuoshngsjNA" base_Element="_Rj6RsrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj64wLhVEe2UuoshngsjNA" base_Element="_Rj6RsrhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj7f0LhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj7f0rhVEe2UuoshngsjNA" base_Element="_Rj7f0bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj7f07hVEe2UuoshngsjNA" base_Element="_Rj7f0bhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj8G4LhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj8G4rhVEe2UuoshngsjNA" base_Element="_Rj8G4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj8G47hVEe2UuoshngsjNA" base_Element="_Rj8G4bhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj8G5LhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj8t8LhVEe2UuoshngsjNA" base_Element="_Rj8G5bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj8t8bhVEe2UuoshngsjNA" base_Element="_Rj8G5bhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj9VALhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj9VArhVEe2UuoshngsjNA" base_Element="_Rj9VAbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj9VA7hVEe2UuoshngsjNA" base_Element="_Rj9VAbhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj9VBLhVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rj98EbhVEe2UuoshngsjNA" base_Element="_Rj98ELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_Rj98ErhVEe2UuoshngsjNA" base_Element="_Rj98ELhVEe2UuoshngsjNA">
    <annotations xmi:id="_Rj98E7hVEe2UuoshngsjNA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_RkL-g7hVEe2UuoshngsjNA" base_Element="_RkL-gLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_RkMllbhVEe2UuoshngsjNA" dimensions="1" base_Element="_RkMlkrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_RkNMorhVEe2UuoshngsjNA" dimensions="0" base_Element="_RkMlmbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_RkOawLhVEe2UuoshngsjNA" base_Element="_RkNzs7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0GCwbhVEe2UuoshngsjNA" base_Element="_R0GCwLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0HQ4LhVEe2UuoshngsjNA" base_Element="_R0Gp0LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0H38LhVEe2UuoshngsjNA" base_Element="_R0HQ4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0IfALhVEe2UuoshngsjNA" base_Element="_R0H38bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0JGELhVEe2UuoshngsjNA" base_Element="_R0IfAbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0MJYLhVEe2UuoshngsjNA" base_Element="_R0LiUbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0MJYbhVEe2UuoshngsjNA" base_Element="_R0LiUbhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0MJYrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R0NXg7hVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_R0NXgrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R0N-krhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_R0N-kbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R0PzwLhVEe2UuoshngsjNA" genericsValue="String, Activation" base_Element="_R0PMsLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0V6YbhVEe2UuoshngsjNA" base_Element="_R0V6YLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0YWorhVEe2UuoshngsjNA" base_Element="_R0XvmbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0YWo7hVEe2UuoshngsjNA" base_Element="_R0XvmbhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0YWpLhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R0bZ8LhVEe2UuoshngsjNA" base_Element="_R0ay47hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0dPIbhVEe2UuoshngsjNA" base_Element="_R0coELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0dPIrhVEe2UuoshngsjNA" base_Element="_R0coELhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0dPI7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R0fEULhVEe2UuoshngsjNA" base_Element="_R0edQLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0frYLhVEe2UuoshngsjNA" base_Element="_R0fEUbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0frYrhVEe2UuoshngsjNA" base_Element="_R0frYbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0gScLhVEe2UuoshngsjNA" base_Element="_R0frY7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0gScrhVEe2UuoshngsjNA" base_Element="_R0gScbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0g5gLhVEe2UuoshngsjNA" base_Element="_R0gSc7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0g5grhVEe2UuoshngsjNA" base_Element="_R0g5gbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0ius7hVEe2UuoshngsjNA" base_Element="_R0iusLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0iutLhVEe2UuoshngsjNA" base_Element="_R0iusLhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0iutbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R0kj4bhVEe2UuoshngsjNA" genericsValue="String, Flow" base_Element="_R0kj4LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R0lK8LhVEe2UuoshngsjNA" genericsValue="Node, Activation" base_Element="_R0kj4rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0oOQLhVEe2UuoshngsjNA" base_Element="_R0nnMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0oOQrhVEe2UuoshngsjNA" base_Element="_R0oOQbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0o1UbhVEe2UuoshngsjNA" base_Element="_R0o1ULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0pcYLhVEe2UuoshngsjNA" base_Element="_R0o1UrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0pcYrhVEe2UuoshngsjNA" base_Element="_R0pcYbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0qDcbhVEe2UuoshngsjNA" base_Element="_R0qDcLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0qqgLhVEe2UuoshngsjNA" base_Element="_R0qDcrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0qqgrhVEe2UuoshngsjNA" base_Element="_R0qqgbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0r4obhVEe2UuoshngsjNA" base_Element="_R0r4oLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0r4pLhVEe2UuoshngsjNA" base_Element="_R0r4orhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0sfsLhVEe2UuoshngsjNA" base_Element="_R0r4orhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0sfsbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R0sfs7hVEe2UuoshngsjNA" base_Element="_R0sfsrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0tGwbhVEe2UuoshngsjNA" base_Element="_R0sftLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0tGwrhVEe2UuoshngsjNA" base_Element="_R0sftLhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0tGw7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R0tt0LhVEe2UuoshngsjNA" base_Element="_R0tGxLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0tt07hVEe2UuoshngsjNA" base_Element="_R0tt0bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0uU4LhVEe2UuoshngsjNA" base_Element="_R0tt0bhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0uU4bhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R0uU47hVEe2UuoshngsjNA" base_Element="_R0uU4rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0u78LhVEe2UuoshngsjNA" base_Element="_R0uU5LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0u78bhVEe2UuoshngsjNA" base_Element="_R0uU5LhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0u78rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R0u79LhVEe2UuoshngsjNA" base_Element="_R0u787hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0vjAbhVEe2UuoshngsjNA" base_Element="_R0u79bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0vjArhVEe2UuoshngsjNA" base_Element="_R0u79bhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0vjA7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R0wKELhVEe2UuoshngsjNA" base_Element="_R0vjBLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R0wKE7hVEe2UuoshngsjNA" base_Element="_R0wKEbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R0wxILhVEe2UuoshngsjNA" base_Element="_R0wKEbhVEe2UuoshngsjNA">
    <annotations xmi:id="_R0wxIbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R0x_QLhVEe2UuoshngsjNA" base_Element="_R0xYMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0x_QrhVEe2UuoshngsjNA" base_Element="_R0x_QbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0ymUbhVEe2UuoshngsjNA" base_Element="_R0ymULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0zNYLhVEe2UuoshngsjNA" base_Element="_R0ymUrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0zNYrhVEe2UuoshngsjNA" base_Element="_R0zNYbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0z0cLhVEe2UuoshngsjNA" base_Element="_R0zNY7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R01CkLhVEe2UuoshngsjNA" base_Element="_R00bgLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R01CkrhVEe2UuoshngsjNA" base_Element="_R01CkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R023wLhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R02QsLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R023wrhVEe2UuoshngsjNA" base_Element="_R023wbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R07JMLhVEe2UuoshngsjNA" base_Element="_R06iILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R07JMbhVEe2UuoshngsjNA" base_Element="_R06iILhVEe2UuoshngsjNA">
    <annotations xmi:id="_R07JMrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R08-YLhVEe2UuoshngsjNA" genericsValue="String, Node" base_Element="_R08XULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R0_aoLhVEe2UuoshngsjNA" base_Element="_R0-zkLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R1DsE7hVEe2UuoshngsjNA" base_Element="_R1DsELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R1ETILhVEe2UuoshngsjNA" base_Element="_R1DsELhVEe2UuoshngsjNA">
    <annotations xmi:id="_R1ETIbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R1FhQLhVEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_R1E6MLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R1HWcbhVEe2UuoshngsjNA" base_Element="_R1GvZrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R1HWcrhVEe2UuoshngsjNA" base_Element="_R1GvZrhVEe2UuoshngsjNA">
    <annotations xmi:id="_R1HWc7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R1IkkbhVEe2UuoshngsjNA" base_Element="_R1IkkLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R1JLoLhVEe2UuoshngsjNA" base_Element="_R1IkkrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R1UKwbhVEe2UuoshngsjNA" genericsValue="String,InstructionTimeSlot" base_Element="_R1UKwLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R1WnALhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R1V_8bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R1X1IbhVEe2UuoshngsjNA" genericsValue="Double" base_Element="_R1X1ILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R1YcMbhVEe2UuoshngsjNA" genericsValue="Double,ReliabilityRow" base_Element="_R1YcMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R1cGkLhVEe2UuoshngsjNA" base_Element="_R1bfgLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R1ctoLhVEe2UuoshngsjNA" base_Element="_R1cGkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R1rXIbhVEe2UuoshngsjNA" genericsValue="Activation,Row&lt;Activation>" base_Element="_R1rXILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R1slQLhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R1r-MbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R1tMUbhVEe2UuoshngsjNA" base_Element="_R1tMULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R1vBgbhVEe2UuoshngsjNA" base_Element="_R1vBgLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R1vokLhVEe2UuoshngsjNA" base_Element="_R1vBgrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R11vMLhVEe2UuoshngsjNA" base_Element="_R11IILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R12WQLhVEe2UuoshngsjNA" base_Element="_R11vMbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R12WQrhVEe2UuoshngsjNA" base_Element="_R12WQbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R129ULhVEe2UuoshngsjNA" base_Element="_R12WQ7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R129UrhVEe2UuoshngsjNA" base_Element="_R129UbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R18c4LhVEe2UuoshngsjNA" base_Element="_R1710LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R18c47hVEe2UuoshngsjNA" base_Element="_R18c4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R18c5LhVEe2UuoshngsjNA" base_Element="_R18c4bhVEe2UuoshngsjNA">
    <annotations xmi:id="_R18c5bhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R19D8rhVEe2UuoshngsjNA" base_Element="_R19D8LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R19rALhVEe2UuoshngsjNA" base_Element="_R19D8LhVEe2UuoshngsjNA">
    <annotations xmi:id="_R19rAbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R19rA7hVEe2UuoshngsjNA" base_Element="_R19rArhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R1-SELhVEe2UuoshngsjNA" base_Element="_R19rBLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R1-SEbhVEe2UuoshngsjNA" base_Element="_R19rBLhVEe2UuoshngsjNA">
    <annotations xmi:id="_R1-SErhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R1-SFLhVEe2UuoshngsjNA" base_Element="_R1-SE7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R1-5IbhVEe2UuoshngsjNA" base_Element="_R1-SFbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R1-5IrhVEe2UuoshngsjNA" base_Element="_R1-SFbhVEe2UuoshngsjNA">
    <annotations xmi:id="_R1-5I7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R1_gMLhVEe2UuoshngsjNA" base_Element="_R1-5JLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R1_gM7hVEe2UuoshngsjNA" base_Element="_R1_gMbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R1_gNLhVEe2UuoshngsjNA" base_Element="_R1_gMbhVEe2UuoshngsjNA">
    <annotations xmi:id="_R1_gNbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R2AHQbhVEe2UuoshngsjNA" base_Element="_R2AHQLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2AHRLhVEe2UuoshngsjNA" base_Element="_R2AHQrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2AuULhVEe2UuoshngsjNA" base_Element="_R2AHQrhVEe2UuoshngsjNA">
    <annotations xmi:id="_R2AuUbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R2AuU7hVEe2UuoshngsjNA" base_Element="_R2AuUrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2BVYLhVEe2UuoshngsjNA" base_Element="_R2AuVLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2BVYbhVEe2UuoshngsjNA" base_Element="_R2AuVLhVEe2UuoshngsjNA">
    <annotations xmi:id="_R2BVYrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R2GN4LhVEe2UuoshngsjNA" base_Element="_R2Fm0LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R2G08LhVEe2UuoshngsjNA" base_Element="_R2GN4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2JRMLhVEe2UuoshngsjNA" base_Element="_R2IqI7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2JRMbhVEe2UuoshngsjNA" base_Element="_R2IqI7hVEe2UuoshngsjNA">
    <annotations xmi:id="_R2JRMrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2JRNbhVEe2UuoshngsjNA" base_Element="_R2JRM7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2J4QLhVEe2UuoshngsjNA" base_Element="_R2JRM7hVEe2UuoshngsjNA">
    <annotations xmi:id="_R2J4QbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R2J4Q7hVEe2UuoshngsjNA" base_Element="_R2J4QrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2KfUrhVEe2UuoshngsjNA" base_Element="_R2KfULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2KfU7hVEe2UuoshngsjNA" base_Element="_R2KfULhVEe2UuoshngsjNA">
    <annotations xmi:id="_R2KfVLhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R2LGYbhVEe2UuoshngsjNA" base_Element="_R2LGYLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2LtcbhVEe2UuoshngsjNA" base_Element="_R2LGYrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2MUgLhVEe2UuoshngsjNA" base_Element="_R2LGYrhVEe2UuoshngsjNA">
    <annotations xmi:id="_R2MUgbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R2M7kLhVEe2UuoshngsjNA" base_Element="_R2MUgrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2NioLhVEe2UuoshngsjNA" base_Element="_R2M7kbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2NiobhVEe2UuoshngsjNA" base_Element="_R2M7kbhVEe2UuoshngsjNA">
    <annotations xmi:id="_R2NiorhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R2OJsbhVEe2UuoshngsjNA" base_Element="_R2OJsLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2OwwLhVEe2UuoshngsjNA" base_Element="_R2OJsrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2OwwbhVEe2UuoshngsjNA" base_Element="_R2OJsrhVEe2UuoshngsjNA">
    <annotations xmi:id="_R2OwwrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2PX0LhVEe2UuoshngsjNA" base_Element="_R2Oww7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2PX0bhVEe2UuoshngsjNA" base_Element="_R2Oww7hVEe2UuoshngsjNA">
    <annotations xmi:id="_R2PX0rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2P-4LhVEe2UuoshngsjNA" base_Element="_R2PX07hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2P-4bhVEe2UuoshngsjNA" base_Element="_R2PX07hVEe2UuoshngsjNA">
    <annotations xmi:id="_R2P-4rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R2Ql8LhVEe2UuoshngsjNA" base_Element="_R2P-47hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R2Ql8bhVEe2UuoshngsjNA" base_Element="_R2P-47hVEe2UuoshngsjNA">
    <annotations xmi:id="_R2Ql8rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R2R0ELhVEe2UuoshngsjNA" base_Element="_R2RNALhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R2SbILhVEe2UuoshngsjNA" base_Element="_R2R0EbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R2SbIrhVEe2UuoshngsjNA" base_Element="_R2SbIbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R2UQULhVEe2UuoshngsjNA" base_Element="_R2TpQLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R2U3YLhVEe2UuoshngsjNA" base_Element="_R2UQUbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R2U3YrhVEe2UuoshngsjNA" base_Element="_R2U3YbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2pngLhVEe2UuoshngsjNA" genericsValue="T, E" base_Element="_R2pAcLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R2q1oLhVEe2UuoshngsjNA" base_Element="_R2qOkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2rcsLhVEe2UuoshngsjNA" genericsValue="Activation" base_Element="_R2q1obhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2sq0LhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_R2sDwbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2tR4LhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R2sq0rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2t48bhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R2t48LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2ugArhVEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_R2ugAbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2wVMbhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R2wVMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2yKY7hVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_R2xjUrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2yxcLhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R2xjU7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2zYgLhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R2yxc7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R2z_kLhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R2zYgrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R210wLhVEe2UuoshngsjNA" genericsValue="Activation" base_Element="_R21NsLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R22b07hVEe2UuoshngsjNA" base_Element="_R22b0LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R23C4LhVEe2UuoshngsjNA" genericsValue="Node" base_Element="_R22b0bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R23C4bhVEe2UuoshngsjNA" base_Element="_R22b0LhVEe2UuoshngsjNA">
    <annotations xmi:id="_R23C4rhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R23p8LhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R23C47hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R24RAbhVEe2UuoshngsjNA" base_Element="_R24RALhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R244FLhVEe2UuoshngsjNA" base_Element="_R244ELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R25fILhVEe2UuoshngsjNA" base_Element="_R244ELhVEe2UuoshngsjNA">
    <annotations xmi:id="_R25fIbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R26GMLhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R25fIrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R26tQLhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_R26GMbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R277YLhVEe2UuoshngsjNA" genericsValue="Flow" base_Element="_R27UULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R29JgrhVEe2UuoshngsjNA" genericsValue="Node" base_Element="_R29JgbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R29wkrhVEe2UuoshngsjNA" genericsValue="Integer" base_Element="_R29wkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R3CCALhVEe2UuoshngsjNA" base_Element="_R3Ba8LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3DQIbhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R3DQILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R3D3NLhVEe2UuoshngsjNA" base_Element="_R3D3MLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R3EeQLhVEe2UuoshngsjNA" base_Element="_R3D3MLhVEe2UuoshngsjNA">
    <annotations xmi:id="_R3EeQbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R3FFULhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R3EeQrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R3FsYLhVEe2UuoshngsjNA" base_Element="_R3FFUbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R3FsYbhVEe2UuoshngsjNA" base_Element="_R3FFUbhVEe2UuoshngsjNA">
    <annotations xmi:id="_R3FsYrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R3GTcLhVEe2UuoshngsjNA" genericsValue="Node" base_Element="_R3FsY7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3HhkLhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R3G6gLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R3IIoLhVEe2UuoshngsjNA" base_Element="_R3HhkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R3IIobhVEe2UuoshngsjNA" base_Element="_R3HhkbhVEe2UuoshngsjNA">
    <annotations xmi:id="_R3IIorhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R3Kk4LhVEe2UuoshngsjNA" genericsValue="Node" base_Element="_R3J90bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_R3LL8LhVEe2UuoshngsjNA" base_Element="_R3Kk4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3LL8bhVEe2UuoshngsjNA" genericsValue="Node" base_Element="_R3Kk4rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R3MaEbhVEe2UuoshngsjNA" base_Element="_R3MaELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3NoMbhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R3NoMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R3OPRLhVEe2UuoshngsjNA" base_Element="_R3OPQLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R3O2ULhVEe2UuoshngsjNA" base_Element="_R3OPQLhVEe2UuoshngsjNA">
    <annotations xmi:id="_R3O2UbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R3PdYLhVEe2UuoshngsjNA" base_Element="_R3O2UrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R3R5obhVEe2UuoshngsjNA" base_Element="_R3R5oLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3U88LhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R3UV4LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R3VkBLhVEe2UuoshngsjNA" base_Element="_R3VkALhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R3WLELhVEe2UuoshngsjNA" base_Element="_R3VkALhVEe2UuoshngsjNA">
    <annotations xmi:id="_R3WLEbhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R3ZOYLhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R3YnVrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3bqoLhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R3bDkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3cRsLhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R3bqorhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3df0LhVEe2UuoshngsjNA" genericsValue="T" base_Element="_R3bqo7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3f8ELhVEe2UuoshngsjNA" genericsValue="E" base_Element="_R3fVAbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R3gjIbhVEe2UuoshngsjNA" base_Element="_R3gjILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R3hxQLhVEe2UuoshngsjNA" base_Element="_R3hKM7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_R3i_Y7hVEe2UuoshngsjNA" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_R3i_YbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R3jmcLhVEe2UuoshngsjNA" base_Element="_R3i_YbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R3n34bhVEe2UuoshngsjNA" base_Element="_R3n34LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R3qUIrhVEe2UuoshngsjNA" base_Element="_R3ptELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3q7MLhVEe2UuoshngsjNA" genericsValue="Node" base_Element="_R3qUILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Annotations xmi:id="_R3q7MbhVEe2UuoshngsjNA" base_Element="_R3ptELhVEe2UuoshngsjNA">
    <annotations xmi:id="_R3q7MrhVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R3-dMLhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R392ILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3-dMrhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_R3-dMbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R3_EQbhVEe2UuoshngsjNA" genericsValue="ScheduleTime" base_Element="_R3_EQLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4A5cLhVEe2UuoshngsjNA" base_Element="_R4ASYrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4A5crhVEe2UuoshngsjNA" base_Element="_R4A5cbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4BggLhVEe2UuoshngsjNA" base_Element="_R4A5c7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4CHkLhVEe2UuoshngsjNA" base_Element="_R4BghbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4CHkrhVEe2UuoshngsjNA" base_Element="_R4CHkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4Cuo7hVEe2UuoshngsjNA" base_Element="_R4CuorhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4DVsbhVEe2UuoshngsjNA" base_Element="_R4DVsLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4DVs7hVEe2UuoshngsjNA" genericsValue="ChannelSet" base_Element="_R4DVsrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4D8wLhVEe2UuoshngsjNA" base_Element="_R4DVsrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4Ej0bhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_R4Ej0LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4Ej0rhVEe2UuoshngsjNA" base_Element="_R4Ej0LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4FK4bhVEe2UuoshngsjNA" base_Element="_R4FK4LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4Fx8LhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R4FK4rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4Fx8bhVEe2UuoshngsjNA" base_Element="_R4FK4rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4GZALhVEe2UuoshngsjNA" base_Element="_R4Fx8rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4HAELhVEe2UuoshngsjNA" base_Element="_R4GZAbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4HnIbhVEe2UuoshngsjNA" base_Element="_R4HnILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4IOMLhVEe2UuoshngsjNA" base_Element="_R4HnIrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4IOMrhVEe2UuoshngsjNA" base_Element="_R4IOMbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4I1QLhVEe2UuoshngsjNA" base_Element="_R4IOM7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4KqcrhVEe2UuoshngsjNA" base_Element="_R4KqcbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4MfpbhVEe2UuoshngsjNA" base_Element="_R4Mfo7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4NGsbhVEe2UuoshngsjNA" base_Element="_R4NGsLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4NtwLhVEe2UuoshngsjNA" base_Element="_R4NGsrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4NtwrhVEe2UuoshngsjNA" genericsValue="Node" base_Element="_R4NtwbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4OU0LhVEe2UuoshngsjNA" base_Element="_R4NtwbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4OU0rhVEe2UuoshngsjNA" genericsValue="Integer" base_Element="_R4OU0bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4O74LhVEe2UuoshngsjNA" base_Element="_R4OU0bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4O74rhVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_R4O74bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4Pi8LhVEe2UuoshngsjNA" base_Element="_R4O74bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4Pi8rhVEe2UuoshngsjNA" base_Element="_R4Pi8bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4QKAbhVEe2UuoshngsjNA" base_Element="_R4QKALhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4R_MrhVEe2UuoshngsjNA" base_Element="_R4R_MbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4R_NLhVEe2UuoshngsjNA" base_Element="_R4R_M7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4SmQbhVEe2UuoshngsjNA" base_Element="_R4SmQLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4SmQ7hVEe2UuoshngsjNA" base_Element="_R4SmQrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4TNUbhVEe2UuoshngsjNA" base_Element="_R4TNULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4TNU7hVEe2UuoshngsjNA" base_Element="_R4TNUrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4UbcLhVEe2UuoshngsjNA" base_Element="_R4T0YLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4VCgLhVEe2UuoshngsjNA" base_Element="_R4UbcbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4VCgrhVEe2UuoshngsjNA" base_Element="_R4VCgbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4WQoLhVEe2UuoshngsjNA" base_Element="_R4VpkrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4WQo7hVEe2UuoshngsjNA" base_Element="_R4WQorhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4W3srhVEe2UuoshngsjNA" base_Element="_R4W3sLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4XexLhVEe2UuoshngsjNA" base_Element="_R4XewrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4YF0bhVEe2UuoshngsjNA" base_Element="_R4YF0LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4Ys4LhVEe2UuoshngsjNA" base_Element="_R4YF07hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4Ys4rhVEe2UuoshngsjNA" base_Element="_R4Ys4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4ZT8LhVEe2UuoshngsjNA" base_Element="_R4Ys47hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4ZT8rhVEe2UuoshngsjNA" base_Element="_R4ZT8bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4Z7ALhVEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_R4ZT87hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4Z7AbhVEe2UuoshngsjNA" base_Element="_R4ZT87hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4bJIrhVEe2UuoshngsjNA" base_Element="_R4bJIbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4bwMbhVEe2UuoshngsjNA" base_Element="_R4bwMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4cXQ7hVEe2UuoshngsjNA" genericsValue="Edge" base_Element="_R4cXQrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4eMc7hVEe2UuoshngsjNA" base_Element="_R4eMcrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4ezgbhVEe2UuoshngsjNA" base_Element="_R4ezgLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4fakLhVEe2UuoshngsjNA" base_Element="_R4ezgrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4gBoLhVEe2UuoshngsjNA" base_Element="_R4fakbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4gBorhVEe2UuoshngsjNA" base_Element="_R4gBobhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4gosLhVEe2UuoshngsjNA" genericsValue="Activation" base_Element="_R4gBo7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4gosbhVEe2UuoshngsjNA" base_Element="_R4gBo7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4hPwLhVEe2UuoshngsjNA" genericsValue="String, Integer" base_Element="_R4gosrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4hPwbhVEe2UuoshngsjNA" base_Element="_R4gosrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4hPw7hVEe2UuoshngsjNA" base_Element="_R4hPwrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4jE8LhVEe2UuoshngsjNA" base_Element="_R4id5bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4jE8rhVEe2UuoshngsjNA" base_Element="_R4jE8bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4jsALhVEe2UuoshngsjNA" base_Element="_R4jE87hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4jsArhVEe2UuoshngsjNA" base_Element="_R4jsAbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4kTELhVEe2UuoshngsjNA" base_Element="_R4jsA7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4kTErhVEe2UuoshngsjNA" base_Element="_R4kTEbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4k6IbhVEe2UuoshngsjNA" base_Element="_R4k6ILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4lhMbhVEe2UuoshngsjNA" base_Element="_R4lhMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4mIQLhVEe2UuoshngsjNA" base_Element="_R4lhMrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4mIQrhVEe2UuoshngsjNA" base_Element="_R4mIQbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4mvULhVEe2UuoshngsjNA" base_Element="_R4mIQ7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4mvUrhVEe2UuoshngsjNA" base_Element="_R4mvUbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4nWYLhVEe2UuoshngsjNA" base_Element="_R4mvU7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4okg7hVEe2UuoshngsjNA" base_Element="_R4okgrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4pLkbhVEe2UuoshngsjNA" base_Element="_R4pLkLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4pyoLhVEe2UuoshngsjNA" base_Element="_R4pLkrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4rAwrhVEe2UuoshngsjNA" base_Element="_R4rAwbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4rAxLhVEe2UuoshngsjNA" base_Element="_R4rAw7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4rn07hVEe2UuoshngsjNA" base_Element="_R4rn0rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4sO4LhVEe2UuoshngsjNA" base_Element="_R4rn1LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4uEELhVEe2UuoshngsjNA" base_Element="_R4tdBbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4urIbhVEe2UuoshngsjNA" base_Element="_R4urILhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4vSMLhVEe2UuoshngsjNA" base_Element="_R4urIrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4vSMrhVEe2UuoshngsjNA" base_Element="_R4vSMbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4wgUbhVEe2UuoshngsjNA" genericsValue="Integer" base_Element="_R4wgULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4wgUrhVEe2UuoshngsjNA" base_Element="_R4wgULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R4xHYbhVEe2UuoshngsjNA" genericsValue="SchedulableObject" base_Element="_R4xHYLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4y8kLhVEe2UuoshngsjNA" base_Element="_R4yVg7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4y8krhVEe2UuoshngsjNA" base_Element="_R4y8kbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4y8lbhVEe2UuoshngsjNA" base_Element="_R4y8k7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4zjobhVEe2UuoshngsjNA" base_Element="_R4zjoLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4zjo7hVEe2UuoshngsjNA" base_Element="_R4zjorhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R40KsLhVEe2UuoshngsjNA" base_Element="_R4zjpLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R40KsrhVEe2UuoshngsjNA" base_Element="_R40KsbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R40xwLhVEe2UuoshngsjNA" base_Element="_R40Ks7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R42m8LhVEe2UuoshngsjNA" base_Element="_R41_47hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R42m8rhVEe2UuoshngsjNA" base_Element="_R42m8bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R43OALhVEe2UuoshngsjNA" base_Element="_R42m87hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R43OArhVEe2UuoshngsjNA" base_Element="_R43OAbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R431ELhVEe2UuoshngsjNA" base_Element="_R43OA7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R431ErhVEe2UuoshngsjNA" base_Element="_R431EbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R44cILhVEe2UuoshngsjNA" base_Element="_R431E7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R44cI7hVEe2UuoshngsjNA" base_Element="_R44cIbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R45DMbhVEe2UuoshngsjNA" base_Element="_R44cJLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R45qQLhVEe2UuoshngsjNA" base_Element="_R45DMrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R46RUbhVEe2UuoshngsjNA" base_Element="_R46RULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R464YLhVEe2UuoshngsjNA" base_Element="_R46RUrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R464YrhVEe2UuoshngsjNA" base_Element="_R464YbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Array xmi:id="_R47fcLhVEe2UuoshngsjNA" dimensions="2" base_Element="_R464ZbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R47fcbhVEe2UuoshngsjNA" base_Element="_R464ZbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R497trhVEe2UuoshngsjNA" base_Element="_R497tbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4-iwbhVEe2UuoshngsjNA" base_Element="_R4-iwLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4-iw7hVEe2UuoshngsjNA" base_Element="_R4-iwrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4_J0LhVEe2UuoshngsjNA" base_Element="_R4-ixLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4_J0rhVEe2UuoshngsjNA" base_Element="_R4_J0bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4_J1LhVEe2UuoshngsjNA" base_Element="_R4_J07hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4_w4bhVEe2UuoshngsjNA" base_Element="_R4_w4LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R4_w47hVEe2UuoshngsjNA" base_Element="_R4_w4rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5AX8LhVEe2UuoshngsjNA" base_Element="_R4_w5LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5AX8rhVEe2UuoshngsjNA" base_Element="_R5AX8bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5AX9LhVEe2UuoshngsjNA" base_Element="_R5AX87hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5A_AbhVEe2UuoshngsjNA" base_Element="_R5A_ALhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5A_A7hVEe2UuoshngsjNA" base_Element="_R5A_ArhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5BmEbhVEe2UuoshngsjNA" base_Element="_R5BmELhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5CNILhVEe2UuoshngsjNA" base_Element="_R5BmErhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5CNIrhVEe2UuoshngsjNA" base_Element="_R5CNIbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5C0MLhVEe2UuoshngsjNA" base_Element="_R5CNI7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5DbQLhVEe2UuoshngsjNA" base_Element="_R5C0MbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5HssLhVEe2UuoshngsjNA" base_Element="_R5HFpbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5ITwLhVEe2UuoshngsjNA" base_Element="_R5Hss7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R5I60LhVEe2UuoshngsjNA" genericsValue="InstructionParameters" base_Element="_R5ITwbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5I60bhVEe2UuoshngsjNA" base_Element="_R5ITwbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5Jh4LhVEe2UuoshngsjNA" base_Element="_R5I60rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5KI8bhVEe2UuoshngsjNA" base_Element="_R5KI8LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5KwALhVEe2UuoshngsjNA" base_Element="_R5KI8rhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5KwArhVEe2UuoshngsjNA" base_Element="_R5KwAbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5LXELhVEe2UuoshngsjNA" base_Element="_R5KwA7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5LXErhVEe2UuoshngsjNA" base_Element="_R5LXEbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5LXFLhVEe2UuoshngsjNA" base_Element="_R5LXE7hVEe2UuoshngsjNA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_R5L-ILhVEe2UuoshngsjNA" name="getNumChannels" method="_R6FWA7hVEe2UuoshngsjNA">
      <ownedParameter xmi:id="_R5L-IbhVEe2UuoshngsjNA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_R5L-IrhVEe2UuoshngsjNA" base_Element="_R5L-ILhVEe2UuoshngsjNA">
    <annotations xmi:id="_R5L-I7hVEe2UuoshngsjNA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5MlMrhVEe2UuoshngsjNA" base_Element="_R5MlMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5NMQbhVEe2UuoshngsjNA" base_Element="_R5MlM7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5PBcbhVEe2UuoshngsjNA" base_Element="_R5PBcLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5PogLhVEe2UuoshngsjNA" base_Element="_R5PBcrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5PogrhVEe2UuoshngsjNA" base_Element="_R5PogbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5QPkbhVEe2UuoshngsjNA" base_Element="_R5QPkLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5Q2obhVEe2UuoshngsjNA" base_Element="_R5Q2oLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5RdsbhVEe2UuoshngsjNA" base_Element="_R5RdsLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5SEwLhVEe2UuoshngsjNA" base_Element="_R5RdsrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5T58bhVEe2UuoshngsjNA" base_Element="_R5TS57hVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5UhALhVEe2UuoshngsjNA" base_Element="_R5T59LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5VIELhVEe2UuoshngsjNA" base_Element="_R5UhA7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R5VIErhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R5VIEbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Generics xmi:id="_R5VvIbhVEe2UuoshngsjNA" genericsValue="String" base_Element="_R5VvILhVEe2UuoshngsjNA"/>
  <uml:OpaqueBehavior xmi:id="_R6FWA7hVEe2UuoshngsjNA" name="getNumChannels" specification="_R5L-ILhVEe2UuoshngsjNA">
    <ownedParameter xmi:id="_R6FWBLhVEe2UuoshngsjNA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_R6vdUrhVEe2UuoshngsjNA" base_Element="_R6vdULhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6wEYLhVEe2UuoshngsjNA" base_Element="_R6vdU7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6wEY7hVEe2UuoshngsjNA" base_Element="_R6wEYbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6wrcbhVEe2UuoshngsjNA" base_Element="_R6wEZLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6xSgLhVEe2UuoshngsjNA" base_Element="_R6wrcrhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6xSg7hVEe2UuoshngsjNA" base_Element="_R6xSgbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6x5kLhVEe2UuoshngsjNA" base_Element="_R6xShLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6x5k7hVEe2UuoshngsjNA" base_Element="_R6x5kbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6ygoLhVEe2UuoshngsjNA" base_Element="_R6x5lLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6zHsLhVEe2UuoshngsjNA" base_Element="_R6ygobhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6zuwrhVEe2UuoshngsjNA" base_Element="_R6zuwLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R60V0LhVEe2UuoshngsjNA" base_Element="_R6zuw7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6084LhVEe2UuoshngsjNA" base_Element="_R60V0bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R60847hVEe2UuoshngsjNA" base_Element="_R6084bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R62LALhVEe2UuoshngsjNA" base_Element="_R61j8LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R62yELhVEe2UuoshngsjNA" base_Element="_R62LAbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R63ZILhVEe2UuoshngsjNA" base_Element="_R62yEbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R63ZI7hVEe2UuoshngsjNA" base_Element="_R63ZIbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R64AMLhVEe2UuoshngsjNA" base_Element="_R63ZJLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R64nQLhVEe2UuoshngsjNA" base_Element="_R64AMbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R65OULhVEe2UuoshngsjNA" base_Element="_R64nQbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R65OU7hVEe2UuoshngsjNA" base_Element="_R65OUbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R651YrhVEe2UuoshngsjNA" base_Element="_R651YLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R66ccLhVEe2UuoshngsjNA" base_Element="_R651Y7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R67DgLhVEe2UuoshngsjNA" base_Element="_R66ccbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R67qkLhVEe2UuoshngsjNA" base_Element="_R67DgbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R68RoLhVEe2UuoshngsjNA" base_Element="_R67qkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6-t4LhVEe2UuoshngsjNA" base_Element="_R68RobhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6_U8LhVEe2UuoshngsjNA" base_Element="_R6-t4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R6_8ALhVEe2UuoshngsjNA" base_Element="_R6_U8bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7AjELhVEe2UuoshngsjNA" base_Element="_R6_8AbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7AjE7hVEe2UuoshngsjNA" base_Element="_R7AjEbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7BKILhVEe2UuoshngsjNA" base_Element="_R7AjFLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7BKI7hVEe2UuoshngsjNA" base_Element="_R7BKIbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7BxMLhVEe2UuoshngsjNA" base_Element="_R7BKJLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7BxM7hVEe2UuoshngsjNA" base_Element="_R7BxMbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7CYQLhVEe2UuoshngsjNA" base_Element="_R7BxNLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7CYQ7hVEe2UuoshngsjNA" base_Element="_R7CYQbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7C_ULhVEe2UuoshngsjNA" base_Element="_R7CYRLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7C_U7hVEe2UuoshngsjNA" base_Element="_R7C_UbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7DmYLhVEe2UuoshngsjNA" base_Element="_R7C_VLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7DmY7hVEe2UuoshngsjNA" base_Element="_R7DmYbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7E0gLhVEe2UuoshngsjNA" base_Element="_R7ENcLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7E0g7hVEe2UuoshngsjNA" base_Element="_R7E0gbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7FbkLhVEe2UuoshngsjNA" base_Element="_R7E0hLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7Fbk7hVEe2UuoshngsjNA" base_Element="_R7FbkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7GCoLhVEe2UuoshngsjNA" base_Element="_R7FblLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7GCo7hVEe2UuoshngsjNA" base_Element="_R7GCobhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7GpsLhVEe2UuoshngsjNA" base_Element="_R7GCpLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7HQwLhVEe2UuoshngsjNA" base_Element="_R7GpsbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7H30LhVEe2UuoshngsjNA" base_Element="_R7HQwbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7Ie4LhVEe2UuoshngsjNA" base_Element="_R7H30bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7JF8LhVEe2UuoshngsjNA" base_Element="_R7Ie4bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7JF87hVEe2UuoshngsjNA" base_Element="_R7JF8bhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7JtArhVEe2UuoshngsjNA" base_Element="_R7JtALhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7KUELhVEe2UuoshngsjNA" base_Element="_R7JtA7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7K7ILhVEe2UuoshngsjNA" base_Element="_R7KUEbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7K7I7hVEe2UuoshngsjNA" base_Element="_R7K7IbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7LiMrhVEe2UuoshngsjNA" base_Element="_R7LiMLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7MJQLhVEe2UuoshngsjNA" base_Element="_R7LiM7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7MwULhVEe2UuoshngsjNA" base_Element="_R7MJQbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7MwU7hVEe2UuoshngsjNA" base_Element="_R7MwUbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7NXYLhVEe2UuoshngsjNA" base_Element="_R7MwVLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7N-cLhVEe2UuoshngsjNA" base_Element="_R7NXYbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7N-c7hVEe2UuoshngsjNA" base_Element="_R7N-cbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7OlgrhVEe2UuoshngsjNA" base_Element="_R7OlgLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7PMkLhVEe2UuoshngsjNA" base_Element="_R7Olg7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7PMk7hVEe2UuoshngsjNA" base_Element="_R7PMkbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7PzoLhVEe2UuoshngsjNA" base_Element="_R7PMlLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7Pzo7hVEe2UuoshngsjNA" base_Element="_R7PzobhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7QasrhVEe2UuoshngsjNA" base_Element="_R7QasLhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7RBwLhVEe2UuoshngsjNA" base_Element="_R7Qas7hVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7RBw7hVEe2UuoshngsjNA" base_Element="_R7RBwbhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7Ro0rhVEe2UuoshngsjNA" base_Element="_R7Ro0LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Reference xmi:id="_R7SP4rhVEe2UuoshngsjNA" base_Element="_R7SP4LhVEe2UuoshngsjNA"/>
  <UMLLabProfile:Patch xmi:id="_SpeLkLhVEe2UuoshngsjNA" base_Element="_RgWnYLhVEe2UuoshngsjNA" patchText="@@ -367,26 +367,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_SpfZsLhVEe2UuoshngsjNA" base_Element="_RhCj4LhVEe2UuoshngsjNA" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_SpgAwLhVEe2UuoshngsjNA" base_Element="_RiptcLhVEe2UuoshngsjNA" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_SphO4LhVEe2UuoshngsjNA" base_Element="_RixpQLhVEe2UuoshngsjNA" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_SpjrILhVEe2UuoshngsjNA" base_Element="_RjD9ILhVEe2UuoshngsjNA" patchText="@@ -3991,22 +3991,25 @@&#xA; .%0D%0A */%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Generics xmi:id="_vdKJYL3nEe2wPvZiCmNZ2Q" genericsValue="Integer" base_Element="_4KTHYL3hEe2wPvZiCmNZ2Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QP94Ib3oEe2wPvZiCmNZ2Q" base_Element="_QP94IL3oEe2wPvZiCmNZ2Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QQQzEL3oEe2wPvZiCmNZ2Q" base_Element="_QQPk8L3oEe2wPvZiCmNZ2Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_QQRaIL3oEe2wPvZiCmNZ2Q" base_Element="_QQQzEb3oEe2wPvZiCmNZ2Q"/>
  <UMLLabProfile:Generics xmi:id="_0G6M4Mv3Ee2QFfqiYSegRA" genericsValue="Integer" base_Element="_0G4-wMv3Ee2QFfqiYSegRA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0G6z8Mv3Ee2QFfqiYSegRA" base_Element="_0G4-wMv3Ee2QFfqiYSegRA"/>
  <UMLLabProfile:Reference xmi:id="_0HNu4Mv3Ee2QFfqiYSegRA" base_Element="_0HL5sMv3Ee2QFfqiYSegRA"/>
</xmi:XMI>
